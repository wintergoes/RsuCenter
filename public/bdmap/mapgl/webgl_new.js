window.TILE_VERSION = {
    "ditu": {
        "normal": {
            "version": "088",
            "updateDate": "20221231"
        },
        "satellite": {
            "version": "009",
            "updateDate": "20221231"
        },
        "normalTraffic": {
            "version": "081",
            "updateDate": "20221231"
        },
        "satelliteTraffic": {
            "version": "083",
            "updateDate": "20221231"
        },
        "mapJS": {
            "version": "104",
            "updateDate": "20221231"
        },
        "satelliteStreet": {
            "version": "083",
            "updateDate": "20221231"
        },
        "earthVector": {
            "version": "001",
            "updateDate": "20221231"
        }
    },
    "webapp": {
        "high_normal": {
            "version": "001",
            "updateDate": "20221231"
        },
        "lower_normal": {
            "version": "002",
            "updateDate": "20221231"
        }
    },
    "api_for_mobile": {
        "vector": {
            "version": "002",
            "updateDate": "20221231"
        },
        "vectorIcon": {
            "version": "002",
            "updateDate": "20221231"
        }
    }
};
window.MSV = {
    "mapstyle": {
        "version": "001",
        "updateDate": "20221227"
    }
};
window.BMAP_AUTHENTIC_KEY = "lKXGBob7gIDaPPzrfc6qtHTBNukNcLzE";
(function(t) {
    "use strict";
    function e(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
    }
    function n(t, e) {
        return t(e = {
            exports: {}
        }, e.exports),
        e.exports
    }
    Object.values || (Object.values = function(t) {
        if (t !== Object(t))
            throw new TypeError("Object.values called on a non-object");
        var e, n = [];
        for (e in t)
            Object.prototype.hasOwnProperty.call(t, e) && n.push(t[e]);
        return n
    }
    ),
    "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
        value: function(t) {
            if (null == t)
                throw new TypeError("Cannot convert undefined or null to object");
            for (var e = Object(t), n = 0; n < (arguments.length <= 1 ? 0 : arguments.length - 1); n++) {
                var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
                if (null != r)
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
            }
            return e
        },
        writable: !0,
        configurable: !0
    });
    var r = n((function(t) {
        function e(n) {
            return t.exports = e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))
      , i = e(r)
      , o = e(n((function(t) {
        function e(t, e) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value"in r && (r.writable = !0),
                Object.defineProperty(t, r.key, r)
            }
        }
        t.exports = function(t, n, r) {
            return n && e(t.prototype, n),
            r && e(t, r),
            Object.defineProperty(t, "prototype", {
                writable: !1
            }),
            t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , a = e(n((function(t) {
        t.exports = function(t) {
            if (void 0 === t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , s = n((function(t) {
        function e(n, r) {
            return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                return t.__proto__ = e,
                t
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n, r)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(s);
    var u, h, c = e(n((function(t) {
        t.exports = function(t, e) {
            t.prototype = Object.create(e.prototype),
            t.prototype.constructor = t,
            s(t, e)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))), l = function(t, e) {
        var n = this;
        this.width = void 0,
        this.height = void 0,
        this.equals = function(t) {
            return t && n.width === t.width && n.height === t.height
        }
        ,
        this.width = t || 0,
        this.height = e || 0
    }, f = function() {
        function t(t, e) {
            this.lng = void 0,
            this.lat = void 0,
            this.lng = +t,
            this.lat = +e
        }
        return t.prototype.equals = function(t) {
            return t && this.lat === t.lat && this.lng === t.lng
        }
        ,
        t
    }(), d = {
        REFRESH: "refresh",
        DATA_LOADED: "dataload",
        THUMB_LOADED: "thumb_loaded",
        SET_POV: "set_pov",
        POV_CHANGED: "pov_changed",
        POV_CHANGED_END: "pov_changed_end",
        ZOOM_CHANGED: "zoom_changed",
        SIZE_CHANGED: "size_changed",
        SET_ID: "set_id",
        SET_POSITION: "set_position",
        ID_CHANGED: "id_changed",
        POSITION_CHANGED: "position_changed",
        TOUCH_START: "touchstart",
        TOUCH_END: "touchend",
        CLICK: "click",
        DOUBLE_CLICK: "dblclick",
        LINK_CLICK: "link_click",
        OVERLAY_ADD: "overlay_add",
        OVERLAY_REMOVE: "overlay_remove",
        OVERLAYS_CLEAR: "overlays_clear",
        PANO_ERROR: "pano_error",
        LINK_VISIBLE_CHANGE: "links_visible_changed",
        DESTROY: "destroy",
        SCENE_CHANGE_END: "scene_change_end"
    }, p = {
        TYPE_INNER: "inter",
        TYPE_STREET: "street",
        RADIUS: 3e3,
        COLS: 16,
        ROWS: 8,
        TILE_MAX_ZOOM: 4,
        TILE_MIN_ZOOM: 1,
        MIN_PITCH: -90,
        MAX_PITCH: 90,
        MAX_ZOOM: 4,
        MIN_ZOOM: 1,
        TILE_BASE_URLS: ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"],
        TOPO_ARROW_TEXTURE: "//webmap0.bdimg.com/wolfman/static/pano/images/webgl/topo_arrow_06f0f2e.png",
        FISHEYE_DURATION: 1500,
        FISHEYE_DELAY: 2e3
    }, v = (u = {},
    h = (navigator.userAgent || "").toLowerCase(),
    u.isAndroid = h.includes("android"),
    u.isFirefox = h.includes("firefox"),
    u.isIos = /ip(hone|ad|od)/i.test(h),
    u.isWeixin = h.includes("micromessenger"),
    u.isWeibo = h.includes("weibo"),
    u.isWeChatOrWeiBo = u.isWeixin && u.isWeibo,
    u.isBaiduMap = h.includes("baidumap_"),
    u.isMobile = /android|webos|ip(hone|ad|od)|opera (mini|mobi|tablet)|iemobile|windows.+(phone|touch)|mobile|fennec|kindle (Fire)|Silk|maemo|blackberry|playbook; (touch|kbd)|Symbian(OS)|Ubuntu Touch/i.test(h),
    u.isPc = !u.isMobile,
    u), m = function(t) {
        for (var e = arguments.length <= 1 ? 0 : arguments.length - 1, n = 0; n < e; n++) {
            var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
            for (var i in r)
                Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
        }
        return t
    }, g = function(t) {
        return t * Math.PI / 180
    }, y = function(t) {
        return 180 * t / Math.PI
    }, _ = function(t) {
        return t - 360 * Math.floor(t / 360)
    }, x = function() {
        return Date.now()
    };
    var b = function t() {
        var e = t;
        if ("boolean" == typeof e._supportWebGL)
            return e._supportWebGL;
        if (!window.WebGLRenderingContext)
            return e._supportWebGL = !1,
            !1;
        var n = null
          , r = document.createElement("canvas");
        try {
            (n = r.getContext("webgl") || r.getContext("experimental-webgl")) && n instanceof WebGLRenderingContext && (e._supportWebGL = !0)
        } catch (t) {
            e._supportWebGL = !1
        }
        return null === n && (e._supportWebGL = !1),
        e._supportWebGL
    }
      , M = function(t) {
        for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)
            n > (e = t[i]) && (n = e),
            r < e && (r = e);
        return {
            min: n,
            max: r
        }
    }
      , w = {
        g: function(t) {
            return "string" == typeof t || t instanceof String ? document.getElementById(t) : t && t.nodeName && (1 === t.nodeType || 9 === t.nodeType) ? t : null
        },
        show: function(t) {
            var e = w.g(t);
            return e && (e.style.display = ""),
            e
        },
        hide: function(t) {
            var e = w.g(t);
            return e && (e.style.display = "none"),
            t
        },
        create: function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = document.createElement(t);
            for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && n.setAttribute(r, e[r]);
            return n
        },
        getCurrentStyle: function(t) {
            return window.getComputedStyle(t, null)
        }
    };
    function E() {
        var t, e, n = function(t, e) {
            var n, r, i = "eii", o = "dac", a = "hem", s = "llm", u = function(t, e) {
                return t + e
            }, h = "constructor", c = function(t, e) {
                return t(e)
            }, l = function(t, e) {
                return t + e
            };
            function f(t, e) {
                for (var n = i; "mill" !== n; )
                    switch (n) {
                    case "llm":
                        return c;
                    case "eii":
                        var r = t.length;
                        n = o;
                        break;
                    case a:
                        for (var u = 0; u < r; u++) {
                            var h = e(t[u]);
                            c.push(h)
                        }
                        n = s;
                        break;
                    case "dac":
                        var c = [];
                        n = a
                    }
            }
            var d = decodeURIComponent;
            b = "de",
            r = l("fr", "o") + "m",
            n = l("Co", b);
            var p = function(t) {
                return u(t, "")[h][u(r, "Char") + n](t)
            }
              , v = function(t) {
                return f(t, (function(t) {
                    return c(p, t)
                }
                ))
            }
              , m = v.call(p, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57])
              , g = f([28782, 27702, 26416, 25167, 24183], (function(t) {
                return c(d, t)
            }
            ))
              , y = v.call(g, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
              , _ = {};
            g = c(v, g);
            for (var x = new RegExp(g.join("|")), b = 0; b < m.length; b++)
                _[y[b]] = m[b];
            return e = f(e.split(""), (function(t) {
                return _[t] || t
            }
            )).join(""),
            f(e.split(x), (function(t) {
                return d(t)
            }
            ))
        }(0, "su尫stri犸坺幷囄獜呚囄獜扏su尫str氶h廲廲呚l灮i犸囄呚墠O娲氶呚呚廲廲廲朰墠h姈i囄朰彟曰氙si坺犸彟欱殛");
        t = n,
        e = 265,
        function(e) {
            for (; --e; )
                t.push(t.shift())
        }(++e);
        var r = function(t, e) {
            return n[t -= 0]
        };
        return function(t) {
            var e = {
                dmedm: "F5L2O6R6AD8990O",
                haael: function(t, e) {
                    return t + e
                },
                eeaaa: function(t, e) {
                    return t(e)
                },
                xhcid: function(t, e) {
                    return t + e
                },
                deiic: function(t, e) {
                    return t - e
                }
            }
              , n = e[r("0x0")]
              , i = t[r("0x1")](e[r("0x2")](t[r("0x3")]("?"), 1))
              , o = e[r("0x4")](md5, e[r("0x5")](md5(i + n), "H0A9P8P7Y6ABQO0"));
            return r("0x6") + o[r("0x7")](e.deiic(o.length, 12))
        }
    }
    var T = function(t, e, n) {
        var r, o, a = "", s = [], u = "jsonp" + Math.ceil(1e5 * Math.random()), h = t.indexOf("?") > 0 ? "&" : "?";
        for (var c in n = Object.assign({}, {
            jsonpCallback: "jsonp",
            timeout: 5e4,
            jsonp: "callback"
        }, n),
        e)
            ({}).hasOwnProperty.call(e, c) && (a = "object" === i(e[c]) ? c + "=" + JSON.stringify(e[c]) : c + "=" + e[c],
            s.push(a));
        function l() {
            r.parentNode && r.parentNode.removeChild(r),
            window[u] = null
        }
        return t += h + s.join("&"),
        o = document.getElementsByTagName("script")[0] || document.head,
        t = t + "&" + n.jsonp + "=" + u,
        t += E()(t),
        (r = document.createElement("script")).src = t,
        r.type = "text/javascript",
        o.parentNode.appendChild(r, o),
        new Promise((function(t, e) {
            window[u] = function(e) {
                if (e && "string" == typeof e)
                    try {
                        e = JSON.parse(e)
                    } catch (t) {
                        e = {},
                        console.error("[ERROR] Parse Error.")
                    }
                t(e),
                l()
            }
            ,
            r.onerror = function(t) {
                l(),
                e({
                    errno: -2,
                    errmsg: "[ERROR] Load Error: ".concat(t),
                    data: {}
                })
            }
        }
        ))
    }
      , A = function() {
        function t() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            this._size = 0,
            this._cache = void 0,
            this.keyList = [],
            this._options = void 0,
            this._size = t,
            this._cache = new window.Map;
            var n = {
                clearCallback: null
            };
            this._options = Object.assign({}, n, e)
        }
        var e = t.prototype;
        return e.setData = function(t, e) {
            0 !== this._size && (this._cache.size >= this._size && this._removeOld(),
            this._cache.has(t) || this.keyList.push(t),
            this._cache.set(t, e))
        }
        ,
        e.getData = function(t) {
            return this._cache.get(t)
        }
        ,
        e._removeOld = function() {
            for (var t = Math.round(.6 * this._size), e = 0; e < t; e++) {
                var n = this.keyList[e];
                this._options.clearCallback && this._options.clearCallback(this.getData(n)),
                this._cache.delete(n)
            }
            this.keyList.splice(0, t)
        }
        ,
        e.clear = function() {
            this._cache.clear(),
            this.keyList = []
        }
        ,
        o(t, [{
            key: "cacheCount",
            get: function() {
                return this._cache.size
            }
        }]),
        t
    }()
      , C = function() {
        function t() {
            var t = this;
            this.rid = "",
            this.roadName = "",
            this.roadWidth = 5,
            this.isCurrentRoad = 0,
            this.pointList = [],
            this.getTopoInRoad = function(e) {
                var n = []
                  , r = t.pointList
                  , i = r.length
                  , o = t.getPointByPanoId(e);
                if (!o || i <= 1)
                    return n;
                var a = o.order;
                return 0 === a ? n.push(t.generateTopoData(o.dir, r[1])) : a === i - 1 ? n.push(t.generateTopoData(r[a - 1].dir + 180, r[a - 1])) : (n.push(t.generateTopoData((r[a - 1].dir + 180) % 360, r[a - 1])),
                n.push(t.generateTopoData(r[a].dir, r[a + 1]))),
                n
            }
            ,
            this.getPointByPanoId = function(e) {
                for (var n, r = t.pointList, i = 0, o = r.length; i < o; i++)
                    if (r[i].panoId === e) {
                        n = r[i];
                        break
                    }
                return n
            }
        }
        return t.prototype.generateTopoData = function(t, e) {
            return void 0 !== e && (e.topoDir = t,
            e.roadName = this.roadName),
            e
        }
        ,
        t
    }()
      , R = function() {
        var t = this;
        this.image = void 0,
        this.panoId = "",
        this.iid = "",
        this.panoType = "",
        this.panoX = 0,
        this.panoY = 0,
        this.panoZ = 0,
        this.heading = 0,
        this.pitch = 0,
        this.defaultHeading = void 0,
        this.defaultPitch = void 0,
        this.northDir = 0,
        this.fixHeading = 0,
        this.fixPitch = 0,
        this.fixRoll = 0,
        this.deviceHeight = 0,
        this.date = "20130822",
        this.time = "",
        this.provider = 1,
        this.admission = "GS(2013)6021",
        this.photos = [],
        this.roadName = "",
        this.roads = [],
        this.vpoints = [],
        this.topoArray = void 0,
        this.currentRoad = void 0,
        this.roadWidth = void 0,
        this.getCurrentRoad = function() {
            if (t.currentRoad)
                return t.currentRoad;
            for (var e = t.roads, n = 0, r = e.length; n < r; n++)
                if (e[n].isCurrentRoad) {
                    t.currentRoad = e[n];
                    break
                }
            return t.currentRoad
        }
        ,
        this.getTopos = function() {
            if (t.topoArray)
                return t.topoArray;
            if (t.currentRoad || (t.currentRoad = t.getCurrentRoad()),
            !t.currentRoad)
                return [];
            if (t.topoArray = t.currentRoad.getTopoInRoad(t.panoId),
            t.vpoints.length < 1)
                return t.topoArray;
            for (var e, n = t.vpoints.length - 1; n >= 0; n--)
                (e = t.vpoints[n]).topoDir = e.dir,
                t.topoArray.push(e);
            return t.topoArray
        }
        ,
        this.getRoadWidth = function() {
            return void 0 === t.roadWidth && (t.currentRoad || (t.currentRoad = t.getCurrentRoad()),
            t.currentRoad ? t.roadWidth = t.currentRoad.roadWidth : t.roadWidth = 0),
            t.roadWidth
        }
    };
    function S(t) {
        var e = {};
        return e.panoId = t.PID,
        e.panoType = t.Type,
        e.rid = t.RID,
        e.dir = t.DIR,
        e.roadName = t.RoadName,
        e.order = t.Order,
        e.panoX = t.X / 100,
        e.panoY = t.Y / 100,
        void 0 !== t.CPointX && void 0 !== t.CPointY && (e.cPoint = {
            x: t.CPointX / 100,
            y: t.CPointY / 100
        }),
        e
    }
    function P(t) {
        if (!t)
            return console.error("Get none from server"),
            null;
        var e = t.result;
        if (e && 0 !== e.error)
            return console.error("Get error from server"),
            null;
        var n = t.content;
        if (void 0 === n || 0 === n.length || void 0 === n[0])
            return console.error("Get empty data from server"),
            null;
        var r = n[0]
          , i = new R
          , o = r.Roll
          , a = {};
        if (i.panoId = r.ID,
        r.Inters instanceof Array) {
            var s = r.Inters[0];
            void 0 !== s && (i.iid = s.IID)
        }
        if (i.panoType = r.Type,
        i.panoX = (r.X || 0) / 100,
        i.panoY = (r.Y || 0) / 100,
        i.panoZ = (r.Z || 0) / 100,
        i.heading = void 0 !== r.MoveDir ? r.MoveDir : 0,
        i.northDir = r.NorthDir,
        i.fixHeading = void 0 !== r.Heading ? r.Heading : 270 - r.NorthDir,
        i.fixPitch = r.Pitch,
        i.fixRoll = 90 < o || -90 > o ? 0 : o,
        i.deviceHeight = r.DeviceHeight,
        i.date = r.Date || i.date,
        i.time = r.Time,
        i.provider = void 0 !== r.Provider ? r.Provider : i.provider,
        i.admission = r.Admission || i.admission,
        i.timeLine = r.TimeLine || [],
        i.roadName = r.Rname,
        r.Roads) {
            var u = r.Roads;
            i.roads = u.map((function(t) {
                return a[t.ID] = t.Name,
                function(t) {
                    var e = new C;
                    if (e.rid = t.ID,
                    e.roadName = t.Name,
                    e.roadWidth = void 0 !== t.Width ? t.Width / 100 : 0,
                    e.isCurrentRoad = t.IsCurrent || 0,
                    t.Panos)
                        for (var n = t.Panos, r = 0, i = n.length; r < i; r++)
                            e.pointList.push(S(n[r]));
                    return e
                }(t)
            }
            ))
        }
        if (r.Links)
            for (var h = r.Links, c = h.length, l = 0; l < c; l++) {
                var f = h[l];
                f.RoadName = a[f.RID],
                i.vpoints.push(S(f))
            }
        return i.photos = r.Photos || [],
        i
    }
    function D(t, e) {
        var n = (65535 & t) + (65535 & e);
        return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n
    }
    function O(t, e, n, r, i, o) {
        return D((a = D(D(e, t), D(r, o))) << (s = i) | a >>> 32 - s, n);
        var a, s
    }
    function I(t, e, n, r, i, o, a) {
        return O(e & n | ~e & r, t, e, i, o, a)
    }
    function L(t, e, n, r, i, o, a) {
        return O(e & r | n & ~r, t, e, i, o, a)
    }
    function B(t, e, n, r, i, o, a) {
        return O(e ^ n ^ r, t, e, i, o, a)
    }
    function k(t, e, n, r, i, o, a) {
        return O(n ^ (e | ~r), t, e, i, o, a)
    }
    function U(t, e) {
        var n, r, i, o, a;
        t[e >> 5] |= 128 << e % 32,
        t[14 + (e + 64 >>> 9 << 4)] = e;
        var s = 1732584193
          , u = -271733879
          , h = -1732584194
          , c = 271733878;
        for (n = 0; n < t.length; n += 16)
            r = s,
            i = u,
            o = h,
            a = c,
            s = I(s, u, h, c, t[n], 7, -680876936),
            c = I(c, s, u, h, t[n + 1], 12, -389564586),
            h = I(h, c, s, u, t[n + 2], 17, 606105819),
            u = I(u, h, c, s, t[n + 3], 22, -1044525330),
            s = I(s, u, h, c, t[n + 4], 7, -176418897),
            c = I(c, s, u, h, t[n + 5], 12, 1200080426),
            h = I(h, c, s, u, t[n + 6], 17, -1473231341),
            u = I(u, h, c, s, t[n + 7], 22, -45705983),
            s = I(s, u, h, c, t[n + 8], 7, 1770035416),
            c = I(c, s, u, h, t[n + 9], 12, -1958414417),
            h = I(h, c, s, u, t[n + 10], 17, -42063),
            u = I(u, h, c, s, t[n + 11], 22, -1990404162),
            s = I(s, u, h, c, t[n + 12], 7, 1804603682),
            c = I(c, s, u, h, t[n + 13], 12, -40341101),
            h = I(h, c, s, u, t[n + 14], 17, -1502002290),
            s = L(s, u = I(u, h, c, s, t[n + 15], 22, 1236535329), h, c, t[n + 1], 5, -165796510),
            c = L(c, s, u, h, t[n + 6], 9, -1069501632),
            h = L(h, c, s, u, t[n + 11], 14, 643717713),
            u = L(u, h, c, s, t[n], 20, -373897302),
            s = L(s, u, h, c, t[n + 5], 5, -701558691),
            c = L(c, s, u, h, t[n + 10], 9, 38016083),
            h = L(h, c, s, u, t[n + 15], 14, -660478335),
            u = L(u, h, c, s, t[n + 4], 20, -405537848),
            s = L(s, u, h, c, t[n + 9], 5, 568446438),
            c = L(c, s, u, h, t[n + 14], 9, -1019803690),
            h = L(h, c, s, u, t[n + 3], 14, -187363961),
            u = L(u, h, c, s, t[n + 8], 20, 1163531501),
            s = L(s, u, h, c, t[n + 13], 5, -1444681467),
            c = L(c, s, u, h, t[n + 2], 9, -51403784),
            h = L(h, c, s, u, t[n + 7], 14, 1735328473),
            s = B(s, u = L(u, h, c, s, t[n + 12], 20, -1926607734), h, c, t[n + 5], 4, -378558),
            c = B(c, s, u, h, t[n + 8], 11, -2022574463),
            h = B(h, c, s, u, t[n + 11], 16, 1839030562),
            u = B(u, h, c, s, t[n + 14], 23, -35309556),
            s = B(s, u, h, c, t[n + 1], 4, -1530992060),
            c = B(c, s, u, h, t[n + 4], 11, 1272893353),
            h = B(h, c, s, u, t[n + 7], 16, -155497632),
            u = B(u, h, c, s, t[n + 10], 23, -1094730640),
            s = B(s, u, h, c, t[n + 13], 4, 681279174),
            c = B(c, s, u, h, t[n], 11, -358537222),
            h = B(h, c, s, u, t[n + 3], 16, -722521979),
            u = B(u, h, c, s, t[n + 6], 23, 76029189),
            s = B(s, u, h, c, t[n + 9], 4, -640364487),
            c = B(c, s, u, h, t[n + 12], 11, -421815835),
            h = B(h, c, s, u, t[n + 15], 16, 530742520),
            s = k(s, u = B(u, h, c, s, t[n + 2], 23, -995338651), h, c, t[n], 6, -198630844),
            c = k(c, s, u, h, t[n + 7], 10, 1126891415),
            h = k(h, c, s, u, t[n + 14], 15, -1416354905),
            u = k(u, h, c, s, t[n + 5], 21, -57434055),
            s = k(s, u, h, c, t[n + 12], 6, 1700485571),
            c = k(c, s, u, h, t[n + 3], 10, -1894986606),
            h = k(h, c, s, u, t[n + 10], 15, -1051523),
            u = k(u, h, c, s, t[n + 1], 21, -2054922799),
            s = k(s, u, h, c, t[n + 8], 6, 1873313359),
            c = k(c, s, u, h, t[n + 15], 10, -30611744),
            h = k(h, c, s, u, t[n + 6], 15, -1560198380),
            u = k(u, h, c, s, t[n + 13], 21, 1309151649),
            s = k(s, u, h, c, t[n + 4], 6, -145523070),
            c = k(c, s, u, h, t[n + 11], 10, -1120210379),
            h = k(h, c, s, u, t[n + 2], 15, 718787259),
            u = k(u, h, c, s, t[n + 9], 21, -343485551),
            s = D(s, r),
            u = D(u, i),
            h = D(h, o),
            c = D(c, a);
        return [s, u, h, c]
    }
    function N(t) {
        var e, n = "", r = 32 * t.length;
        for (e = 0; e < r; e += 8)
            n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
        return n
    }
    function F(t) {
        var e, n = [];
        for (n[(t.length >> 2) - 1] = void 0,
        e = 0; e < n.length; e += 1)
            n[e] = 0;
        var r = 8 * t.length;
        for (e = 0; e < r; e += 8)
            n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
        return n
    }
    function j(t) {
        var e, n, r = "0123456789abcdef", i = "";
        for (n = 0; n < t.length; n += 1)
            e = t.charCodeAt(n),
            i += r.charAt(e >>> 4 & 15) + r.charAt(15 & e);
        return i
    }
    function z(t) {
        return unescape(encodeURIComponent(t))
    }
    function V(t) {
        return function(t) {
            return N(U(F(t), 8 * t.length))
        }(z(t))
    }
    function G(t, e) {
        return function(t, e) {
            var n, r, i = F(t), o = [], a = [];
            for (o[15] = a[15] = void 0,
            i.length > 16 && (i = U(i, 8 * t.length)),
            n = 0; n < 16; n += 1)
                o[n] = 909522486 ^ i[n],
                a[n] = 1549556828 ^ i[n];
            return r = U(o.concat(F(e)), 512 + 8 * e.length),
            N(U(a.concat(r), 640))
        }(z(t), z(e))
    }
    var W, H, Z, q, Y = function(t, e, n) {
        return e ? n ? G(e, t) : j(G(e, t)) : n ? V(t) : j(V(t))
    }, X = function(t, e) {
        return T(t, {}, {
            jsonp: "fn"
        })
    }, K = function(t, e) {
        if ("PANORAMA" === t) {
            var n = "https://api.map.baidu.com/?qt=pano_entry&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY;
            "function" == typeof e ? X(n).then((function(t) {
                e()
            }
            )).catch((function(t) {}
            )) : X(n + "&callback=" + e)
        }
    }, Q = function(t) {
        if ("PANORAMA" === t)
            alert("您需要申请全景地图服务使用权限")
    }, J = (H = null,
    Z = 0,
    q = W || 5e3,
    function(t) {
        var e = (1e5 * Math.random()).toFixed(0);
        window["cbk" + e] = function(t) {
            t && void 0 !== t.error && 0 === t.error || K("PANORAMA", (function(t) {
                t && void 0 !== t.error && 0 === t.error || Q("PANORAMA")
            }
            ))
        }
        ,
        Z += t,
        H || (H = setTimeout((function() {
            var t = "https://api.map.baidu.com/?qt=pano_count&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY + "&consume=" + Z;
            X(t + "&callback=window.cbk" + e),
            Z = 0,
            H = null
        }
        ), q))
    }
    ), $ = function(t, e) {
        var n = (e = e || {}).counter ? e.counter : 1
          , r = !1 !== e.isCounter
          , i = Date.parse(new Date)
          , o = i / 1e3
          , a = t + "-" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-SJvEY5h37ZDh5pHS"
          , s = Y(a)
          , u = "auth_key=" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-" + s;
        return r && J(n),
        u
    }, tt = function() {
        function t(e) {
            var n = this;
            this.getPanoById = function(e) {
                var r;
                r = "".concat(t.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat($("/")),
                n.getDataByUrl(r).then((function(t) {
                    var e = P(t);
                    if (null === e)
                        throw new Error("数据解析异常");
                    return n._cache.setData(r, t),
                    n._pano.dispatchEvent(d.DATA_LOADED, {
                        data: e
                    }),
                    n._pano.dispatchEvent(d.ID_CHANGED, e.panoId),
                    n._pano.dispatchEvent(d.POSITION_CHANGED, new f(e.panoX,e.panoY)),
                    e
                }
                )).catch((function(t) {
                    n._pano.dispatchEvent({
                        type: d.PANO_ERROR,
                        data: t
                    })
                }
                ))
            }
            ,
            this.getPanoByLocation = function(e, r) {
                var i;
                i = "".concat(t.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(r ? "&r=" + r : "", "&action=1&").concat($("/")),
                n.getDataByUrl(i).then((function(t) {
                    var r = P(t);
                    n._cache.setData(i, t),
                    n._pano.dispatchEvent(d.DATA_LOADED, {
                        data: r
                    }),
                    n._pano.dispatchEvent(d.POSITION_CHANGED, e)
                }
                )).catch((function(t) {
                    n._pano.dispatchEvent({
                        type: d.PANO_ERROR,
                        data: t
                    })
                }
                ))
            }
            ,
            this._pano = e,
            this._cache = new A(10)
        }
        return t.prototype.getDataByUrl = function(t) {
            var e = this._cache.getData(t);
            return e ? Promise.resolve(e) : T(t, {}, {
                jsonp: "fn"
            })
        }
        ,
        t
    }();
    tt.SERVICE_URL = "//apisv0.bdimg.com/";
    var et = n((function(t) {
        function e(t, e, n, r, i, o, a) {
            try {
                var s = t[o](a)
                  , u = s.value
            } catch (t) {
                return void n(t)
            }
            s.done ? e(u) : Promise.resolve(u).then(r, i)
        }
        t.exports = function(t) {
            return function() {
                var n = this
                  , r = arguments;
                return new Promise((function(i, o) {
                    var a = t.apply(n, r);
                    function s(t) {
                        e(a, i, o, s, u, "next", t)
                    }
                    function u(t) {
                        e(a, i, o, s, u, "throw", t)
                    }
                    s(void 0)
                }
                ))
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))
      , nt = e(et)
      , rt = n((function(t) {
        var e = r.default;
        function n() {
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            t.exports = n = function() {
                return r
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports;
            var r = {}
              , i = Object.prototype
              , o = i.hasOwnProperty
              , a = "function" == typeof Symbol ? Symbol : {}
              , s = a.iterator || "@@iterator"
              , u = a.asyncIterator || "@@asyncIterator"
              , h = a.toStringTag || "@@toStringTag";
            function c(t, e, n) {
                return Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                t[e]
            }
            try {
                c({}, "")
            } catch (t) {
                c = function(t, e, n) {
                    return t[e] = n
                }
            }
            function l(t, e, n, r) {
                var i = e && e.prototype instanceof p ? e : p
                  , o = Object.create(i.prototype)
                  , a = new A(r || []);
                return o._invoke = function(t, e, n) {
                    var r = "suspendedStart";
                    return function(i, o) {
                        if ("executing" === r)
                            throw new Error("Generator is already running");
                        if ("completed" === r) {
                            if ("throw" === i)
                                throw o;
                            return R()
                        }
                        for (n.method = i,
                        n.arg = o; ; ) {
                            var a = n.delegate;
                            if (a) {
                                var s = w(a, n);
                                if (s) {
                                    if (s === d)
                                        continue;
                                    return s
                                }
                            }
                            if ("next" === n.method)
                                n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === r)
                                    throw r = "completed",
                                    n.arg;
                                n.dispatchException(n.arg)
                            } else
                                "return" === n.method && n.abrupt("return", n.arg);
                            r = "executing";
                            var u = f(t, e, n);
                            if ("normal" === u.type) {
                                if (r = n.done ? "completed" : "suspendedYield",
                                u.arg === d)
                                    continue;
                                return {
                                    value: u.arg,
                                    done: n.done
                                }
                            }
                            "throw" === u.type && (r = "completed",
                            n.method = "throw",
                            n.arg = u.arg)
                        }
                    }
                }(t, n, a),
                o
            }
            function f(t, e, n) {
                try {
                    return {
                        type: "normal",
                        arg: t.call(e, n)
                    }
                } catch (t) {
                    return {
                        type: "throw",
                        arg: t
                    }
                }
            }
            r.wrap = l;
            var d = {};
            function p() {}
            function v() {}
            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }
            ));
            var y = Object.getPrototypeOf
              , _ = y && y(y(C([])));
            _ && _ !== i && o.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);
            function b(t) {
                ["next", "throw", "return"].forEach((function(e) {
                    c(t, e, (function(t) {
                        return this._invoke(e, t)
                    }
                    ))
                }
                ))
            }
            function M(t, n) {
                function r(i, a, s, u) {
                    var h = f(t[i], t, a);
                    if ("throw" !== h.type) {
                        var c = h.arg
                          , l = c.value;
                        return l && "object" == e(l) && o.call(l, "__await") ? n.resolve(l.__await).then((function(t) {
                            r("next", t, s, u)
                        }
                        ), (function(t) {
                            r("throw", t, s, u)
                        }
                        )) : n.resolve(l).then((function(t) {
                            c.value = t,
                            s(c)
                        }
                        ), (function(t) {
                            return r("throw", t, s, u)
                        }
                        ))
                    }
                    u(h.arg)
                }
                var i;
                this._invoke = function(t, e) {
                    function o() {
                        return new n((function(n, i) {
                            r(t, e, n, i)
                        }
                        ))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            }
            function w(t, e) {
                var n = t.iterator[e.method];
                if (void 0 === n) {
                    if (e.delegate = null,
                    "throw" === e.method) {
                        if (t.iterator.return && (e.method = "return",
                        e.arg = void 0,
                        w(t, e),
                        "throw" === e.method))
                            return d;
                        e.method = "throw",
                        e.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return d
                }
                var r = f(n, t.iterator, e.arg);
                if ("throw" === r.type)
                    return e.method = "throw",
                    e.arg = r.arg,
                    e.delegate = null,
                    d;
                var i = r.arg;
                return i ? i.done ? (e[t.resultName] = i.value,
                e.next = t.nextLoc,
                "return" !== e.method && (e.method = "next",
                e.arg = void 0),
                e.delegate = null,
                d) : i : (e.method = "throw",
                e.arg = new TypeError("iterator result is not an object"),
                e.delegate = null,
                d)
            }
            function E(t) {
                var e = {
                    tryLoc: t[0]
                };
                1 in t && (e.catchLoc = t[1]),
                2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
                this.tryEntries.push(e)
            }
            function T(t) {
                var e = t.completion || {};
                e.type = "normal",
                delete e.arg,
                t.completion = e
            }
            function A(t) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                t.forEach(E, this),
                this.reset(!0)
            }
            function C(t) {
                if (t) {
                    var e = t[s];
                    if (e)
                        return e.call(t);
                    if ("function" == typeof t.next)
                        return t;
                    if (!isNaN(t.length)) {
                        var n = -1
                          , r = function e() {
                            for (; ++n < t.length; )
                                if (o.call(t, n))
                                    return e.value = t[n],
                                    e.done = !1,
                                    e;
                            return e.value = void 0,
                            e.done = !0,
                            e
                        };
                        return r.next = r
                    }
                }
                return {
                    next: R
                }
            }
            function R() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m,
            c(x, "constructor", m),
            c(m, "constructor", v),
            v.displayName = c(m, h, "GeneratorFunction"),
            r.isGeneratorFunction = function(t) {
                var e = "function" == typeof t && t.constructor;
                return !!e && (e === v || "GeneratorFunction" === (e.displayName || e.name))
            }
            ,
            r.mark = function(t) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(t, m) : (t.__proto__ = m,
                c(t, h, "GeneratorFunction")),
                t.prototype = Object.create(x),
                t
            }
            ,
            r.awrap = function(t) {
                return {
                    __await: t
                }
            }
            ,
            b(M.prototype),
            c(M.prototype, u, (function() {
                return this
            }
            )),
            r.AsyncIterator = M,
            r.async = function(t, e, n, i, o) {
                void 0 === o && (o = Promise);
                var a = new M(l(t, e, n, i),o);
                return r.isGeneratorFunction(e) ? a : a.next().then((function(t) {
                    return t.done ? t.value : a.next()
                }
                ))
            }
            ,
            b(x),
            c(x, h, "Generator"),
            c(x, s, (function() {
                return this
            }
            )),
            c(x, "toString", (function() {
                return "[object Generator]"
            }
            )),
            r.keys = function(t) {
                var e = [];
                for (var n in t)
                    e.push(n);
                return e.reverse(),
                function n() {
                    for (; e.length; ) {
                        var r = e.pop();
                        if (r in t)
                            return n.value = r,
                            n.done = !1,
                            n
                    }
                    return n.done = !0,
                    n
                }
            }
            ,
            r.values = C,
            A.prototype = {
                constructor: A,
                reset: function(t) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(T),
                    !t)
                        for (var e in this)
                            "t" === e.charAt(0) && o.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var t = this.tryEntries[0].completion;
                    if ("throw" === t.type)
                        throw t.arg;
                    return this.rval
                },
                dispatchException: function(t) {
                    if (this.done)
                        throw t;
                    var e = this;
                    function n(n, r) {
                        return a.type = "throw",
                        a.arg = t,
                        e.next = n,
                        r && (e.method = "next",
                        e.arg = void 0),
                        !!r
                    }
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r]
                          , a = i.completion;
                        if ("root" === i.tryLoc)
                            return n("end");
                        if (i.tryLoc <= this.prev) {
                            var s = o.call(i, "catchLoc")
                              , u = o.call(i, "finallyLoc");
                            if (s && u) {
                                if (this.prev < i.catchLoc)
                                    return n(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc)
                                    return n(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc)
                                    return n(i.catchLoc, !0)
                            } else {
                                if (!u)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc)
                                    return n(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(t, e) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var r = this.tryEntries[n];
                        if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var i = r;
                            break
                        }
                    }
                    i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = t,
                    a.arg = e,
                    i ? (this.method = "next",
                    this.next = i.finallyLoc,
                    d) : this.complete(a)
                },
                complete: function(t, e) {
                    if ("throw" === t.type)
                        throw t.arg;
                    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    d
                },
                finish: function(t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var n = this.tryEntries[e];
                        if (n.finallyLoc === t)
                            return this.complete(n.completion, n.afterLoc),
                            T(n),
                            d
                    }
                },
                catch: function(t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var n = this.tryEntries[e];
                        if (n.tryLoc === t) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                T(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(t, e, n) {
                    return this.delegate = {
                        iterator: C(t),
                        resultName: e,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    d
                }
            },
            r
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(rt);
    var it = rt()
      , ot = it;
    try {
        regeneratorRuntime = it
    } catch (t) {
        "object" == typeof globalThis ? globalThis.regeneratorRuntime = it : Function("r", "regeneratorRuntime = r")(it)
    }
    function at(t, e) {
        if (!t)
            throw new Error("math.gl assertion ".concat(e))
    }
    const st = {
        EPSILON: 1e-12,
        debug: !1,
        precision: 4,
        printTypes: !1,
        printDegrees: !1,
        printRowMajor: !0
    };
    function ut(t, {precision: e=st.precision}={}) {
        return t = function(t) {
            return Math.round(t / st.EPSILON) * st.EPSILON
        }(t),
        "".concat(parseFloat(t.toPrecision(e)))
    }
    function ht(t) {
        return Array.isArray(t) || ArrayBuffer.isView(t) && !(t instanceof DataView)
    }
    function ct(t, e, n) {
        const r = st.EPSILON;
        n && (st.EPSILON = n);
        try {
            if (t === e)
                return !0;
            if (ht(t) && ht(e)) {
                if (t.length !== e.length)
                    return !1;
                for (let n = 0; n < t.length; ++n)
                    if (!ct(t[n], e[n]))
                        return !1;
                return !0
            }
            return t && t.equals ? t.equals(e) : e && e.equals ? e.equals(t) : "number" == typeof t && "number" == typeof e && Math.abs(t - e) <= st.EPSILON * Math.max(1, Math.abs(t), Math.abs(e))
        } finally {
            st.EPSILON = r
        }
    }
    class lt extends (function(t) {
        function e() {
            var e = Reflect.construct(t, Array.from(arguments));
            return Object.setPrototypeOf(e, Object.getPrototypeOf(this)),
            e
        }
        return e.prototype = Object.create(t.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t,
        e
    }(Array)) {
        clone() {
            return (new this.constructor).copy(this)
        }
        fromArray(t, e=0) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = t[n + e];
            return this.check()
        }
        toArray(t=[], e=0) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                t[e + n] = this[n];
            return t
        }
        from(t) {
            return Array.isArray(t) ? this.copy(t) : this.fromObject(t)
        }
        to(t) {
            return t === this ? this : ht(t) ? this.toArray(t) : this.toObject(t)
        }
        toTarget(t) {
            return t ? this.to(t) : this
        }
        toFloat32Array() {
            return new Float32Array(this)
        }
        toString() {
            return this.formatString(st)
        }
        formatString(t) {
            let e = "";
            for (let n = 0; n < this.ELEMENTS; ++n)
                e += (n > 0 ? ", " : "") + ut(this[n], t);
            return "".concat(t.printTypes ? this.constructor.name : "", "[").concat(e, "]")
        }
        equals(t) {
            if (!t || this.length !== t.length)
                return !1;
            for (let e = 0; e < this.ELEMENTS; ++e)
                if (!ct(this[e], t[e]))
                    return !1;
            return !0
        }
        exactEquals(t) {
            if (!t || this.length !== t.length)
                return !1;
            for (let e = 0; e < this.ELEMENTS; ++e)
                if (this[e] !== t[e])
                    return !1;
            return !0
        }
        negate() {
            for (let t = 0; t < this.ELEMENTS; ++t)
                this[t] = -this[t];
            return this.check()
        }
        lerp(t, e, n) {
            if (void 0 === n)
                return this.lerp(this, t, e);
            for (let r = 0; r < this.ELEMENTS; ++r) {
                const i = t[r];
                this[r] = i + n * (e[r] - i)
            }
            return this.check()
        }
        min(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = Math.min(t[e], this[e]);
            return this.check()
        }
        max(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = Math.max(t[e], this[e]);
            return this.check()
        }
        clamp(t, e) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = Math.min(Math.max(this[n], t[n]), e[n]);
            return this.check()
        }
        add(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] += e[t];
            return this.check()
        }
        subtract(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] -= e[t];
            return this.check()
        }
        scale(t) {
            if ("number" == typeof t)
                for (let e = 0; e < this.ELEMENTS; ++e)
                    this[e] *= t;
            else
                for (let e = 0; e < this.ELEMENTS && e < t.length; ++e)
                    this[e] *= t[e];
            return this.check()
        }
        multiplyByScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] *= t;
            return this.check()
        }
        check() {
            if (st.debug && !this.validate())
                throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'"));
            return this
        }
        validate() {
            let t = this.length === this.ELEMENTS;
            for (let e = 0; e < this.ELEMENTS; ++e)
                t = t && Number.isFinite(this[e]);
            return t
        }
        sub(t) {
            return this.subtract(t)
        }
        setScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = t;
            return this.check()
        }
        addScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] += t;
            return this.check()
        }
        subScalar(t) {
            return this.addScalar(-t)
        }
        multiplyScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] *= t;
            return this.check()
        }
        divideScalar(t) {
            return this.multiplyByScalar(1 / t)
        }
        clampScalar(t, e) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = Math.min(Math.max(this[n], t), e);
            return this.check()
        }
        get elements() {
            return this
        }
    }
    function ft(t) {
        if (!Number.isFinite(t))
            throw new Error("Invalid number ".concat(t));
        return t
    }
    function dt(t, e, n="") {
        if (st.debug && !function(t, e) {
            if (t.length !== e)
                return !1;
            for (let e = 0; e < t.length; ++e)
                if (!Number.isFinite(t[e]))
                    return !1;
            return !0
        }(t, e))
            throw new Error("math.gl: ".concat(n, " some fields set to invalid numbers'"));
        return t
    }
    class pt extends lt {
        get x() {
            return this[0]
        }
        set x(t) {
            this[0] = ft(t)
        }
        get y() {
            return this[1]
        }
        set y(t) {
            this[1] = ft(t)
        }
        len() {
            return Math.sqrt(this.lengthSquared())
        }
        magnitude() {
            return this.len()
        }
        lengthSquared() {
            let t = 0;
            for (let e = 0; e < this.ELEMENTS; ++e)
                t += this[e] * this[e];
            return t
        }
        magnitudeSquared() {
            return this.lengthSquared()
        }
        distance(t) {
            return Math.sqrt(this.distanceSquared(t))
        }
        distanceSquared(t) {
            let e = 0;
            for (let n = 0; n < this.ELEMENTS; ++n) {
                const r = this[n] - t[n];
                e += r * r
            }
            return ft(e)
        }
        dot(t) {
            let e = 0;
            for (let n = 0; n < this.ELEMENTS; ++n)
                e += this[n] * t[n];
            return ft(e)
        }
        normalize() {
            const t = this.magnitude();
            if (0 !== t)
                for (let e = 0; e < this.ELEMENTS; ++e)
                    this[e] /= t;
            return this.check()
        }
        multiply(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] *= e[t];
            return this.check()
        }
        divide(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] /= e[t];
            return this.check()
        }
        lengthSq() {
            return this.lengthSquared()
        }
        distanceTo(t) {
            return this.distance(t)
        }
        distanceToSquared(t) {
            return this.distanceSquared(t)
        }
        getComponent(t) {
            return at(t >= 0 && t < this.ELEMENTS, "index is out of range"),
            ft(this[t])
        }
        setComponent(t, e) {
            return at(t >= 0 && t < this.ELEMENTS, "index is out of range"),
            this[t] = e,
            this.check()
        }
        addVectors(t, e) {
            return this.copy(t).add(e)
        }
        subVectors(t, e) {
            return this.copy(t).subtract(e)
        }
        multiplyVectors(t, e) {
            return this.copy(t).multiply(e)
        }
        addScaledVector(t, e) {
            return this.add(new this.constructor(t).multiplyScalar(e))
        }
    }
    var vt = 1e-6
      , mt = "undefined" != typeof Float32Array ? Float32Array : Array
      , gt = Math.random;
    function yt() {
        var t = new mt(2);
        return mt != Float32Array && (t[0] = 0,
        t[1] = 0),
        t
    }
    function _t(t, e) {
        var n = new mt(2);
        return n[0] = t,
        n[1] = e,
        n
    }
    function xt(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t
    }
    function bt(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t
    }
    function Mt(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t
    }
    function wt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1];
        return Math.hypot(n, r)
    }
    function Et(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1];
        return n * n + r * r
    }
    function Tt(t) {
        var e = t[0]
          , n = t[1];
        return Math.hypot(e, n)
    }
    function At(t) {
        var e = t[0]
          , n = t[1];
        return e * e + n * n
    }
    function Ct(t, e, n) {
        var r = e[0]
          , i = e[1];
        return t[0] = n[0] * r + n[4] * i + n[12],
        t[1] = n[1] * r + n[5] * i + n[13],
        t
    }
    Math.hypot || (Math.hypot = function() {
        for (var t = 0, e = arguments.length; e--; )
            t += arguments[e] * arguments[e];
        return Math.sqrt(t)
    }
    );
    var Rt, St = Tt, Pt = xt, Dt = bt, Ot = Mt, It = wt, Lt = Et, Bt = At, kt = (Rt = yt(),
    function(t, e, n, r, i, o) {
        var a, s;
        for (e || (e = 2),
        n || (n = 0),
        s = r ? Math.min(r * e + n, t.length) : t.length,
        a = n; a < s; a += e)
            Rt[0] = t[a],
            Rt[1] = t[a + 1],
            i(Rt, Rt, o),
            t[a] = Rt[0],
            t[a + 1] = Rt[1];
        return t
    }
    ), Ut = Object.freeze({
        __proto__: null,
        create: yt,
        clone: function(t) {
            var e = new mt(2);
            return e[0] = t[0],
            e[1] = t[1],
            e
        },
        fromValues: _t,
        copy: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t
        },
        set: function(t, e, n) {
            return t[0] = e,
            t[1] = n,
            t
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t
        },
        subtract: xt,
        multiply: bt,
        divide: Mt,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t
        },
        scale: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t
        },
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t
        },
        distance: wt,
        squaredDistance: Et,
        length: Tt,
        squaredLength: At,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t
        },
        normalize: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = n * n + r * r;
            return i > 0 && (i = 1 / Math.sqrt(i)),
            t[0] = e[0] * i,
            t[1] = e[1] * i,
            t
        },
        dot: function(t, e) {
            return t[0] * e[0] + t[1] * e[1]
        },
        cross: function(t, e, n) {
            var r = e[0] * n[1] - e[1] * n[0];
            return t[0] = t[1] = 0,
            t[2] = r,
            t
        },
        lerp: function(t, e, n, r) {
            var i = e[0]
              , o = e[1];
            return t[0] = i + r * (n[0] - i),
            t[1] = o + r * (n[1] - o),
            t
        },
        random: function(t, e) {
            e = e || 1;
            var n = 2 * gt() * Math.PI;
            return t[0] = Math.cos(n) * e,
            t[1] = Math.sin(n) * e,
            t
        },
        transformMat2: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[2] * i,
            t[1] = n[1] * r + n[3] * i,
            t
        },
        transformMat2d: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[2] * i + n[4],
            t[1] = n[1] * r + n[3] * i + n[5],
            t
        },
        transformMat3: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[3] * i + n[6],
            t[1] = n[1] * r + n[4] * i + n[7],
            t
        },
        transformMat4: Ct,
        rotate: function(t, e, n, r) {
            var i = e[0] - n[0]
              , o = e[1] - n[1]
              , a = Math.sin(r)
              , s = Math.cos(r);
            return t[0] = i * s - o * a + n[0],
            t[1] = i * a + o * s + n[1],
            t
        },
        angle: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = e[0]
              , o = e[1]
              , a = Math.sqrt(n * n + r * r) * Math.sqrt(i * i + o * o)
              , s = a && (n * i + r * o) / a;
            return Math.acos(Math.min(Math.max(s, -1), 1))
        },
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t
        },
        str: function(t) {
            return "vec2(" + t[0] + ", " + t[1] + ")"
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = e[0]
              , o = e[1];
            return Math.abs(n - i) <= vt * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - o) <= vt * Math.max(1, Math.abs(r), Math.abs(o))
        },
        len: St,
        sub: Pt,
        mul: Dt,
        div: Ot,
        dist: It,
        sqrDist: Lt,
        sqrLen: Bt,
        forEach: kt
    });
    function Nt(t, e, n) {
        const r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[3] * r + n[7] * i + n[11] * o || 1;
        return t[0] = (n[0] * r + n[4] * i + n[8] * o) / a,
        t[1] = (n[1] * r + n[5] * i + n[9] * o) / a,
        t[2] = (n[2] * r + n[6] * i + n[10] * o) / a,
        t
    }
    function Ft() {
        var t = new mt(3);
        return mt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0),
        t
    }
    function jt(t) {
        var e = new mt(3);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e
    }
    function zt(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2];
        return Math.hypot(e, n, r)
    }
    function Vt(t, e, n) {
        var r = new mt(3);
        return r[0] = t,
        r[1] = e,
        r[2] = n,
        r
    }
    function Gt(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t
    }
    function Wt(t, e, n) {
        return t[0] = e[0] + n[0],
        t[1] = e[1] + n[1],
        t[2] = e[2] + n[2],
        t
    }
    function Ht(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t
    }
    function Zt(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t[2] = e[2] * n[2],
        t
    }
    function qt(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t[2] = e[2] / n[2],
        t
    }
    function Yt(t, e, n) {
        return t[0] = e[0] * n,
        t[1] = e[1] * n,
        t[2] = e[2] * n,
        t
    }
    function Xt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2];
        return Math.hypot(n, r, i)
    }
    function Kt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2];
        return n * n + r * r + i * i
    }
    function Qt(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2];
        return e * e + n * n + r * r
    }
    function Jt(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = n * n + r * r + i * i;
        return o > 0 && (o = 1 / Math.sqrt(o)),
        t[0] = e[0] * o,
        t[1] = e[1] * o,
        t[2] = e[2] * o,
        t
    }
    function $t(t, e) {
        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
    }
    function te(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[0]
          , s = n[1]
          , u = n[2];
        return t[0] = i * u - o * s,
        t[1] = o * a - r * u,
        t[2] = r * s - i * a,
        t
    }
    function ee(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[3] * r + n[7] * i + n[11] * o + n[15];
        return a = a || 1,
        t[0] = (n[0] * r + n[4] * i + n[8] * o + n[12]) / a,
        t[1] = (n[1] * r + n[5] * i + n[9] * o + n[13]) / a,
        t[2] = (n[2] * r + n[6] * i + n[10] * o + n[14]) / a,
        t
    }
    function ne(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2];
        return t[0] = r * n[0] + i * n[3] + o * n[6],
        t[1] = r * n[1] + i * n[4] + o * n[7],
        t[2] = r * n[2] + i * n[5] + o * n[8],
        t
    }
    function re(t, e, n) {
        var r = n[0]
          , i = n[1]
          , o = n[2]
          , a = n[3]
          , s = e[0]
          , u = e[1]
          , h = e[2]
          , c = i * h - o * u
          , l = o * s - r * h
          , f = r * u - i * s
          , d = i * f - o * l
          , p = o * c - r * f
          , v = r * l - i * c
          , m = 2 * a;
        return c *= m,
        l *= m,
        f *= m,
        d *= 2,
        p *= 2,
        v *= 2,
        t[0] = s + c + d,
        t[1] = u + l + p,
        t[2] = h + f + v,
        t
    }
    function ie(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[0],
        o[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r),
        o[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r),
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function oe(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r),
        o[1] = i[1],
        o[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r),
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function ae(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r),
        o[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r),
        o[2] = i[2],
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function se(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = Math.sqrt(n * n + r * r + i * i) * Math.sqrt(o * o + a * a + s * s)
          , h = u && $t(t, e) / u;
        return Math.acos(Math.min(Math.max(h, -1), 1))
    }
    function ue(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = e[0]
          , a = e[1]
          , s = e[2];
        return Math.abs(n - o) <= vt * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - a) <= vt * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(i - s) <= vt * Math.max(1, Math.abs(i), Math.abs(s))
    }
    var he = Ht
      , ce = Zt
      , le = qt
      , fe = Xt
      , de = Kt
      , pe = zt
      , ve = Qt
      , me = function() {
        var t = Ft();
        return function(e, n, r, i, o, a) {
            var s, u;
            for (n || (n = 3),
            r || (r = 0),
            u = i ? Math.min(i * n + r, e.length) : e.length,
            s = r; s < u; s += n)
                t[0] = e[s],
                t[1] = e[s + 1],
                t[2] = e[s + 2],
                o(t, t, a),
                e[s] = t[0],
                e[s + 1] = t[1],
                e[s + 2] = t[2];
            return e
        }
    }()
      , ge = Object.freeze({
        __proto__: null,
        create: Ft,
        clone: jt,
        length: zt,
        fromValues: Vt,
        copy: Gt,
        set: function(t, e, n, r) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t
        },
        add: Wt,
        subtract: Ht,
        multiply: Zt,
        divide: qt,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t[2] = Math.ceil(e[2]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t[2] = Math.floor(e[2]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t[2] = Math.min(e[2], n[2]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t[2] = Math.max(e[2], n[2]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t[2] = Math.round(e[2]),
            t
        },
        scale: Yt,
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t
        },
        distance: Xt,
        squaredDistance: Kt,
        squaredLength: Qt,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t[2] = 1 / e[2],
            t
        },
        normalize: Jt,
        dot: $t,
        cross: te,
        lerp: function(t, e, n, r) {
            var i = e[0]
              , o = e[1]
              , a = e[2];
            return t[0] = i + r * (n[0] - i),
            t[1] = o + r * (n[1] - o),
            t[2] = a + r * (n[2] - a),
            t
        },
        hermite: function(t, e, n, r, i, o) {
            var a = o * o
              , s = a * (2 * o - 3) + 1
              , u = a * (o - 2) + o
              , h = a * (o - 1)
              , c = a * (3 - 2 * o);
            return t[0] = e[0] * s + n[0] * u + r[0] * h + i[0] * c,
            t[1] = e[1] * s + n[1] * u + r[1] * h + i[1] * c,
            t[2] = e[2] * s + n[2] * u + r[2] * h + i[2] * c,
            t
        },
        bezier: function(t, e, n, r, i, o) {
            var a = 1 - o
              , s = a * a
              , u = o * o
              , h = s * a
              , c = 3 * o * s
              , l = 3 * u * a
              , f = u * o;
            return t[0] = e[0] * h + n[0] * c + r[0] * l + i[0] * f,
            t[1] = e[1] * h + n[1] * c + r[1] * l + i[1] * f,
            t[2] = e[2] * h + n[2] * c + r[2] * l + i[2] * f,
            t
        },
        random: function(t, e) {
            e = e || 1;
            var n = 2 * gt() * Math.PI
              , r = 2 * gt() - 1
              , i = Math.sqrt(1 - r * r) * e;
            return t[0] = Math.cos(n) * i,
            t[1] = Math.sin(n) * i,
            t[2] = r * e,
            t
        },
        transformMat4: ee,
        transformMat3: ne,
        transformQuat: re,
        rotateX: ie,
        rotateY: oe,
        rotateZ: ae,
        angle: se,
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t[2] = 0,
            t
        },
        str: function(t) {
            return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2]
        },
        equals: ue,
        sub: he,
        mul: ce,
        div: le,
        dist: fe,
        sqrDist: de,
        len: pe,
        sqrLen: ve,
        forEach: me
    });
    const ye = [0, 0, 0];
    let _e, xe;
    class be extends pt {
        static get ZERO() {
            return _e || (_e = new be(0,0,0),
            Object.freeze(_e)),
            _e
        }
        constructor(t=0, e=0, n=0) {
            super(-0, -0, -0),
            1 === arguments.length && ht(t) ? this.copy(t) : (st.debug && (ft(t),
            ft(e),
            ft(n)),
            this[0] = t,
            this[1] = e,
            this[2] = n)
        }
        set(t, e, n) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this.check()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this.check()
        }
        fromObject(t) {
            return st.debug && (ft(t.x),
            ft(t.y),
            ft(t.z)),
            this[0] = t.x,
            this[1] = t.y,
            this[2] = t.z,
            this.check()
        }
        toObject(t) {
            return t.x = this[0],
            t.y = this[1],
            t.z = this[2],
            t
        }
        get ELEMENTS() {
            return 3
        }
        get z() {
            return this[2]
        }
        set z(t) {
            this[2] = ft(t)
        }
        angle(t) {
            return se(this, t)
        }
        cross(t) {
            return te(this, this, t),
            this.check()
        }
        rotateX({radians: t, origin: e=ye}) {
            return ie(this, this, e, t),
            this.check()
        }
        rotateY({radians: t, origin: e=ye}) {
            return oe(this, this, e, t),
            this.check()
        }
        rotateZ({radians: t, origin: e=ye}) {
            return ae(this, this, e, t),
            this.check()
        }
        transform(t) {
            return this.transformAsPoint(t)
        }
        transformAsPoint(t) {
            return ee(this, this, t),
            this.check()
        }
        transformAsVector(t) {
            return Nt(this, this, t),
            this.check()
        }
        transformByMatrix3(t) {
            return ne(this, this, t),
            this.check()
        }
        transformByMatrix2(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1];
                t[0] = n[0] * r + n[2] * i,
                t[1] = n[1] * r + n[3] * i,
                t[2] = e[2]
            }(this, this, t),
            this.check()
        }
        transformByQuaternion(t) {
            return re(this, this, t),
            this.check()
        }
    }
    class Me extends pt {
        static get ZERO() {
            return xe || (xe = new Me(0,0,0,0),
            Object.freeze(xe)),
            xe
        }
        constructor(t=0, e=0, n=0, r=0) {
            super(-0, -0, -0, -0),
            ht(t) && 1 === arguments.length ? this.copy(t) : (st.debug && (ft(t),
            ft(e),
            ft(n),
            ft(r)),
            this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r)
        }
        set(t, e, n, r) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r,
            this.check()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this[3] = t[3],
            this.check()
        }
        fromObject(t) {
            return st.debug && (ft(t.x),
            ft(t.y),
            ft(t.z),
            ft(t.w)),
            this[0] = t.x,
            this[1] = t.y,
            this[2] = t.z,
            this[3] = t.w,
            this
        }
        toObject(t) {
            return t.x = this[0],
            t.y = this[1],
            t.z = this[2],
            t.w = this[3],
            t
        }
        get ELEMENTS() {
            return 4
        }
        get z() {
            return this[2]
        }
        set z(t) {
            this[2] = ft(t)
        }
        get w() {
            return this[3]
        }
        set w(t) {
            this[3] = ft(t)
        }
        transform(t) {
            return ee(this, this, t),
            this.check()
        }
        transformByMatrix3(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1]
                  , o = e[2];
                t[0] = n[0] * r + n[3] * i + n[6] * o,
                t[1] = n[1] * r + n[4] * i + n[7] * o,
                t[2] = n[2] * r + n[5] * i + n[8] * o,
                t[3] = e[3]
            }(this, this, t),
            this.check()
        }
        transformByMatrix2(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1];
                t[0] = n[0] * r + n[2] * i,
                t[1] = n[1] * r + n[3] * i,
                t[2] = e[2],
                t[3] = e[3]
            }(this, this, t),
            this.check()
        }
        transformByQuaternion(t) {
            return re(this, this, t),
            this.check()
        }
        applyMatrix4(t) {
            return t.transform(this, this),
            this
        }
    }
    class we extends lt {
        toString() {
            let t = "[";
            if (st.printRowMajor) {
                t += "row-major:";
                for (let e = 0; e < this.RANK; ++e)
                    for (let n = 0; n < this.RANK; ++n)
                        t += " ".concat(this[n * this.RANK + e])
            } else {
                t += "column-major:";
                for (let e = 0; e < this.ELEMENTS; ++e)
                    t += " ".concat(this[e])
            }
            return t += "]",
            t
        }
        getElementIndex(t, e) {
            return e * this.RANK + t
        }
        getElement(t, e) {
            return this[e * this.RANK + t]
        }
        setElement(t, e, n) {
            return this[e * this.RANK + t] = ft(n),
            this
        }
        getColumn(t, e=new Array(this.RANK).fill(-0)) {
            const n = t * this.RANK;
            for (let t = 0; t < this.RANK; ++t)
                e[t] = this[n + t];
            return e
        }
        setColumn(t, e) {
            const n = t * this.RANK;
            for (let t = 0; t < this.RANK; ++t)
                this[n + t] = e[t];
            return this
        }
    }
    function Ee() {
        var t = new mt(9);
        return mt != Float32Array && (t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[5] = 0,
        t[6] = 0,
        t[7] = 0),
        t[0] = 1,
        t[4] = 1,
        t[8] = 1,
        t
    }
    function Te(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = e[4]
          , u = e[5]
          , h = e[6]
          , c = e[7]
          , l = e[8]
          , f = n[0]
          , d = n[1]
          , p = n[2]
          , v = n[3]
          , m = n[4]
          , g = n[5]
          , y = n[6]
          , _ = n[7]
          , x = n[8];
        return t[0] = f * r + d * a + p * h,
        t[1] = f * i + d * s + p * c,
        t[2] = f * o + d * u + p * l,
        t[3] = v * r + m * a + g * h,
        t[4] = v * i + m * s + g * c,
        t[5] = v * o + m * u + g * l,
        t[6] = y * r + _ * a + x * h,
        t[7] = y * i + _ * s + x * c,
        t[8] = y * o + _ * u + x * l,
        t
    }
    function Ae(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t[4] = e[4] - n[4],
        t[5] = e[5] - n[5],
        t[6] = e[6] - n[6],
        t[7] = e[7] - n[7],
        t[8] = e[8] - n[8],
        t
    }
    var Ce = Te
      , Re = Ae
      , Se = Object.freeze({
        __proto__: null,
        create: Ee,
        fromMat4: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = e[2],
            t[3] = e[4],
            t[4] = e[5],
            t[5] = e[6],
            t[6] = e[8],
            t[7] = e[9],
            t[8] = e[10],
            t
        },
        clone: function(t) {
            var e = new mt(9);
            return e[0] = t[0],
            e[1] = t[1],
            e[2] = t[2],
            e[3] = t[3],
            e[4] = t[4],
            e[5] = t[5],
            e[6] = t[6],
            e[7] = t[7],
            e[8] = t[8],
            e
        },
        copy: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = e[2],
            t[3] = e[3],
            t[4] = e[4],
            t[5] = e[5],
            t[6] = e[6],
            t[7] = e[7],
            t[8] = e[8],
            t
        },
        fromValues: function(t, e, n, r, i, o, a, s, u) {
            var h = new mt(9);
            return h[0] = t,
            h[1] = e,
            h[2] = n,
            h[3] = r,
            h[4] = i,
            h[5] = o,
            h[6] = a,
            h[7] = s,
            h[8] = u,
            h
        },
        set: function(t, e, n, r, i, o, a, s, u, h) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t[3] = i,
            t[4] = o,
            t[5] = a,
            t[6] = s,
            t[7] = u,
            t[8] = h,
            t
        },
        identity: function(t) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 1,
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        transpose: function(t, e) {
            if (t === e) {
                var n = e[1]
                  , r = e[2]
                  , i = e[5];
                t[1] = e[3],
                t[2] = e[6],
                t[3] = n,
                t[5] = e[7],
                t[6] = r,
                t[7] = i
            } else
                t[0] = e[0],
                t[1] = e[3],
                t[2] = e[6],
                t[3] = e[1],
                t[4] = e[4],
                t[5] = e[7],
                t[6] = e[2],
                t[7] = e[5],
                t[8] = e[8];
            return t
        },
        invert: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = c * a - s * h
              , f = -c * o + s * u
              , d = h * o - a * u
              , p = n * l + r * f + i * d;
            return p ? (p = 1 / p,
            t[0] = l * p,
            t[1] = (-c * r + i * h) * p,
            t[2] = (s * r - i * a) * p,
            t[3] = f * p,
            t[4] = (c * n - i * u) * p,
            t[5] = (-s * n + i * o) * p,
            t[6] = d * p,
            t[7] = (-h * n + r * u) * p,
            t[8] = (a * n - r * o) * p,
            t) : null
        },
        adjoint: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8];
            return t[0] = a * c - s * h,
            t[1] = i * h - r * c,
            t[2] = r * s - i * a,
            t[3] = s * u - o * c,
            t[4] = n * c - i * u,
            t[5] = i * o - n * s,
            t[6] = o * h - a * u,
            t[7] = r * u - n * h,
            t[8] = n * a - r * o,
            t
        },
        determinant: function(t) {
            var e = t[0]
              , n = t[1]
              , r = t[2]
              , i = t[3]
              , o = t[4]
              , a = t[5]
              , s = t[6]
              , u = t[7]
              , h = t[8];
            return e * (h * o - a * u) + n * (-h * i + a * s) + r * (u * i - o * s)
        },
        multiply: Te,
        translate: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = e[8]
              , f = n[0]
              , d = n[1];
            return t[0] = r,
            t[1] = i,
            t[2] = o,
            t[3] = a,
            t[4] = s,
            t[5] = u,
            t[6] = f * r + d * a + h,
            t[7] = f * i + d * s + c,
            t[8] = f * o + d * u + l,
            t
        },
        rotate: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = e[8]
              , f = Math.sin(n)
              , d = Math.cos(n);
            return t[0] = d * r + f * a,
            t[1] = d * i + f * s,
            t[2] = d * o + f * u,
            t[3] = d * a - f * r,
            t[4] = d * s - f * i,
            t[5] = d * u - f * o,
            t[6] = h,
            t[7] = c,
            t[8] = l,
            t
        },
        scale: function(t, e, n) {
            var r = n[0]
              , i = n[1];
            return t[0] = r * e[0],
            t[1] = r * e[1],
            t[2] = r * e[2],
            t[3] = i * e[3],
            t[4] = i * e[4],
            t[5] = i * e[5],
            t[6] = e[6],
            t[7] = e[7],
            t[8] = e[8],
            t
        },
        fromTranslation: function(t, e) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 1,
            t[5] = 0,
            t[6] = e[0],
            t[7] = e[1],
            t[8] = 1,
            t
        },
        fromRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = n,
            t[2] = 0,
            t[3] = -n,
            t[4] = r,
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        fromScaling: function(t, e) {
            return t[0] = e[0],
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = e[1],
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        fromMat2d: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = 0,
            t[3] = e[2],
            t[4] = e[3],
            t[5] = 0,
            t[6] = e[4],
            t[7] = e[5],
            t[8] = 1,
            t
        },
        fromQuat: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = n + n
              , s = r + r
              , u = i + i
              , h = n * a
              , c = r * a
              , l = r * s
              , f = i * a
              , d = i * s
              , p = i * u
              , v = o * a
              , m = o * s
              , g = o * u;
            return t[0] = 1 - l - p,
            t[3] = c - g,
            t[6] = f + m,
            t[1] = c + g,
            t[4] = 1 - h - p,
            t[7] = d - v,
            t[2] = f - m,
            t[5] = d + v,
            t[8] = 1 - h - l,
            t
        },
        normalFromMat4: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = e[9]
              , f = e[10]
              , d = e[11]
              , p = e[12]
              , v = e[13]
              , m = e[14]
              , g = e[15]
              , y = n * s - r * a
              , _ = n * u - i * a
              , x = n * h - o * a
              , b = r * u - i * s
              , M = r * h - o * s
              , w = i * h - o * u
              , E = c * v - l * p
              , T = c * m - f * p
              , A = c * g - d * p
              , C = l * m - f * v
              , R = l * g - d * v
              , S = f * g - d * m
              , P = y * S - _ * R + x * C + b * A - M * T + w * E;
            return P ? (P = 1 / P,
            t[0] = (s * S - u * R + h * C) * P,
            t[1] = (u * A - a * S - h * T) * P,
            t[2] = (a * R - s * A + h * E) * P,
            t[3] = (i * R - r * S - o * C) * P,
            t[4] = (n * S - i * A + o * T) * P,
            t[5] = (r * A - n * R - o * E) * P,
            t[6] = (v * w - m * M + g * b) * P,
            t[7] = (m * x - p * w - g * _) * P,
            t[8] = (p * M - v * x + g * y) * P,
            t) : null
        },
        projection: function(t, e, n) {
            return t[0] = 2 / e,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = -2 / n,
            t[5] = 0,
            t[6] = -1,
            t[7] = 1,
            t[8] = 1,
            t
        },
        str: function(t) {
            return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")"
        },
        frob: function(t) {
            return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8])
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t[2] = e[2] + n[2],
            t[3] = e[3] + n[3],
            t[4] = e[4] + n[4],
            t[5] = e[5] + n[5],
            t[6] = e[6] + n[6],
            t[7] = e[7] + n[7],
            t[8] = e[8] + n[8],
            t
        },
        subtract: Ae,
        multiplyScalar: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t[2] = e[2] * n,
            t[3] = e[3] * n,
            t[4] = e[4] * n,
            t[5] = e[5] * n,
            t[6] = e[6] * n,
            t[7] = e[7] * n,
            t[8] = e[8] * n,
            t
        },
        multiplyScalarAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t[4] = e[4] + n[4] * r,
            t[5] = e[5] + n[5] * r,
            t[6] = e[6] + n[6] * r,
            t[7] = e[7] + n[7] * r,
            t[8] = e[8] + n[8] * r,
            t
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = t[2]
              , o = t[3]
              , a = t[4]
              , s = t[5]
              , u = t[6]
              , h = t[7]
              , c = t[8]
              , l = e[0]
              , f = e[1]
              , d = e[2]
              , p = e[3]
              , v = e[4]
              , m = e[5]
              , g = e[6]
              , y = e[7]
              , _ = e[8];
            return Math.abs(n - l) <= vt * Math.max(1, Math.abs(n), Math.abs(l)) && Math.abs(r - f) <= vt * Math.max(1, Math.abs(r), Math.abs(f)) && Math.abs(i - d) <= vt * Math.max(1, Math.abs(i), Math.abs(d)) && Math.abs(o - p) <= vt * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - v) <= vt * Math.max(1, Math.abs(a), Math.abs(v)) && Math.abs(s - m) <= vt * Math.max(1, Math.abs(s), Math.abs(m)) && Math.abs(u - g) <= vt * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - y) <= vt * Math.max(1, Math.abs(h), Math.abs(y)) && Math.abs(c - _) <= vt * Math.max(1, Math.abs(c), Math.abs(_))
        },
        mul: Ce,
        sub: Re
    });
    function Pe() {
        var t = new mt(16);
        return mt != Float32Array && (t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0),
        t[0] = 1,
        t[5] = 1,
        t[10] = 1,
        t[15] = 1,
        t
    }
    function De(t) {
        var e = new mt(16);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e[3] = t[3],
        e[4] = t[4],
        e[5] = t[5],
        e[6] = t[6],
        e[7] = t[7],
        e[8] = t[8],
        e[9] = t[9],
        e[10] = t[10],
        e[11] = t[11],
        e[12] = t[12],
        e[13] = t[13],
        e[14] = t[14],
        e[15] = t[15],
        e
    }
    function Oe(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t[4] = e[4],
        t[5] = e[5],
        t[6] = e[6],
        t[7] = e[7],
        t[8] = e[8],
        t[9] = e[9],
        t[10] = e[10],
        t[11] = e[11],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15],
        t
    }
    function Ie(t) {
        return t[0] = 1,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = 1,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[10] = 1,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        t
    }
    function Le(t, e) {
        if (t === e) {
            var n = e[1]
              , r = e[2]
              , i = e[3]
              , o = e[6]
              , a = e[7]
              , s = e[11];
            t[1] = e[4],
            t[2] = e[8],
            t[3] = e[12],
            t[4] = n,
            t[6] = e[9],
            t[7] = e[13],
            t[8] = r,
            t[9] = o,
            t[11] = e[14],
            t[12] = i,
            t[13] = a,
            t[14] = s
        } else
            t[0] = e[0],
            t[1] = e[4],
            t[2] = e[8],
            t[3] = e[12],
            t[4] = e[1],
            t[5] = e[5],
            t[6] = e[9],
            t[7] = e[13],
            t[8] = e[2],
            t[9] = e[6],
            t[10] = e[10],
            t[11] = e[14],
            t[12] = e[3],
            t[13] = e[7],
            t[14] = e[11],
            t[15] = e[15];
        return t
    }
    function Be(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = e[4]
          , s = e[5]
          , u = e[6]
          , h = e[7]
          , c = e[8]
          , l = e[9]
          , f = e[10]
          , d = e[11]
          , p = e[12]
          , v = e[13]
          , m = e[14]
          , g = e[15]
          , y = n * s - r * a
          , _ = n * u - i * a
          , x = n * h - o * a
          , b = r * u - i * s
          , M = r * h - o * s
          , w = i * h - o * u
          , E = c * v - l * p
          , T = c * m - f * p
          , A = c * g - d * p
          , C = l * m - f * v
          , R = l * g - d * v
          , S = f * g - d * m
          , P = y * S - _ * R + x * C + b * A - M * T + w * E;
        return P ? (P = 1 / P,
        t[0] = (s * S - u * R + h * C) * P,
        t[1] = (i * R - r * S - o * C) * P,
        t[2] = (v * w - m * M + g * b) * P,
        t[3] = (f * M - l * w - d * b) * P,
        t[4] = (u * A - a * S - h * T) * P,
        t[5] = (n * S - i * A + o * T) * P,
        t[6] = (m * x - p * w - g * _) * P,
        t[7] = (c * w - f * x + d * _) * P,
        t[8] = (a * R - s * A + h * E) * P,
        t[9] = (r * A - n * R - o * E) * P,
        t[10] = (p * M - v * x + g * y) * P,
        t[11] = (l * x - c * M - d * y) * P,
        t[12] = (s * T - a * C - u * E) * P,
        t[13] = (n * C - r * T + i * E) * P,
        t[14] = (v * _ - p * b - m * y) * P,
        t[15] = (c * b - l * _ + f * y) * P,
        t) : null
    }
    function ke(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3]
          , o = t[4]
          , a = t[5]
          , s = t[6]
          , u = t[7]
          , h = t[8]
          , c = t[9]
          , l = t[10]
          , f = t[11]
          , d = t[12]
          , p = t[13]
          , v = t[14]
          , m = t[15];
        return (e * a - n * o) * (l * m - f * v) - (e * s - r * o) * (c * m - f * p) + (e * u - i * o) * (c * v - l * p) + (n * s - r * a) * (h * m - f * d) - (n * u - i * a) * (h * v - l * d) + (r * u - i * s) * (h * p - c * d)
    }
    function Ue(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = e[4]
          , u = e[5]
          , h = e[6]
          , c = e[7]
          , l = e[8]
          , f = e[9]
          , d = e[10]
          , p = e[11]
          , v = e[12]
          , m = e[13]
          , g = e[14]
          , y = e[15]
          , _ = n[0]
          , x = n[1]
          , b = n[2]
          , M = n[3];
        return t[0] = _ * r + x * s + b * l + M * v,
        t[1] = _ * i + x * u + b * f + M * m,
        t[2] = _ * o + x * h + b * d + M * g,
        t[3] = _ * a + x * c + b * p + M * y,
        _ = n[4],
        x = n[5],
        b = n[6],
        M = n[7],
        t[4] = _ * r + x * s + b * l + M * v,
        t[5] = _ * i + x * u + b * f + M * m,
        t[6] = _ * o + x * h + b * d + M * g,
        t[7] = _ * a + x * c + b * p + M * y,
        _ = n[8],
        x = n[9],
        b = n[10],
        M = n[11],
        t[8] = _ * r + x * s + b * l + M * v,
        t[9] = _ * i + x * u + b * f + M * m,
        t[10] = _ * o + x * h + b * d + M * g,
        t[11] = _ * a + x * c + b * p + M * y,
        _ = n[12],
        x = n[13],
        b = n[14],
        M = n[15],
        t[12] = _ * r + x * s + b * l + M * v,
        t[13] = _ * i + x * u + b * f + M * m,
        t[14] = _ * o + x * h + b * d + M * g,
        t[15] = _ * a + x * c + b * p + M * y,
        t
    }
    function Ne(t, e, n) {
        var r, i, o, a, s, u, h, c, l, f, d, p, v = n[0], m = n[1], g = n[2];
        return e === t ? (t[12] = e[0] * v + e[4] * m + e[8] * g + e[12],
        t[13] = e[1] * v + e[5] * m + e[9] * g + e[13],
        t[14] = e[2] * v + e[6] * m + e[10] * g + e[14],
        t[15] = e[3] * v + e[7] * m + e[11] * g + e[15]) : (r = e[0],
        i = e[1],
        o = e[2],
        a = e[3],
        s = e[4],
        u = e[5],
        h = e[6],
        c = e[7],
        l = e[8],
        f = e[9],
        d = e[10],
        p = e[11],
        t[0] = r,
        t[1] = i,
        t[2] = o,
        t[3] = a,
        t[4] = s,
        t[5] = u,
        t[6] = h,
        t[7] = c,
        t[8] = l,
        t[9] = f,
        t[10] = d,
        t[11] = p,
        t[12] = r * v + s * m + l * g + e[12],
        t[13] = i * v + u * m + f * g + e[13],
        t[14] = o * v + h * m + d * g + e[14],
        t[15] = a * v + c * m + p * g + e[15]),
        t
    }
    function Fe(t, e, n) {
        var r = n[0]
          , i = n[1]
          , o = n[2];
        return t[0] = e[0] * r,
        t[1] = e[1] * r,
        t[2] = e[2] * r,
        t[3] = e[3] * r,
        t[4] = e[4] * i,
        t[5] = e[5] * i,
        t[6] = e[6] * i,
        t[7] = e[7] * i,
        t[8] = e[8] * o,
        t[9] = e[9] * o,
        t[10] = e[10] * o,
        t[11] = e[11] * o,
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15],
        t
    }
    function je(t, e, n, r) {
        var i, o, a, s, u, h, c, l, f, d, p, v, m, g, y, _, x, b, M, w, E, T, A, C, R = r[0], S = r[1], P = r[2], D = Math.hypot(R, S, P);
        return D < vt ? null : (R *= D = 1 / D,
        S *= D,
        P *= D,
        i = Math.sin(n),
        a = 1 - (o = Math.cos(n)),
        s = e[0],
        u = e[1],
        h = e[2],
        c = e[3],
        l = e[4],
        f = e[5],
        d = e[6],
        p = e[7],
        v = e[8],
        m = e[9],
        g = e[10],
        y = e[11],
        _ = R * R * a + o,
        x = S * R * a + P * i,
        b = P * R * a - S * i,
        M = R * S * a - P * i,
        w = S * S * a + o,
        E = P * S * a + R * i,
        T = R * P * a + S * i,
        A = S * P * a - R * i,
        C = P * P * a + o,
        t[0] = s * _ + l * x + v * b,
        t[1] = u * _ + f * x + m * b,
        t[2] = h * _ + d * x + g * b,
        t[3] = c * _ + p * x + y * b,
        t[4] = s * M + l * w + v * E,
        t[5] = u * M + f * w + m * E,
        t[6] = h * M + d * w + g * E,
        t[7] = c * M + p * w + y * E,
        t[8] = s * T + l * A + v * C,
        t[9] = u * T + f * A + m * C,
        t[10] = h * T + d * A + g * C,
        t[11] = c * T + p * A + y * C,
        e !== t && (t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t)
    }
    function ze(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , u = e[7]
          , h = e[8]
          , c = e[9]
          , l = e[10]
          , f = e[11];
        return e !== t && (t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[4] = o * i + h * r,
        t[5] = a * i + c * r,
        t[6] = s * i + l * r,
        t[7] = u * i + f * r,
        t[8] = h * i - o * r,
        t[9] = c * i - a * r,
        t[10] = l * i - s * r,
        t[11] = f * i - u * r,
        t
    }
    function Ve(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = e[3]
          , h = e[8]
          , c = e[9]
          , l = e[10]
          , f = e[11];
        return e !== t && (t[4] = e[4],
        t[5] = e[5],
        t[6] = e[6],
        t[7] = e[7],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[0] = o * i - h * r,
        t[1] = a * i - c * r,
        t[2] = s * i - l * r,
        t[3] = u * i - f * r,
        t[8] = o * r + h * i,
        t[9] = a * r + c * i,
        t[10] = s * r + l * i,
        t[11] = u * r + f * i,
        t
    }
    function Ge(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = e[3]
          , h = e[4]
          , c = e[5]
          , l = e[6]
          , f = e[7];
        return e !== t && (t[8] = e[8],
        t[9] = e[9],
        t[10] = e[10],
        t[11] = e[11],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[0] = o * i + h * r,
        t[1] = a * i + c * r,
        t[2] = s * i + l * r,
        t[3] = u * i + f * r,
        t[4] = h * i - o * r,
        t[5] = c * i - a * r,
        t[6] = l * i - s * r,
        t[7] = f * i - u * r,
        t
    }
    function We(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = r + r
          , u = i + i
          , h = o + o
          , c = r * s
          , l = r * u
          , f = r * h
          , d = i * u
          , p = i * h
          , v = o * h
          , m = a * s
          , g = a * u
          , y = a * h;
        return t[0] = 1 - (d + v),
        t[1] = l + y,
        t[2] = f - g,
        t[3] = 0,
        t[4] = l - y,
        t[5] = 1 - (c + v),
        t[6] = p + m,
        t[7] = 0,
        t[8] = f + g,
        t[9] = p - m,
        t[10] = 1 - (c + d),
        t[11] = 0,
        t[12] = n[0],
        t[13] = n[1],
        t[14] = n[2],
        t[15] = 1,
        t
    }
    function He(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , u = e[8]
          , h = e[9]
          , c = e[10];
        return t[0] = Math.hypot(n, r, i),
        t[1] = Math.hypot(o, a, s),
        t[2] = Math.hypot(u, h, c),
        t
    }
    function Ze(t, e) {
        var n = new mt(3);
        He(n, e);
        var r = 1 / n[0]
          , i = 1 / n[1]
          , o = 1 / n[2]
          , a = e[0] * r
          , s = e[1] * i
          , u = e[2] * o
          , h = e[4] * r
          , c = e[5] * i
          , l = e[6] * o
          , f = e[8] * r
          , d = e[9] * i
          , p = e[10] * o
          , v = a + c + p
          , m = 0;
        return v > 0 ? (m = 2 * Math.sqrt(v + 1),
        t[3] = .25 * m,
        t[0] = (l - d) / m,
        t[1] = (f - u) / m,
        t[2] = (s - h) / m) : a > c && a > p ? (m = 2 * Math.sqrt(1 + a - c - p),
        t[3] = (l - d) / m,
        t[0] = .25 * m,
        t[1] = (s + h) / m,
        t[2] = (f + u) / m) : c > p ? (m = 2 * Math.sqrt(1 + c - a - p),
        t[3] = (f - u) / m,
        t[0] = (s + h) / m,
        t[1] = .25 * m,
        t[2] = (l + d) / m) : (m = 2 * Math.sqrt(1 + p - a - c),
        t[3] = (s - h) / m,
        t[0] = (f + u) / m,
        t[1] = (l + d) / m,
        t[2] = .25 * m),
        t
    }
    function qe(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = e[3]
          , u = i + i
          , h = o + o
          , c = a + a
          , l = i * u
          , f = i * h
          , d = i * c
          , p = o * h
          , v = o * c
          , m = a * c
          , g = s * u
          , y = s * h
          , _ = s * c
          , x = r[0]
          , b = r[1]
          , M = r[2];
        return t[0] = (1 - (p + m)) * x,
        t[1] = (f + _) * x,
        t[2] = (d - y) * x,
        t[3] = 0,
        t[4] = (f - _) * b,
        t[5] = (1 - (l + m)) * b,
        t[6] = (v + g) * b,
        t[7] = 0,
        t[8] = (d + y) * M,
        t[9] = (v - g) * M,
        t[10] = (1 - (l + p)) * M,
        t[11] = 0,
        t[12] = n[0],
        t[13] = n[1],
        t[14] = n[2],
        t[15] = 1,
        t
    }
    function Ye(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = n + n
          , s = r + r
          , u = i + i
          , h = n * a
          , c = r * a
          , l = r * s
          , f = i * a
          , d = i * s
          , p = i * u
          , v = o * a
          , m = o * s
          , g = o * u;
        return t[0] = 1 - l - p,
        t[1] = c + g,
        t[2] = f - m,
        t[3] = 0,
        t[4] = c - g,
        t[5] = 1 - h - p,
        t[6] = d + v,
        t[7] = 0,
        t[8] = f + m,
        t[9] = d - v,
        t[10] = 1 - h - l,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        t
    }
    function Xe(t, e, n, r, i, o, a) {
        var s = 1 / (n - e)
          , u = 1 / (i - r)
          , h = 1 / (o - a);
        return t[0] = 2 * o * s,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = 2 * o * u,
        t[6] = 0,
        t[7] = 0,
        t[8] = (n + e) * s,
        t[9] = (i + r) * u,
        t[10] = (a + o) * h,
        t[11] = -1,
        t[12] = 0,
        t[13] = 0,
        t[14] = a * o * 2 * h,
        t[15] = 0,
        t
    }
    function Ke(t, e, n, r, i) {
        var o, a = 1 / Math.tan(e / 2);
        return t[0] = a / n,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = a,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[11] = -1,
        t[12] = 0,
        t[13] = 0,
        t[15] = 0,
        null != i && i !== 1 / 0 ? (o = 1 / (r - i),
        t[10] = (i + r) * o,
        t[14] = 2 * i * r * o) : (t[10] = -1,
        t[14] = -2 * r),
        t
    }
    var Qe = Ke;
    function Je(t, e, n, r, i, o, a) {
        var s = 1 / (e - n)
          , u = 1 / (r - i)
          , h = 1 / (o - a);
        return t[0] = -2 * s,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = -2 * u,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[10] = 2 * h,
        t[11] = 0,
        t[12] = (e + n) * s,
        t[13] = (i + r) * u,
        t[14] = (a + o) * h,
        t[15] = 1,
        t
    }
    var $e = Je;
    function tn(t, e, n, r) {
        var i, o, a, s, u, h, c, l, f, d, p = e[0], v = e[1], m = e[2], g = r[0], y = r[1], _ = r[2], x = n[0], b = n[1], M = n[2];
        return Math.abs(p - x) < vt && Math.abs(v - b) < vt && Math.abs(m - M) < vt ? Ie(t) : (c = p - x,
        l = v - b,
        f = m - M,
        i = y * (f *= d = 1 / Math.hypot(c, l, f)) - _ * (l *= d),
        o = _ * (c *= d) - g * f,
        a = g * l - y * c,
        (d = Math.hypot(i, o, a)) ? (i *= d = 1 / d,
        o *= d,
        a *= d) : (i = 0,
        o = 0,
        a = 0),
        s = l * a - f * o,
        u = f * i - c * a,
        h = c * o - l * i,
        (d = Math.hypot(s, u, h)) ? (s *= d = 1 / d,
        u *= d,
        h *= d) : (s = 0,
        u = 0,
        h = 0),
        t[0] = i,
        t[1] = s,
        t[2] = c,
        t[3] = 0,
        t[4] = o,
        t[5] = u,
        t[6] = l,
        t[7] = 0,
        t[8] = a,
        t[9] = h,
        t[10] = f,
        t[11] = 0,
        t[12] = -(i * p + o * v + a * m),
        t[13] = -(s * p + u * v + h * m),
        t[14] = -(c * p + l * v + f * m),
        t[15] = 1,
        t)
    }
    function en(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = r[0]
          , u = r[1]
          , h = r[2]
          , c = i - n[0]
          , l = o - n[1]
          , f = a - n[2]
          , d = c * c + l * l + f * f;
        d > 0 && (c *= d = 1 / Math.sqrt(d),
        l *= d,
        f *= d);
        var p = u * f - h * l
          , v = h * c - s * f
          , m = s * l - u * c;
        return (d = p * p + v * v + m * m) > 0 && (p *= d = 1 / Math.sqrt(d),
        v *= d,
        m *= d),
        t[0] = p,
        t[1] = v,
        t[2] = m,
        t[3] = 0,
        t[4] = l * m - f * v,
        t[5] = f * p - c * m,
        t[6] = c * v - l * p,
        t[7] = 0,
        t[8] = c,
        t[9] = l,
        t[10] = f,
        t[11] = 0,
        t[12] = i,
        t[13] = o,
        t[14] = a,
        t[15] = 1,
        t
    }
    function nn(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t[4] = e[4] - n[4],
        t[5] = e[5] - n[5],
        t[6] = e[6] - n[6],
        t[7] = e[7] - n[7],
        t[8] = e[8] - n[8],
        t[9] = e[9] - n[9],
        t[10] = e[10] - n[10],
        t[11] = e[11] - n[11],
        t[12] = e[12] - n[12],
        t[13] = e[13] - n[13],
        t[14] = e[14] - n[14],
        t[15] = e[15] - n[15],
        t
    }
    var rn = Ue
      , on = nn
      , an = Object.freeze({
        __proto__: null,
        create: Pe,
        clone: De,
        copy: Oe,
        fromValues: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            var m = new mt(16);
            return m[0] = t,
            m[1] = e,
            m[2] = n,
            m[3] = r,
            m[4] = i,
            m[5] = o,
            m[6] = a,
            m[7] = s,
            m[8] = u,
            m[9] = h,
            m[10] = c,
            m[11] = l,
            m[12] = f,
            m[13] = d,
            m[14] = p,
            m[15] = v,
            m
        },
        set: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v, m) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t[3] = i,
            t[4] = o,
            t[5] = a,
            t[6] = s,
            t[7] = u,
            t[8] = h,
            t[9] = c,
            t[10] = l,
            t[11] = f,
            t[12] = d,
            t[13] = p,
            t[14] = v,
            t[15] = m,
            t
        },
        identity: Ie,
        transpose: Le,
        invert: Be,
        adjoint: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = e[9]
              , f = e[10]
              , d = e[11]
              , p = e[12]
              , v = e[13]
              , m = e[14]
              , g = e[15];
            return t[0] = s * (f * g - d * m) - l * (u * g - h * m) + v * (u * d - h * f),
            t[1] = -(r * (f * g - d * m) - l * (i * g - o * m) + v * (i * d - o * f)),
            t[2] = r * (u * g - h * m) - s * (i * g - o * m) + v * (i * h - o * u),
            t[3] = -(r * (u * d - h * f) - s * (i * d - o * f) + l * (i * h - o * u)),
            t[4] = -(a * (f * g - d * m) - c * (u * g - h * m) + p * (u * d - h * f)),
            t[5] = n * (f * g - d * m) - c * (i * g - o * m) + p * (i * d - o * f),
            t[6] = -(n * (u * g - h * m) - a * (i * g - o * m) + p * (i * h - o * u)),
            t[7] = n * (u * d - h * f) - a * (i * d - o * f) + c * (i * h - o * u),
            t[8] = a * (l * g - d * v) - c * (s * g - h * v) + p * (s * d - h * l),
            t[9] = -(n * (l * g - d * v) - c * (r * g - o * v) + p * (r * d - o * l)),
            t[10] = n * (s * g - h * v) - a * (r * g - o * v) + p * (r * h - o * s),
            t[11] = -(n * (s * d - h * l) - a * (r * d - o * l) + c * (r * h - o * s)),
            t[12] = -(a * (l * m - f * v) - c * (s * m - u * v) + p * (s * f - u * l)),
            t[13] = n * (l * m - f * v) - c * (r * m - i * v) + p * (r * f - i * l),
            t[14] = -(n * (s * m - u * v) - a * (r * m - i * v) + p * (r * u - i * s)),
            t[15] = n * (s * f - u * l) - a * (r * f - i * l) + c * (r * u - i * s),
            t
        },
        determinant: ke,
        multiply: Ue,
        translate: Ne,
        scale: Fe,
        rotate: je,
        rotateX: ze,
        rotateY: Ve,
        rotateZ: Ge,
        fromTranslation: function(t, e) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = 1,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = 1,
            t[11] = 0,
            t[12] = e[0],
            t[13] = e[1],
            t[14] = e[2],
            t[15] = 1,
            t
        },
        fromScaling: function(t, e) {
            return t[0] = e[0],
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = e[1],
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = e[2],
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromRotation: function(t, e, n) {
            var r, i, o, a = n[0], s = n[1], u = n[2], h = Math.hypot(a, s, u);
            return h < vt ? null : (a *= h = 1 / h,
            s *= h,
            u *= h,
            r = Math.sin(e),
            o = 1 - (i = Math.cos(e)),
            t[0] = a * a * o + i,
            t[1] = s * a * o + u * r,
            t[2] = u * a * o - s * r,
            t[3] = 0,
            t[4] = a * s * o - u * r,
            t[5] = s * s * o + i,
            t[6] = u * s * o + a * r,
            t[7] = 0,
            t[8] = a * u * o + s * r,
            t[9] = s * u * o - a * r,
            t[10] = u * u * o + i,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t)
        },
        fromXRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = r,
            t[6] = n,
            t[7] = 0,
            t[8] = 0,
            t[9] = -n,
            t[10] = r,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromYRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = 0,
            t[2] = -n,
            t[3] = 0,
            t[4] = 0,
            t[5] = 1,
            t[6] = 0,
            t[7] = 0,
            t[8] = n,
            t[9] = 0,
            t[10] = r,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromZRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = n,
            t[2] = 0,
            t[3] = 0,
            t[4] = -n,
            t[5] = r,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = 1,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromRotationTranslation: We,
        fromQuat2: function(t, e) {
            var n = new mt(3)
              , r = -e[0]
              , i = -e[1]
              , o = -e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = r * r + i * i + o * o + a * a;
            return l > 0 ? (n[0] = 2 * (s * a + c * r + u * o - h * i) / l,
            n[1] = 2 * (u * a + c * i + h * r - s * o) / l,
            n[2] = 2 * (h * a + c * o + s * i - u * r) / l) : (n[0] = 2 * (s * a + c * r + u * o - h * i),
            n[1] = 2 * (u * a + c * i + h * r - s * o),
            n[2] = 2 * (h * a + c * o + s * i - u * r)),
            We(t, e, n),
            t
        },
        getTranslation: function(t, e) {
            return t[0] = e[12],
            t[1] = e[13],
            t[2] = e[14],
            t
        },
        getScaling: He,
        getRotation: Ze,
        fromRotationTranslationScale: qe,
        fromRotationTranslationScaleOrigin: function(t, e, n, r, i) {
            var o = e[0]
              , a = e[1]
              , s = e[2]
              , u = e[3]
              , h = o + o
              , c = a + a
              , l = s + s
              , f = o * h
              , d = o * c
              , p = o * l
              , v = a * c
              , m = a * l
              , g = s * l
              , y = u * h
              , _ = u * c
              , x = u * l
              , b = r[0]
              , M = r[1]
              , w = r[2]
              , E = i[0]
              , T = i[1]
              , A = i[2]
              , C = (1 - (v + g)) * b
              , R = (d + x) * b
              , S = (p - _) * b
              , P = (d - x) * M
              , D = (1 - (f + g)) * M
              , O = (m + y) * M
              , I = (p + _) * w
              , L = (m - y) * w
              , B = (1 - (f + v)) * w;
            return t[0] = C,
            t[1] = R,
            t[2] = S,
            t[3] = 0,
            t[4] = P,
            t[5] = D,
            t[6] = O,
            t[7] = 0,
            t[8] = I,
            t[9] = L,
            t[10] = B,
            t[11] = 0,
            t[12] = n[0] + E - (C * E + P * T + I * A),
            t[13] = n[1] + T - (R * E + D * T + L * A),
            t[14] = n[2] + A - (S * E + O * T + B * A),
            t[15] = 1,
            t
        },
        fromQuat: Ye,
        frustum: Xe,
        perspectiveNO: Ke,
        perspective: Qe,
        perspectiveZO: function(t, e, n, r, i) {
            var o, a = 1 / Math.tan(e / 2);
            return t[0] = a / n,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = a,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[11] = -1,
            t[12] = 0,
            t[13] = 0,
            t[15] = 0,
            null != i && i !== 1 / 0 ? (o = 1 / (r - i),
            t[10] = i * o,
            t[14] = i * r * o) : (t[10] = -1,
            t[14] = -r),
            t
        },
        perspectiveFromFieldOfView: function(t, e, n, r) {
            var i = Math.tan(e.upDegrees * Math.PI / 180)
              , o = Math.tan(e.downDegrees * Math.PI / 180)
              , a = Math.tan(e.leftDegrees * Math.PI / 180)
              , s = Math.tan(e.rightDegrees * Math.PI / 180)
              , u = 2 / (a + s)
              , h = 2 / (i + o);
            return t[0] = u,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = h,
            t[6] = 0,
            t[7] = 0,
            t[8] = -(a - s) * u * .5,
            t[9] = (i - o) * h * .5,
            t[10] = r / (n - r),
            t[11] = -1,
            t[12] = 0,
            t[13] = 0,
            t[14] = r * n / (n - r),
            t[15] = 0,
            t
        },
        orthoNO: Je,
        ortho: $e,
        orthoZO: function(t, e, n, r, i, o, a) {
            var s = 1 / (e - n)
              , u = 1 / (r - i)
              , h = 1 / (o - a);
            return t[0] = -2 * s,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = -2 * u,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = h,
            t[11] = 0,
            t[12] = (e + n) * s,
            t[13] = (i + r) * u,
            t[14] = o * h,
            t[15] = 1,
            t
        },
        lookAt: tn,
        targetTo: en,
        str: function(t) {
            return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")"
        },
        frob: function(t) {
            return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t[2] = e[2] + n[2],
            t[3] = e[3] + n[3],
            t[4] = e[4] + n[4],
            t[5] = e[5] + n[5],
            t[6] = e[6] + n[6],
            t[7] = e[7] + n[7],
            t[8] = e[8] + n[8],
            t[9] = e[9] + n[9],
            t[10] = e[10] + n[10],
            t[11] = e[11] + n[11],
            t[12] = e[12] + n[12],
            t[13] = e[13] + n[13],
            t[14] = e[14] + n[14],
            t[15] = e[15] + n[15],
            t
        },
        subtract: nn,
        multiplyScalar: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t[2] = e[2] * n,
            t[3] = e[3] * n,
            t[4] = e[4] * n,
            t[5] = e[5] * n,
            t[6] = e[6] * n,
            t[7] = e[7] * n,
            t[8] = e[8] * n,
            t[9] = e[9] * n,
            t[10] = e[10] * n,
            t[11] = e[11] * n,
            t[12] = e[12] * n,
            t[13] = e[13] * n,
            t[14] = e[14] * n,
            t[15] = e[15] * n,
            t
        },
        multiplyScalarAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t[4] = e[4] + n[4] * r,
            t[5] = e[5] + n[5] * r,
            t[6] = e[6] + n[6] * r,
            t[7] = e[7] + n[7] * r,
            t[8] = e[8] + n[8] * r,
            t[9] = e[9] + n[9] * r,
            t[10] = e[10] + n[10] * r,
            t[11] = e[11] + n[11] * r,
            t[12] = e[12] + n[12] * r,
            t[13] = e[13] + n[13] * r,
            t[14] = e[14] + n[14] * r,
            t[15] = e[15] + n[15] * r,
            t
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = t[2]
              , o = t[3]
              , a = t[4]
              , s = t[5]
              , u = t[6]
              , h = t[7]
              , c = t[8]
              , l = t[9]
              , f = t[10]
              , d = t[11]
              , p = t[12]
              , v = t[13]
              , m = t[14]
              , g = t[15]
              , y = e[0]
              , _ = e[1]
              , x = e[2]
              , b = e[3]
              , M = e[4]
              , w = e[5]
              , E = e[6]
              , T = e[7]
              , A = e[8]
              , C = e[9]
              , R = e[10]
              , S = e[11]
              , P = e[12]
              , D = e[13]
              , O = e[14]
              , I = e[15];
            return Math.abs(n - y) <= vt * Math.max(1, Math.abs(n), Math.abs(y)) && Math.abs(r - _) <= vt * Math.max(1, Math.abs(r), Math.abs(_)) && Math.abs(i - x) <= vt * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(o - b) <= vt * Math.max(1, Math.abs(o), Math.abs(b)) && Math.abs(a - M) <= vt * Math.max(1, Math.abs(a), Math.abs(M)) && Math.abs(s - w) <= vt * Math.max(1, Math.abs(s), Math.abs(w)) && Math.abs(u - E) <= vt * Math.max(1, Math.abs(u), Math.abs(E)) && Math.abs(h - T) <= vt * Math.max(1, Math.abs(h), Math.abs(T)) && Math.abs(c - A) <= vt * Math.max(1, Math.abs(c), Math.abs(A)) && Math.abs(l - C) <= vt * Math.max(1, Math.abs(l), Math.abs(C)) && Math.abs(f - R) <= vt * Math.max(1, Math.abs(f), Math.abs(R)) && Math.abs(d - S) <= vt * Math.max(1, Math.abs(d), Math.abs(S)) && Math.abs(p - P) <= vt * Math.max(1, Math.abs(p), Math.abs(P)) && Math.abs(v - D) <= vt * Math.max(1, Math.abs(v), Math.abs(D)) && Math.abs(m - O) <= vt * Math.max(1, Math.abs(m), Math.abs(O)) && Math.abs(g - I) <= vt * Math.max(1, Math.abs(g), Math.abs(I))
        },
        mul: rn,
        sub: on
    });
    function sn() {
        var t = new mt(4);
        return mt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0),
        t
    }
    function un(t) {
        var e = new mt(4);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e[3] = t[3],
        e
    }
    function hn(t, e, n, r) {
        var i = new mt(4);
        return i[0] = t,
        i[1] = e,
        i[2] = n,
        i[3] = r,
        i
    }
    function cn(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t
    }
    function ln(t, e, n, r, i) {
        return t[0] = e,
        t[1] = n,
        t[2] = r,
        t[3] = i,
        t
    }
    function fn(t, e, n) {
        return t[0] = e[0] + n[0],
        t[1] = e[1] + n[1],
        t[2] = e[2] + n[2],
        t[3] = e[3] + n[3],
        t
    }
    function dn(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t
    }
    function pn(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t[2] = e[2] * n[2],
        t[3] = e[3] * n[3],
        t
    }
    function vn(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t[2] = e[2] / n[2],
        t[3] = e[3] / n[3],
        t
    }
    function mn(t, e, n) {
        return t[0] = e[0] * n,
        t[1] = e[1] * n,
        t[2] = e[2] * n,
        t[3] = e[3] * n,
        t
    }
    function gn(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2]
          , o = e[3] - t[3];
        return Math.hypot(n, r, i, o)
    }
    function yn(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2]
          , o = e[3] - t[3];
        return n * n + r * r + i * i + o * o
    }
    function _n(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3];
        return Math.hypot(e, n, r, i)
    }
    function xn(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3];
        return e * e + n * n + r * r + i * i
    }
    function bn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = n * n + r * r + i * i + o * o;
        return a > 0 && (a = 1 / Math.sqrt(a)),
        t[0] = n * a,
        t[1] = r * a,
        t[2] = i * a,
        t[3] = o * a,
        t
    }
    function Mn(t, e) {
        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3]
    }
    function wn(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = e[3];
        return t[0] = i + r * (n[0] - i),
        t[1] = o + r * (n[1] - o),
        t[2] = a + r * (n[2] - a),
        t[3] = s + r * (n[3] - s),
        t
    }
    function En(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3];
        return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a,
        t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a,
        t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a,
        t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a,
        t
    }
    function Tn(t, e) {
        return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3]
    }
    function An(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = t[3]
          , a = e[0]
          , s = e[1]
          , u = e[2]
          , h = e[3];
        return Math.abs(n - a) <= vt * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - s) <= vt * Math.max(1, Math.abs(r), Math.abs(s)) && Math.abs(i - u) <= vt * Math.max(1, Math.abs(i), Math.abs(u)) && Math.abs(o - h) <= vt * Math.max(1, Math.abs(o), Math.abs(h))
    }
    var Cn, Rn = dn, Sn = pn, Pn = vn, Dn = gn, On = yn, In = _n, Ln = xn, Bn = function() {
        var t = sn();
        return function(e, n, r, i, o, a) {
            var s, u;
            for (n || (n = 4),
            r || (r = 0),
            u = i ? Math.min(i * n + r, e.length) : e.length,
            s = r; s < u; s += n)
                t[0] = e[s],
                t[1] = e[s + 1],
                t[2] = e[s + 2],
                t[3] = e[s + 3],
                o(t, t, a),
                e[s] = t[0],
                e[s + 1] = t[1],
                e[s + 2] = t[2],
                e[s + 3] = t[3];
            return e
        }
    }(), kn = Object.freeze({
        __proto__: null,
        create: sn,
        clone: un,
        fromValues: hn,
        copy: cn,
        set: ln,
        add: fn,
        subtract: dn,
        multiply: pn,
        divide: vn,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t[2] = Math.ceil(e[2]),
            t[3] = Math.ceil(e[3]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t[2] = Math.floor(e[2]),
            t[3] = Math.floor(e[3]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t[2] = Math.min(e[2], n[2]),
            t[3] = Math.min(e[3], n[3]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t[2] = Math.max(e[2], n[2]),
            t[3] = Math.max(e[3], n[3]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t[2] = Math.round(e[2]),
            t[3] = Math.round(e[3]),
            t
        },
        scale: mn,
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t
        },
        distance: gn,
        squaredDistance: yn,
        length: _n,
        squaredLength: xn,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t[3] = -e[3],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t[2] = 1 / e[2],
            t[3] = 1 / e[3],
            t
        },
        normalize: bn,
        dot: Mn,
        cross: function(t, e, n, r) {
            var i = n[0] * r[1] - n[1] * r[0]
              , o = n[0] * r[2] - n[2] * r[0]
              , a = n[0] * r[3] - n[3] * r[0]
              , s = n[1] * r[2] - n[2] * r[1]
              , u = n[1] * r[3] - n[3] * r[1]
              , h = n[2] * r[3] - n[3] * r[2]
              , c = e[0]
              , l = e[1]
              , f = e[2]
              , d = e[3];
            return t[0] = l * h - f * u + d * s,
            t[1] = -c * h + f * a - d * o,
            t[2] = c * u - l * a + d * i,
            t[3] = -c * s + l * o - f * i,
            t
        },
        lerp: wn,
        random: function(t, e) {
            var n, r, i, o, a, s;
            e = e || 1;
            do {
                a = (n = 2 * gt() - 1) * n + (r = 2 * gt() - 1) * r
            } while (a >= 1);
            do {
                s = (i = 2 * gt() - 1) * i + (o = 2 * gt() - 1) * o
            } while (s >= 1);
            var u = Math.sqrt((1 - a) / s);
            return t[0] = e * n,
            t[1] = e * r,
            t[2] = e * i * u,
            t[3] = e * o * u,
            t
        },
        transformMat4: En,
        transformQuat: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = n[0]
              , s = n[1]
              , u = n[2]
              , h = n[3]
              , c = h * r + s * o - u * i
              , l = h * i + u * r - a * o
              , f = h * o + a * i - s * r
              , d = -a * r - s * i - u * o;
            return t[0] = c * h + d * -a + l * -u - f * -s,
            t[1] = l * h + d * -s + f * -a - c * -u,
            t[2] = f * h + d * -u + c * -s - l * -a,
            t[3] = e[3],
            t
        },
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t
        },
        str: function(t) {
            return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
        },
        exactEquals: Tn,
        equals: An,
        sub: Rn,
        mul: Sn,
        div: Pn,
        dist: Dn,
        sqrDist: On,
        len: In,
        sqrLen: Ln,
        forEach: Bn
    });
    !function(t) {
        t[t.COL0ROW0 = 0] = "COL0ROW0",
        t[t.COL0ROW1 = 1] = "COL0ROW1",
        t[t.COL0ROW2 = 2] = "COL0ROW2",
        t[t.COL0ROW3 = 3] = "COL0ROW3",
        t[t.COL1ROW0 = 4] = "COL1ROW0",
        t[t.COL1ROW1 = 5] = "COL1ROW1",
        t[t.COL1ROW2 = 6] = "COL1ROW2",
        t[t.COL1ROW3 = 7] = "COL1ROW3",
        t[t.COL2ROW0 = 8] = "COL2ROW0",
        t[t.COL2ROW1 = 9] = "COL2ROW1",
        t[t.COL2ROW2 = 10] = "COL2ROW2",
        t[t.COL2ROW3 = 11] = "COL2ROW3",
        t[t.COL3ROW0 = 12] = "COL3ROW0",
        t[t.COL3ROW1 = 13] = "COL3ROW1",
        t[t.COL3ROW2 = 14] = "COL3ROW2",
        t[t.COL3ROW3 = 15] = "COL3ROW3"
    }(Cn || (Cn = {}));
    const Un = 45 * Math.PI / 180
      , Nn = 1
      , Fn = .1
      , jn = 500
      , zn = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
    class Vn extends we {
        static get IDENTITY() {
            return function() {
                Wn || (Wn = new Vn,
                Object.freeze(Wn));
                return Wn
            }()
        }
        static get ZERO() {
            return function() {
                Gn || (Gn = new Vn([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                Object.freeze(Gn));
                return Gn
            }()
        }
        get ELEMENTS() {
            return 16
        }
        get RANK() {
            return 4
        }
        get INDICES() {
            return Cn
        }
        constructor(t) {
            super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0),
            1 === arguments.length && Array.isArray(t) ? this.copy(t) : this.identity()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this[3] = t[3],
            this[4] = t[4],
            this[5] = t[5],
            this[6] = t[6],
            this[7] = t[7],
            this[8] = t[8],
            this[9] = t[9],
            this[10] = t[10],
            this[11] = t[11],
            this[12] = t[12],
            this[13] = t[13],
            this[14] = t[14],
            this[15] = t[15],
            this.check()
        }
        set(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r,
            this[4] = i,
            this[5] = o,
            this[6] = a,
            this[7] = s,
            this[8] = u,
            this[9] = h,
            this[10] = c,
            this[11] = l,
            this[12] = f,
            this[13] = d,
            this[14] = p,
            this[15] = v,
            this.check()
        }
        setRowMajor(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            return this[0] = t,
            this[1] = i,
            this[2] = u,
            this[3] = f,
            this[4] = e,
            this[5] = o,
            this[6] = h,
            this[7] = d,
            this[8] = n,
            this[9] = a,
            this[10] = c,
            this[11] = p,
            this[12] = r,
            this[13] = s,
            this[14] = l,
            this[15] = v,
            this.check()
        }
        toRowMajor(t) {
            return t[0] = this[0],
            t[1] = this[4],
            t[2] = this[8],
            t[3] = this[12],
            t[4] = this[1],
            t[5] = this[5],
            t[6] = this[9],
            t[7] = this[13],
            t[8] = this[2],
            t[9] = this[6],
            t[10] = this[10],
            t[11] = this[14],
            t[12] = this[3],
            t[13] = this[7],
            t[14] = this[11],
            t[15] = this[15],
            t
        }
        identity() {
            return this.copy(zn)
        }
        fromObject(t) {
            return this.check()
        }
        fromQuaternion(t) {
            return Ye(this, t),
            this.check()
        }
        frustum(t) {
            const {left: e, right: n, bottom: r, top: i, near: o=Fn, far: a=jn} = t;
            return a === 1 / 0 ? function(t, e, n, r, i, o) {
                const a = 2 * o / (n - e)
                  , s = 2 * o / (i - r)
                  , u = (n + e) / (n - e)
                  , h = (i + r) / (i - r)
                  , c = -1
                  , l = -1
                  , f = -2 * o;
                t[0] = a,
                t[1] = 0,
                t[2] = 0,
                t[3] = 0,
                t[4] = 0,
                t[5] = s,
                t[6] = 0,
                t[7] = 0,
                t[8] = u,
                t[9] = h,
                t[10] = c,
                t[11] = l,
                t[12] = 0,
                t[13] = 0,
                t[14] = f,
                t[15] = 0
            }(this, e, n, r, i, o) : Xe(this, e, n, r, i, o, a),
            this.check()
        }
        lookAt(t) {
            const {eye: e, center: n=[0, 0, 0], up: r=[0, 1, 0]} = t;
            return tn(this, e, n, r),
            this.check()
        }
        ortho(t) {
            const {left: e, right: n, bottom: r, top: i, near: o=Fn, far: a=jn} = t;
            return $e(this, e, n, r, i, o, a),
            this.check()
        }
        orthographic(t) {
            const {fovy: e=Un, aspect: n=Nn, focalDistance: r=1, near: i=Fn, far: o=jn} = t;
            Hn(e);
            const a = e / 2
              , s = r * Math.tan(a)
              , u = s * n;
            return this.ortho({
                left: -u,
                right: u,
                bottom: -s,
                top: s,
                near: i,
                far: o
            })
        }
        perspective(t) {
            const {fovy: e=45 * Math.PI / 180, aspect: n=1, near: r=.1, far: i=500} = t;
            return Hn(e),
            Qe(this, e, n, r, i),
            this.check()
        }
        determinant() {
            return ke(this)
        }
        getScale(t=[-0, -0, -0]) {
            return t[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]),
            t[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]),
            t[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]),
            t
        }
        getTranslation(t=[-0, -0, -0]) {
            return t[0] = this[12],
            t[1] = this[13],
            t[2] = this[14],
            t
        }
        getRotation(t, e) {
            t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],
            e = e || [-0, -0, -0];
            const n = this.getScale(e)
              , r = 1 / n[0]
              , i = 1 / n[1]
              , o = 1 / n[2];
            return t[0] = this[0] * r,
            t[1] = this[1] * i,
            t[2] = this[2] * o,
            t[3] = 0,
            t[4] = this[4] * r,
            t[5] = this[5] * i,
            t[6] = this[6] * o,
            t[7] = 0,
            t[8] = this[8] * r,
            t[9] = this[9] * i,
            t[10] = this[10] * o,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        }
        getRotationMatrix3(t, e) {
            t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0],
            e = e || [-0, -0, -0];
            const n = this.getScale(e)
              , r = 1 / n[0]
              , i = 1 / n[1]
              , o = 1 / n[2];
            return t[0] = this[0] * r,
            t[1] = this[1] * i,
            t[2] = this[2] * o,
            t[3] = this[4] * r,
            t[4] = this[5] * i,
            t[5] = this[6] * o,
            t[6] = this[8] * r,
            t[7] = this[9] * i,
            t[8] = this[10] * o,
            t
        }
        transpose() {
            return Le(this, this),
            this.check()
        }
        invert() {
            return Be(this, this),
            this.check()
        }
        multiplyLeft(t) {
            return Ue(this, t, this),
            this.check()
        }
        multiplyRight(t) {
            return Ue(this, this, t),
            this.check()
        }
        rotateX(t) {
            return ze(this, this, t),
            this.check()
        }
        rotateY(t) {
            return Ve(this, this, t),
            this.check()
        }
        rotateZ(t) {
            return Ge(this, this, t),
            this.check()
        }
        rotateXYZ(t) {
            return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])
        }
        rotateAxis(t, e) {
            return je(this, this, t, e),
            this.check()
        }
        scale(t) {
            return Fe(this, this, Array.isArray(t) ? t : [t, t, t]),
            this.check()
        }
        translate(t) {
            return Ne(this, this, t),
            this.check()
        }
        transform(t, e) {
            return 4 === t.length ? (dt(e = En(e || [-0, -0, -0, -0], t, this), 4),
            e) : this.transformAsPoint(t, e)
        }
        transformAsPoint(t, e) {
            const {length: n} = t;
            let r;
            switch (n) {
            case 2:
                r = Ct(e || [-0, -0], t, this);
                break;
            case 3:
                r = ee(e || [-0, -0, -0], t, this);
                break;
            default:
                throw new Error("Illegal vector")
            }
            return dt(r, t.length),
            r
        }
        transformAsVector(t, e) {
            let n;
            switch (t.length) {
            case 2:
                n = function(t, e, n) {
                    const r = e[0]
                      , i = e[1]
                      , o = n[3] * r + n[7] * i || 1;
                    return t[0] = (n[0] * r + n[4] * i) / o,
                    t[1] = (n[1] * r + n[5] * i) / o,
                    t
                }(e || [-0, -0], t, this);
                break;
            case 3:
                n = Nt(e || [-0, -0, -0], t, this);
                break;
            default:
                throw new Error("Illegal vector")
            }
            return dt(n, t.length),
            n
        }
        transformPoint(t, e) {
            return this.transformAsPoint(t, e)
        }
        transformVector(t, e) {
            return this.transformAsPoint(t, e)
        }
        transformDirection(t, e) {
            return this.transformAsVector(t, e)
        }
        makeRotationX(t) {
            return this.identity().rotateX(t)
        }
        makeTranslation(t, e, n) {
            return this.identity().translate([t, e, n])
        }
    }
    let Gn, Wn;
    function Hn(t) {
        if (t > 2 * Math.PI)
            throw Error("expected radians")
    }
    function Zn() {
        var t = new mt(4);
        return mt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0),
        t[3] = 1,
        t
    }
    function qn(t) {
        return t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 1,
        t
    }
    function Yn(t, e, n) {
        n *= .5;
        var r = Math.sin(n);
        return t[0] = r * e[0],
        t[1] = r * e[1],
        t[2] = r * e[2],
        t[3] = Math.cos(n),
        t
    }
    function Xn(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = n[0]
          , u = n[1]
          , h = n[2]
          , c = n[3];
        return t[0] = r * c + a * s + i * h - o * u,
        t[1] = i * c + a * u + o * s - r * h,
        t[2] = o * c + a * h + r * u - i * s,
        t[3] = a * c - r * s - i * u - o * h,
        t
    }
    function Kn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = Math.sqrt(n * n + r * r + i * i)
          , s = Math.exp(o)
          , u = a > 0 ? s * Math.sin(a) / a : 0;
        return t[0] = n * u,
        t[1] = r * u,
        t[2] = i * u,
        t[3] = s * Math.cos(a),
        t
    }
    function Qn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = Math.sqrt(n * n + r * r + i * i)
          , s = a > 0 ? Math.atan2(a, o) / a : 0;
        return t[0] = n * s,
        t[1] = r * s,
        t[2] = i * s,
        t[3] = .5 * Math.log(n * n + r * r + i * i + o * o),
        t
    }
    function Jn(t, e, n, r) {
        var i, o, a, s, u, h = e[0], c = e[1], l = e[2], f = e[3], d = n[0], p = n[1], v = n[2], m = n[3];
        return (o = h * d + c * p + l * v + f * m) < 0 && (o = -o,
        d = -d,
        p = -p,
        v = -v,
        m = -m),
        1 - o > vt ? (i = Math.acos(o),
        a = Math.sin(i),
        s = Math.sin((1 - r) * i) / a,
        u = Math.sin(r * i) / a) : (s = 1 - r,
        u = r),
        t[0] = s * h + u * d,
        t[1] = s * c + u * p,
        t[2] = s * l + u * v,
        t[3] = s * f + u * m,
        t
    }
    function $n(t, e) {
        var n, r = e[0] + e[4] + e[8];
        if (r > 0)
            n = Math.sqrt(r + 1),
            t[3] = .5 * n,
            n = .5 / n,
            t[0] = (e[5] - e[7]) * n,
            t[1] = (e[6] - e[2]) * n,
            t[2] = (e[1] - e[3]) * n;
        else {
            var i = 0;
            e[4] > e[0] && (i = 1),
            e[8] > e[3 * i + i] && (i = 2);
            var o = (i + 1) % 3
              , a = (i + 2) % 3;
            n = Math.sqrt(e[3 * i + i] - e[3 * o + o] - e[3 * a + a] + 1),
            t[i] = .5 * n,
            n = .5 / n,
            t[3] = (e[3 * o + a] - e[3 * a + o]) * n,
            t[o] = (e[3 * o + i] + e[3 * i + o]) * n,
            t[a] = (e[3 * a + i] + e[3 * i + a]) * n
        }
        return t
    }
    function tr(t, e, n, r) {
        var i = .5 * Math.PI / 180;
        e *= i,
        n *= i,
        r *= i;
        var o = Math.sin(e)
          , a = Math.cos(e)
          , s = Math.sin(n)
          , u = Math.cos(n)
          , h = Math.sin(r)
          , c = Math.cos(r);
        return t[0] = o * u * c - a * s * h,
        t[1] = a * s * c + o * u * h,
        t[2] = a * u * h - o * s * c,
        t[3] = a * u * c + o * s * h,
        t
    }
    var er, nr, rr, ir, or, ar, sr = un, ur = hn, hr = cn, cr = ln, lr = fn, fr = Xn, dr = mn, pr = Mn, vr = wn, mr = _n, gr = mr, yr = xn, _r = yr, xr = bn, br = Tn, Mr = An, wr = (er = Ft(),
    nr = Vt(1, 0, 0),
    rr = Vt(0, 1, 0),
    function(t, e, n) {
        var r = $t(e, n);
        return r < -.999999 ? (te(er, nr, e),
        pe(er) < 1e-6 && te(er, rr, e),
        Jt(er, er),
        Yn(t, er, Math.PI),
        t) : r > .999999 ? (t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 1,
        t) : (te(er, e, n),
        t[0] = er[0],
        t[1] = er[1],
        t[2] = er[2],
        t[3] = 1 + r,
        xr(t, t))
    }
    ), Er = (ir = Zn(),
    or = Zn(),
    function(t, e, n, r, i, o) {
        return Jn(ir, e, i, o),
        Jn(or, n, r, o),
        Jn(t, ir, or, 2 * o * (1 - o)),
        t
    }
    ), Tr = (ar = Ee(),
    function(t, e, n, r) {
        return ar[0] = n[0],
        ar[3] = n[1],
        ar[6] = n[2],
        ar[1] = r[0],
        ar[4] = r[1],
        ar[7] = r[2],
        ar[2] = -e[0],
        ar[5] = -e[1],
        ar[8] = -e[2],
        xr(t, $n(t, ar))
    }
    ), Ar = Object.freeze({
        __proto__: null,
        create: Zn,
        identity: qn,
        setAxisAngle: Yn,
        getAxisAngle: function(t, e) {
            var n = 2 * Math.acos(e[3])
              , r = Math.sin(n / 2);
            return r > vt ? (t[0] = e[0] / r,
            t[1] = e[1] / r,
            t[2] = e[2] / r) : (t[0] = 1,
            t[1] = 0,
            t[2] = 0),
            n
        },
        getAngle: function(t, e) {
            var n = pr(t, e);
            return Math.acos(2 * n * n - 1)
        },
        multiply: Xn,
        rotateX: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u + a * s,
            t[1] = i * u + o * s,
            t[2] = o * u - i * s,
            t[3] = a * u - r * s,
            t
        },
        rotateY: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u - o * s,
            t[1] = i * u + a * s,
            t[2] = o * u + r * s,
            t[3] = a * u - i * s,
            t
        },
        rotateZ: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u + i * s,
            t[1] = i * u - r * s,
            t[2] = o * u + a * s,
            t[3] = a * u - o * s,
            t
        },
        calculateW: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2];
            return t[0] = n,
            t[1] = r,
            t[2] = i,
            t[3] = Math.sqrt(Math.abs(1 - n * n - r * r - i * i)),
            t
        },
        exp: Kn,
        ln: Qn,
        pow: function(t, e, n) {
            return Qn(t, e),
            dr(t, t, n),
            Kn(t, t),
            t
        },
        slerp: Jn,
        random: function(t) {
            var e = gt()
              , n = gt()
              , r = gt()
              , i = Math.sqrt(1 - e)
              , o = Math.sqrt(e);
            return t[0] = i * Math.sin(2 * Math.PI * n),
            t[1] = i * Math.cos(2 * Math.PI * n),
            t[2] = o * Math.sin(2 * Math.PI * r),
            t[3] = o * Math.cos(2 * Math.PI * r),
            t
        },
        invert: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = n * n + r * r + i * i + o * o
              , s = a ? 1 / a : 0;
            return t[0] = -n * s,
            t[1] = -r * s,
            t[2] = -i * s,
            t[3] = o * s,
            t
        },
        conjugate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t[3] = e[3],
            t
        },
        fromMat3: $n,
        fromEuler: tr,
        str: function(t) {
            return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
        },
        clone: sr,
        fromValues: ur,
        copy: hr,
        set: cr,
        add: lr,
        mul: fr,
        scale: dr,
        dot: pr,
        lerp: vr,
        length: mr,
        len: gr,
        squaredLength: yr,
        sqrLen: _r,
        normalize: xr,
        exactEquals: br,
        equals: Mr,
        rotationTo: wr,
        sqlerp: Er,
        setAxes: Tr
    });
    function Cr(t) {
        return Cr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
        ,
        Cr(t)
    }
    var Rr = function(t) {
        return "[object String]" === Object.prototype.toString.call(t)
    }
      , Sr = function(t) {
        var e = "[object Function]" === Object.prototype.toString.call(t)
          , n = "[object AsyncFunction]" === Object.prototype.toString.call(t);
        return e || n
    }
      , Pr = 365611;
    function Dr(t, e) {
        this.type = t,
        this.returnValue = !0,
        this.target = e || null,
        this.currentTarget = null
    }
    var Or = function() {
        function t() {
            this.__listeners = void 0
        }
        var e = t.prototype;
        return e.on = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("addEventListener")(e)
        }
        ,
        e.off = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("removeEventListener")(e)
        }
        ,
        e.emit = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("dispatchEvent")(e)
        }
        ,
        e.addEventListener = function(t, e, n) {
            if (Sr(e)) {
                var r;
                !this.__listeners && (this.__listeners = {});
                var i = this.__listeners;
                if ("string" == typeof n && n) {
                    if (/[^\w-]/.test(n))
                        throw "nonstandard key:" + n;
                    e.hashCode = n,
                    r = n
                }
                !t.startsWith("on") && (t = "on" + t),
                "object" !== Cr(i[t]) && (i[t] = {}),
                r = r || (++Pr).toString(),
                e.hashCode = r,
                i[t][r] = e
            }
        }
        ,
        e.removeEventListener = function(t, e) {
            if (Sr(e))
                e = e.hashCode;
            else if (!Rr(e))
                return;
            !this.__listeners && (this.__listeners = {}),
            !t.startsWith("on") && (t = "on" + t);
            var n = this.__listeners;
            n[t] && n[t][e] && delete n[t][e]
        }
        ,
        e.dispatchEvent = function(t, e) {
            Rr(t) && (t = new Dr(t)),
            !this.__listeners && (this.__listeners = {});
            var n = this.__listeners
              , r = t.type
              , i = e || t;
            if (t.target = t.target || this,
            t.currentTarget = this,
            0 !== r.indexOf("on") && (r = "on".concat(r)),
            Sr(n[r]) && n[r].call(this, i),
            "object" === Cr(n[r]))
                for (var o in n[r])
                    Object.prototype.hasOwnProperty.call(n[r], o) && n[r][o].call(this, i);
            return t.returnValue
        }
        ,
        e.alias = function(t) {
            var e = this;
            return function(n) {
                return e[t].apply(e, n)
            }
        }
        ,
        t
    }();
    function Ir(t, e) {
        var n = e[2]
          , r = e[0]
          , i = e[1]
          , o = e[3]
          , a = o * o
          , s = n * n
          , u = r * r
          , h = i * i
          , c = i * n - r * o
          , l = .4999999;
        return c < -l ? (t[0] = Math.PI / 2,
        t[1] = 2 * Math.atan2(i, o),
        t[2] = 0) : c > l ? (t[0] = -Math.PI / 2,
        t[1] = 2 * Math.atan2(i, o),
        t[2] = 0) : (t[0] = Math.asin(-2 * (n * i - r * o)),
        t[1] = Math.atan2(2 * (n * r + i * o), s - u - h + a),
        t[2] = Math.atan2(2 * (r * i + n * o), -s - u + h + a)),
        t
    }
    var Lr = function() {
        function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.DefaultOrder;
            this.isEuler = !0,
            this._x = void 0,
            this._y = void 0,
            this._z = void 0,
            this._order = void 0,
            this._onChangeCallback = void 0,
            this._x = e,
            this._y = n,
            this._z = r,
            this._order = i,
            this._onChangeCallback = function() {}
        }
        var e = t.prototype;
        return e.set = function(t, e, n) {
            var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
            return this._x = t,
            this._y = e,
            this._z = n,
            r && this._onChangeCallback(),
            this
        }
        ,
        e.clone = function() {
            return new t(this._x,this._y,this._z,this._order)
        }
        ,
        e.copy = function(t) {
            return t.isEuler ? (this._x = t._x,
            this._y = t._y,
            this._z = t._z,
            this._order = t._order,
            this._onChangeCallback(),
            this) : this
        }
        ,
        e.equals = function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        }
        ,
        e.toVector3 = function() {
            return Vt(this._x, this._y, this._z)
        }
        ,
        e.onChange = function(t) {
            "function" == typeof t && (this._onChangeCallback = t)
        }
        ,
        o(t, [{
            key: "x",
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this._onChangeCallback()
            }
        }, {
            key: "y",
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this._onChangeCallback()
            }
        }, {
            key: "z",
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this._onChangeCallback()
            }
        }, {
            key: "order",
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t,
                this._onChangeCallback()
            }
        }]),
        t
    }();
    function Br() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
            var e = 16 * Math.random() | 0;
            return ("x" === t ? e : 3 & e | 8).toString(16)
        }
        ))
    }
    Lr.DefaultOrder = "XYZ";
    var kr = function(t) {
        return 180 * t / Math.PI
    }
      , Ur = function(t) {
        function e() {
            var n;
            return (n = t.call(this) || this).isObject3D = !0,
            n.uuid = Br(),
            n.name = "",
            n.parent = null,
            n.children = [],
            n.visible = !0,
            n.position = Ft(),
            n.rotation = new Lr,
            n.scale = Vt(1, 1, 1),
            n.quaternion = Zn(),
            n.up = jt(e.DefaultUp),
            n.modelMatrix = Pe(),
            n.worldMatrix = Pe(),
            n.modelMatrixNeedUpdate = !1,
            n.worldMatrixNeedsUpdate = !1,
            n.rotation.onChange((function() {
                n.modelMatrixNeedUpdate = !0
            }
            )),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.rotateX = function(t) {
            this.rotation.x = t
        }
        ,
        n.rotateY = function(t) {
            this.rotation.y = t
        }
        ,
        n.rotateZ = function(t) {
            this.rotation.z = t
        }
        ,
        n.translate = function(t, e, n) {
            var r = Vt(t, e, n);
            return this.position = Wt(this.position, this.position, r),
            this.modelMatrixNeedUpdate = !0,
            this
        }
        ,
        n.setPosition = function(t, e, n) {
            var r = Vt(t, e, n);
            return ue(this.position, r) || (this.position = r,
            this.modelMatrixNeedUpdate = !0),
            this
        }
        ,
        n.lookAt = function(t, e, n) {
            var r = this.up
              , i = this.position
              , o = Vt(t, e, n)
              , a = en(Pe(), i, o, r)
              , s = Ze(Zn(), a)
              , u = Ir(Ft(), s);
            this.rotation.set(kr(u[0]), kr(u[1]), kr(u[2]))
        }
        ,
        n.setVisible = function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            if (this.visible !== t && (this.visible = t,
            e))
                for (var n = 0, r = this.children.length; n < r; n++)
                    this.children[n].setVisible(t, e)
        }
        ,
        n.setScale = function(t, e, n) {
            var r = Vt(t, e, n);
            return ue(this.scale, r) || (this.scale = r,
            this.modelMatrixNeedUpdate = !0),
            this
        }
        ,
        n.updateMatrix = function() {
            Ie(this.modelMatrix),
            qn(this.quaternion),
            tr(this.quaternion, this.rotation.x, this.rotation.y, this.rotation.z),
            qe(this.modelMatrix, this.quaternion, this.position, this.scale),
            this.modelMatrixNeedUpdate = !1,
            this.worldMatrixNeedsUpdate = !0
        }
        ,
        n.updateWorldMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 !== this.modelMatrixNeedUpdate && !0 !== t || this.updateMatrix(),
            !0 === this.worldMatrixNeedsUpdate && (this.parent ? Ue(this.worldMatrix, this.parent.worldMatrix, this.modelMatrix) : Oe(this.worldMatrix, this.modelMatrix),
            this.worldMatrixNeedsUpdate = !1,
            t = !0);
            for (var e = 0, n = this.children.length; e < n; e++)
                this.children[e].updateWorldMatrix(t)
        }
        ,
        n.add = function(t) {
            if (t === this)
                return console.error("object3D.add: object can't be added as a child of itself. ==> ".concat(t)),
                this;
            if (t instanceof Array) {
                for (var e = 0, n = t.length; e < n; e++)
                    this.add(t[e]);
                return this
            }
            return t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
            t.parent = this,
            this.children.push(t)) : console.error("Object3D.add: object not an instance of Object3D.", t),
            this
        }
        ,
        n.remove = function(t) {
            if (t instanceof Array) {
                for (var e = 0, n = t.length; e < n; e++)
                    this.remove(t[e]);
                return this
            }
            var r = this.children.indexOf(t);
            return -1 !== r && (t.parent = null,
            this.children.splice(r, 1)),
            this
        }
        ,
        n.traverse = function(t) {
            t(this),
            this.children && this.children.length > 0 && this.children.forEach((function(e) {
                e.traverse(t)
            }
            ))
        }
        ,
        n.clone = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
              , n = new e;
            if (n.up = jt(this.up),
            n.scale = jt(this.scale),
            n.position = jt(this.position),
            n.rotation = this.rotation.clone(),
            n.quaternion = sr(this.quaternion),
            n.modelMatrix = De(this.modelMatrix),
            n.worldMatrix = De(this.worldMatrix),
            n.visible = this.visible,
            this.children.length && t)
                for (var r = 0, i = this.children.length; r < i; r++)
                    n.add(this.children[r].clone());
            return n
        }
        ,
        n.raycast = function(t) {
            return null
        }
        ,
        e
    }(Or);
    Ur.DefaultUp = Vt(0, 1, 0);
    var Nr = function() {
        function t(t, e) {
            this.isBox = !0,
            this.min = void 0,
            this.max = void 0,
            this.min = void 0 !== t ? t : Vt(1 / 0, 1 / 0, 1 / 0),
            this.max = void 0 !== e ? e : Vt(-1 / 0, -1 / 0, -1 / 0)
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            return Gt(this.min, t),
            Gt(this.max, e),
            this
        }
        ,
        e.setFromBufferAttribute = function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = t.array, u = t.count, h = t.itemSize, c = 0; c < u; c++) {
                var l = s[c * h]
                  , f = s[c * h + 1]
                  , d = s[c * h + 2];
                l < e && (e = l),
                f < n && (n = f),
                d < r && (r = d),
                l > i && (i = l),
                f > o && (o = f),
                d > a && (a = d)
            }
            var p = Vt(e, n, r)
              , v = Vt(i, o, a);
            return this.set(p, v),
            this
        }
        ,
        e.getCenter = function() {
            return this.isInvalid() ? Ft() : Vt((this.max[0] + this.min[0]) / 2, (this.max[1] + this.min[1]) / 2, (this.max[2] + this.min[2]) / 2)
        }
        ,
        e.isInvalid = function() {
            return this.max[0] < this.min[0] || this.max[1] < this.min[1] || this.max[2] < this.min[2]
        }
        ,
        t
    }()
      , Fr = function() {
        function t(e, n, r) {
            var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            if (this.isBufferAttribute = !0,
            this.name = "",
            this.type = void 0,
            this.array = void 0,
            this.itemSize = void 0,
            this.count = void 0,
            this.normalized = void 0,
            this.usage = void 0,
            this.needUpdate = void 0,
            Array.isArray(e))
                throw new TypeError("BufferAttribute: array should be a Typed Array.");
            if (this.name = "BufferAttribute",
            this.array = e,
            this.itemSize = n,
            this.count = void 0 !== e ? e.length / n : 0,
            this.normalized = !0 === i,
            this.usage = 35044,
            this.needUpdate = !0,
            void 0 === r) {
                var o = this.array;
                this.type = t.FLOAT,
                o instanceof Int8Array ? this.type = t.BYTE : o instanceof Uint8Array ? this.type = t.UNSIGNED_BYTE : o instanceof Int16Array ? this.type = t.SHORT : o instanceof Uint16Array ? this.type = t.UNSIGNED_SHORT : o instanceof Int32Array ? this.type = t.INT : o instanceof Uint32Array && (this.type = t.UNSIGNED_INT)
            } else
                this.type = r
        }
        t.isBufferAttribute = function(e) {
            var n = !1;
            return e && e instanceof t && (n = !0),
            n
        }
        ;
        var e = t.prototype;
        return e.setUsage = function(t) {
            return this.usage = t,
            this
        }
        ,
        e.setArray = function(t) {
            return this.array.set(t),
            this
        }
        ,
        t
    }();
    Fr.BYTE = 5120,
    Fr.UNSIGNED_BYTE = 5121,
    Fr.SHORT = 5122,
    Fr.UNSIGNED_SHORT = 5123,
    Fr.INT = 5124,
    Fr.UNSIGNED_INT = 5125,
    Fr.FLOAT = 5126;
    var jr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint8Array(e), n, r, i) || this).name = "Uint8BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Fr)
      , zr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint16Array(e), n, r, i) || this).name = "Uint16BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Fr)
      , Vr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint32Array(e), n, r, i) || this).name = "Uint32BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Fr)
      , Gr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Float32Array(e), n, r, i) || this).name = "Float32ArrayAttribute",
            o
        }
        return c(e, t),
        e
    }(Fr)
      , Wr = function(t) {
        function e(e, n, r, i) {
            var o;
            if (Array.isArray(e)) {
                var a = function(t) {
                    for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)
                        n > (e = t[i]) && (n = e),
                        r < e && (r = e);
                    return {
                        min: n,
                        max: r
                    }
                }(e);
                o = new (a.max > 65535 ? Uint32Array : Uint16Array)(e)
            } else
                o = e;
            return t.call(this, o, n, r, i) || this
        }
        return c(e, t),
        e
    }(Fr)
      , Hr = 0
      , Zr = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).id = Hr++,
            e.uuid = Br(),
            e.name = "",
            e.type = "BufferGeometry",
            e.indexes = null,
            e.attributes = {},
            e.__webglInit = !1,
            e.groupsNeedUpdate = !1,
            e.boundingBox = null,
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.getIndexes = function() {
            return this.indexes
        }
        ,
        n.getCenter = function() {
            return this.computeBoundingBox(),
            this.boundingBox ? this.boundingBox.getCenter() : void 0
        }
        ,
        n.setIndexes = function(t) {
            return Array.isArray(t) || ArrayBuffer.isView(t) ? this.indexes = new Wr(t,1) : Wr.isBufferAttribute(t) && (this.indexes = t),
            this
        }
        ,
        n.getAttribute = function(t) {
            return t ? this.attributes[t] : this.attributes
        }
        ,
        n.setAttribute = function(t, e) {
            return t && Fr.isBufferAttribute(e) && (this.attributes[t] = e),
            this
        }
        ,
        n.deleteAttribute = function(t) {
            return this.attributes[t] && delete this.attributes[t],
            this
        }
        ,
        n.computeBoundingBox = function() {
            null === this.boundingBox && (this.boundingBox = new Nr);
            var t = this.attributes.position;
            t && t.isBufferAttribute && this.boundingBox.setFromBufferAttribute(t)
        }
        ,
        e
    }(Or)
      , qr = new be
      , Yr = new be
      , Xr = new be
      , Kr = function(t) {
        function e(e, n) {
            var r;
            return (r = t.call(this) || this).type = "Mesh",
            r.geometry = void 0,
            r.material = void 0,
            r.materialChanged = void 0,
            r.__webglInit = !1,
            r.geometry = void 0 !== e ? e : new Zr,
            r.material = void 0 !== n ? n : null,
            r.materialChanged = !1,
            r
        }
        c(e, t);
        var n = e.prototype;
        return n.updateMaterial = function(t) {
            this.material && t.isMaterial && t.uuid !== this.material.uuid && (this.material = t,
            this.materialChanged = !0)
        }
        ,
        n.raycast = function(t) {
            var e = this.geometry
              , n = e.indexes && e.indexes.array
              , r = e.attributes.position.array;
            if (!n)
                return null;
            for (var i = 0; i < n.length; i += 3) {
                var o = 3 * n[i]
                  , a = 3 * n[i + 1]
                  , s = 3 * n[i + 2]
                  , u = qr.set(r[o], r[o + 1], r[o + 2]).transform(this.worldMatrix)
                  , h = Yr.set(r[a], r[a + 1], r[a + 2]).transform(this.worldMatrix)
                  , c = Xr.set(r[s], r[s + 1], r[s + 2]).transform(this.worldMatrix)
                  , l = t.intersectTriangle(u, h, c);
                if (l)
                    return {
                        distance: l.distance,
                        point: l.point,
                        object: this
                    }
            }
            return null
        }
        ,
        e
    }(Ur)
      , Qr = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).type = "Scene",
            e.isScene = !0,
            e.autoUpdate = !0,
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.updateWorldMatrix = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 === this.autoUpdate && t.prototype.updateWorldMatrix.call(this, e)
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e),
            t.prototype.clone.call(this, n),
            n.autoUpdate = this.autoUpdate,
            n
        }
        ,
        e
    }(Ur)
      , Jr = function(t) {
        function e() {
            var e;
            return (e = t.call(this) || this).type = "Geometry",
            e.vertices = [],
            e.verticesBufferData = new Float32Array,
            e.indicesBufferData = new Uint16Array,
            e.uvtsBufferData = new Float32Array,
            e.groupsNeedUpdate = !1,
            e
        }
        return c(e, t),
        e
    }(Or)
      , $r = new be
      , ti = new be
      , ei = new be
      , ni = new be
      , ri = new be
      , ii = function() {
        function t(t, e) {
            this.origin = void 0,
            this.direction = void 0,
            this.origin = t || new be,
            this.direction = e || new be(0,0,-1)
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            return this.origin.copy(t),
            this.direction.copy(e),
            this
        }
        ,
        e.setFromCamera = function(t, e) {
            var n = new be(e.position[0],e.position[1],e.position[2])
              , r = (new Vn).fromArray(e.projectionMatrix)
              , i = e.worldMatrix
              , o = new Me(t[0],t[1],.5,1).transform(r).transform(i)
              , a = o.x
              , s = o.y
              , u = o.z
              , h = new be(a,s,u).sub(n).normalize();
            this.set(n, h)
        }
        ,
        e.getPointByLen = function(t, e) {
            var n = void 0 !== e ? e : new be;
            return n.copy(this.direction),
            n.scale(t),
            n.add(this.origin),
            n
        }
        ,
        e.intersectTriangle_Old = function(t, e, n) {
            var r, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = arguments.length > 4 ? arguments[4] : void 0, a = $r.copy(e).subtract(t), s = ti.copy(n).subtract(t), u = ei.copy(a).cross(s), h = ni.copy(this.origin).subtract(t), c = this.direction.dot(u);
            if (0 < c) {
                if (i)
                    return null;
                r = 1
            } else {
                if (!(0 > c))
                    return null;
                r = -1,
                c = -c
            }
            s.copy((new be).copy(h).cross(s));
            var l = r * this.direction.dot(s);
            if (0 > l)
                return null;
            var f = r * this.direction.dot((new be).copy(h).cross(a));
            if (0 > f)
                return null;
            if (l + f > c)
                return null;
            var d = -r * h.dot(u);
            return 0 > d ? null : this.getPointByLen(d / c, o)
        }
        ,
        e.intersectTriangle = function(t, e, n) {
            var r = arguments.length > 4 ? arguments[4] : void 0
              , i = 1e-6
              , o = $r.subVectors(e, t)
              , a = ti.subVectors(n, t)
              , s = ei.copy(this.direction).cross(a)
              , u = o.dot(s);
            if (u > -i && u < i)
                return null;
            var h = 1 / u
              , c = ni.subVectors(this.origin, t)
              , l = h * c.dot(s);
            if (l < 0 || l > 1)
                return null;
            var f = ri.copy(c).cross(o)
              , d = h * this.direction.dot(f);
            if (d < 0 || l + d > 1)
                return null;
            var p = a.dot(f) * h;
            return p > i ? {
                distance: p,
                point: this.getPointByLen(p, r)
            } : null
        }
        ,
        e.intersectSphere = function(t, e, n) {
            var r = (new be).subtract(t, this.origin)
              , i = r.dot(this.direction)
              , o = r.dot(r) - i * i
              , a = e * e;
            if (o > a)
                return null;
            var s = Math.sqrt(a - o)
              , u = i - s
              , h = i + s;
            return 0 > u && 0 > h ? null : 0 > u ? this.getPointByLen(h, n) : this.getPointByLen(u, n)
        }
        ,
        t
    }();
    function oi(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return ai(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return ai(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function ai(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var si = function() {
        function t(t, e, n, r) {
            this.ray = void 0,
            this.near = void 0,
            this.far = void 0,
            this.ray = new ii(t,e),
            this.near = n || 0,
            this.far = r || 1 / 0
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            this.ray.set(t, e)
        }
        ,
        e.setFromCamera = function(t, e) {
            var n = new be(e.position[0],e.position[1],e.position[2])
              , r = (new Vn).fromArray(e.projectionMatrix).invert()
              , i = e.worldMatrix
              , o = new Me(t[0],t[1],.5,1).transform(r).transform(i)
              , a = o.x
              , s = o.y
              , u = o.z
              , h = new be(a,s,u).sub(n).normalize();
            this.set(n, h)
        }
        ,
        e.pick = function(t) {
            var e, n = this.ray, r = [], i = oi([].concat(t));
            try {
                for (i.s(); !(e = i.n()).done; ) {
                    var o = e.value.raycast(n);
                    o && r.push(o)
                }
            } catch (t) {
                i.e(t)
            } finally {
                i.f()
            }
            return r.sort((function(t, e) {
                return t.distance - e.distance
            }
            )),
            r
        }
        ,
        t
    }()
      , ui = function(t) {
        function e(n) {
            var r;
            return (r = t.call(this) || this).image = void 0,
            r.flipY = !0,
            r.premultiplyAlpha = !1,
            r.needsUpdate = !0,
            r.glTexture = null,
            r.isTexture = !0,
            r.gl = null,
            r.__textureInit = !1,
            r.clone = function(t) {
                return void 0 === t && (t = new e),
                t.image = r.image,
                t.flipY = r.flipY,
                t
            }
            ,
            r.destory = function() {
                r.emit("destory", r.glTexture)
            }
            ,
            r.destoryTexture = function() {
                r.glTexture && r.gl && (r.off("destory", r.destoryTexture),
                r.gl.deleteTexture(r.glTexture))
            }
            ,
            void 0 !== n && (r.image = n),
            r
        }
        return c(e, t),
        e.prototype.init = function(t) {
            !0 !== this.__textureInit && (this.gl = t,
            this.glTexture = t.createTexture(),
            this.on("destory", this.destoryTexture),
            this.__textureInit = !0)
        }
        ,
        e
    }(Or)
      , hi = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this) || this).isCube = !0,
            n.image = e || [],
            n.flipY = !1,
            n
        }
        return c(e, t),
        e
    }(ui)
      , ci = function() {
        function t(t, e, n) {
            var r = this;
            this.gl = void 0,
            this.maxTextureSize = void 0,
            this.maxTextures = void 0,
            this.usedTextureUnits = 0,
            this.getTextureUnit = function() {
                var t = r.usedTextureUnits;
                return r.usedTextureUnits >= r.maxTextures ? r.usedTextureUnits = 0 : r.usedTextureUnits += 1,
                t
            }
            ,
            this.resetUsedTextureUnits = function() {
                r.usedTextureUnits = 0
            }
            ,
            this.setTexture = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                if (t instanceof hi)
                    r.setCubeTexture(t, e);
                else {
                    var n = r.gl;
                    n.activeTexture(n.TEXTURE0 + e),
                    t.needsUpdate ? (t.init(n),
                    r.uploadTexture(n, t)) : n.bindTexture(n.TEXTURE_2D, t.glTexture)
                }
            }
            ,
            this.setTextureForRenderTarget = function(t) {
                var e = r.gl;
                t.glTexture = e.createTexture(),
                e.bindTexture(e.TEXTURE_2D, t.glTexture),
                e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY),
                e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha),
                r.setTextureParameter(e);
                var n = e.RGBA
                  , i = e.RGBA
                  , o = e.UNSIGNED_BYTE;
                e.texImage2D(e.TEXTURE_2D, 0, n, t.width, t.height, 0, i, o, null)
            }
            ,
            this.uploadTexture = function(t, e) {
                e.init(t),
                t.bindTexture(t.TEXTURE_2D, e.glTexture),
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY),
                t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha),
                r.setTextureParameter(t),
                t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, e.image),
                e.needsUpdate = !1
            }
            ,
            this.setTextureParameter = function(t) {
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.LINEAR),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.LINEAR)
            }
            ,
            this.gl = t,
            this.maxTextureSize = n,
            this.maxTextures = e
        }
        return t.prototype.setCubeTexture = function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = t.image;
            if (6 !== n.length)
                throw new Error("[setCubeTexture] CubeTexture need six images, but get\n                ".concat(n.length, "\n            "));
            var r = this.gl;
            if (t.needsUpdate) {
                t.init(r),
                r.activeTexture(r.TEXTURE0 + e),
                r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture),
                r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, t.flipY),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MAG_FILTER, r.LINEAR),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MIN_FILTER, r.LINEAR),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE);
                for (var i = 0; i < 6; i++) {
                    var o = n[i];
                    r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, r.RGBA, r.RGBA, r.UNSIGNED_BYTE, o)
                }
                t.needsUpdate = !1
            } else
                r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture)
        }
        ,
        t
    }()
      , li = n((function(t) {
        t.exports = function(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var n = 0, r = new Array(e); n < e; n++)
                r[n] = t[n];
            return r
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(li);
    var fi = n((function(t) {
        t.exports = function(t) {
            if (Array.isArray(t))
                return li(t)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(fi);
    var di = n((function(t) {
        t.exports = function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"])
                return Array.from(t)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(di);
    var pi = n((function(t) {
        t.exports = function(t, e) {
            if (t) {
                if ("string" == typeof t)
                    return li(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                return "Object" === n && t.constructor && (n = t.constructor.name),
                "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? li(t, e) : void 0
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(pi);
    var vi = n((function(t) {
        t.exports = function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(vi);
    var mi = e(n((function(t) {
        t.exports = function(t) {
            return fi(t) || di(t) || pi(t) || vi()
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , gi = n((function(t) {
        t.exports = function(t) {
            if (Array.isArray(t))
                return t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(gi);
    var yi = n((function(t) {
        t.exports = function(t, e) {
            var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (null != n) {
                var r, i, o = [], a = !0, s = !1;
                try {
                    for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value),
                    !e || o.length !== e); a = !0)
                        ;
                } catch (t) {
                    s = !0,
                    i = t
                } finally {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (s)
                            throw i
                    }
                }
                return o
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(yi);
    var _i = n((function(t) {
        t.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(_i);
    var xi = e(n((function(t) {
        t.exports = function(t, e) {
            return gi(t) || yi(t, e) || pi(t, e) || _i()
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , bi = function(t, e, n) {
        if (t && e && e.length)
            for (var r = e.length, i = 0; i < r; i++) {
                var o = void 0
                  , a = void 0
                  , s = void 0
                  , u = e[i]
                  , h = xi(u, 2)
                  , c = h[0]
                  , l = h[1]
                  , f = c.type
                  , d = c.value;
                switch (c.type) {
                case "1i":
                case "1f":
                    t["uniform".concat(f)](l, c.value);
                    break;
                case "2f":
                case "3f":
                case "4f":
                    t["uniform".concat(f)].apply(t, [l].concat(mi(d)));
                    break;
                case "t":
                    if (!(o = c.value) || !o.image && !o.glTexture)
                        break;
                    a = n.getTextureUnit(),
                    t.uniform1i(l, a),
                    n.setTexture(o, a);
                    break;
                case "tv":
                    s = [];
                    for (var p = c.value, v = 0, m = p.length; v < m; v++)
                        s[v] = n.getTextureUnit();
                    t.uniform1iv(l, s);
                    for (var g = 0, y = p.length; g < y; g++)
                        (o = p[g]) && (o.image || o.glTexture) && (a = s[g],
                        n.setTexture(o, a));
                    break;
                case "mat4fv":
                    t.uniformMatrix4fv(l, !1, c.value);
                    break;
                default:
                    console.warn("[UniformOperation] Unknown uniform type: ".concat(f))
                }
            }
    };
    var Mi = "\nvoid main() {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n}\n"
      , wi = "\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"
      , Ei = 0
      , Ti = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).isMaterial = !0,
            e.id = Ei++,
            e.type = "Material",
            e.name = "",
            e.uuid = Br(),
            e.uniforms = {},
            e.vertexShader = Mi,
            e.fragmentShader = wi,
            e.program = null,
            e.depthTest = !0,
            e.visible = !0,
            e.opacity = 1,
            e.needsUpdate = !0,
            e.uniformsList = [],
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.setValues = function(t) {
            if (void 0 !== t)
                for (var e in t)
                    if (Object.prototype.hasOwnProperty.call(t, e)) {
                        var n = t[e];
                        if (void 0 === n) {
                            console.warn("Material: '" + e + "' parameter is undefined.");
                            continue
                        }
                        if (void 0 === this[e]) {
                            console.warn("".concat(this.type, ": ").concat(e, " is not a property of this material."));
                            continue
                        }
                        var r = "set" + e.charAt(0).toUpperCase() + e.slice(1);
                        "function" == typeof this[r] ? this[r](n) : this[e] = n
                    }
        }
        ,
        n.clone = function() {
            return (new e).copy(this)
        }
        ,
        n.copy = function(t) {
            return this.uniforms = function(t) {
                var e, n = {};
                for (var r in t)
                    if (Object.prototype.hasOwnProperty.call(t, r))
                        for (var i in n[r] = {},
                        t[r])
                            Object.prototype.hasOwnProperty.call(t[r], i) && ((e = t[r][i]) && e.isTexture ? n[r][i] = e.clone() : n[r][i] = e instanceof Array ? e.slice(0) : e);
                return n
            }(t.uniforms),
            this.depthTest = t.depthTest,
            this.visible = t.visible,
            this.fragmentShader = t.fragmentShader,
            this.vertexShader = t.vertexShader,
            this
        }
        ,
        o(e, [{
            key: "defines",
            get: function() {
                return ""
            }
        }]),
        e
    }(Or)
      , Ai = {
        useColor: "USE_COLOR",
        useUV: "NEED_UV"
    }
      , Ci = function() {
        function t() {
            this.useColor = !1,
            this.useUV = !1
        }
        return t.prototype.getDefines = function() {
            for (var t = [], e = 0, n = Object.keys(this); e < n.length; e++) {
                var r = n[e];
                Ai[r] && !0 === this[r] && t.push("#define ".concat(Ai[r]))
            }
            return t.push(""),
            t.join("\n")
        }
        ,
        t
    }()
      , Ri = "\n#ifdef NEED_UV\n    varying vec2 vUV;\n#endif\nvoid main(void) {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n    #ifdef NEED_UV\n        vUV = uv;\n    #endif\n}\n"
      , Si = "\nprecision mediump float;\n#ifdef NEED_UV\n    varying vec2 vUV;\n    uniform sampler2D uSampler;\n#endif\n#ifdef USE_COLOR\n    uniform vec4 uColor;\n#endif\nuniform float uOpacity;\nvoid main(void) {\n    vec4 finalColor;\n    vec4 defaultColor = vec4(1.0, 0.0, 0.0, 1.0);\n    finalColor = defaultColor;\n    #ifdef USE_COLOR\n        finalColor = uColor;\n    #endif\n    #ifdef NEED_UV\n        finalColor = texture2D(uSampler, vUV);\n    #endif\n    gl_FragColor = vec4(finalColor.rgb, finalColor.a * uOpacity);\n}\n"
      , Pi = function(t) {
        function e() {
            var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return (e = t.call(this) || this).map = null,
            e.color = [1, 0, 0, 1],
            e.type = "BasicMaterial",
            e.opacity = 1,
            e.depthTest = !0,
            e.vertexShader = Ri,
            e.fragmentShader = Si,
            e.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                },
                uColor: {
                    type: "4f",
                    value: [1, 0, 0, 1]
                },
                uOpacity: {
                    type: "1f",
                    value: e.opacity
                }
            },
            e.setValues(n),
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.setOpacity = function(t) {
            this.uniforms.uOpacity.value = t,
            this.opacity = t
        }
        ,
        n.setColor = function(t) {
            !Array.isArray(t) || t.length < 4 || (this.uniforms.uColor.value = t,
            this.color = t)
        }
        ,
        n.setMap = function(t) {
            var e = this;
            t && (t instanceof Promise ? t.then((function(t) {
                e.uniforms.uSampler.value = t instanceof ui == !0 ? t : new ui(t)
            }
            )).catch((function(t) {
                return console.error(t)
            }
            )) : !0 === t.isTexture && (this.uniforms.uSampler.value = t),
            this.map = t)
        }
        ,
        o(e, [{
            key: "defines",
            get: function() {
                var t = new Ci;
                return t.useColor = !!this.color,
                t.useUV = !!this.map,
                t.getDefines()
            }
        }]),
        e
    }(Ti)
      , Di = function(t) {
        var e = this;
        this.gl = void 0,
        this.newAttributes = new Uint8Array(16),
        this.enabledAttributes = new Uint8Array(16),
        this.currentDepthTest = !1,
        this.currentDepthWrite = !0,
        this.currentColorWrite = !0,
        this.currentDoubleSided = !1,
        this.currentFlipSided = !1,
        this.initAttributes = function() {
            for (var t = 0, n = e.newAttributes.length; t < n; t++)
                e.newAttributes[t] = 0
        }
        ,
        this.enableAttribute = function(t) {
            var n = e.gl
              , r = e.newAttributes
              , i = e.enabledAttributes;
            r[t] = 1,
            0 === i[t] && (n.enableVertexAttribArray(t),
            i[t] = 1)
        }
        ,
        this.disableAttribute = function(t) {
            var n = e.gl
              , r = e.newAttributes
              , i = e.enabledAttributes;
            r[t] = 0,
            1 === i[t] && (n.disableVertexAttribArray(t),
            i[t] = 0)
        }
        ,
        this.disableUnusedAttributes = function() {
            for (var t = e.gl, n = e.newAttributes, r = e.enabledAttributes, i = 0, o = r.length; i < o; i++)
                r[i] !== n[i] && (t.disableVertexAttribArray(i),
                r[i] = 0)
        }
        ,
        this.setDepthTest = function(t) {
            var n = e.gl;
            e.currentDepthTest !== t && (t ? n.enable(n.DEPTH_TEST) : n.disable(n.DEPTH_TEST),
            e.currentDepthTest = t)
        }
        ,
        this.setDepthWrite = function(t) {
            var n = e.gl;
            e.currentDepthWrite !== t && (n.depthMask(t),
            e.currentDepthWrite = t)
        }
        ,
        this.setColorWrite = function(t) {
            var n = e.gl;
            e.currentColorWrite !== t && (n.colorMask(t, t, t, t),
            e.currentColorWrite = t)
        }
        ,
        this.setDefaultGLState = function(t, n, r, i) {
            var o = e.gl;
            o.clearColor(229 / 255, 227 / 255, 223 / 255, 1),
            o.clear(o.COLOR_BUFFER_BIT | o.DEPTH_BUFFER_BIT),
            o.clearDepth(1),
            o.clearStencil(0),
            o.disable(o.DEPTH_TEST),
            o.depthFunc(o.LEQUAL),
            o.frontFace(o.CCW),
            o.disable(o.CULL_FACE),
            o.depthMask(!0),
            o.enable(o.BLEND),
            o.blendFunc(o.SRC_ALPHA, o.ONE_MINUS_SRC_ALPHA),
            o.viewport(t, n, r, i)
        }
        ,
        this.setDoubleSided = function(t) {
            var n = e.gl;
            e.currentDoubleSided !== t && (t ? n.disable(n.CULL_FACE) : n.enable(n.CULL_FACE),
            e.currentDoubleSided = t)
        }
        ,
        this.setFlipSided = function(t) {
            var n = e.gl;
            e.currentFlipSided !== t && (t ? n.frontFace(n.CW) : n.frontFace(n.CCW),
            e.currentFlipSided = t)
        }
        ,
        this.reset = function() {
            for (var t = e.enabledAttributes, n = 0; n < t.length; n++)
                t[n] = 0;
            e.currentDepthTest = !1,
            e.currentDepthWrite = !0,
            e.currentColorWrite = !0,
            e.currentDoubleSided = !1,
            e.currentFlipSided = !1
        }
        ,
        this.gl = t
    }
      , Oi = function(t) {
        var e = this;
        this.maxTextures = void 0,
        this.maxTextureSize = void 0,
        this.maxVerticesOneDraw = void 0,
        this.maxVertexShaderTextureUnits = void 0,
        this.maxFragmentShaderTextureUnits = void 0,
        this.gl = void 0,
        this.getMaxTextures = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getLineWidthRange = function() {
            var t = e.gl;
            return t.getParameter(t.ALIASED_LINE_WIDTH_RANGE)
        }
        ,
        this.getMaxVertexShaderTextureUnits = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getMaxFragmentShaderTextureUnits = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getMaxTextureSize = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_TEXTURE_SIZE)
        }
        ,
        this.getMaxVerticesOneDraw = function() {
            return e.gl.getExtension("OES_element_index_uint") ? 4294967296 : 65535
        }
        ,
        this.getLegalPrecision = function(t) {
            var n = e.gl
              , r = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT)
              , i = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT)
              , o = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT)
              , a = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT)
              , s = r && o && r.precision > 0 && o.precision > 0
              , u = i && a && i.precision > 0 && a.precision > 0;
            return "highp" !== t || s ? "mediump" !== t || u || (t = "lowp",
            console.warn("[WebGLCapability] mediump is not supported, using lowp by default.")) : u ? (t = "mediump",
            console.warn("[WebGLCapability] highp is not supported, using mediump by default.")) : (t = "lowp",
            console.warn("[WebGLCapability] highp and mediump is not supported, using lowp by default.")),
            t
        }
        ,
        this.gl = t,
        this.maxTextures = this.getMaxTextures(),
        this.maxVertexShaderTextureUnits = this.getMaxVertexShaderTextureUnits(),
        this.maxFragmentShaderTextureUnits = this.getMaxFragmentShaderTextureUnits(),
        this.maxTextureSize = this.getMaxTextureSize(),
        this.maxVerticesOneDraw = this.getMaxVerticesOneDraw()
    }
      , Ii = 0
      , Li = function(t, e, n) {
        var r = t.createShader(n);
        if (!r)
            throw new Error("Something went wrong while compile the shader.");
        return t.shaderSource(r, e),
        t.compileShader(r),
        t.getShaderParameter(r, t.COMPILE_STATUS) || console.error("Error compiling shader: ".concat(t.getShaderInfoLog(r))),
        r
    }
      , Bi = function() {
        function t(t, e, n) {
            this.usedTimes = void 0,
            this.id = void 0,
            this.code = void 0,
            this.program = void 0,
            this.attributes = void 0,
            this.uniforms = void 0,
            this.gl = void 0,
            this.parameters = void 0,
            this.precision = void 0,
            this.gl = t,
            this.parameters = e,
            this.precision = n.precision || "highp",
            this.usedTimes = 1,
            this.id = Ii++;
            var r = e.defines
              , i = void 0 === r ? "" : r
              , o = e.vertexShader
              , a = e.fragmentShader;
            this.code = i + o + a,
            this.program = this.createProgram(t, e, this.precision),
            this.attributes = this.fetchAttributes(t, this.program),
            this.uniforms = function(t, e) {
                var n, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], i = {}, o = r.length;
                if (!o)
                    return i;
                for (var a = 0; a < o; a++)
                    i[n = r[a]] = t.getUniformLocation(e, n);
                return i
            }(t, this.program, this.getFullUniforms(e.uniforms))
        }
        var e = t.prototype;
        return e.getAttributes = function() {
            return this.attributes
        }
        ,
        e.getUniforms = function() {
            return this.uniforms
        }
        ,
        e.createProgram = function(t, e) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "highp"
              , r = e.vertexShader
              , i = e.fragmentShader
              , o = e.defines
              , a = void 0 === o ? "" : o
              , s = ["precision ".concat(n, " float;"), "uniform mat4 modelMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat4 mvpMatrix;", "attribute vec3 position;", "attribute vec2 uv;", ""].join("\n")
              , u = t.createProgram()
              , h = ["precision ".concat(n, " float;"), ""].join("\n")
              , c = Li(t, s + a + r, t.VERTEX_SHADER)
              , l = Li(t, h + a + i, t.FRAGMENT_SHADER);
            if (!u)
                throw new Error("Something went wrong while createProgram.");
            return t.attachShader(u, c),
            t.attachShader(u, l),
            t.linkProgram(u),
            u
        }
        ,
        e.fetchAttributes = function(t, e) {
            for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
                var o = t.getActiveAttrib(e, i);
                if (!o)
                    throw new Error("Something went wrong while getActiveAttrib.");
                var a = o.name;
                n[a] = t.getAttribLocation(e, a)
            }
            return n
        }
        ,
        e.getFullUniforms = function(t) {
            var e = ["mvpMatrix", "modelMatrix", "projectionMatrix", "viewMatrix"];
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && e.push(n);
            return e
        }
        ,
        t
    }()
      , ki = {
        canvas: document.createElement("canvas"),
        context: void 0,
        width: 0,
        height: 0,
        pixelRatio: 1,
        precision: "highp",
        alpha: !1,
        premultipliedAlpha: !0,
        antialias: !0,
        stencil: !0,
        depth: !0,
        preserveDrawingBuffer: !1
    }
      , Ui = function() {
        function t() {
            var t = this
              , e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            this.state = void 0,
            this.domElement = void 0,
            this.capability = void 0,
            this.textureOperation = void 0,
            this._gl = void 0,
            this.parameters = void 0,
            this.programs = void 0,
            this.viewportInfo = void 0,
            this.autoDisposeProgram = !0,
            this.currentCacheState = void 0,
            this.setSize = function(e, n) {
                var r = t.parameters
                  , i = r.canvas
                  , o = r.pixelRatio;
                i.style.width = "".concat(e, "px"),
                i.style.height = "".concat(n, "px"),
                i.width = e * o,
                i.height = n * o,
                t.setViewport(0, 0, e, n)
            }
            ,
            this.setViewport = function(e, n, r, i) {
                var o = t.parameters.pixelRatio
                  , a = t.viewportInfo;
                a.x = e * o,
                a.y = n * o,
                a.width = r * o,
                a.height = i * o,
                t._gl.viewport.apply(t._gl, Object.values(a))
            }
            ,
            this.setClearColor = function(e, n, r) {
                var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                !0 === t.parameters.premultipliedAlpha && (e *= i,
                n *= i,
                r *= i),
                t._gl.clearColor(e, n, r, i)
            }
            ,
            this.getContext = function() {
                return t._gl
            }
            ,
            this.forceContextLoss = function() {
                try {
                    var e = t._gl.getExtension("WEBGL_lose_context");
                    e && e.loseContext()
                } catch (t) {
                    console.error("[WebGLRenderer] WEBGL_lose_context error: ", t)
                }
            }
            ,
            this.initScene = function(e) {
                !0 === e.visible && e.traverse((function(e) {
                    !0 === e.visible && e instanceof Kr && t.initMesh(e)
                }
                ))
            }
            ,
            this.initMesh = function(e) {
                !0 === e.visible && (!0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onObjectRemoved)),
                e.geometry && t.checkAndUpdateGeometry(e.geometry),
                e.children && e.children.length > 0 && e.children.forEach((function(e) {
                    t.initMesh(e)
                }
                )))
            }
            ,
            this.checkAndUpdateGeometry = function(e) {
                !0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onGeometryRemove),
                e.groupsNeedUpdate = !0),
                !0 === e.groupsNeedUpdate && ("BufferGeometry" === e.type ? t.updateBufferGeometry(e) : t.updateGeometryBuffer(e, t._gl.STATIC_DRAW),
                e.groupsNeedUpdate = !1)
            }
            ,
            this.updateGeometryBuffer = function(e, n) {
                var r = e.verticesBufferData
                  , i = e.uvtsBufferData
                  , o = e.indicesBufferData
                  , a = e.borderVerticesBufferData
                  , s = t._gl;
                0 < r.length && (e.glVerticesBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glVerticesBuffer),
                s.bufferData(s.ARRAY_BUFFER, r, n)),
                0 < i.length && (e.glUvtsBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glUvtsBuffer),
                s.bufferData(s.ARRAY_BUFFER, i, n)),
                0 < o.length && (e.glIndicesBuffer = s.createBuffer(),
                s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, e.glIndicesBuffer),
                s.bufferData(s.ELEMENT_ARRAY_BUFFER, o, n)),
                !0 === e.showBorder && void 0 !== a && 0 < a.length && (e.glBorderVerticesBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glBorderVerticesBuffer),
                s.bufferData(s.ARRAY_BUFFER, e.borderVerticesBufferData, n))
            }
            ,
            this.renderScene = function(e, n) {
                !0 === e.visible && e.traverse((function(e) {
                    e instanceof Kr && (t.renderObject(e, n),
                    e.children.length && e.children.forEach((function(e) {
                        t.renderObject(e, n)
                    }
                    )))
                }
                ))
            }
            ,
            this.renderObject = function(e, n) {
                var r = e.material
                  , i = e.geometry;
                if (!0 === e.visible && r && i && !0 === r.visible) {
                    t.state.setDepthTest(r.depthTest);
                    var o = !1
                      , a = t.setProgram(n, r, e);
                    o = "BufferGeometry" === i.type ? t.updateVerticesAttribute2(a, i, !1) : t.updateVerticesAttribute(a, i, !1),
                    t.renderGeometryWithProgram(a, i, r, o)
                }
            }
            ,
            this.setProgram = function(e, n, r) {
                var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]
                  , o = t._gl;
                t.textureOperation.resetUsedTextureUnits(),
                t.checkAndUpdateMaterial(r.material);
                var a = n.program
                  , s = a.getUniforms();
                return a.id !== t.currentCacheState.programId && (o.useProgram(a.program),
                t.currentCacheState.programId = a.id),
                !1 !== i && bi(o, n.uniformsList, t.textureOperation),
                t.updateMVPMatrix(s, e, r),
                a
            }
            ,
            this.checkAndUpdateMaterial = function(e) {
                void 0 !== e && (!0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onMaterialRomove),
                e.needsUpdate = !0),
                !0 === e.needsUpdate && (t.updateMaterial(e),
                e.needsUpdate = !1))
            }
            ,
            this.updateMaterial = function(e) {
                e.program && t.removeMaterial(e);
                for (var n = null, r = t.programs.length, i = e.defines, o = (void 0 === i ? "" : i) + e.vertexShader + e.fragmentShader, a = r - 1; a >= 0; a--) {
                    var s = t.programs[a];
                    if (s.code === o) {
                        (n = s).usedTimes++;
                        break
                    }
                }
                if (null === n) {
                    var u = {
                        uniforms: e.uniforms,
                        defines: e.defines || "",
                        vertexShader: e.vertexShader,
                        fragmentShader: e.fragmentShader
                    };
                    n = new Bi(t._gl,u,{
                        precision: t.parameters.precision
                    }),
                    t.programs.push(n)
                }
                e.program = n,
                e.uniformsList = [];
                var h = 0
                  , c = n.uniforms
                  , l = e.uniforms;
                for (var f in l)
                    if (Object.prototype.hasOwnProperty.call(l, f)) {
                        var d = c[f];
                        d && (e.uniformsList[h] = [l[f], d],
                        h++)
                    }
            }
            ,
            this.updateMVPMatrix = function(e, n, r) {
                if (void 0 !== e.mvpMatrix) {
                    var i = De(n.projectionMatrix);
                    Ue(i, i, n.viewMatrix),
                    Ue(i, i, r.worldMatrix),
                    t._gl.uniformMatrix4fv(e.mvpMatrix, !1, i),
                    t._gl.uniformMatrix4fv(e.modelMatrix, !1, r.worldMatrix),
                    t._gl.uniformMatrix4fv(e.viewMatrix, !1, n.viewMatrix),
                    t._gl.uniformMatrix4fv(e.projectionMatrix, !1, n.projectionMatrix)
                }
                t.currentCacheState.camera = n
            }
            ,
            this.renderGeometryWithProgram = function(e, n, r) {
                var i = t._gl
                  , o = t.currentCacheState.curRenderTarget;
                if (e.uniforms.showDebugLine && i.uniform1i(e.uniforms.showDebugLine, 0),
                "BufferGeometry" === n.type ? i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.indexesBuffer) : i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.glIndicesBuffer),
                null !== o && void 0 !== o.glFrameBuffer) {
                    var a = i.checkFramebufferStatus(i.FRAMEBUFFER);
                    if (i.FRAMEBUFFER_COMPLETE !== a)
                        return t.removeRenderTarget(o),
                        void (t.currentCacheState.curRenderTarget = null)
                }
                n.indexes && n.indexes.count > 0 ? i.drawElements(i.TRIANGLES, n.indexes.count, i.UNSIGNED_SHORT, 0) : i.drawArrays(i.TRIANGLES, 0, n.attributes.position.count)
            }
            ,
            this.onObjectRemoved = function(e) {
                e.target.traverse((function(e) {
                    e.removeEventListener("removed", t.onObjectRemoved),
                    t.removeObject(e)
                }
                ))
            }
            ,
            this.onGeometryRemove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onGeometryRemove),
                t.removeGeometry(n)
            }
            ,
            this.onMaterialRomove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onMaterialRomove),
                t.removeMaterial(n)
            }
            ,
            this.onRenderTargetRemove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onRenderTargetRemove),
                t.removeRenderTarget(n)
            }
            ,
            this.removeObject = function(t) {
                t.geometry && delete t.geometry.__webglInit,
                delete t.__webglInit
            }
            ,
            this.removeGeometry = function(e) {
                delete e.__webglInit,
                t.deleteBuffers(e),
                t.currentCacheState.geometryProgramId = null
            }
            ,
            this.deleteBuffers = function(e) {
                ["glVerticesBuffer", "glUvtsBuffer", "glIndicesBuffer", "glBorderVerticesBuffer"].forEach((function(n) {
                    t._gl.deleteBuffer(e[n]),
                    void 0 !== e[n] && 0 < e[n] && delete e[n]
                }
                ))
            }
            ,
            this.removeMaterial = function(e) {
                var n = e.program.program;
                if (n) {
                    e.program = null;
                    for (var r = t.programs, i = r.length - 1; i >= 0; i--) {
                        var o = r[i];
                        if (o.program === n) {
                            o.usedTimes--,
                            0 === o.usedTimes && !1 !== t.autoDisposeProgram && (r.splice(i, 1),
                            t._gl.deleteProgram(n));
                            break
                        }
                    }
                }
            }
            ,
            this.removeRenderTarget = function(e) {
                t._gl.deleteRenderbuffer(e.glDepthBuffer),
                e.glDepthBuffer = null,
                t._gl.deleteTexture(e.glTexture),
                e.glTexture = null,
                t._gl.deleteFramebuffer(e.glFrameBuffer),
                e.glFrameBuffer = null
            }
            ,
            this.parameters = Object.assign({}, ki, e),
            e && !e.canvas && (this.parameters.canvas = document.createElement("canvas")),
            this.initGL(),
            this.programs = [],
            this.viewportInfo = {
                x: 0,
                y: 0,
                width: this.parameters.canvas.width,
                height: this.parameters.canvas.height
            },
            this.parameters.width && this.parameters.height && this.setSize(this.parameters.width, this.parameters.height),
            this.domElement = this.parameters.canvas,
            this.state = new Di(this._gl),
            this.state.setDefaultGLState.apply(this.state, Object.values(this.viewportInfo)),
            this.currentCacheState = {
                programId: null,
                geometryProgramId: null,
                materialId: null,
                camera: null,
                curRenderTarget: null
            },
            this.capability = new Oi(this._gl);
            var n = this.capability.maxTextures
              , r = this.capability.maxTextureSize;
            this.textureOperation = new ci(this._gl,n,r)
        }
        var e = t.prototype;
        return e.clearBuffer = function() {
            var t = this._gl;
            t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT)
        }
        ,
        e.initGL = function() {
            var t = this
              , e = this.parameters
              , n = e.canvas
              , r = e.context
              , i = e.alpha
              , o = e.depth
              , a = e.stencil
              , s = e.antialias
              , u = e.premultipliedAlpha
              , h = e.preserveDrawingBuffer;
            try {
                var c = {
                    alpha: i,
                    depth: o,
                    stencil: a,
                    antialias: s,
                    premultipliedAlpha: u,
                    preserveDrawingBuffer: h
                }
                  , l = r || n.getContext("webgl", c) || n.getContext("experimental-webgl", c) || n.getContext("moz-webgl", c) || n.getContext("webkit-3d", c);
                if (!l)
                    throw null !== n.getContext ? "Error creating WebGL context with your provided attributes." : "Error creating WebGL context.";
                this._gl = l,
                n.addEventListener("webglcontextlost", (function(e) {
                    e.preventDefault(),
                    void 0 !== t.state && (t.resetGLState(),
                    t.state.setDefaultGLState.apply(t.state, Object.values(t.viewportInfo)))
                }
                ), !1)
            } catch (t) {
                console.error("[WebGLRenderer] Create webgl error: ", t)
            }
        }
        ,
        e.resetGLState = function() {
            this.currentCacheState = {
                programId: null,
                geometryProgramId: null,
                materialId: null,
                camera: null,
                curRenderTarget: null
            },
            this.state.reset()
        }
        ,
        e.setRenderTarget = function(t) {
            var e = this._gl;
            void 0 !== t && null === t.glFrameBuffer && (t.addEventListener("removed", this.onRenderTargetRemove),
            t.glFrameBuffer = e.createFramebuffer(),
            e.bindFramebuffer(e.FRAMEBUFFER, t.glFrameBuffer),
            this.textureOperation.setTextureForRenderTarget(t),
            t.glDepthBuffer = e.createRenderbuffer(),
            e.bindRenderbuffer(e.RENDERBUFFER, t.glDepthBuffer),
            e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, t.width, t.height),
            e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t.glTexture, 0),
            e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t.glDepthBuffer),
            e.bindTexture(e.TEXTURE_2D, null),
            e.bindRenderbuffer(e.RENDERBUFFER, null),
            e.bindFramebuffer(e.FRAMEBUFFER, null))
        }
        ,
        e.render = function(t, e, n) {
            if (e.isCamera) {
                var r = this._gl;
                if (t.updateWorldMatrix(),
                e.updateWorldMatrix(),
                e.updateProjectionMatrix(),
                this.currentCacheState.camera = null,
                void 0 !== n)
                    this.setRenderTarget(n),
                    this.currentCacheState.curRenderTarget = n,
                    r.bindFramebuffer(r.FRAMEBUFFER, n.glFrameBuffer),
                    r.viewport(0, 0, n.width, n.height);
                else {
                    var i = this.viewportInfo
                      , o = i.width
                      , a = i.height;
                    this.currentCacheState.curRenderTarget = null,
                    r.bindFramebuffer(r.FRAMEBUFFER, null),
                    r.viewport(0, 0, o, a)
                }
                this.initScene(t),
                this.renderScene(t, e)
            } else
                console.error("[WebGLRenderer]  Camera is not leagal.")
        }
        ,
        e.updateBufferGeometry = function(t) {
            var e = this._gl
              , n = t.getIndexes()
              , r = t.getAttribute();
            for (var i in r)
                if (Object.prototype.hasOwnProperty.call(r, i)) {
                    var o = i + "Buffer"
                      , a = r[i]
                      , s = a.array
                      , u = a.usage;
                    t[o] = e.createBuffer(),
                    e.bindBuffer(e.ARRAY_BUFFER, t[o]),
                    e.bufferData(e.ARRAY_BUFFER, s, u)
                }
            n && (t.indexesBuffer = e.createBuffer(),
            e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t.indexesBuffer),
            e.bufferData(e.ELEMENT_ARRAY_BUFFER, n.array, n.usage))
        }
        ,
        e.updateVerticesAttribute2 = function(t, e) {
            var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
              , r = this._gl
              , i = !1
              , o = "".concat(e.id, "_").concat(t.id);
            if (o !== this.currentCacheState.geometryProgramId) {
                this.currentCacheState.geometryProgramId = o,
                this.state.initAttributes(),
                i = !0;
                var a = e.getAttribute();
                for (var s in a)
                    if (Object.prototype.hasOwnProperty.call(a, s)) {
                        var u = s + "Buffer"
                          , h = a[s]
                          , c = h.itemSize
                          , l = h.type
                          , f = h.normalized;
                        0 <= t.attributes[s] && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e[u]),
                        r.vertexAttribPointer(t.attributes[s], c, l, f, 0, 0)),
                        this.state.enableAttribute(t.attributes[s]))
                    }
            }
            return this.state.disableUnusedAttributes(),
            i
        }
        ,
        e.updateVerticesAttribute = function(t, e) {
            var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
              , r = this._gl
              , i = !1
              , o = "".concat(e.id, "_").concat(t.id);
            if (o !== this.currentCacheState.geometryProgramId) {
                this.currentCacheState.geometryProgramId = o,
                this.state.initAttributes(),
                i = !0;
                var a = t.getAttributes();
                0 <= a.position && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e.glVerticesBuffer),
                r.vertexAttribPointer(a.position, 3, r.FLOAT, !1, 0, 0)),
                this.state.enableAttribute(a.position)),
                0 <= a.uv && void 0 !== e.glUvtsBuffer && (r.bindBuffer(r.ARRAY_BUFFER, e.glUvtsBuffer),
                r.vertexAttribPointer(a.uv, 2, r.FLOAT, !1, 0, 0),
                this.state.enableAttribute(a.uv))
            }
            return this.state.disableUnusedAttributes(),
            i
        }
        ,
        t
    }()
      , Ni = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            switch ((s = t.call(this) || this).addIntoBuffer = function(t, e, n) {
                t[n] = e[0],
                t[n + 1] = e[1],
                t[n + 2] = e[2]
            }
            ,
            s.get3DVertex = function(t, e) {
                var n;
                switch (e) {
                case "x":
                    n = Vt(0, t[0], t[1]);
                    break;
                case "y":
                    n = Vt(t[0], 0, t[1]);
                    break;
                default:
                    n = Vt(t[0], t[1], 0)
                }
                return n
            }
            ,
            s.zeroAxis = void 0 !== o ? o : "z",
            s.zeroAxis) {
            case "x":
                s.normal = Vt(-1, 0, 0);
                break;
            case "y":
            default:
                s.normal = Vt(0, -1, 0);
                break;
            case "z":
                s.normal = Vt(0, 0, -1)
            }
            a = void 0 !== a ? a : {},
            s.showBorder = !(!1 === a.showBorder),
            s.borderWidth = void 0 !== a.borderWidth ? a.borderWidth : 1,
            s.borderColor = void 0 !== a.borderColor ? a.borderColor : [0, 0, 0, 1];
            var u, h, c, l = .5 * e, f = .5 * n, d = r || 1, p = i || 1, v = e / d, m = n / p, g = (d + 1) * (p + 1);
            s.verticesBufferData = new Float32Array(3 * g),
            s.uvtsBufferData = new Float32Array(2 * g),
            s.indicesBufferData = new (g > 65535 ? Uint32Array : Uint16Array)(d * p * 6);
            for (var y = 0, _ = 0, x = 0; x <= p; x++) {
                u = x * m - f;
                for (var b = 0; b <= d; b++)
                    c = _t(b * v - l, u),
                    h = s.get3DVertex(c, s.zeroAxis),
                    s.vertices.push(h),
                    s.addIntoBuffer(s.verticesBufferData, h, y),
                    s.uvtsBufferData[_] = b / d,
                    s.uvtsBufferData[_ + 1] = 1 - x / p,
                    y += 3,
                    _ += 2
            }
            for (var M, w, E, T, A = 0, C = 0; C < p; C++)
                for (var R = 0; R < d; R++)
                    M = R + (d + 1) * C,
                    w = R + (d + 1) * (C + 1),
                    E = R + 1 + (d + 1) * (C + 1),
                    T = R + 1 + (d + 1) * C,
                    s.addIntoBuffer(s.indicesBufferData, [M, w, E], A),
                    s.addIntoBuffer(s.indicesBufferData, [M, E, T], A + 3),
                    A += 6;
            s.borderIndicesBufferData = new Uint16Array(4),
            s.borderIndicesBufferData[0] = 0,
            s.borderIndicesBufferData[1] = d,
            s.borderIndicesBufferData[2] = (d + 1) * p,
            s.borderIndicesBufferData[3] = (d + 1) * (p + 1) - 1;
            var S = 0;
            s.borderVerticesBufferData = new Float32Array(6 * (d + p));
            for (var P = 0; P < g; P += d + 1)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[P], S),
                S += 3;
            for (var D = (d + 1) * p + 1; D < g; D++)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[D], S),
                S += 3;
            for (var O = (d + 1) * p - 1; O > 0; O -= d + 1)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[O], S),
                S += 3;
            for (var I = d - 1; I > 0; I--)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[I], S),
                S += 3;
            return s
        }
        return c(e, t),
        e
    }(Jr)
      , Fi = "z"
      , ji = function(t) {
        function e(n, r, i, o) {
            var a, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};
            a = t.call(this) || this;
            var u = e.buildPlane(n, r, i, o, s)
              , h = u.uvs
              , c = u.indices
              , l = u.normals
              , f = u.vertices;
            return a.name = "PlaneBufferGeometry",
            a.setAttribute("position", new Gr(f,3)),
            a.setAttribute("normals", new Gr(l,3)),
            a.setAttribute("uv", new Gr(h,2)),
            a.setIndexes(c),
            a
        }
        return c(e, t),
        e.buildPlane = function(t, n, r, i) {
            for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, a = o.normalAxis, s = void 0 === a ? Fi : a, u = o.useBack, h = void 0 !== u && u, c = o.normalDest, l = void 0 === c ? 0 : c, f = .5 * t, d = .5 * n, p = r || 1, v = i || 1, m = t / p, g = n / v, y = e.getNormal(s, h), _ = [], x = [], b = [], M = [], w = 0; w <= v; w++)
                for (var E = w * g - d, T = 0; T <= p; T++) {
                    var A = T * m - f
                      , C = e.get3DVertex([A, E], s, l);
                    b.push.apply(b, mi(C)),
                    _.push(T / p, 1 - w / v),
                    M.push.apply(M, mi(y))
                }
            for (var R = 0; R < v; R++)
                for (var S = 0; S < p; S++) {
                    var P = S + (p + 1) * R
                      , D = S + (p + 1) * (R + 1)
                      , O = S + 1 + (p + 1) * (R + 1)
                      , I = S + 1 + (p + 1) * R;
                    x.push(P, D, O),
                    x.push(P, O, I)
                }
            return {
                uvs: _,
                indices: x,
                vertices: b,
                normals: M
            }
        }
        ,
        e.getNormal = function(t) {
            var e, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = n ? -1 : 1;
            switch (t) {
            case "x":
                e = [r, 0, 0];
                break;
            case Fi:
                e = [0, 0, r];
                break;
            default:
                e = [0, r, 0]
            }
            return e
        }
        ,
        e
    }(Zr);
    ji.get3DVertex = function(t, e) {
        var n, r = xi(t, 2), i = r[0], o = r[1], a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        switch (e) {
        case "x":
            n = [a, i, o];
            break;
        case "y":
            n = [i, a, o];
            break;
        default:
            n = [i, o, a]
        }
        return n
    }
    ;
    var zi = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            (s = t.call(this) || this).name = "BoxGeometry";
            var u = s.initBox(e, n, r, i, o, a)
              , h = u.uvs
              , c = u.normals
              , l = u.vertices
              , f = u.indices;
            return s.setAttribute("position", new Gr(l,3)),
            s.setAttribute("normals", new Gr(c,3)),
            s.setAttribute("uv", new Gr(h,2)),
            s.setIndexes(f),
            s
        }
        return c(e, t),
        e.prototype.initBox = function(t, e, n, r, i, o) {
            var a = []
              , s = ji.buildPlane
              , u = s(n, e, o, i, {
                normalAxis: "x",
                normalDest: t / 2
            })
              , h = s(n, e, o, i, {
                normalAxis: "x",
                useBack: !0,
                normalDest: -t / 2
            })
              , c = s(t, n, r, o, {
                normalAxis: "y",
                normalDest: e / 2
            })
              , l = s(t, n, r, o, {
                normalAxis: "y",
                useBack: !0,
                normalDest: -e / 2
            })
              , f = s(t, e, r, i, {
                normalAxis: "z",
                normalDest: n / 2
            })
              , d = s(t, e, r, i, {
                normalAxis: "z",
                useBack: !0,
                normalDest: -n / 2
            });
            a.push(u, h, c, l, f, d);
            for (var p = 0, v = [], m = [], g = [], y = [], _ = function(t) {
                var e = a[t]
                  , n = e.uvs
                  , r = e.vertices
                  , i = e.normals
                  , o = e.indices
                  , s = p;
                v = v.concat(n),
                m = m.concat(r),
                g = g.concat(i),
                y = y.concat(o.map((function(t) {
                    return s + t
                }
                ))),
                p += r.length / 3
            }, x = 0; x < 6; x++)
                _(x);
            return {
                uvs: v,
                vertices: m,
                normals: g,
                indices: y
            }
        }
        ,
        e
    }(Zr)
      , Vi = function(t) {
        function e(e, n) {
            var r;
            return (r = t.call(this) || this).width = void 0,
            r.height = void 0,
            r.glFrameBuffer = null,
            r.glDepthBuffer = null,
            r.flipY = !1,
            r.premultiplyAlpha = !1,
            r.glTexture = null,
            r.width = e,
            r.height = n,
            r
        }
        return c(e, t),
        e
    }(Or);
    function Gi(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return Wi(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return Wi(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function Wi(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var Hi = function() {
        function t() {
            this.faceCount = 0,
            this.verticesCoords = [],
            this.textureCoords = [],
            this.uvs = [],
            this.vertices = [],
            this.normals = [],
            this.indexes = []
        }
        var e = t.prototype;
        return e.load = function(t) {
            var e = this;
            return new Promise((function(n) {
                (function(t) {
                    var e = new XMLHttpRequest;
                    return e.open("GET", t, !0),
                    e.send(null),
                    new Promise((function(t) {
                        e.addEventListener("load", (function() {
                            t(e.responseText)
                        }
                        ), !1)
                    }
                    ),(function(t) {
                        e.addEventListener("error", (function(e) {
                            console.error("request error"),
                            t(e)
                        }
                        ), !1)
                    }
                    ))
                }
                )(t).then((function(t) {
                    e.parse(t);
                    var r = e.genObject3D();
                    n(r)
                }
                ))
            }
            ))
        }
        ,
        e.genObject3D = function() {
            var t = new Zr;
            t.setAttribute("position", new Gr(this.vertices,3)),
            this.uvs.length && t.setAttribute("uv", new Gr(this.uvs,2)),
            t.setIndexes(this.indexes);
            var e = new Pi;
            return new Kr(t,e)
        }
        ,
        e.parse = function(t) {
            var e, n = Gi(t.split("\n"));
            try {
                for (n.s(); !(e = n.n()).done; ) {
                    var r = e.value
                      , i = r.indexOf("#");
                    -1 !== i && (r = r.substring(0, i));
                    var o = (r = r.trim()).split(/\s+/);
                    switch (o[0]) {
                    case "v":
                        this.verticesCoords.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
                        break;
                    case "vn":
                        this.normals.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
                        break;
                    case "vt":
                        this.textureCoords.push(parseFloat(o[1]), parseFloat(o[2]));
                        break;
                    case "p":
                    case "l":
                    case "usemtl":
                        break;
                    case "f":
                        o.shift(),
                        this.parseFaceLine(o)
                    }
                }
            } catch (t) {
                n.e(t)
            } finally {
                n.f()
            }
        }
        ,
        e.parseFaceLine = function(t) {
            for (var e = [], n = t.length, r = 0; r < n; r++) {
                var i = t[r];
                if (i.length > 0) {
                    var o = i.split("/");
                    e.push(o)
                }
            }
            for (var a = e[0], s = 1, u = e.length - 1; s < u; s++) {
                var h = e[s]
                  , c = e[s + 1];
                this.addFace(a, h, c)
            }
        }
        ,
        e.addFace = function(t, e, n) {
            var r = this.verticesCoords
              , i = r.length / 3
              , o = this.parseVertexIndex(t[0], i)
              , a = this.parseVertexIndex(e[0], i)
              , s = this.parseVertexIndex(n[0], i);
            this.vertices.push(r[o], r[o + 1], r[o + 2], r[a], r[a + 1], r[a + 2], r[s], r[s + 1], r[s + 2]);
            var u = 3 * this.faceCount;
            if (this.indexes.push(u, u + 1, u + 2),
            this.faceCount++,
            "" !== t[1]) {
                var h = this.textureCoords
                  , c = h.length
                  , l = this.parseUVIndex(t[1], c)
                  , f = this.parseUVIndex(e[1], c)
                  , d = this.parseUVIndex(n[1], c);
                this.uvs.push(h[l], h[l + 1], h[f], h[f + 1], h[d], h[d + 1])
            }
            t[2]
        }
        ,
        e.parseVertexIndex = function(t, e) {
            var n = parseInt(t, 10);
            return 3 * (n >= 0 ? n - 1 : n + e / 3)
        }
        ,
        e.parseUVIndex = function(t, e) {
            var n = parseInt(t, 10);
            return 2 * (n >= 0 ? n - 1 : n + e / 2)
        }
        ,
        t
    }();
    function Zi(t) {
        return new Promise((function(e, n) {
            var r = new Image;
            r.src = t,
            r.crossOrigin = "Anonymous",
            r.onload = function() {
                e(r)
            }
            ,
            r.onerror = function(t) {
                n(t)
            }
        }
        ))
    }
    function qi(t) {
        if (6 !== t.length)
            throw new Error("[loadCubeTexture] param urls need len six. [px, nx, py, ny, pz, nz]");
        return new Promise((function(e, n) {
            for (var r = 0, i = new hi, o = i.image, a = function(a) {
                Zi(t[a]).then((function(t) {
                    r++,
                    o[a] = t,
                    6 === r && (i.needsUpdate = !0,
                    e(i))
                }
                )).catch((function(t) {
                    console.error(t),
                    n(t)
                }
                ))
            }, s = 0; s < 6; s++)
                a(s)
        }
        ))
    }
    var Yi = function(t) {
        function e() {
            var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .1, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
            return (e = t.call(this) || this).isCamera = !0,
            e.viewMatrix = Pe(),
            e.projectionMatrix = Pe(),
            e.projectionMatrixNeedUpdate = !1,
            e._far = void 0,
            e._near = void 0,
            e._far = r,
            e._near = n,
            e
        }
        return c(e, t),
        e.prototype.updateWorldMatrix = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            t.prototype.updateWorldMatrix.call(this, e),
            Be(this.viewMatrix, this.worldMatrix)
        }
        ,
        o(e, [{
            key: "near",
            get: function() {
                return this._near
            },
            set: function(t) {
                this._near = t,
                this.projectionMatrixNeedUpdate = !0
            }
        }, {
            key: "far",
            get: function() {
                return this._far
            },
            set: function(t) {
                this._far = t,
                this.projectionMatrixNeedUpdate = !0
            }
        }]),
        e
    }(Ur)
      , Xi = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            return (s = t.call(this, o, a) || this)._left = void 0,
            s._right = void 0,
            s._top = void 0,
            s._bottom = void 0,
            s._top = r,
            s._left = e,
            s._right = n,
            s._bottom = i,
            s.updateProjectionMatrix(!0),
            s
        }
        c(e, t);
        var n = e.prototype;
        return n.updateProjectionMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            if (!0 === t || !0 === this.projectionMatrixNeedUpdate) {
                var e = (this.right - this.left) / 2
                  , n = (this.top - this.bottom) / 2
                  , r = (this.right + this.left) / 2
                  , i = (this.top + this.bottom) / 2
                  , o = r - e
                  , a = r + e
                  , s = i + n
                  , u = i - n;
                Ie(this.projectionMatrix),
                $e(this.projectionMatrix, o, a, s, u, this.near, this.far),
                this.projectionMatrixNeedUpdate = !1
            }
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e(0,0,0,0,0,0)),
            t.prototype.clone.call(this, n),
            n.left = this.left,
            n.right = this.right,
            n.top = this.top,
            n.bottom = this.bottom,
            n.near = this.near,
            n.far = this.far,
            n.updateProjectionMatrix(),
            n.updateWorldMatrix(),
            n
        }
        ,
        o(e, [{
            key: "top",
            get: function() {
                return this._top
            },
            set: function(t) {
                t !== this._top && (this._top = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "left",
            get: function() {
                return this._left
            },
            set: function(t) {
                t !== this._left && (this._left = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "right",
            get: function() {
                return this._right
            },
            set: function(t) {
                t !== this._right && (this._right = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "bottom",
            get: function() {
                return this._bottom
            },
            set: function(t) {
                t !== this._bottom && (this._bottom = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }]),
        e
    }(Yi)
      , Ki = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, r, i) || this).type = "PerspectiveCamera",
            o._fov = void 0,
            o._aspect = void 0,
            o._fov = e,
            o._aspect = n,
            o.updateProjectionMatrix(!0),
            o
        }
        c(e, t);
        var n = e.prototype;
        return n.updateProjectionMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 !== t && !0 !== this.projectionMatrixNeedUpdate || (Ie(this.projectionMatrix),
            Qe(this.projectionMatrix, this.fov * Math.PI / 180, this.aspect, this.near, this.far),
            this.projectionMatrixNeedUpdate = !1)
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e(0,0,0,0)),
            t.prototype.clone.call(this, n),
            n.fov = this.fov,
            n.aspect = this.aspect,
            n.near = this.near,
            n.far = this.far,
            n.updateProjectionMatrix(),
            n.updateWorldMatrix(),
            n
        }
        ,
        o(e, [{
            key: "fov",
            get: function() {
                return this._fov
            },
            set: function(t) {
                t !== this._fov && (this._fov = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "aspect",
            get: function() {
                return this._aspect
            },
            set: function(t) {
                t !== this._aspect && (this._aspect = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }]),
        e
    }(Yi)
      , Qi = Object.freeze({
        __proto__: null,
        Mesh: Kr,
        Scene: Qr,
        Geometry: Jr,
        Object3D: Ur,
        Raycaster: si,
        Texture: ui,
        CubeTexture: hi,
        TextureOperation: ci,
        Material: Ti,
        BasicMaterial: Pi,
        BufferGeometry: Zr,
        WebGLRenderer: Ui,
        PlaneGeometry: Ni,
        BoxGeometry: zi,
        WebGLRenderTarget: Vi,
        PlaneBufferGeometry: ji,
        Box3: Nr,
        OBJLoader: Hi,
        loadImage: Zi,
        loadTexture: function(t, e, n) {
            return Zi(t).then((function(t) {
                var n = new ui(t);
                return e && e(n),
                n
            }
            )).catch((function(t) {
                n && n(t)
            }
            ))
        },
        loadCubeTexture: qi,
        Vec2: Ut,
        Vec3: ge,
        Vec4: kn,
        Mat3: Se,
        Mat4: an,
        Quat: Ar,
        quatToEuler: Ir,
        BufferAttribute: Fr,
        Uint8BufferAttribute: jr,
        Uint16BufferAttribute: zr,
        Uint32BufferAttribute: Vr,
        Float32ArrayAttribute: Gr,
        UintBufferAttribute: Wr,
        OrthographicCamera: Xi,
        PerspectiveCamera: Ki
    })
      , Ji = function() {
        function t(t) {
            this.pano = void 0,
            this.panoData = void 0,
            this._meshs = new Kr,
            this.pano = t
        }
        return o(t, [{
            key: "camera",
            get: function() {
                return this.pano.camera
            }
        }, {
            key: "meshs",
            get: function() {
                return this._meshs
            },
            set: function(t) {
                this._meshs = t
            }
        }]),
        t
    }()
      , $i = ["varying vec3 v_normal;", "void main(void){", "   gl_Position = mvpMatrix * vec4(position, 1.0);", "   v_normal = normalize(position.xyz);", "}"].join("\n")
      , to = ["uniform samplerCube uSampler;", "uniform float uOpacity;", "varying vec3 v_normal;", "void main(void){", "    vec4 textureColor = textureCube(uSampler, normalize(v_normal));", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n")
      , eo = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).initMesh(),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.initMesh = function() {
            var t = new zi(8,8,8,1,1,1)
              , e = new Ti;
            e.vertexShader = $i,
            e.fragmentShader = to,
            e.uniforms = {
                vColor: {
                    type: "4f",
                    value: [1, 0, 0, 1]
                },
                uSampler: {
                    type: "t",
                    value: null
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                }
            };
            var n = new Kr(t,e);
            n.visible = !1,
            n.setScale(-1, 1, 1),
            this.meshs = n
        }
        ,
        n.setData = function(t) {
            var e = this;
            if (!t.image || 6 !== t.image.length)
                throw new Error("天空盒模型需要6张纹理，但只获取到 ".concat(t.image ? t.image.length : 0, "张"));
            this.panoData = t;
            var n = this.meshs;
            qi(t.image).then((function(t) {
                n.material.uniforms.uSampler.value = t,
                n.visible = !0,
                e.pano.emit({
                    type: d.REFRESH,
                    log: "[Refresh Log] 立方贴图加载完成， 渲染一帧"
                })
            }
            )).catch((function(t) {
                return console.error(t)
            }
            ))
        }
        ,
        n.update = function() {}
        ,
        n.draw = function() {}
        ,
        e
    }(Ji)
      , no = function(t) {
        return t
    }
      , ro = function(t) {
        return t * t
    }
      , io = function(t) {
        return -t * (t - 2)
    }
      , oo = ro
      , ao = io
      , so = Object.freeze({
        __proto__: null,
        linear: no,
        reverse: function(t) {
            return 1 - t
        },
        easeInQuad: ro,
        easeInCubic: function(t) {
            return Math.pow(t, 3)
        },
        easeOutQuad: io,
        easeOutCubic: function(t) {
            return Math.pow(t - 1, 3) + 1
        },
        easeInOutQuad: function(t) {
            return t < .5 ? t * t * 2 : -2 * (t - 2) * t - 1
        },
        easeInOutCubic: function(t) {
            return t < .5 ? 4 * Math.pow(t, 3) : 4 * Math.pow(t - 1, 3) + 1
        },
        easeInOutSine: function(t) {
            return (1 - Math.cos(Math.PI * t)) / 2
        },
        easeIn: oo,
        easeOut: ao
    })
      , uo = function() {}
      , ho = function() {
        function t(t, e, n) {
            var r = this
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : no;
            this.from = void 0,
            this.to = void 0,
            this.duration = void 0,
            this.easingFn = void 0,
            this._isPlaying = !1,
            this._autoTimer = null,
            this._startTime = null,
            this._onUpdateCallback = uo,
            this._onEndCallback = uo,
            this.start = function() {
                return r._isPlaying || (r._isPlaying = !0,
                r._startTime = r.getNow()),
                r
            }
            ,
            this.stop = function() {
                return r._isPlaying = !1,
                r
            }
            ,
            this.startAndAutoUpdate = function() {
                if (r._isPlaying)
                    return r;
                r.start(),
                r._autoTimer = null;
                return function t() {
                    r.update(),
                    r._autoTimer = requestAnimationFrame(t)
                }(),
                r
            }
            ,
            this.onEnd = function(t) {
                return "function" == typeof t ? r._onEndCallback = t : console.warn("[Warning] onUpdate required a funtion"),
                r
            }
            ,
            this.onUpdate = function(t) {
                return "function" == typeof t ? r._onUpdateCallback = t : console.warn("[Warning] onUpdate required a funtion"),
                r
            }
            ,
            this.update = function() {
                if (!r._isPlaying)
                    return !1;
                var t = r.from
                  , e = r.to
                  , n = r.getNow()
                  , i = r.easingFn
                  , o = r._startTime;
                if (o > n)
                    return !1;
                var a = (n - o) / r.duration
                  , s = t + (e - t) * i(a = 0 === r.duration || a > 1 ? 1 : a);
                return r._onUpdateCallback(s),
                1 === a && r.handleEnd(),
                !0
            }
            ,
            this.from = t,
            this.to = e,
            this.duration = n,
            this.easingFn = i
        }
        var e = t.prototype;
        return e.getNow = function() {
            return Date.now()
        }
        ,
        e.handleEnd = function() {
            this._isPlaying = !1,
            this._autoTimer = null,
            this._onEndCallback()
        }
        ,
        t
    }()
      , co = function(t, e, n) {
        var r = .5 * e
          , i = .5 * n;
        return _t((t[0] - r) / r, (i - t[1]) / i)
    }
      , lo = function(t, e, n) {
        var r = .5 * e
          , i = .5 * n;
        return _t((t[0] + 1) * r, (1 - t[1]) * i)
    }
      , fo = function(t, e, n, r) {
        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 100
          , o = sn()
          , a = co(t, n, r)
          , s = hn(a[0], a[1], i, 1)
          , u = Pe()
          , h = e.worldMatrix;
        return Be(u, e.projectionMatrix),
        En(o, s, u),
        En(o, o, h),
        o
    }
      , po = function(t, e, n, r) {
        var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
          , o = hn(e[0], e[1], e[2], 1);
        if (En(o, o, t.viewMatrix),
        0 < o[2] && !0 !== i)
            return null;
        En(o, o, t.projectionMatrix),
        o[0] = o[0] / o[3],
        o[1] = o[1] / o[3],
        o[2] = o[2] / o[3],
        o[3] = 1;
        var a = _t(o[0], o[1]);
        return lo(a, n, r)
    }
      , vo = function(t, e, n, r) {
        var i = po(e, t, n, r) || [-1, -1]
          , o = xi(i, 2)
          , a = o[0]
          , s = o[1]
          , u = !1;
        return a >= 0 && a <= n && s >= 0 && s <= r && (u = !0),
        u
    }
      , mo = Object.freeze({
        __proto__: null,
        viewportToNormalizeProjection: co,
        normalizeProjectionToViewport: lo,
        viewportToWorld: fo,
        worldToViewport: po,
        isCoordsInView: vo
    })
      , go = function() {
        function t() {
            var e = this
              , n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500;
            this.getVertexs = function() {
                return e.vertexs
            }
            ,
            this.getFacesVertex = function() {
                return e.facesVertex
            }
            ,
            this.generateTextureCoord = function(n, r, i) {
                var o = e.facesVertex[Math.round(e.facesVertex.length / 2)];
                if (o) {
                    for (var a = [], s = Math.pow(2, 5 - i), u = r % s, h = n % s, c = t.H_SEGS / e.cols, l = 1 / c, f = 1 / ((t.V_SEGS - 1) / e.rows), d = 0; d < o.length / 3; d++) {
                        var p = d % (c + 1) * l
                          , v = Math.floor(d / (c + 1)) * f;
                        p = p / s + 1 * u / s,
                        v = v / s + 1 * h / s,
                        1 === i && (v *= 2),
                        a.push(p, v)
                    }
                    return a
                }
            }
            ,
            this.getFaceIndex = function(n) {
                var r = 0
                  , i = xi(n, 3)
                  , o = i[0]
                  , a = i[1]
                  , s = i[2]
                  , u = Math.round(180 * Math.atan(Math.abs(s) / Math.abs(o)) / Math.PI);
                o > 0 ? s < 0 && (u = 360 - u) : u = s > 0 ? 180 - u : 180 + u,
                u %= 360,
                r = a > e._x3 ? 7 : a > e._x2 ? 6 : a > e._x1 ? 5 : a > 0 ? 4 : a > -e._x1 ? 3 : a > -e._x2 ? 2 : a > -e._x3 ? 1 : 0;
                var h = Math.floor(u / 22.5)
                  , c = t.H_SEGS;
                return [h, r, h + r * (c / (c / e.cols))]
            }
            ,
            this.viewportToSphereCoord = function(t, n, r, i) {
                var o = e.radius
                  , a = fo(t, i, n, r)
                  , s = xi(a, 3)
                  , u = s[0]
                  , h = s[1]
                  , c = s[2]
                  , l = o / Math.sqrt(u * u + h * h + c * c);
                return [u * l, h * l, c * l]
            }
            ,
            this.getFaceVertex = function(n, r) {
                var i = t.H_SEGS / e.cols
                  , o = r + n * (t.H_SEGS / i);
                return e.facesVertex[o]
            }
            ,
            this.radius = n,
            this.rows = t.DEFAULT_COLS / 2,
            this.cols = t.DEFAULT_COLS,
            this.vertexs = null,
            this.facesVertex = [],
            this.facesVertexIndice = [],
            this.init()
        }
        var e = t.prototype;
        return e.init = function() {
            var t = this.getSphereVertexInfo();
            this.facesVertexIndice = this.getSphereFacesIndices(),
            this.vertexs = t.vertexs,
            this.facesVertex = t.facesVertex,
            this.calcConst()
        }
        ,
        e.calcConst = function() {
            var t = 360 / this.cols;
            this._x1 = Math.cos(g(3 * t)) * this.radius,
            this._x2 = Math.cos(g(2 * t)) * this.radius,
            this._x3 = Math.cos(g(1 * t)) * this.radius
        }
        ,
        e.getSphereVertexInfo = function() {
            for (var e, n = [], r = [], i = this.radius, o = t.H_SEGS, a = t.V_SEGS, s = 360 / o, u = 180 / (a - 1), h = o / this.cols, c = o / h, l = 0, f = 0, d = [], p = 0; p < a; p++) {
                var v = Math.sin(g(p * u - 90)) * i
                  , m = Math.cos(g(p * u - 90)) * i;
                v = Math.round(100 * v) / 100,
                m = Math.round(100 * m) / 100,
                l = Math.floor(p / h);
                for (var y = 0; y < o; y++) {
                    var _ = Math.cos(g(y * s)) * m
                      , x = Math.sin(g(y * s)) * m;
                    if (_ = Math.round(100 * _) / 100,
                    x = Math.round(100 * x) / 100,
                    n.push(_, v, x),
                    e = (f = Math.floor(y / h)) + l * c,
                    l < this.rows && (r[e] || (r[e] = []),
                    r[e].push(_, v, x)),
                    l > 0 && p % h == 0) {
                        var b = f + (l - 1) * c;
                        r[b].push(_, v, x),
                        y > 0 && y % h == 0 && r[b - 1] && r[b - 1].push(_, v, x),
                        y === o - 1 && r[b].push(d[0], d[1], d[2])
                    }
                    0 === f && 0 === y && (d = [_, v, x]),
                    y > 0 && y % h == 0 && r[e - 1] && r[e - 1].push(_, v, x),
                    l < this.rows && y === o - 1 && r[e].push(d[0], d[1], d[2])
                }
            }
            return {
                vertexs: n,
                facesVertex: r
            }
        }
        ,
        e.getSphereFacesIndices = function() {
            for (var e = [], n = t.H_SEGS / this.cols, r = n + 1, i = 0; i < n; i++)
                for (var o = 0; o < n; o++) {
                    var a = i * r
                      , s = a + o + 1
                      , u = a + o + 1 + r;
                    e.push(a + o, s, u),
                    s = a + o + 1 + r,
                    e.push(a + o, s, a + r + o)
                }
            return e
        }
        ,
        e.getSphereFacesIndicesByimageZoom = function(e) {
            for (var n = this, r = [], i = t.H_SEGS, o = Math.pow(2, 5 - e), a = i / this.cols + 1, s = a * a, u = function(t) {
                for (var e = function(e) {
                    n.facesVertexIndice.forEach((function(n) {
                        r.push(n + s * e + s * t * 2)
                    }
                    ))
                }, i = 0; i < o; i++)
                    e(i)
            }, h = 0; h < o; h++)
                u(h);
            return r
        }
        ,
        t
    }();
    go.DEFAULT_COLS = Math.pow(2, 4),
    go.H_SEGS = 64,
    go.V_SEGS = 33;
    var yo = function() {
        function t() {
            this._counter = 0,
            this._imageCollection = {}
        }
        var e = t.prototype;
        return e.getImageInstance = function() {
            var t;
            for (var e in this._imageCollection)
                if (this._imageCollection[e] && !0 === this._imageCollection[e]._free)
                    return this._imageCollection[e]._free = !1,
                    this._imageCollection[e];
            t = new Image;
            var n = this.getGUID();
            return this._imageCollection[n] = t,
            t
        }
        ,
        e.freeImage = function(t) {
            t && (t._free = !0,
            t.src = "",
            t.onload = t.onerror = null)
        }
        ,
        e.getGUID = function() {
            return this._counter++,
            "img_".concat(this._counter)
        }
        ,
        t
    }()
      , _o = function() {
        function t(e, n) {
            var r = this
              , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
            this.imageInstancePool = void 0,
            this.tileImagesCache = void 0,
            this.textureInfo = void 0,
            this.pano = void 0,
            this.udtVersion = void 0,
            this.cdnList = void 0,
            this.calcTileKey = function(t, e, n, r) {
                return "".concat(t, "_").concat(e, "_").concat(n, "_").concat(r)
            }
            ,
            this.loadImage = function(t, e, n, i) {
                var o = r.calcTileKey(t, e, n, i)
                  , a = r.getTilesUrl(t, {
                    x: e,
                    y: n
                }, i)
                  , s = r.tileImagesCache.getData(o);
                return new Promise((function(t, e) {
                    s ? t(s._loaded ? s : null) : ((s = r.imageInstancePool.getImageInstance()).crossOrigin = "anonymous",
                    s._loaded = !1,
                    s.onload = function() {
                        s._loaded = !0,
                        t(s)
                    }
                    ,
                    s.onerror = function(t) {
                        console.error("Tile ".concat(o, " load error => "), t),
                        e(t)
                    }
                    ,
                    s.src = a,
                    r.tileImagesCache.setData(o, s))
                }
                ))
            }
            ,
            this.loadTexture = function(t, e, n, i) {
                var o = r.calcTileKey(t, e, n, i)
                  , a = r.textureInfo.getData(o);
                return new Promise((function(s, u) {
                    a && a.loaded ? s(a) : r.loadImage(t, e, n, i).then((function(t) {
                        if (!t)
                            return null;
                        var e = new ui(t);
                        1 !== i && r.textureInfo.setData(o, e),
                        s(e)
                    }
                    )).catch((function(t) {
                        console.error("[TextureManager] loadTexture fail => ".concat(t)),
                        u(null)
                    }
                    ))
                }
                ))
            }
            ,
            this.loadTopoTexture = function(t) {
                var e = 0
                  , n = new Image;
                return new Promise((function(r) {
                    n.onload = function() {
                        var t = new ui(n);
                        t.flipY = !1,
                        r(t)
                    }
                    ,
                    n.onerror = function() {
                        2 > e ? (e++,
                        n.src = "".concat(t, "&random=").concat((new Date).getTime())) : r(null)
                    }
                    ,
                    n.crossOrigin = "anonymous",
                    n.src = t
                }
                ))
            }
            ,
            this.clear = function() {
                r.textureInfo.clear()
            }
            ,
            this.pano = e,
            this.udtVersion = i,
            this.cdnList = n || e.opts.tileBaseUrls,
            this.imageInstancePool = new yo,
            this.tileImagesCache = new A(t.MAX_TILE_CACHED,{
                clearCallback: function(t) {
                    r.imageInstancePool.freeImage(t)
                }
            }),
            this.textureInfo = new A(t.MAX_TILE_CACHED,{
                clearCallback: function(t) {
                    t.destory()
                }
            })
        }
        var e = t.prototype;
        return e.getRandomCDN = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
              , e = t.length;
            return t[Math.floor(Math.random() * e)]
        }
        ,
        e.getTilesUrl = function(e, n, r) {
            return this.getRandomCDN(this.cdnList) + (t.TILE_URL_TEMPLATE + "&".concat($("/", {
                isCounter: !0
            }))).replace("{udt}", this.udtVersion).replace("{sid}", e).replace("{x}", "".concat(n.x)).replace("{y}", "".concat(n.y)).replace("{zoom}", "".concat(r))
        }
        ,
        t
    }();
    _o.MAX_TILE_CACHED = 160,
    _o.TILE_URL_TEMPLATE = "?qt=pdata&sid={sid}&pos={y}_{x}&z={zoom}&udt={udt}&from=H5";
    var xo = ["attribute vec2 uvBack;", "varying mediump vec2 vTextureCoordBack;", "varying mediump vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoordBack = uvBack;", "    vTextureCoord = uv;", "}"].join("\n")
      , bo = ["precision mediump float;", "varying vec2 vTextureCoordBack;", "varying vec2 vTextureCoord;", "uniform sampler2D uSamplerBack;", "uniform sampler2D uSampler;", "uniform bool uDrawThumb;", "uniform bool uDrawBack;", "uniform float uAlpha;", "void main(void) {", "    if (uDrawThumb) {", "        gl_FragColor = texture2D(uSamplerBack, vTextureCoordBack);", "        return;", "    }", "    if (uAlpha == 1.0) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord);", "        return;", "    }", "    if (uDrawBack) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha + texture2D(uSamplerBack, vTextureCoordBack) * (1.0 - uAlpha);", "    } else {", "        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));", "        gl_FragColor =  vec4(textureColor.rgb, textureColor.a * uAlpha);", "    }", "}"].join("\n")
      , Mo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n")
      , wo = ["precision mediump float;", "uniform sampler2D uSampler;", "varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_FragColor = texture2D(uSampler, vTextureCoord);", "}"].join("\n")
      , Eo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n")
      , To = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec2 vTextureCoord;", "void main(void){", "    vec4 textureColor = texture2D(uSampler, vTextureCoord);", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n")
      , Ao = ["varying highp vec3 vTextureCoord;", "void main(void){", "   gl_Position = mvpMatrix  * vec4(position, 1.0);", "   vTextureCoord = vec3(uv, 1.0) * length(position);", "}"].join("\n")
      , Co = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec3 vTextureCoord;", "uniform bool showDebugLine;", "uniform vec4 vColor;", "void main(void){", "   if (!showDebugLine) {", "       vec4 textureColor = texture2DProj(uSampler, vTextureCoord);", "       gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "   } else {", "       gl_FragColor = vec4(vColor.rgb, vColor.a);", "   }", "}"].join("\n")
      , Ro = function() {
        function t(e, n, r, i) {
            this.nodes = void 0,
            this.level = void 0,
            this.key = void 0,
            this.nodes = [],
            this.level = e,
            this.key = "".concat(r, "_").concat(i),
            e < n && (this.nodes[0] = new t(e + 1,n,2 * r,2 * i),
            this.nodes[1] = new t(e + 1,n,2 * r,2 * i + 1),
            this.nodes[2] = new t(e + 1,n,2 * r + 1,2 * i),
            this.nodes[3] = new t(e + 1,n,2 * r + 1,2 * i + 1))
        }
        var e = t.prototype;
        return e.hasNodes = function() {
            return this.nodes.length > 0
        }
        ,
        e.getNodeKeysByLevel = function(t) {
            if (t < this.level)
                return console.warn("指定节点".concat(t, " 不在当前节点").concat(this.level, "范围内！")),
                [];
            if (this.level === t)
                return [this.key];
            for (var e = [], n = 0; n < this.nodes.length; n++)
                if (Object.prototype.hasOwnProperty.call(this.nodes, n)) {
                    var r = this.nodes[n];
                    if (this.level === t - 1)
                        e.push(r.key);
                    else if (r.hasNodes()) {
                        var i = r.getNodeKeysByLevel(t);
                        e.push.apply(e, mi(i))
                    }
                }
            return e
        }
        ,
        t
    }();
    var So = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).name = "SphereRender",
            n.sphere = void 0,
            n.textureManager = void 0,
            n.imgColsRows = void 0,
            n.curThumbTexture = void 0,
            n.meshCache = {},
            n.tileInfoCache = {},
            n.imgRange = void 0,
            n.faceRange = void 0,
            n.hitTile = void 0,
            n.setData = function(t) {
                n.panoData = t,
                n.curThumbTexture = null,
                n.loadThumbTextures(t.panoId)
            }
            ,
            n.update = function() {
                n.updateRangeInfo(),
                n.checkAndLoadTiles()
            }
            ,
            n.checkAndLoadTiles = function() {
                if (n.curThumbTexture && n.panoData) {
                    var t = n.panoData.panoId
                      , e = n.camera
                      , r = n.imgColsRows[n._imgZoom]
                      , i = r.cols
                      , o = i - 1
                      , a = r.rows - 1
                      , s = n.pano.getContainerSize()
                      , u = s.width
                      , h = s.height
                      , c = !1
                      , l = []
                      , f = xi(n.imgRange, 4)
                      , d = f[0]
                      , p = f[1]
                      , v = f[2]
                      , m = f[3];
                    if (vo(Vt(0, 100, 0), e, u, h)) {
                        for (var g = 0; g <= v; g++)
                            for (var y = 0; y <= o; y++)
                                n.checkAndLoadTile(t, y, g, n._imgZoom),
                                l.push([g, y]);
                        v < m && (v += 1,
                        c = !0)
                    } else if (vo(Vt(0, -100, 0), e, u, h)) {
                        for (var _ = m; _ <= a; _++)
                            for (var x = 0; x <= o; x++)
                                n.checkAndLoadTile(t, x, _, n._imgZoom),
                                l.push([_, x]);
                        v < m && (m -= 1,
                        c = !0)
                    } else
                        c = !0;
                    if (!0 === c) {
                        p > o && (p = o);
                        for (var b = d; b <= p; b++)
                            for (var M = v; M <= m; M++) {
                                var w = b < 0 ? b + i : b;
                                n.checkAndLoadTile(t, w, M, n._imgZoom),
                                l.push([M, w])
                            }
                    }
                    n.hitTile = l,
                    l.forEach((function(t) {
                        var e = xi(t, 2)
                          , r = e[0]
                          , i = e[1]
                          , o = "".concat(r, "_").concat(i, "_").concat(n._imgZoom);
                        if (void 0 === n.tileInfoCache[o]) {
                            var a = new Ro(n._imgZoom,5,r,i).getNodeKeysByLevel(5);
                            n.tileInfoCache[o] = a
                        }
                    }
                    ))
                }
            }
            ,
            n.draw = function() {
                var t = n.meshs;
                if (!n.faceRange || !n.curThumbTexture)
                    return !1;
                t.children = [];
                for (var e = function(e, r) {
                    var i = n.curThumbTexture
                      , o = n.textureManager.calcTileKey(n.panoData.panoId, e, r, n._imgZoom)
                      , a = n.textureManager.textureInfo.getData(o)
                      , s = !1
                      , u = null;
                    if (a ? !(u = a).finished && u.aniInfo && u.aniInfo && u.aniInfo.update() : i && (s = !0,
                    u = i),
                    u) {
                        var h = "".concat(r, "_").concat(e, "_").concat(n._imgZoom)
                          , c = n.meshCache[h];
                        if (!c) {
                            if (!(c = n.createTileMesh(r, e)))
                                return;
                            n.meshCache[h] = c
                        }
                        if (!c.material)
                            return;
                        var l = c.material.uniforms;
                        l.uSamplerBack.value = i,
                        s ? l.uDrawThumb.value = !0 : (l.uDrawThumb.value = !1,
                        l.uSampler.value = u,
                        l.uAlpha.value = u.alpha),
                        t.add(c)
                    }
                }, r = 0; r < n.hitTile.length; r++) {
                    var i = xi(n.hitTile[r], 2)
                      , o = i[0];
                    e(i[1], o)
                }
                return !0
            }
            ,
            n.pano = e,
            n.sphere = new go(e.opts.radius),
            n.textureManager = new _o(e),
            n.imgColsRows = function() {
                for (var t = [], e = 0; e <= 5; e++)
                    t[e] = e < 2 ? {
                        cols: 1,
                        rows: 1
                    } : {
                        cols: Math.pow(2, e - 1),
                        rows: Math.pow(2, e - 1) / 2
                    };
                return t
            }(),
            n.curThumbTexture = null,
            n.meshs = new Kr,
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.checkAndLoadTile = function(t, e, n, r) {
            var i = this
              , o = this.textureManager
              , a = o.calcTileKey(t, e, n, r);
            !0 !== (void 0 !== o.textureInfo.getData(a)) && this.textureManager.loadTexture(t, e, n, r).then((function(t) {
                t && !t.done && (t.aniInfo = i.createTextureAnimation(t),
                t.done = !0,
                i.pano.dispatchEvent({
                    type: d.REFRESH,
                    log: "[Refresh Log] 瓦片加载完成， 渲染一帧"
                }))
            }
            ))
        }
        ,
        n.loadThumbTextures = function(t) {
            var e = this;
            this.textureManager.loadTexture(t, 0, 0, 1).then((function(t) {
                e.curThumbTexture = t,
                e.pano.dispatchEvent({
                    type: d.THUMB_LOADED
                }),
                e.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 缩略图加载完毕，渲染一帧"
                })
            }
            ))
        }
        ,
        n.createTextureAnimation = function(t) {
            var e = this;
            return t.alpha = 0,
            new ho(0,1,300).onUpdate((function(n) {
                t.alpha = n,
                e.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 纹理清晰度渐变动画，渲染一帧"
                })
            }
            )).onEnd((function() {
                t.finished = !0
            }
            )).start()
        }
        ,
        n.createTileMesh = function(t, e) {
            var n = new Ti
              , r = new Zr;
            if (n.depthTest = !1,
            n.vertexShader = xo,
            n.fragmentShader = bo,
            n.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                },
                uSamplerBack: {
                    type: "t",
                    value: null
                },
                uDrawThumb: {
                    type: "1i",
                    value: 1
                },
                uDrawBack: {
                    type: "1i",
                    value: 1
                },
                uAlpha: {
                    type: "1f",
                    value: 1
                }
            },
            !this.setGeometryAttrib(r, t, e))
                return null;
            var i = new Kr(r,n);
            return i.name = "tile-mesh",
            i
        }
        ,
        n.setGeometryAttrib = function(t, e, n) {
            var r = "".concat(e, "_").concat(n, "_").concat(this._imgZoom)
              , i = this.tileInfoCache[r];
            if (!i)
                return !1;
            for (var o = [], a = [], s = [], u = 0; u < i.length; u++) {
                var h = i[u].split("_")
                  , c = this.sphere.rows
                  , l = Number(h[1])
                  , f = c - 1 - Number(h[0]);
                o.push.apply(o, mi(this.sphere.getFaceVertex(f, l))),
                a.push.apply(a, mi(this.sphere.generateTextureCoord(f, l, this._imgZoom))),
                s.push.apply(s, mi(this.sphere.generateTextureCoord(f, l, 1)))
            }
            var d = this.sphere.getSphereFacesIndicesByimageZoom(this._imgZoom);
            return t.setAttribute("uv", new Gr(a,2)),
            t.setAttribute("uvBack", new Gr(s,2)),
            t.setAttribute("position", new Gr(o,3)),
            t.setIndexes(d),
            !0
        }
        ,
        n.getTileBoundary = function() {
            var t = this.pano.getContainerSize()
              , e = t.width
              , n = t.height
              , r = _t(0, 0)
              , i = _t(e, 0)
              , o = _t(0, n)
              , a = _t(e, n)
              , s = _t(.5 * e, 0)
              , u = _t(.5 * e, n)
              , h = _t(0, .5 * n)
              , c = _t(e, .5 * n)
              , l = this.getSpherePosition(r)
              , f = this.getSpherePosition(i)
              , d = this.getSpherePosition(o)
              , p = this.getSpherePosition(a)
              , v = this.getSpherePosition(s)
              , m = this.getSpherePosition(u)
              , g = this.getSpherePosition(h)
              , y = this.getSpherePosition(c)
              , _ = Math.max(l[1], v[1], f[1])
              , x = Math.min(d[1], m[1], p[1])
              , b = [l[0], g[0], d[0], v[0]]
              , w = [f[0], y[0], p[0], m[0]]
              , E = Math.min.apply(Math, b)
              , T = Math.max.apply(Math, w)
              , A = M(b)
              , C = M(w)
              , R = this.sphere.cols
              , S = R / 2;
            A.max - A.min > S && (E = Math.min.apply(Math, mi(b.filter((function(t) {
                return t > S
            }
            ))))),
            C.max - C.min > S && (T = Math.max.apply(Math, mi(w.filter((function(t) {
                return t < S
            }
            ))))),
            E > T && (E -= R);
            var P = this.getImgIndexByFaceColRow(E, _)
              , D = xi(P, 2)
              , O = D[0]
              , I = D[1]
              , L = this.getImgIndexByFaceColRow(T, x)
              , B = xi(L, 2);
            return [[E, T, _, x], [O, B[0], I, B[1]]]
        }
        ,
        n.updateRangeInfo = function() {
            var t = this.getTileBoundary()
              , e = xi(t, 2)
              , n = e[0]
              , r = e[1];
            this.imgRange = r,
            this.faceRange = n
        }
        ,
        n.getImgIndexByFaceColRow = function(t, e, n) {
            n = n || this._imgZoom;
            var r = Math.pow(2, 5 - n)
              , i = Math.floor(t / r)
              , o = Math.floor(e / r);
            return [i, o = this.imgColsRows[n].rows - o - 1, i + o * go.DEFAULT_COLS / r]
        }
        ,
        n.normalizeNum = function(t, e) {
            for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = t; r < n; )
                r += e;
            return r %= e
        }
        ,
        n.getSpherePosition = function(t) {
            var e = this.camera
              , n = this.pano.getContainerSize()
              , r = n.width
              , i = n.height
              , o = this.sphere.viewportToSphereCoord(t, r, i, e)
              , a = this.sphere.getFaceIndex(o)
              , s = xi(a, 2);
            return _t(s[0], s[1])
        }
        ,
        n.generateBackThumb = function(t) {
            if (t) {
                var e = this.pano
                  , n = e.getContainerSize()
                  , r = n.width
                  , i = n.height
                  , o = "//apisv0.bdimg.com/?udt=20140616&qt=pdata&pos=0_0&z=2&sid=".concat(t, "&from=H5&").concat($("/", {
                    isCounter: !0
                }))
                  , a = e.getPanes().tileLayer;
                a.style.backgroundImage = 'url("' + o + '")',
                a.style.backgroundPosition = "50% 50%",
                a.style.backgroundSize = "150% 150%",
                a.style.width = "".concat(r, "px"),
                a.style.height = "".concat(i, "px")
            }
        }
        ,
        o(e, [{
            key: "_imgZoom",
            get: function() {
                return this.pano.imageZoom
            }
        }]),
        e
    }(Ji)
      , Po = [10, -20, 30, 10, -20, 10, -10, -20, 10, -10, -20, 30].map((function(t) {
        return -20 === t ? -20 : 1.8 * t
    }
    ))
      , Do = [10, -22, 30, 10, -22, 10, -10, -22, 10, -10, -22, 30].map((function(t) {
        return -22 === t ? -22 : 1.8 * t
    }
    ))
      , Oo = [1.8, -20, 24.9, 1.8, -20, 16.3, -1.8, -20, 16.3, -1.8, -20, 24.9].map((function(t) {
        return -20 === t ? -20 : 1.8 * t
    }
    ))
      , Io = [0, 0, 0, .5, .25, .5, .25, 0]
      , Lo = function() {
        function t(t, e, n) {
            var r = this;
            this.mesh = void 0,
            this.material = void 0,
            this.linkData = void 0,
            this._pano = void 0,
            this.northDir = void 0,
            this.yAxisDis = void 0,
            this.isPosInArrow = function(t, e, n, i, o) {
                var a = _t(t, e)
                  , s = fo(a, n, i, o, -1)
                  , u = 200 * s[0]
                  , h = 200 * s[1]
                  , c = 200 * s[2]
                  , l = r.yAxisDis / h;
                if (l < 0)
                    return !1;
                var f = [u * l, h * l, c * l];
                return r.isHitLink(f)
            }
            ,
            this._pano = t,
            this.linkData = e,
            this.northDir = n,
            this.yAxisDis = 0,
            this.linkData.refinedDir = _((e.topoDir || 0) + this.northDir),
            this.material = this.createArrowMaterial(),
            this.mesh = this.initMesh(),
            this.changePose()
        }
        var e = t.prototype;
        return e.initMesh = function() {
            var t = this.createGeometry()
              , e = new Kr(t,this.material);
            return e.visible = !1,
            e.name = "link-mesh",
            e
        }
        ,
        e.createArrowMaterial = function() {
            var t = new Ti;
            return t.depthTest = !1,
            t.vertexShader = Mo,
            t.fragmentShader = wo,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                }
            },
            t
        }
        ,
        e.setTopoTexture = function(t) {
            t.isTexture && (this.material.uniforms.uSampler.value = t)
        }
        ,
        e.setVisible = function(t) {
            this.mesh.setVisible(t, !0)
        }
        ,
        e.createGeometry = function() {
            var t = new Zr
              , e = this.getTextCoord(this.linkData.topoDir)
              , n = [].concat(Do, Po, Oo)
              , r = [].concat([.5, 0, .5, .5, 1, .5, 1, 0], [0, 0, 0, .5, .5, .5, .5, 0], e)
              , i = [].concat([0, 1, 2, 0, 2, 3], [4, 5, 6, 4, 6, 7], [8, 9, 11, 10, 11, 9]);
            return t.setAttribute("position", new Gr(n,3)),
            t.setAttribute("uv", new Gr(r,2)),
            t.setIndexes(i),
            t
        }
        ,
        e.changePose = function(t) {
            t = t || this.mesh;
            var e = 50
              , n = -30
              , r = this._pano.getPov().pitch
              , i = this.linkData.refinedDir;
            (e += 20 * this._pano.getZoom(),
            r < 0) && (e *= (90 - (r = Math.abs(r))) / 90,
            n -= 20 * r / 90);
            var o = Math.cos(g(i)) * e
              , a = Math.sin(g(i)) * e;
            this.yAxisDis = n + -20,
            t.setPosition(o, n, a),
            t.rotateY(-_(i - 90)),
            t.rotateX(-5),
            t.updateWorldMatrix(!0)
        }
        ,
        e.getTextCoord = function(t) {
            t = (t + 360) % 360;
            var e = Math.ceil(Math.floor(t / 22.5) / 2);
            8 === e && (e = 0);
            for (var n = Io.slice(0), r = Math.floor(e / 2), i = e % 2, o = 0; o < n.length; o++)
                o % 2 == 0 ? (n[o] += .25 * r,
                n[o] = .5 * n[o]) : (n[o] += .5 * i,
                n[o] = .5 * n[o] + .5);
            return n
        }
        ,
        e.isHitLink = function(t) {
            var e = t[0]
              , n = t[2]
              , r = this.mesh.worldMatrix
              , i = Vt(Po[0], Po[1], Po[2])
              , o = Vt(Po[6], Po[7], Po[8])
              , a = Vt((i[0] + o[0]) / 2, (i[1] + o[1]) / 2, (i[2] + o[2]) / 2);
            return ee(a, a, r),
            Math.abs(e - a[0]) < 18 && Math.abs(n - a[2]) < 18
        }
        ,
        t
    }()
      , Bo = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).name = "PanoLinkRender",
            n.linkVisible = !0,
            n.textureManager = void 0,
            n.linkInfos = [],
            n.setData = function(t) {
                if (t && (o = t.getTopos,
                a = "[object Function]" === Object.prototype.toString.call(o),
                s = "[object AsyncFunction]" === Object.prototype.toString.call(o),
                a || s)) {
                    n.reset();
                    var e = t.getTopos()
                      , r = t.northDir
                      , i = t.panoType === p.TYPE_STREET;
                    e.length && i && (n.linkInfos = e.map((function(t) {
                        return new Lo(n.pano,t,r)
                    }
                    )),
                    n.meshs = n.linkInfos.map((function(t) {
                        return t.mesh
                    }
                    )),
                    n.loadTextures(),
                    n.setVisible(!0))
                }
                var o, a, s
            }
            ,
            n.clickChecker = function(t, e) {
                if (n.linkVisible) {
                    var r = n.getIdByTouchPos(t, e);
                    return r && (n.setVisible(!1),
                    n.pano.dispatchEvent({
                        type: d.LINK_CLICK,
                        id: r
                    }),
                    n.pano.setId(r, {
                        animation: !0
                    })),
                    !r
                }
            }
            ,
            n.pano = e,
            n.meshs = [],
            n.textureManager = new _o(e),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.reset = function() {
            this.meshs = [],
            this.linkInfos = []
        }
        ,
        n.update = function() {
            this.linkInfos.forEach((function(t) {
                t.changePose()
            }
            ))
        }
        ,
        n.setVisible = function(t) {
            var e = this.linkInfos;
            if (!(e.length < 1)) {
                var n = this.pano.opts.linksControl
                  , r = !1;
                !0 === n && (r = t),
                this.linkVisible = r,
                e.forEach((function(t) {
                    return t.setVisible(r)
                }
                ))
            }
        }
        ,
        n.draw = function() {}
        ,
        n.loadTextures = function() {
            var t = this
              , e = this.pano.opts.imgPath ? "".concat(this.pano.opts.imgPath, "topo_arrow.png") : p.TOPO_ARROW_TEXTURE;
            this.textureManager.loadTopoTexture(e).then((function(e) {
                e && t.linkInfos.forEach((function(t) {
                    t.setTopoTexture(e)
                }
                ))
            }
            ))
        }
        ,
        n.getIdByTouchPos = function(t, e) {
            var n = this
              , r = null;
            if (!this.linkInfos.length)
                return r;
            var i = this.pano.getContainerSize()
              , o = i.width
              , a = i.height
              , s = this.linkInfos.filter((function(r) {
                return r.isPosInArrow(t, e, n.camera, o, a)
            }
            ));
            return s.length && (r = s[0].linkData.panoId),
            r
        }
        ,
        e
    }(Ji)
      , ko = function() {
        function t(t, e, n) {
            var r = this;
            this.start = function() {
                r.fadeAni.start(),
                r._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                r.fadeAni.update()
            }
            ,
            this._pano = t,
            this.gl = this._pano.gl,
            this.snapshot = e,
            this.scene = this.initScene(),
            this.camera = this.initCamera();
            this.fadeAni = new ho(1,0,600).onUpdate((function(t) {
                r.material.uniforms.uOpacity.value = t,
                r._pano.dispatchEvent({
                    type: d.REFRESH
                })
            }
            )).onEnd((function() {
                n && n(),
                r._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "淡出动画结束，渲染一帧"
                })
            }
            ))
        }
        var e = t.prototype;
        return e.initScene = function() {
            var t = new Qr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new ji(n,r)
              , o = this.initMaterial()
              , a = new Kr(i,o);
            return t.add(a),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ti;
            return t.depthTest = !1,
            t.vertexShader = Eo,
            t.fragmentShader = To,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                }
            },
            this.material = t,
            t
        }
        ,
        e.initCamera = function() {
            var t = this._pano.getContainerSize()
              , e = t.width / 2
              , n = t.height / 2;
            return new Xi(-e,e,n,-n,0,11e3)
        }
        ,
        t
    }()
      , Uo = function() {
        function t(t, e, n) {
            var r = this;
            this.start = function() {
                r.waveAni.start(),
                r._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                r.waveAni.update()
            }
            ,
            this._pano = t,
            this.gl = this._pano.gl,
            this.snapshot = e,
            this.scene = this.initScene(),
            this.camera = this.initCamera();
            this.waveAni = new ho(0,1,800).onUpdate((function(t) {
                r.material.uniforms.progress.value = t,
                r.material.uniforms.uOpacity.value = 1 - t,
                r._pano.dispatchEvent({
                    type: d.REFRESH
                })
            }
            )).onEnd((function() {
                n && n(),
                r._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "淡出动画结束，渲染一帧"
                })
            }
            ))
        }
        var e = t.prototype;
        return e.initCamera = function() {
            var t = this._pano.getContainerSize()
              , e = t.width / 2
              , n = t.height / 2;
            return new Xi(-e,e,n,-n,0,11e3)
        }
        ,
        e.initScene = function() {
            var t = new Qr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new ji(n,r)
              , o = this.initMaterial()
              , a = new Kr(i,o);
            return t.add(a),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ti
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height;
            return t.depthTest = !1,
            t.vertexShader = Eo,
            t.fragmentShader = "\n    uniform float aspect;\n    uniform float radius;\n    uniform float amp;\n    uniform float band;\n    uniform float waves;\n    uniform float speed;\n    uniform float progress;\n    uniform vec2 uCenter;\n    uniform sampler2D uSampler;\n    uniform float uOpacity;\n\n    varying vec2 vTextureCoord;\n\n    void main() {\n        vec2 tc = vTextureCoord;\n        vec2 uv = vec2(0.0, 0.0);\n        vec2 p;\n        float len;\n        vec2 uv_offset;\n        float wave_width = band * radius;\n\n        p = (tc - uCenter);\n        p.x = p.x * aspect;\n        len = length(p);\n\n        float current_radius = radius * progress;\n        float damp_factor = 1.0;\n        if (progress > .5) {\n            damp_factor = (1.0 - progress) * 2.0;\n        }\n\n        float cut_factor = clamp(wave_width * damp_factor - abs(current_radius - len), 0.0, 1.0);\n        float waves_factor = waves * len / radius;\n        uv_offset = (p / len) * cos((waves_factor - progress * speed) * 3.14) * amp * cut_factor;\n\n        uv += uv_offset;\n\n        vec4 t_image = texture2D(uSampler, fract(tc + uv));\n\n        // gl_FragColor = t_image;\n        gl_FragColor = vec4(t_image.rgb, t_image.a * uOpacity);\n    }\n",
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uCenter: {
                    type: "2f",
                    value: [.5, .5]
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                },
                progress: {
                    type: "1f",
                    value: 0
                },
                speed: {
                    type: "1f",
                    value: 4
                },
                waves: {
                    type: "1f",
                    value: 14
                },
                band: {
                    type: "1f",
                    value: .3
                },
                amp: {
                    type: "1f",
                    value: .3
                },
                aspect: {
                    type: "1f",
                    value: n / r
                },
                radius: {
                    type: "1f",
                    value: 1
                }
            },
            this.material = t,
            t
        }
        ,
        t
    }()
      , No = function() {
        function t(t, e, n, r) {
            var i = this;
            this.startAni = function() {
                i.animation.start()
            }
            ,
            this.update = function() {
                i.animation.update()
            }
            ,
            this.pano = t,
            this.distance = n,
            this.refinedDir = e,
            this.camera = this.pano.camera,
            this.cameraBase = this.pano.camera.clone(),
            this.handleEnd = r,
            this.initAni()
        }
        return t.prototype.initAni = function() {
            var t = this
              , e = this.distance
              , n = this.refinedDir
              , r = Math.cos(g(n))
              , i = Math.sin(g(n));
            this.animation = new ho(0,1,400,so.easeOutQuad).onUpdate((function(n) {
                var o = e * n
                  , a = r * o
                  , s = i * o;
                t.camera.setPosition(a, 0, s),
                t.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            )).onEnd((function() {
                t.handleEnd && t.handleEnd()
            }
            ))
        }
        ,
        t
    }()
      , Fo = function(t, e, n, r) {
        this.x = t || 0,
        this.y = e || 0,
        this.width = n || 0,
        this.height = r || 0
    }
      , jo = function(t, e) {
        var n = this;
        this.angleDegreeDelta = function(t, e) {
            var n = Math.abs(t - e);
            return n > 180 ? 360 - n : n
        }
        ,
        this.getRoad = function(t, e, n, r, i) {
            for (var o, a = [], s = [[-t / 2, -e, -10], [-t / 2, -e, -20], [t / 2, -e, -10], [t / 2, -e, -20]], u = s.length, h = 0; h < u; h++)
                ee(o = s[h], o, n),
                a[h] = {
                    x: o[0] * r * .5,
                    y: -o[1] * i * .5
                };
            return a
        }
        ,
        this.getIntersection = function(t, e, n, r) {
            if (t.x === e.x || n.x === r.x)
                return null;
            var i = (e.y - t.y) / (e.x - t.x)
              , o = (r.y - n.y) / (r.x - n.x);
            if (i === o)
                return null;
            var a = (o * n.x - i * t.x + t.y - n.y) / (o - i);
            return {
                x: a,
                y: i * (a - t.x) + t.y
            }
        }
        ,
        this.calculateVanishPoint = function(t, e, r, i) {
            var o = n.getIntersection(t[0], t[1], t[2], t[3]);
            return null === o ? null : (o.x += r * e * .5,
            o.y += i * e * .5,
            o)
        }
        ,
        this.getOuterRect = function(t, e, n) {
            return new Fo(t * (n - 1) * .5,e * (n - 1) * .5,t,e)
        }
        ,
        this.transformPoint = function(t, e, n) {
            return t && void 0 !== t.x && void 0 !== t.y ? {
                x: t.x + e,
                y: t.y + n
            } : t
        }
        ,
        this.getInnerRect = function(t, e, r, i, o) {
            var a = n.transformPoint(t, .5 * -r * o, .5 * -i * o)
              , s = n.transformPoint(a, 0, 20)
              , u = n.transformPoint(a, 10, 20)
              , h = n.getIntersection(e[0], e[1], s, u)
              , c = n.getIntersection(e[2], e[3], s, u)
              , l = n.transformPoint(h, 0, -70)
              , f = new Fo(l.x + r * o * .5,l.y + i * o * .5,c.x - h.x,70);
            return f = n.fixInnerRectPosition(f, t),
            f = n.fixInnerRectSize(f, t, r)
        }
        ,
        this.fixInnerRectPosition = function(t, e) {
            var n = t
              , r = (e.x - t.x) / t.width
              , i = 0;
            return r > .7 && (i = r - .7),
            r < .3 && (i = .3 - r),
            n.x = n.x + n.width * i,
            n
        }
        ,
        this.fixInnerRectSize = function(t, e, n) {
            var r, i, o, a, s = t;
            s.width / n > .12 && (a = (o = .12 * n) * (s.width / s.height),
            r = s.x + (s.width - o) * (e.x - s.x) / s.width,
            i = s.y + (s.height - a) * (e.y - s.y) / s.height,
            s = new Fo(r,i,o,a));
            var u = s.width / s.height;
            return a = s.height,
            u > 1.2 && (a = s.height * u / 1.2),
            u < .9 && (a = s.height * u / .9),
            i = s.y + s.height - a,
            s.height = a,
            s.y = i,
            s
        }
        ,
        this.panoData = t.panoData,
        this.camera = t.camera,
        this.projectionMatrix = this.camera.projectionMatrix,
        this.fov = g(this.camera.fov),
        this.traverseDir = e,
        this.cameraHeading = t.getPov().heading || 0,
        this.isMovingForward = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) <= 90,
        this.roadWith = Math.min(1.5 * this.panoData.getRoadWidth(), 10),
        this.deviceHeight = this.panoData.deviceHeight || 2.2,
        this.panoWidth = t._container.clientWidth,
        this.panoHeight = t._container.clientHeight;
        var r = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) > 45;
        this.snapshotRatio = r ? 1 : 1.8,
        this.projectionRoadInfos = this.getRoad(this.roadWith, this.deviceHeight, this.projectionMatrix, this.panoWidth, this.panoHeight),
        this.vanishPoint = this.calculateVanishPoint(this.projectionRoadInfos, this.snapshotRatio, this.panoWidth, this.panoHeight),
        this.innerRect = this.getInnerRect(this.vanishPoint, this.projectionRoadInfos, this.panoWidth, this.panoHeight, this.snapshotRatio),
        this.outerRect = this.getOuterRect(this.panoWidth, this.panoHeight, this.snapshotRatio),
        this.focusLength = .5 * this.panoHeight / Math.tan(.75 * this.fov),
        this.vanishPointDeltaX = this.vanishPoint.x - this.outerRect.x - .5 * this.outerRect.width,
        this.vanishPointDeltaY = this.vanishPoint.y - this.outerRect.y - .5 * this.outerRect.height
    }
      , zo = {
        FAR: [10, 10, 0],
        LEFT: [0, 10, 30],
        RIGHT: [0, 10, 30],
        TOP: [10, 0, 30],
        BOTTOM: [10, 0, 30]
    }
      , Vo = {
        FAR: ["innerTopLeftVertex", "innerBottomRightVertex"],
        LEFT: ["outerTopLeftVertex", "innerBottomLeftVertex"],
        RIGHT: ["innerTopRightVertex", "outerBottomRightVertex"],
        TOP: ["outerTopLeftVertex", "innerTopRightVertex"],
        BOTTOM: ["innerBottomLeftVertex", "outerBottomRightVertex"]
    }
      , Go = Object.keys(zo)
      , Wo = function(t) {
        function e(e, n) {
            var r;
            if ((r = t.call(this) || this).createSkeleton = function(t) {
                var e = t.vanishPoint
                  , n = t.innerRect
                  , r = t.outerRect
                  , i = t.focusLength
                  , o = r.y + r.height - n.y - n.height
                  , a = e.y - n.y
                  , s = e.x - n.x
                  , u = n.x + n.width - e.x
                  , h = r.y + r.height - e.y
                  , c = o * i / (h - o)
                  , l = u * (i + c) / i
                  , f = -(s * (i + c) / i)
                  , d = h + a * (i + c) / i - h
                  , p = -h
                  , v = c / 5;
                return {
                    innerTopLeftVertex: {
                        x: f,
                        y: d,
                        z: -c
                    },
                    innerBottomLeftVertex: {
                        x: f,
                        y: p,
                        z: -c
                    },
                    innerTopRightVertex: {
                        x: l,
                        y: d,
                        z: -c
                    },
                    innerBottomRightVertex: {
                        x: l,
                        y: p,
                        z: -c
                    },
                    outerTopLeftVertex: {
                        x: f,
                        y: d,
                        z: v
                    },
                    outerTopRightVertex: {
                        x: l,
                        y: d,
                        z: v
                    },
                    outerBottomLeftVertex: {
                        x: f,
                        y: p,
                        z: v
                    },
                    outerBottomRightVertex: {
                        x: l,
                        y: p,
                        z: v
                    }
                }
            }
            ,
            r.modelSkeleton = function(t, e) {
                var n = []
                  , i = [];
                return Go.forEach((function(o) {
                    var a = xi(Vo[o], 2)
                      , s = a[0]
                      , u = a[1]
                      , h = n.length / 3;
                    n = n.concat(r.calculatePlaneVertex(t[s], t[u], o, e)),
                    i = i.concat(r.calculateIndices(o, h))
                }
                )),
                [n, i]
            }
            ,
            r.calculatePlaneVertex = function(t, e, n, i) {
                for (var o, a = [], s = xi(zo[n], 3), u = s[0], h = s[1], c = s[2], l = r.linerInterpolate(t.x, e.x, u), f = r.linerInterpolate(t.y, e.y, h), d = r.linerInterpolate(t.z, e.z, c), p = 0; p <= u; p++)
                    for (var v = 0; v <= h; v++)
                        for (var m = 0; m <= c; m++)
                            En(o = hn(l[p], f[v], d[m], 1), o, i),
                            o[0] = o[0] / o[3],
                            o[1] = o[1] / o[3],
                            o[2] = o[2] / o[3],
                            a.push(o[0], o[1], o[2]);
                return a
            }
            ,
            r.calculateIndices = function(t, e) {
                var n = []
                  , r = zo[t];
                r = r.filter((function(t) {
                    return t > 0
                }
                ));
                for (var i = xi(r, 2), o = i[0], a = i[1], s = 0, u = 0, h = 0, c = 0, l = 0; l < o; l++)
                    for (var f = 0; f < a; f++)
                        u = (s = e + (a + 1) * l + f) + 1,
                        c = (h = s + a + 1) + 1,
                        n.push(s, h, c),
                        n.push(s, c, u);
                return n
            }
            ,
            r.linerInterpolate = function(t, e, n) {
                var r = [];
                if (n <= 0)
                    r.push(t);
                else
                    for (var i = (e - t) / n, o = 0; o <= n; o++)
                        r[o] = t + i * o;
                return r
            }
            ,
            r.calculateUVCoordinate = function(t, e, n) {
                for (var i, o = t.camera, a = t.panoWidth, s = t.panoHeight, u = t.vanishPointDeltaX, h = t.vanishPointDeltaY, c = [], l = e.width, f = e.height, d = 0, p = 0, v = n.length / 3, m = 0; m < v; m++)
                    En(i = hn(n[3 * m], n[3 * m + 1], n[3 * m + 2], 1), i, o.viewMatrix),
                    En(i, i, o.projectionMatrix),
                    i[0] = i[0] / i[3],
                    i[1] = i[1] / i[3],
                    i[2] = i[2] / i[3],
                    i[3] = 1,
                    d = (i[0] * a * .5 + u + .5 * l) / l,
                    p = (i[1] * s * .5 + h + .5 * f) / f,
                    c.push(r.getValidateUV(d), r.getValidateUV(p));
                return new Float32Array(c)
            }
            ,
            r.getValidateUV = function(t) {
                return Math.max(-.1, Math.min(1.1, t))
            }
            ,
            r.rotationMatrix = Pe(),
            r.camera = e.camera,
            e.isMovingForward)
                Ve(r.rotationMatrix, r.rotationMatrix, g(_(-e.traverseDir + e.panoData.heading)));
            else {
                var i = _(180 - e.traverseDir + e.panoData.heading);
                Ve(r.rotationMatrix, r.rotationMatrix, g(i))
            }
            r.cuboidVertexes = r.createSkeleton(e);
            var o = r.modelSkeleton(r.cuboidVertexes, r.rotationMatrix)
              , a = xi(o, 2)
              , s = a[0]
              , u = a[1];
            return r.verticesBufferData = new Float32Array(s),
            r.indicesBufferData = new Uint16Array(u),
            r.uvtsBufferData = r.calculateUVCoordinate(e, n, s, r.rotationMatrix),
            r.setAttribute("position", new Gr(r.verticesBufferData,3)),
            r.setAttribute("uv", new Gr(r.uvtsBufferData,2)),
            r.setIndexes(r.indicesBufferData),
            r
        }
        return c(e, t),
        e
    }(Zr)
      , Ho = [0, 1, 0, .5]
      , Zo = function() {
        function t(t, e, n, r, i) {
            var o = this;
            this.start = function() {
                o.animation.start(),
                o._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                o.animation.update()
            }
            ,
            this._pano = t,
            this.distance = e,
            this.handleEnd = i,
            this.traverseDir = r,
            this.snapshot = n,
            this.camera = t.camera,
            this.scene = this.initScene(),
            this.rotationMatrix = this.traverseGeometry.rotationMatrix,
            this.initAni()
        }
        var e = t.prototype;
        return e.initAni = function() {
            var t = this
              , e = Vt(0, 0, this.distance);
            ee(e, e, this.rotationMatrix),
            this.animation = new ho(0,1,700,so.linear).onUpdate((function(n) {
                var r = Ft();
                Yt(r, e, n),
                t.scene.traverse((function(t) {
                    t.position = r,
                    t.updateWorldMatrix(!0)
                }
                )),
                t._pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            )).onEnd((function() {
                t.handleEnd && t.handleEnd(),
                t._pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            ))
        }
        ,
        e.initScene = function() {
            var t = new Qr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new jo(this._pano,this.traverseDir)
              , o = new Fo(0,0,n,r)
              , a = new Wo(i,o)
              , s = this.initMaterial()
              , u = new Kr(a,s);
            return this.traverseGeometry = a,
            t.add(u),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ti;
            return t.depthTest = !1,
            t.vertexShader = Ao,
            t.fragmentShader = Co,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                },
                vColor: {
                    type: "4f",
                    value: Ho
                },
                showDebugLine: {
                    type: "1i",
                    value: true
                }
            },
            this.material = t,
            t
        }
        ,
        t
    }()
      , qo = function() {
        function t() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            this.x = t,
            this.y = e
        }
        return t.prototype.equals = function(t) {
            return t && t.x === this.x && t.y === this.y
        }
        ,
        t
    }()
      , Yo = function() {
        function t(t, e) {
            var n = this;
            this.setData = function(t, e) {
                n.panoData = t,
                n.nextPanoData = e
            }
            ,
            this.sceneChangeHandler = function() {
                if (n.panoData && n.nextPanoData)
                    return new Promise((function(t) {
                        var e = n.isStreet(n.panoData.panoType)
                          , r = n.isStreet(n.nextPanoData.panoType)
                          , i = n.snapshotFn()
                          , o = n.pano.animationType;
                        if (o && ["waterwave", "fade"].indexOf(o) > -1)
                            switch (o) {
                            case "waterwave":
                                n.prepareWaterWave(i),
                                t();
                                break;
                            case "fade":
                                n.prepareFade(i),
                                t()
                            }
                        else
                            r && e ? (n.setDir(),
                            n.prepareTraverse(i).then((function(e) {
                                n.prepareFade(e),
                                t()
                            }
                            ))) : (n.prepareFade(i),
                            t())
                    }
                    ))
            }
            ,
            this.setSnapshot = function(t) {
                n.snapshot = t
            }
            ,
            this.pano = t,
            this.snapshotFn = e,
            this.panoData = null,
            this.nextPanoData = null,
            this.changeAni = null,
            this.animateDir = 0
        }
        var e = t.prototype;
        return e.draw = function() {
            if (this.changeAni) {
                var t = this.changeAni
                  , e = t.scene
                  , n = t.camera;
                this.changeAni.update(),
                this.pano.renderer.render(e, n)
            }
        }
        ,
        e.setDir = function() {
            if (this.panoData && this.nextPanoData) {
                var t = this.nextPanoData.panoId
                  , e = this.panoData.getTopos().filter((function(e) {
                    return e && e.panoId === t
                }
                ));
                if (e.length) {
                    var n = e[0].topoDir;
                    this.animateDir = n
                } else
                    this.animateDir = this.pano.getPov().heading || 0
            }
        }
        ,
        e.prepareJump = function() {
            var t = this
              , e = this.calcJumpDistance();
            return new Promise((function(n) {
                t.changeAni = new No(t.pano,t.animateDir,e,(function() {
                    t.changeAni = null,
                    n()
                }
                )),
                t.changeAni.startAni(),
                t.pano.dispatchEvent({
                    debug: !0,
                    log: "穿梭动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ))
        }
        ,
        e.prepareTraverse = function(t) {
            var e = this
              , n = this.calcJumpDistance();
            return new Promise((function(r) {
                e.changeAni = new Zo(e.pano,n,t,e.animateDir,(function() {
                    var t = e.snapshotFn(e.changeAni.scene, e.changeAni.camera);
                    r(t),
                    e.changeAni = null
                }
                )),
                e.changeAni.start(),
                e.pano.dispatchEvent({
                    debug: !0,
                    log: "穿梭动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ))
        }
        ,
        e.prepareFade = function(t) {
            var e = this;
            this.changeAni = new ko(this.pano,t,(function() {
                e.changeAni = null,
                e.pano.emit(d.SCENE_CHANGE_END)
            }
            ))
        }
        ,
        e.prepareWaterWave = function(t) {
            var e = this;
            this.changeAni = new Uo(this.pano,t,(function() {
                e.changeAni = null,
                e.pano.emit(d.SCENE_CHANGE_END)
            }
            ))
        }
        ,
        e.calcJumpDistance = function() {
            var t, e, n = 300, r = (t = new qo(this.panoData.panoX,this.panoData.panoY),
            e = new qo(this.nextPanoData.panoX,this.nextPanoData.panoY),
            t && e ? Math.round(Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))) : 0);
            "number" == typeof r && (n *= Math.pow(r, 1 / 4));
            return n
        }
        ,
        e.isStreet = function(t) {
            return t === p.TYPE_STREET
        }
        ,
        t
    }()
      , Xo = function() {
        function t(t, e) {
            var n = e.fov
              , r = void 0 === n ? 145 : n
              , i = e.cameraY
              , o = void 0 === i ? 3e3 : i
              , a = e.handleEnd;
            this._pano = void 0,
            this.originFov = void 0,
            this.originRotateX = void 0,
            this.originRotateY = void 0,
            this.targetFov = void 0,
            this.targetCameraY = void 0,
            this.handleEnd = void 0,
            this.animate = void 0,
            this._pano = t,
            this.originFov = this.camera.fov,
            this.originRotateX = this.camera.rotation.x,
            this.originRotateY = this.camera.rotation.y,
            this.targetFov = r,
            this.targetCameraY = o,
            this.handleEnd = a,
            this.init()
        }
        var e = t.prototype;
        return e.start = function() {
            this._pano.dispatchEvent({
                type: d.REFRESH,
                debug: !0,
                log: "开场动画动画起始，渲染一帧"
            }),
            this.animate.start()
        }
        ,
        e.update = function() {
            this.animate.update()
        }
        ,
        e.init = function() {
            var t = this
              , e = this.camera;
            this.handleCameraChange(0),
            this.animate = new ho(0,1,p.FISHEYE_DURATION,so.easeInOutQuad).onUpdate((function(e) {
                t.handleCameraChange(e),
                t._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "开场动画动画，渲染一帧"
                })
            }
            )).onEnd((function() {
                e.fov = t.originFov,
                e.rotateX(t.originRotateX),
                e.rotateY(t.originRotateY),
                e.setPosition(0, 0, 0),
                e.updateWorldMatrix(),
                e.updateProjectionMatrix(),
                t._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "开场动画动画结束，渲染一帧"
                }),
                t.handleEnd()
            }
            ))
        }
        ,
        e.handleCameraChange = function(t) {
            var e = this.camera
              , n = this.targetCameraY
              , r = this.targetFov - (this.targetFov - this.originFov) * t
              , i = (this.originRotateX - -90) * t - 90
              , o = this.originRotateY * t;
            e.fov = r,
            e.rotateX(i),
            e.rotateY(o),
            e.setPosition(0, n - n * t, 0),
            e.updateWorldMatrix(),
            e.updateProjectionMatrix()
        }
        ,
        o(t, [{
            key: "camera",
            get: function() {
                return this._pano.camera
            }
        }]),
        t
    }();
    function Ko(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return Qo(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return Qo(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function Qo(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var Jo = function() {
        function t(t) {
            var e = this;
            this.name = "PanoOverlayManager",
            this.overlays = [],
            this.pano = void 0,
            this.isReady = !1,
            this.clickChecker = function(t, n) {
                var r, i = !0, o = Ko(e.overlays);
                try {
                    for (o.s(); !(r = o.n()).done; ) {
                        var a = r.value
                          , s = a.dom.getBoundingClientRect()
                          , u = s.left
                          , h = s.right
                          , c = s.top
                          , l = s.bottom;
                        if (t >= u && t <= h && n >= c && n <= l) {
                            i = !1,
                            a.handleClick();
                            break
                        }
                    }
                } catch (t) {
                    o.e(t)
                } finally {
                    o.f()
                }
                return i
            }
            ,
            this.pano = t
        }
        var e = t.prototype;
        return e.handleAdd = function(t) {
            t && t.id && (this.overlays.some((function(e) {
                return e.id === t.id
            }
            )) || (this.overlays.push(t),
            this.isReady && t.init(this.pano)))
        }
        ,
        e.handleRemove = function(t) {
            for (var e = 0; e < this.overlays.length; e++)
                if (this.overlays[e].id === t.id)
                    return this.overlays[e].remove(),
                    void this.overlays.splice(e, 1)
        }
        ,
        e.init = function() {
            this.isReady = !0;
            var t, e = Ko(this.overlays);
            try {
                for (e.s(); !(t = e.n()).done; ) {
                    t.value.init(this.pano)
                }
            } catch (t) {
                e.e(t)
            } finally {
                e.f()
            }
        }
        ,
        e.draw = function() {
            if (this.isReady) {
                var t, e = Ko(this.overlays);
                try {
                    for (e.s(); !(t = e.n()).done; ) {
                        t.value.draw()
                    }
                } catch (t) {
                    e.e(t)
                } finally {
                    e.f()
                }
            }
        }
        ,
        e.destroy = function() {
            var t, e = Ko(this.overlays);
            try {
                for (e.s(); !(t = e.n()).done; ) {
                    t.value.remove()
                }
            } catch (t) {
                e.e(t)
            } finally {
                e.f()
            }
            this.overlays = []
        }
        ,
        t
    }();
    function $o(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return ta(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return ta(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function ta(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var ea = function() {
        function t(t) {
            var e = this;
            this.renderer = void 0,
            this.gl = void 0,
            this.camera = void 0,
            this.cameraNoFix = null,
            this.panoData = null,
            this.scene = void 0,
            this.sceneChange = void 0,
            this.openingAni = void 0,
            this.sphereRender = void 0,
            this.linkGLRender = void 0,
            this.overlayManager = void 0,
            this.skyboxRender = void 0,
            this.pano = void 0,
            this.renderThreadId = null,
            this.requestId = null,
            this.isRAFRuning = !1,
            this.setData = function() {
                var t = nt(ot.mark((function t(n) {
                    var r, o;
                    return ot.wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                if (n) {
                                    t.next = 2;
                                    break
                                }
                                return t.abrupt("return");
                            case 2:
                                if (!e.panoData || !e.pano.useAnimation) {
                                    t.next = 8;
                                    break
                                }
                                return e.sceneChange.setData(e.panoData, n),
                                t.next = 6,
                                e.sceneChange.sceneChangeHandler();
                            case 6:
                                void 0 !== e.pano.backupUseAnimation && (e.pano.useAnimation = e.pano.backupUseAnimation),
                                e.pano.animationType = "";
                            case 8:
                                e.reset(),
                                e.panoData = n,
                                e.pano.panoData = n,
                                void 0 === i(n.defaultHeading) && void 0 === i(n.defaultPitch) || e.pano.handlePovChange({
                                    heading: n.defaultHeading,
                                    pitch: n.defaultPitch
                                }),
                                r = n.image && 6 === n.image.length,
                                (o = r ? e.skyboxRender : e.sphereRender).setData(n),
                                e.linkGLRender.setData(n),
                                e.overlayManager.init(),
                                e.scene.add(o.meshs),
                                e.updateProjectionMatrix(e.camera),
                                e.updateCameraHeadingAndPitch(e.camera);
                            case 20:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t)
                }
                )));
                return function(e) {
                    return t.apply(this, arguments)
                }
            }(),
            this.getSnapshot = function(t, n) {
                t = t || e.scene,
                n = n || e.camera;
                var r = e.pano.getContainerSize()
                  , i = r.width
                  , o = r.height
                  , a = new Vi(i,o);
                return a.premultiplyAlpha = !0,
                e.renderer.render(t, n, a),
                a
            }
            ,
            this.update = function() {
                e.panoData && (e.sphereRender.update(),
                e.linkGLRender.update(),
                e.startRenderThread())
            }
            ,
            this.onThumbLoaded = function() {
                e.sceneChange.changeAni && e.sceneChange.changeAni.start();
                var t = e.linkGLRender.meshs;
                t && e.scene.add(t),
                e.startFishEyeAni()
            }
            ,
            this.startRenderThread = function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                e.renderThreadId && (clearTimeout(e.renderThreadId),
                e.renderThreadId = null),
                e.renderThreadId = window.setTimeout((function() {
                    e.isRAFRuning = !1,
                    e.renderThreadId = null
                }
                ), t),
                e.isRAFRuning || (e.isRAFRuning = !0,
                e.renderFrame())
            }
            ,
            this.resize = function() {
                var t = e.pano.getContainer();
                e.renderer.setSize(t.clientWidth, t.clientHeight)
            }
            ;
            var n = window.devicePixelRatio || 1
              , r = t.getContainer();
            this.pano = t,
            this.renderer = new Ui({
                premultipliedAlpha: !1,
                preserveDrawingBuffer: t.opts.enableCapture || !1,
                antialias: !(n > 1),
                pixelRatio: n,
                width: r.clientWidth,
                height: r.clientHeight
            }),
            this.renderer.setSize(r.clientWidth, r.clientHeight),
            t.getPanes().tileLayer.appendChild(this.renderer.domElement),
            this.gl = this.renderer.getContext(),
            this.camera = new Ki(75,r.clientWidth / r.clientHeight,.01,67e3),
            this.scene = new Qr,
            t.gl = this.gl,
            t.canvas = this.renderer.domElement,
            t.scene = this.scene,
            t.camera = this.camera,
            t.cameraNoFix = this.cameraNoFix,
            t.renderer = this.renderer,
            t.renders = [],
            this.sceneChange = new Yo(t,this.getSnapshot),
            this.initModule()
        }
        var e = t.prototype;
        return e.initModule = function() {
            var t = this.pano;
            this.sphereRender = new So(t),
            this.linkGLRender = new Bo(t),
            this.overlayManager = new Jo(t),
            this.skyboxRender = new eo(t),
            this.pano.renders.push(this.sphereRender, this.linkGLRender, this.overlayManager, this.skyboxRender)
        }
        ,
        e.reset = function() {
            this.scene.remove(this.sphereRender.meshs),
            this.scene.remove(this.linkGLRender.meshs)
        }
        ,
        e.getModule = function(t) {
            var e, n = null, r = $o(this.pano.renders);
            try {
                for (r.s(); !(e = r.n()).done; ) {
                    var i = e.value;
                    if (i.name === t) {
                        n = i;
                        break
                    }
                }
            } catch (t) {
                r.e(t)
            } finally {
                r.f()
            }
            return n
        }
        ,
        e.renderFrame = function() {
            !1 !== this.isRAFRuning ? (this.openingAni && this.openingAni.update(),
            this.sphereRender.draw(),
            this.renderer.render(this.scene, this.camera),
            this.overlayManager.draw(),
            this.sceneChange.draw(),
            this.requestId = requestAnimationFrame(this.renderFrame.bind(this))) : this.requestId && (cancelAnimationFrame(this.requestId),
            this.requestId = null)
        }
        ,
        e.startFishEyeAni = function() {
            var t = this;
            this.pano.fisheye && (this.openingAni = new Xo(this.pano,{
                handleEnd: function() {
                    t.openingAni = null,
                    t.pano.fisheye = !1
                }
            }),
            setTimeout((function() {
                t.openingAni.start(),
                t.startRenderThread()
            }
            ), p.FISHEYE_DELAY))
        }
        ,
        e.updateProjectionMatrix = function(t, e) {
            var n = this.pano.getFov(e)
              , r = this.pano.getContainerSize()
              , i = r.width / r.height;
            t.fov = n,
            t.aspect = i,
            t.updateProjectionMatrix()
        }
        ,
        e.updateCameraHeadingAndPitch = function(t) {
            var e = this.pano.getPov()
              , n = e.heading
              , r = e.pitch
              , i = this.panoData
              , o = i.fixHeading
              , a = void 0 === o ? 0 : o
              , s = i.fixPitch
              , u = void 0 === s ? 0 : s
              , h = i.fixRoll
              , c = void 0 === h ? 0 : h;
            t.rotateX(r - u),
            t.rotateY(-n + a),
            t.rotateZ(c),
            t.updateWorldMatrix()
        }
        ,
        e.safeCall = function(t, e, n) {
            var r = this.getModule(t);
            if (r && r[e])
                return r[e].apply(r, n || []);
            throw new Error("[safeCall] get module error => ".concat(t))
        }
        ,
        o(t, [{
            key: "isCanUpdate",
            get: function() {
                var t = this.sceneChange.changeAni
                  , e = this.openingAni;
                return this.panoData && !(t || e)
            }
        }]),
        t
    }()
      , na = function() {
        function t(t) {
            var e = this;
            this.updateAnglePerPixel = function() {
                e._anglePerPixel = e._pano.calcAnglePerPixel()
            }
            ,
            this.destroy = function() {
                e.bindEvent(!1)
            }
            ,
            this._pano = t,
            this._displayZoom = t.getZoom(),
            this._anglePerPixel = t.calcAnglePerPixel(),
            this.lock = !1,
            this.clickTimer = null,
            this.dragAni = null,
            this.state = {
                initPos: null,
                initHeading: 0,
                initPitch: 0,
                lastDiffPos: null,
                moveDiffPos: null,
                isTouchDown: !1,
                isTouchMove: !1,
                startTime: 0,
                lastMoveTime: 0
            }
        }
        var e = t.prototype;
        return e.init = function() {
            this._initialized || (this._initialized = !0,
            this.isMobile = navigator.userAgent.toLowerCase().match(/ipod|ipad|iphone|android/),
            this.isMobile ? (this.EVENTS = {
                START: "touchstart",
                MOVING: "touchmove",
                END: "touchend",
                OUT: "touchcancel",
                WHEEL: "gesturechange",
                DOMMouseScroll: "DOMMouseScroll"
            },
            this.getPagePosition = function(t) {
                var e = t.touches.length > 0 ? t.touches[0] : t.changedTouches[0];
                return {
                    x: e.pageX,
                    y: e.pageY
                }
            }
            ) : (this.EVENTS = {
                START: "mousedown",
                MOVING: "mousemove",
                END: "mouseup",
                OUT: "mouseout",
                WHEEL: "mousewheel"
            },
            this.getPagePosition = function(t) {
                return {
                    x: t.pageX,
                    y: t.pageY
                }
            }
            ),
            this.bindEvent())
        }
        ,
        e.bindEvent = function() {
            var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
              , e = document.body
              , n = this.EVENTS
              , r = n.START
              , i = n.MOVING
              , o = n.END
              , a = this._pano._svContainer
              , s = t ? "addEventListener" : "removeEventListener";
            a[s](r, this.handleDown.bind(this)),
            a[s](i, this.handleMove.bind(this)),
            e[s](o, this.handleUp.bind(this))
        }
        ,
        e.handleDown = function(t) {
            this.dragAni && this.dragAni.stop();
            var e = this.state
              , n = this.getPagePosition(t)
              , r = this._pano.getPov();
            e.initPos = n,
            e.isTouchDown = !0,
            e.initHeading = r.heading,
            e.initPitch = r.pitch,
            e.startTime = x(),
            this._pano.dispatchEvent(d.TOUCH_START, t)
        }
        ,
        e.handleMove = function(t) {
            if (this.state.isTouchDown) {
                this.state.isTouchMove = !0;
                var e = this.calcDiffPos(this.state.initPos, this.getPagePosition(t));
                this.setPov(e),
                this.state.moveDiffPos = e,
                this.state.lastDiffPos = e,
                this.state.lastMoveTime = x(),
                t.preventDefault(),
                t.stopPropagation()
            }
        }
        ,
        e.handleUp = function(t) {
            var e = this;
            if (this.state.isTouchDown) {
                var n = !0
                  , r = this.getPagePosition(t);
                if (t.pos = r,
                this.state.isTouchDown = !1,
                this._pano.dispatchEvent(d.TOUCH_END, t),
                this._pano.renders.length)
                    for (var i = 0; i < this._pano.renders.length; i++) {
                        var o = this._pano.renders[i];
                        if (o.clickChecker && !(n = o.clickChecker(r.x, r.y))) {
                            t.stopPropagation();
                            break
                        }
                    }
                if (!1 !== n)
                    if (this.state.isTouchMove)
                        this.state.isTouchMove = !1,
                        this.processMotion(t);
                    else if (t.stopPropagation(),
                    this.clickTimer)
                        clearTimeout(this.clickTimer),
                        this.clickTimer = null,
                        this._pano.dispatchEvent(d.DOUBLE_CLICK, t);
                    else {
                        this.clickTimer = setTimeout((function() {
                            e.clickTimer = null,
                            e._pano.dispatchEvent(d.CLICK, t)
                        }
                        ), 300)
                    }
            }
        }
        ,
        e.setPov = function(t) {
            var e = t.x
              , n = t.y
              , r = -e * this._anglePerPixel
              , i = n * this._anglePerPixel
              , o = this.state.initHeading + r
              , a = this.state.initPitch + i;
            this._pano.setPov({
                heading: o,
                pitch: a
            })
        }
        ,
        e.processMotion = function(t) {
            var e = this
              , n = this.state
              , r = x()
              , i = r - n.lastMoveTime
              , o = n.moveDiffPos
              , a = o.x
              , s = o.y;
            if (i < 300 && (Math.abs(a) > 10 || Math.abs(s) > 10)) {
                var u = this.calcDiffPos(this.state.initPos, this.getPagePosition(t))
                  , h = 2 * Math.sqrt(Math.pow(u.x, 2) + Math.pow(u.y, 2)) / (.008 * (r - n.startTime))
                  , c = [u.x > 0 ? 1 : -1, u.y > 0 ? 1 : -1]
                  , l = Math.abs(u.x)
                  , f = Math.abs(u.y)
                  , p = Math.atan2(f, l)
                  , v = Math.cos(p) * h
                  , m = Math.sin(p) * h;
                -1 === c[0] && (v = -v),
                -1 === c[1] && (m = -m),
                this.dragAni && this.dragAni.stop();
                var g = this._pano.getPov()
                  , y = g.heading
                  , _ = g.pitch;
                n.initHeading = y,
                n.initPitch = _;
                this.dragAni = new ho(0,1,400,(function(t) {
                    return .3125 * t - .15625 * t * t
                }
                )).onUpdate((function(t) {
                    var n = (t *= 6.4) * v
                      , r = t * m;
                    e.setPov({
                        x: n,
                        y: r
                    })
                }
                )).onEnd((function() {
                    e.dragAni = null,
                    e._pano.dispatchEvent({
                        type: d.POV_CHANGED_END
                    })
                }
                )).startAndAutoUpdate()
            } else
                this._pano.dispatchEvent({
                    type: d.POV_CHANGED_END
                })
        }
        ,
        e.calcDiffPos = function(t, e) {
            return t && e ? {
                x: e.x - t.x,
                y: e.y - t.y
            } : {
                x: 0,
                y: 0
            }
        }
        ,
        t
    }();
    function ra(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return ia(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return ia(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function ia(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var oa = function() {
        function t(t) {
            this.pano = t,
            this.preZoom = t.getZoom(),
            this.zoomChangeAni = null,
            this.debug = !1,
            this.panoServiceLock = !1,
            this.bindEvent(),
            this.initModule(),
            this.initResize(),
            this.handleContextStatus()
        }
        var e = t.prototype;
        return e.initModule = function() {
            var t = this.pano;
            this.panoService = new tt(t),
            this.panoGLRender = new ea(t),
            this.op = new na(t)
        }
        ,
        e.initResize = function() {
            var t = this
              , e = this.pano.getContainerSize()
              , n = this.pano.getContainer()
              , r = function(n, r) {
                if (n && r) {
                    var i = new l(n,r);
                    i.equals(e) || (t.pano.dispatchEvent({
                        type: d.SIZE_CHANGED
                    }),
                    e = i)
                }
            };
            if (void 0 !== window.ResizeObserver) {
                var i = new window.ResizeObserver((function(t) {
                    var e, n = ra(t);
                    try {
                        for (n.s(); !(e = n.n()).done; ) {
                            var i = e.value.target;
                            r(i.clientWidth, i.clientHeight)
                        }
                    } catch (t) {
                        n.e(t)
                    } finally {
                        n.f()
                    }
                }
                ));
                i.observe(n),
                this.resizeOb = i
            } else
                this.checkSizeTimer = setInterval((function() {
                    r(n.clientWidth, n.clientHeight)
                }
                ), 80)
        }
        ,
        e.bindEvent = function() {
            var t = this
              , e = this.pano;
            e.on(d.PANO_ERROR, (function() {
                t.panoServiceLock = !1
            }
            )),
            e.on(d.DATA_LOADED, (function(n) {
                t.pano.opts.visible ? t.pano.show() : t.pano.hide(),
                t.panoServiceLock = !1,
                n.options && n.options.animation && (e.backupUseAnimation = e.useAnimation,
                e.useAnimation = n.options.animation,
                "" !== n.options.animationType && (e.animationType = n.options.animationType)),
                t.panoGLRender.setData(n.data),
                t.op.init()
            }
            )),
            e.on(d.SET_POV, (function(n) {
                var r = n.pov
                  , i = n.options
                  , o = (void 0 === i ? {
                    animation: !0
                } : i).animation;
                if (t.panoGLRender.isCanUpdate) {
                    var a = function(n) {
                        e.handlePovChange(n) && (t.panoGLRender.updateCameraHeadingAndPitch(e.camera),
                        t.panoGLRender.update(),
                        e.dispatchEvent(d.POV_CHANGED, n))
                    };
                    if (o) {
                        var s = e.getPov()
                          , u = s.heading
                          , h = s.pitch
                          , c = r.heading - u
                          , l = r.pitch - h;
                        c > 180 ? (u += 360,
                        c = r.heading - u) : c < -180 && (u -= 360,
                        c = r.heading - u),
                        new ho(0,1,400,so["ease-out"]).onUpdate((function(t) {
                            a({
                                heading: u + t * c,
                                pitch: h + t * l
                            })
                        }
                        )).onEnd((function() {}
                        )).startAndAutoUpdate()
                    } else
                        a(r)
                } else
                    e.handlePovChange(r)
            }
            )),
            e.on(d.ZOOM_CHANGED, (function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (t.panoGLRender.isCanUpdate) {
                    var r = t.preZoom
                      , i = e.getZoom();
                    if (r !== i) {
                        var o = n.noAnimation || !1;
                        if (t.zoomChangeAni && (t.zoomChangeAni.stop(),
                        t.zoomChangeAni = null),
                        o)
                            return t.op.updateAnglePerPixel(),
                            t.panoGLRender.updateProjectionMatrix(e.camera),
                            t.panoGLRender.update(),
                            void (t.preZoom = i);
                        var a = 400;
                        t.zoomChangeAni = new ho(r,i,a,so.easeOutCubic).onUpdate((function(n) {
                            t.panoGLRender.updateProjectionMatrix(e.camera, n),
                            t.panoGLRender.update(n)
                        }
                        )).onEnd((function() {
                            t.zoomChangeAni = null,
                            t.preZoom = i
                        }
                        )).startAndAutoUpdate()
                    }
                }
            }
            )),
            e.on(d.DOUBLE_CLICK, (function() {
                t.panoGLRender.isCanUpdate && (v.isMobile && (3 === e.getZoom() ? e.setZoom(2) : e.setZoom(3)))
            }
            )),
            e.on(d.REFRESH, (function(e) {
                var n = e.duration || 200;
                t.panoGLRender.startRenderThread(n),
                t.debug && e.log && e.debug && console.warn(e.log)
            }
            )),
            e.on(d.SET_ID, (function(e) {
                if (!t.panoServiceLock && e.id) {
                    t.panoServiceLock = !0,
                    window.getPanoById = t.panoService.getPanoById;
                    var n = (1e5 * Math.random()).toFixed(0);
                    BMapGL._rd = BMapGL._rd || {},
                    BMapGL._rd["_cbk" + n] = function(t) {
                        t && void 0 !== t.error && 0 === t.error ? window.getPanoById(e.id) : Q("PANORAMA"),
                        delete BMapGL._rd["_cbk" + n]
                    }
                    ,
                    K("PANORAMA", "BMapGL._rd._cbk" + n)
                }
            }
            )),
            e.on(d.SET_POSITION, (function(e) {
                if (!t.panoServiceLock && e.point) {
                    t.panoServiceLock = !0,
                    window.getPanoByLocation = t.panoService.getPanoByLocation;
                    var n = (1e5 * Math.random()).toFixed(0);
                    BMapGL._rd = BMapGL._rd || {},
                    BMapGL._rd["_cbk" + n] = function(t) {
                        t && void 0 !== t.error && 0 === t.error ? window.getPanoByLocation(e.point) : Q("PANORAMA"),
                        delete BMapGL._rd["_cbk" + n]
                    }
                    ,
                    K("PANORAMA", "BMapGL._rd._cbk" + n)
                }
            }
            )),
            e.on(d.SIZE_CHANGED, (function() {
                t.op.updateAnglePerPixel(),
                t.panoGLRender.resize(),
                t.panoGLRender.updateProjectionMatrix(e.camera),
                t.panoGLRender.update()
            }
            )),
            e.on(d.THUMB_LOADED, (function() {
                t.panoGLRender.onThumbLoaded(),
                t.panoGLRender.update()
            }
            )),
            e.on(d.OVERLAY_ADD, (function(e) {
                t.panoGLRender.overlayManager.handleAdd(e)
            }
            )),
            e.on(d.OVERLAY_REMOVE, (function(e) {
                t.panoGLRender.overlayManager.handleRemove(e)
            }
            )),
            e.on(d.OVERLAYS_CLEAR, (function() {
                t.panoGLRender.overlayManager.destroy()
            }
            )),
            e.on(d.LINK_VISIBLE_CHANGE, (function(e) {
                "boolean" == typeof e.value && (t.panoGLRender.safeCall("PanoLinkRender", "setVisible", [e.value]),
                t.pano.dispatchEvent(d.REFRESH))
            }
            )),
            e.on(d.DESTROY, (function() {
                t.op.destroy(),
                t.resizeOb && t.resizeOb.disconnect(),
                t.checkSizeTimer && clearInterval(t.checkSizeTimer),
                t.panoGLRender.renderer.forceContextLoss(),
                e.canvas.removeEventListener("webglcontextlost", t.onWebGLContextLost, !1)
            }
            ));
            var n = v.isFirefox ? "DOMMouseScroll" : "mousewheel"
              , r = new Date;
            e._svContainer.addEventListener(n, (function(t) {
                if (e.opts.enableScrollWheelZoom && e.opts.visible) {
                    var n = new Date;
                    if (n - r < 400)
                        return;
                    r = n;
                    var i = -t.detail / 3 || t.wheelDelta / 120
                      , o = e.getZoom() + i;
                    e.setZoom(o),
                    t.preventDefault()
                }
            }
            ))
        }
        ,
        e.getImgZoom = function() {
            return this.pano.calcDisplayZoom().imgZoom
        }
        ,
        e.handleContextStatus = function() {
            this.pano.canvas.addEventListener("webglcontextlost", this.onWebGLContextLost, !1)
        }
        ,
        e.onWebGLContextLost = function(t) {
            t.preventDefault(),
            setTimeout((function() {
                window.location.reload()
            }
            ), 200)
        }
        ,
        t
    }();
    function aa(t, e, n) {
        t.addEventListener(e, n, !1)
    }
    var sa = function(t) {
        function e(e, n) {
            var r;
            (r = t.call(this) || this).panoData = null,
            r.opts = void 0,
            r.useAnimation = !1,
            r.backupUseAnimation = r.useAnimation,
            r.animationType = "",
            r.fisheye = !1,
            r.canvas = void 0,
            r.camera = void 0,
            r.renderer = void 0,
            r.gl = void 0,
            r.scene = void 0,
            r.cameraNoFix = void 0,
            r.renders = void 0,
            r.closeBtn = null,
            r.navigator = null,
            r._container = void 0,
            r._pov = {
                heading: 0,
                pitch: 0
            },
            r._id = null,
            r._position = null,
            r._zoom = 2,
            r._displayZoomResultsCache = {},
            r._svContainer = void 0,
            r._eventManager = void 0,
            r._panes = void 0,
            r.addCloseButton = function(t) {
                var e = r.closeBtn = document.createElement("div");
                e.className = "pano_close",
                e.style.cssText = ["position:absolute", "right:10px", "top:10px", "padding: 5px 8px;", "cursor:pointer", "border-radius: 4px", "font-size: 14px", "background-color: rgba(0,0,0,.55)", "z-index: 99", "color: #fff"].join(";"),
                e.innerText = "关闭",
                e.title = "退出全景",
                e.onclick = function() {
                    r.hide(),
                    t && t()
                }
                ,
                r._svContainer.appendChild(e)
            }
            ,
            r.getContainer = function() {
                return r._container
            }
            ,
            r.getContainerSize = function() {
                var t = r._container;
                return new l(t.clientWidth,t.clientHeight)
            }
            ,
            r.getPanes = function() {
                return r._panes
            }
            ,
            r.show = function() {
                r.opts.visible = !0,
                w.show(r._svContainer)
            }
            ,
            r.hide = function() {
                r.opts.visible = !1,
                w.hide(r._svContainer)
            }
            ,
            r.getZoom = function() {
                return r._zoom
            }
            ,
            r.setZoom = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                t !== r._zoom && (t > p.MAX_ZOOM && (t = p.MAX_ZOOM),
                t < p.MIN_ZOOM && (t = p.MIN_ZOOM),
                t !== r._zoom && (r._zoom = t,
                r.dispatchEvent(d.ZOOM_CHANGED, {
                    noAnimation: e.noAnimation || !1
                })))
            }
            ,
            r.getPov = function() {
                return r._pov
            }
            ,
            r.setPov = function(t, e) {
                r.dispatchEvent(d.SET_POV, {
                    pov: t,
                    options: e || {
                        animation: !1
                    }
                })
            }
            ,
            r.handlePovChange = function(t) {
                if ("object" === i(t)) {
                    var e = !1
                      , n = t.heading
                      , o = t.pitch;
                    if ("number" != typeof n || isNaN(n) || (e = !0,
                    n = _(n),
                    r._pov.heading = n),
                    "number" == typeof o && !isNaN(n)) {
                        e = !0;
                        var a = r.opts.minPitch
                          , s = r.opts.maxPitch;
                        o > s && (o = s),
                        o < a && (o = a),
                        r._pov.pitch = o
                    }
                    return e
                }
            }
            ,
            r.calcDisplayZoom = function(t, e) {
                t = t || r.getContainerSize(),
                e = e || r.getZoom();
                var n = t
                  , i = n.width
                  , o = n.height
                  , a = r.opts.maxImageZoom
                  , s = r.opts.minImageZoom
                  , u = "".concat(i, "_").concat(o, "_").concat(e);
                if (r._displayZoomResultsCache[u])
                    return r._displayZoomResultsCache[u];
                for (var h = r.calcAnglePerPixel(), c = Math.floor(e) + 2, l = 360 / (2 * Math.pow(2, c - 2) * h); l > 512; )
                    c++,
                    l = 360 / (2 * Math.pow(2, c - 2) * h);
                if (c > a) {
                    var f = c - a;
                    l *= Math.pow(2, f),
                    c = a
                }
                c < s && (c = s);
                var d = {
                    imgZoom: c,
                    displayTileSize: l = Math.round(l)
                };
                return r._displayZoomResultsCache[u] = d,
                d
            }
            ,
            r.calcAnglePerPixel = function() {
                return r.getFov() / r.getContainerSize().height
            }
            ,
            r.getFov = function(t) {
                return t = t || r.getZoom(),
                (v.isMobile ? r.calcMobileFovy : r.calcPCFovy).call(a(r), t)
            }
            ,
            r.getVisible = function() {
                return r.opts.visible
            }
            ,
            r.setId = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                r.useAnimation = e.animation || !1,
                r.fisheye = e.fisheye || !1,
                r.animationType = e.animationType || "",
                r.dispatchEvent(d.SET_ID, {
                    id: t
                })
            }
            ,
            r.setPosition = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                r.useAnimation = e.animation || !1,
                r.fisheye = e.fisheye || !1,
                r.animationType = e.animationType || "",
                r.dispatchEvent(d.SET_POSITION, {
                    point: t
                })
            }
            ;
            var o = {
                minImageZoom: p.TILE_MIN_ZOOM,
                maxImageZoom: p.TILE_MAX_ZOOM,
                minPitch: p.MIN_PITCH,
                maxPitch: p.MAX_PITCH,
                radius: p.RADIUS,
                tileBaseUrls: p.TILE_BASE_URLS,
                linksControl: !0,
                navigationControl: !0,
                enableScrollWheelZoom: !0,
                enableCapture: !1,
                visible: !0
            };
            r.opts = Object.assign({}, o, n);
            var s = "string" == typeof e ? document.querySelector(e) : e;
            if (!s)
                throw new Error("全景引擎宿主容器不存在");
            return r._container = s,
            r._init(),
            r
        }
        c(e, t);
        var n = e.prototype;
        return n.getPosition = function() {
            return this.position
        }
        ,
        n.setOptions = function(t) {
            var e;
            for (e in t)
                if (Object.prototype.hasOwnProperty.call(t, e)) {
                    var n = !0;
                    if ("object" !== i(t[e]) && (n = t[e] !== this.opts[e]),
                    this.opts[e] = t[e],
                    !n)
                        continue;
                    switch (e) {
                    case "linksControl":
                        this.dispatchEvent(d.LINK_VISIBLE_CHANGE, {
                            value: t[e]
                        });
                        break;
                    case "navigationControl":
                        var r = !!t[e]
                          , o = this.navigator;
                        r ? o.show() : o.hide()
                    }
                }
        }
        ,
        n.capture = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.canvas) {
                var e = this.canvas
                  , n = t.quality || .8
                  , r = t.type || "image/jpeg"
                  , i = e.toDataURL(r, n);
                return i
            }
        }
        ,
        n.addOverlay = function(t) {
            this.dispatchEvent(d.OVERLAY_ADD, t)
        }
        ,
        n.removeOverlay = function(t) {
            this.dispatchEvent(d.OVERLAY_REMOVE, t)
        }
        ,
        n.clearOverlays = function() {
            this.dispatchEvent(d.OVERLAYS_CLEAR)
        }
        ,
        n.destroy = function() {
            this.dispatchEvent(d.DESTROY)
        }
        ,
        n._init = function() {
            this._createDoms(),
            this.navigator = function(t) {
                function e(t) {
                    this._initialize(t)
                }
                return m(e.prototype, {
                    _initialize: function(t) {
                        this._pano = t,
                        this.imgPath = t.opts.imgPath || "//api0.map.bdimg.com/images/",
                        this._zoomInEnabled = !0,
                        this._zoomOutEnabled = !0,
                        this._render(),
                        this._bind()
                    },
                    _render: function() {
                        this._container = w.create("div");
                        var t = this._container.style;
                        t.position = "absolute",
                        t.left = "10px",
                        t.top = "10px",
                        t.zIndex = 99;
                        var e = this._container;
                        e.innerHTML = this._generateHtml(),
                        v.isPc ? (this._panBtnContainer = e.children[2],
                        this._panBtns = [this._panBtnContainer.children[0], this._panBtnContainer.children[1], this._panBtnContainer.children[2], this._panBtnContainer.children[3]],
                        this._svgDirGroup = e.children[1].childNodes[0],
                        this._zoomContainer = e.children[3]) : v.isMobile && (this._zoomContainer = e.children[0]),
                        this._btnZoomIn = this._zoomContainer.children[0],
                        this._btnZoomOut = this._zoomContainer.children[1],
                        v.isMobile && (this._zoomContainer.style.left = this._zoomContainer.style.top = "0",
                        this._zoomContainer.style.width = "36px",
                        this._zoomContainer.style.height = "78px",
                        this._btnZoomIn.style.width = this._btnZoomOut.style.width = "33px",
                        this._btnZoomIn.style.height = this._btnZoomOut.style.height = "36px",
                        this._btnZoomOut.style.top = "37.5px"),
                        this._pano.getZoom() >= p.MAX_ZOOM && this._setZoomBtnEnabled("zoomIn", !1),
                        this._pano.getZoom() <= p.MIN_ZOOM && this._setZoomBtnEnabled("zoomOut", !1),
                        this._pano._svContainer.appendChild(e)
                    },
                    _generateHtml: function() {
                        var t = [];
                        return v.isPc && (t.push(this._generatePanHtml()),
                        t.push(this._generateDirHtml()),
                        t.push(this._generatePanBtnHtml())),
                        t.push(this._generateZoomContainerHtml()),
                        t.join("")
                    },
                    _generateDirHtml: function() {
                        return '<svg version="1.1" overflow="hidden" width="82px" height="82px" viewBox="0 0 82 82"style="position: absolute; top: 0px; left: 0px;"><g transform="rotate(0, 41, 41)"><rect x="33"y="1" width="14" height="12" rx="4" ry="4" stroke="#868685" stroke-width="1" fill="#f8f8f8"></rect><polyline points="37.5,9.5 37.5,3.5 42.5,9.5 42.5,3.5" stroke-linejoin="bevel" stroke-width="1.5" fill="#f2f4f6" stroke="#868685"></polyline></g></svg>'
                    },
                    _generatePanHtml: function() {
                        return '<div style="position:absolute;top:4px;left:4px;width:74px;height:74px;background:url(' + this.imgPath + 'st-navictrl.png) no-repeat;-webkit-user-select:none;overflow:hidden"><div></div></div>'
                    },
                    _generatePanBtnHtml: function() {
                        return '<div style="position:absolute;top:0px;left:0;width:82px;height:82px;user-select:none;"><div style="position:absolute;left:32px;top:13px;cursor:pointer;width:17px;height:17px;" title="向上平移"></div><div style="position:absolute;left:14px;top:32px;cursor:pointer;width:17px;height:17px;" title="向左平移"></div><div style="position:absolute;left:51px;top:32px;cursor:pointer;width:17px;height:17px;" title="向右平移"></div><div style="position:absolute;left:33px;top:51px;cursor:pointer;width:17px;height:17px;" title="向下平移"></div></div>'
                    },
                    _generateZoomContainerHtml: function() {
                        var t = "background-image:url('" + this.imgPath + "st-navictrl.png');background-repeat:no-repeat;background-position:-74px 0;";
                        return v.isMobile && (t = "background-image:url('" + this.imgPath + "st-navictrl-hd.png');background-repeat:no-repeat;background-position:0 0;background-size:180px 78px;"),
                        '<div style="position:absolute;top:84px;left:30px;width:24px;height:52px;' + t + '-webkit-user-select:none;overflow:hidden"><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:0;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="放大一级"></div><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:25px;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="缩小一级"></div><div></div></div>'
                    },
                    _bind: function() {
                        var t = this._pano
                          , e = this;
                        if (v.isPc) {
                            aa(this._panBtns[0], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading,
                                    pitch: e.pitch + 30
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            aa(this._panBtns[1], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading - 45,
                                    pitch: e.pitch
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            aa(this._panBtns[2], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading + 45,
                                    pitch: e.pitch
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            aa(this._panBtns[3], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading,
                                    pitch: e.pitch - 30
                                }, {
                                    animation: !0
                                })
                            }
                            ));
                            for (var n = 0; n < this._panBtns.length; n++)
                                aa(this._panBtns[n], "mousedown", (function(t) {
                                    t.stopPropagation()
                                }
                                ));
                            e._mousedown = !1,
                            aa(this._panBtnContainer, "mousedown", (function(n) {
                                e._mousedown = !0,
                                e._panBtnContainer.style.cursor = "grabbing",
                                e._startHeading = e._calcAngle(n),
                                e._curHeading = t.getPov().heading,
                                n.preventDefault()
                            }
                            )),
                            aa(document, "mousemove", (function(n) {
                                e._mousedown && t.setPov({
                                    heading: e._curHeading + 360 - (e._calcAngle(n) - e._startHeading),
                                    pitch: t.getPov().pitch
                                })
                            }
                            )),
                            aa(document, "mouseup", (function() {
                                e._mousedown && (e._mousedown = !1,
                                e._panBtnContainer.style.cursor = "grab",
                                e._startHeading = null)
                            }
                            )),
                            t.addEventListener("position_changed", (function() {
                                var t = 360 - this.getPov().heading;
                                e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
                            }
                            )),
                            t.addEventListener("pov_changed", (function() {
                                var t = 360 - this.getPov().heading;
                                e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
                            }
                            ))
                        }
                        aa(this._btnZoomIn, "click", (function() {
                            t.setZoom(t.getZoom() + 1)
                        }
                        )),
                        aa(this._btnZoomOut, "click", (function() {
                            t.setZoom(t.getZoom() - 1)
                        }
                        )),
                        v.isPc ? (aa(this._btnZoomIn, "mousedown", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -98)
                        }
                        )),
                        aa(this._btnZoomOut, "mousedown", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -122)
                        }
                        )),
                        aa(this._btnZoomIn, "mouseup", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -74)
                        }
                        )),
                        aa(this._btnZoomOut, "mouseup", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -74)
                        }
                        ))) : v.isMobile && (aa(this._btnZoomIn, "touchstart", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -98)
                        }
                        )),
                        aa(this._btnZoomOut, "touchstart", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -122)
                        }
                        )),
                        aa(this._btnZoomIn, "touchend", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -74)
                        }
                        )),
                        aa(this._btnZoomOut, "touchend", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -74)
                        }
                        ))),
                        t.addEventListener("zoom_changed", (function(n) {
                            t.getZoom() >= p.MAX_ZOOM ? e._setZoomBtnEnabled("zoomIn", !1) : t.getZoom() <= p.MIN_ZOOM ? e._setZoomBtnEnabled("zoomOut", !1) : (e._setZoomBtnEnabled("zoomIn", !0),
                            e._setZoomBtnEnabled("zoomOut", !0))
                        }
                        ))
                    },
                    _redrawZoomBtn: function(t, e) {
                        t && (v.isMobile && (e = (e + 74) / 24 * 36),
                        this._zoomContainer.style.backgroundPosition = e + "px 0")
                    },
                    show: function() {
                        this._container.style.display = ""
                    },
                    hide: function() {
                        this._container.style.display = "none"
                    },
                    _calcAngle: function(t) {
                        var e = (t = window.event || t).pageX || t.clientX
                          , n = t.pageY || t.clientY
                          , r = this._pano.getContainer().getBoundingClientRect();
                        e = e - r.left - 50,
                        n = -(n - r.top - 50);
                        var i = Math.atan2(n, e) / Math.PI * 180;
                        return i < 90 ? 90 - i : 450 - i
                    },
                    _setZoomBtnEnabled: function(t, e) {
                        if ("zoomIn" === t)
                            if (e) {
                                this._zoomInEnabled = !0,
                                this._btnZoomIn.style.cursor = "pointer";
                                var n = -74;
                                v.isMobile && (n = 0),
                                this._zoomContainer.style.backgroundPosition = n + "px 0"
                            } else {
                                this._zoomInEnabled = !1,
                                this._btnZoomIn.style.cursor = "";
                                var r = -170;
                                v.isMobile && (r = -144),
                                this._zoomContainer.style.backgroundPosition = r + "px 0"
                            }
                        if ("zoomOut" === t)
                            if (e) {
                                this._zoomOutEnabled = !0,
                                this._btnZoomOut.style.cursor = "pointer";
                                var i = -74;
                                v.isMobile && (i = 0),
                                this._zoomContainer.style.backgroundPosition = i + "px 0"
                            } else {
                                this._zoomOutEnabled = !1,
                                this._btnZoomOut.style.cursor = "";
                                var o = -146;
                                v.isMobile && (o = -108),
                                this._zoomContainer.style.backgroundPosition = o + "px 0"
                            }
                    }
                }),
                new e(t)
            }(this),
            this._eventManager = new oa(this)
        }
        ,
        n._createDoms = function() {
            var t = this._container
              , e = w.create("div")
              , n = e.style;
            n.overflow = "hidden",
            n.position = "absolute",
            n.zIndex = "20",
            n.top = n.left = "0px",
            n.height = n.width = "100%",
            n.backgroundColor = "#e5e3df",
            n.display = "none",
            n.cursor = "grab",
            e.addEventListener("mousedown", (function() {
                return n.cursor = "grabbing"
            }
            )),
            e.addEventListener("mouseup", (function() {
                return n.cursor = "grab"
            }
            )),
            this._svContainer = e,
            this._panes = {
                tileLayer: this._createContainer("1"),
                maskLayer: this._createContainer("2"),
                linksLayer: this._createContainer("3"),
                overlayLayer: this._createContainer("4"),
                effectLayer: this._createContainer("5")
            },
            e.appendChild(this._panes.tileLayer),
            e.appendChild(this._panes.linksLayer),
            e.appendChild(this._panes.overlayLayer),
            e.appendChild(this._panes.effectLayer),
            b() || (e.appendChild(this._panes.maskLayer),
            this._panes.maskLayer.style.width = "".concat(t.clientWidth, "px"),
            this._panes.maskLayer.style.height = "".concat(t.clientHeight, "px"),
            this._panes.maskLayer.style.overflow = "hidden"),
            t.appendChild(e),
            "absolute" !== w.getCurrentStyle(t).position && (t.style.position = "relative")
        }
        ,
        n._createContainer = function(t) {
            var e = w.create("div")
              , n = e.style;
            return n.position = "absolute",
            n.top = n.left = "0",
            n.zIndex = t || "0",
            e
        }
        ,
        n.calcMobileFovy = function(t) {
            var e = this.getContainerSize()
              , n = e.width
              , r = e.height
              , i = 240 / Math.pow(2, t)
              , o = n / 2 / Math.tan(g(i / 2))
              , a = Math.atan2(r / 2, o);
            return 2 * y(a)
        }
        ,
        n.calcPCFovy = function(t) {
            return 90 - 15 * (t - 1)
        }
        ,
        o(e, [{
            key: "imageZoom",
            get: function() {
                return this.calcDisplayZoom().imgZoom
            }
        }, {
            key: "panoId",
            get: function() {
                return this.panoData ? this.panoData.panoId : ""
            }
        }, {
            key: "panoNorthDir",
            get: function() {
                return this.panoData ? this.panoData.northDir : 0
            }
        }, {
            key: "position",
            get: function() {
                return this.panoData && "number" == typeof this.panoData.panoX && "number" == typeof this.panoData.panoY ? new f(this.panoData.panoX,this.panoData.panoY) : null
            }
        }]),
        e
    }(Or)
      , ua = {
        dom: null,
        anchor: null,
        width: null,
        height: null,
        altitude: 2,
        sphereZ: null,
        useUV: !1
    }
      , ha = function(t) {
        function e(e) {
            var n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return (n = t.call(this) || this).visible = !0,
            n.worldCoord = void 0,
            n.pov = void 0,
            n.id = n.genId(),
            n._pano = void 0,
            n.lastPanoPosition = null,
            n.initialized = !1,
            n.position = void 0,
            n.options = void 0,
            n.position = e,
            n.options = Object.assign({}, ua, r),
            n.pov = null,
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.getPov = function() {
            return this.pov
        }
        ,
        n.genId = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 4;
            return Number("".concat(Math.random().toString().substr(3, t)).concat(Date.now())).toString(36)
        }
        ,
        n.init = function(t) {
            t && !this.initialized && (this._pano = t,
            this.lastPanoPosition = this._pano.position,
            this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC(),
            this.worldCoord && (this.initialized = !0,
            this.add(),
            this.draw()))
        }
        ,
        n.calcCoordsByMC = function() {
            var t = this._pano.position;
            if (t && this.position) {
                var e, n = this.position, r = n.lng - t.lng, i = n.lat - t.lat, o = Math.atan2(r, i);
                o < 0 && (o += 2 * Math.PI),
                o = Math.round(y(o));
                var a = 500
                  , s = this.options
                  , u = s.sphereZ
                  , h = s.altitude;
                null === u ? e = 25 * h : (e = u || 0,
                a = Math.sqrt(Math.pow(r, 2) + Math.pow(i, 2) + Math.pow(e, 2)));
                var c = y(Math.asin(e / a));
                c = c > 90 ? 90 : c < -90 ? -90 : c;
                var l = _(o + this._pano.panoNorthDir)
                  , f = this.radius
                  , d = Math.cos(g(c)) * f;
                d = Math.round(100 * d) / 100;
                var p = Math.cos(g(l)) * d
                  , v = Math.sin(g(c)) * f
                  , m = Math.sin(g(l)) * d;
                return this.pov = {
                    heading: o,
                    pitch: c
                },
                Vt(p, v, m)
            }
        }
        ,
        n.calcCoordsByUV = function() {
            if (this.position) {
                var t = this.radius
                  , e = this.position
                  , n = xi(e, 2)
                  , r = n[0]
                  , i = n[1]
                  , o = 2 * r * Math.PI
                  , a = (i - .5) * Math.PI
                  , s = Math.cos(a) * Math.cos(o) * t
                  , u = Math.sin(a) * t
                  , h = Math.cos(a) * Math.sin(o) * t;
                return this.pov = {
                    heading: _(y(o) - this._pano.panoNorthDir),
                    pitch: y(a)
                },
                Vt(s, u, h)
            }
        }
        ,
        n.add = function() {
            var t = this.options
              , e = t.width
              , n = t.height;
            if (this.dom) {
                var r = this._pano
                  , i = this.dom;
                i.style.position = "absolute",
                r.getPanes().overlayLayer.appendChild(i),
                "number" != typeof e && (this.options.width = i.clientWidth),
                "number" != typeof n && (this.options.height = i.clientHeight),
                r.dispatchEvent({
                    type: "onoverlaydomadded",
                    overlay: this
                })
            }
        }
        ,
        n.remove = function() {
            var t = this.dom;
            t && t.parentNode && t.parentNode.removeChild(t)
        }
        ,
        n.povToPointGL = function() {
            if (!this.worldCoord)
                return null;
            var t = this._pano
              , e = t.camera
              , n = t.getContainerSize()
              , r = n.width
              , i = n.height;
            return po(e, this.worldCoord, r, i)
        }
        ,
        n.draw = function() {
            if (this.initialized && this.visible && this._pano && this._pano.panoData && this.dom) {
                var t = this.lastPanoPosition
                  , e = this._pano.position;
                t.lng === e.lng && t.lat === e.lat || (this.lastPanoPosition = e,
                this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC());
                var n = this.dom
                  , r = this.povToPointGL();
                if (n.style.visibility = "hidden",
                r) {
                    var i = this.calcAnchor()
                      , o = "".concat(r[0] - i.width, "px")
                      , a = "".concat(r[1] - i.height, "px");
                    if (isNaN(r[0]) || isNaN(r[1]))
                        return;
                    n.style.visibility = "visible",
                    n.style.webkitTransform = "translate(".concat(o, ", ").concat(a, ")"),
                    n.style.transform = "translate(".concat(o, ", ").concat(a, ")")
                }
            }
        }
        ,
        n.handleClick = function() {
            this.dispatchEvent("click")
        }
        ,
        n.calcAnchor = function() {
            var t = this.options
              , e = t.anchor
              , n = t.width
              , r = void 0 === n ? 0 : n
              , i = t.height;
            return e || new l(r / 2,(void 0 === i ? 0 : i) / 2)
        }
        ,
        n.show = function() {
            this.visible = !0,
            this.dom && (this.dom.style.display = "")
        }
        ,
        n.hide = function() {
            this.visible = !1,
            this.dom && (this.dom.style.display = "none")
        }
        ,
        o(e, [{
            key: "radius",
            get: function() {
                return this._pano ? this._pano.opts.radius : 0
            }
        }, {
            key: "dom",
            get: function() {
                return this.options.dom
            }
        }]),
        e
    }(Or)
      , ca = function(t) {
        function e(e, n) {
            var r = n.position
              , i = n.altitude
              , o = void 0 === i ? 2 : i
              , a = n.costomStyle
              , s = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = document.createElement("div")
                  , r = {
                    backgroundColor: "rgba(29, 29, 29, 0.8)",
                    fontSize: "14px",
                    padding: "7px 14px",
                    height: "19px",
                    color: "#fff",
                    whiteSpace: "nowrap",
                    borderRadius: "4px"
                };
                return m(n.style, r, e),
                n.innerText = t,
                n
            }(e, void 0 === a ? {} : a);
            return t.call(this, r, {
                dom: s,
                altitude: o
            }) || this
        }
        return c(e, t),
        e
    }(ha);
    t.Converters = mo,
    t.Engines = Qi,
    t.EventType = d,
    t.PanoLabel = ca,
    t.PanoOverlay = ha,
    t.PanoramaService = function() {
        var t = this;
        this.getPanoById = function(e, n) {
            var r;
            r = "".concat(tt.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat($("/")),
            t.request(r).then((function(t) {
                n && n(t)
            }
            )).catch((function(t) {
                n && n(null)
            }
            ))
        }
        ,
        this.getPanoByLocation = function(e, n, r) {
            var i;
            i = "".concat(tt.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(n ? "&r=" + n : "", "&action=1&").concat($("/")),
            t.request(i).then((function(t) {
                r && r(t)
            }
            )).catch((function(t) {
                r && r(null)
            }
            ))
        }
        ,
        this.request = function(t) {
            return T(t, {}, {
                jsonp: "fn"
            })
        }
    }
    ,
    t.Point = f,
    t.getPanoControl = function(t, e) {
        var n, r, i, o = (e = e || {}).imgPath || "//api.map.baidu.com/images/";
        function a(e) {
            e.call(this),
            this.defaultAnchor = t.ControlAnchor.TOP_RIGHT,
            this.defaultOffset = new t.Size(10,10),
            this._isOn = !1
        }
        return n = a,
        r = t.Control,
        (i = Object.create(r.prototype)).constructor = n,
        n.prototype = i,
        m(a.prototype, {
            initialize: function(t) {
                return this._map = t,
                this._render(),
                this._bind(),
                this._container
            },
            _render: function() {
                var t = this
                  , n = w.create("div");
                n.innerHTML = '<span style="position:relative;top:33px;">全景</span>',
                n.title = "进入全景",
                m(n.style, {
                    width: "49px",
                    height: "51px",
                    color: "#565656",
                    background: 'url("'.concat(o, 'st-control.png")'),
                    position: "absolute",
                    cursor: "pointer",
                    fontFamily: "arial,sans-serif",
                    fontSize: "13px",
                    textAlign: "center",
                    boxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
                    MozBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
                    WebkitBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)"
                }),
                this._container = n;
                var r = this._map.getContainer();
                r.appendChild(n);
                var i = {
                    visible: !1
                };
                e.imgPath && (i.imgPath = [e.imgPath]),
                e.tileBaseUrl && (i.tileBaseUrls = [e.tileBaseUrl]),
                this._pano = new sa(r,i),
                this._pano.addCloseButton((function() {
                    t.isMapEnableWheelZoom && t._map.enableScrollWheelZoom()
                }
                ));
                var a = this._scout = w.create("div");
                m(a.style, {
                    position: "absolute",
                    width: "24px",
                    height: "41px",
                    cursor: "pointer",
                    backgroundImage: 'url("'.concat(o, 'st-scout.png")'),
                    backgroundRepeat: "no-repeat",
                    backgroundPosition: "-24px 0",
                    overflow: "hidden",
                    display: "none",
                    zIndex: 11
                }),
                r.appendChild(a);
                var s = this._infoWindow = w.create("div");
                m(s.style, {
                    position: "absolute",
                    width: "112px",
                    height: "119px",
                    backgroundImage: 'url("'.concat(o, 'st-infowindow.gif")'),
                    backgroundRepeat: "no-repeat",
                    backgroundPosition: "0 0",
                    display: "none",
                    cursor: "pointer",
                    zIndex: 12
                });
                var u = this._thumb = w.create("img");
                s.appendChild(u),
                u.src = o + "st-noresult.png",
                m(u.style, {
                    width: "100px",
                    height: "75px",
                    left: "6px",
                    top: "6px",
                    position: "absolute"
                });
                var h = this._stDescription = w.create("div");
                m(h.style, {
                    position: "absolute",
                    top: "85px",
                    fontFamily: "arial,sans-serif",
                    fontSize: "13px",
                    paddingLeft: "6px"
                }),
                s.appendChild(h),
                r.appendChild(s)
            },
            _updateView: function() {
                var t = this._container.style;
                this._isOn || this._isOver ? (t.backgroundPosition = "-49px 0",
                t.color = "#fff") : (t.backgroundPosition = "0 0",
                t.color = "#565656")
            },
            _bind: function() {
                var n = this;
                this._pano.on("dataload", (function(t) {
                    var r = t.data;
                    r ? (n._currentSvId = r.panoId,
                    e.tileBaseUrl ? n._thumb.src = "".concat(e.tileBaseUrl, "?&sid=").concat(r.panoId, "&pos=0_0&z=0") : n._thumb.src = "//apisv0.bdimg.com/?qt=pdata&sid=".concat(r.panoId, "&pos=0_0&z=0&from=H5&").concat($("/")),
                    n._stDescription.innerHTML = r.roadName) : (n._currentSvId = null,
                    n._thumb.src = o + "st-noresult.png",
                    n._stDescription.innerHTML = "")
                }
                ));
                var r = this;
                v.isPc && (this._container.addEventListener("mouseover", (function() {
                    r._isOver = !0,
                    r._updateView()
                }
                )),
                this._container.addEventListener("mouseout", (function() {
                    r._isOver = !1,
                    r._updateView()
                }
                ))),
                this._container.addEventListener("click", (function() {
                    r._isOn ? r._close() : r._open()
                }
                )),
                this._map.getContainer().addEventListener("mousemove", (function(e) {
                    if (r._isOn) {
                        var n = (e = window.event || e).pageX || e.clientX
                          , i = e.pageY || e.clientY
                          , a = function(t) {
                            for (var e = {
                                left: 0,
                                top: 0
                            }; t && t.offsetParent; )
                                e.left += t.offsetLeft,
                                e.top += t.offsetTop,
                                t = t.offsetParent;
                            return e
                        }(r._map.container)
                          , s = new qo(n - a.left,i - a.top)
                          , u = r._map.pixelToPoint(s);
                        if ("" !== r._scout.style.display && v.isPc && (r._scout.style.display = "",
                        r._infoWindow.style.display = ""),
                        r._scout.style.left = s.x - 12 + "px",
                        r._scout.style.top = s.y - 41 - 2 + "px",
                        r._prePixel = r._curPixel,
                        r._curPixel = s,
                        r._prePixel) {
                            var h = s.x - r._prePixel.x;
                            h > 0 ? r._scout.style.backgroundPosition = "-48px 0" : h < 0 && (r._scout.style.backgroundPosition = "0 0")
                        }
                        r._curPixel.y < 170 ? r._infoStatus = 2 : r._infoStatus = 1,
                        r._curPixel.x < 66 && (r._infoStatus = 3),
                        r._curPixel.x > r._map.getSize().width - 56 - 10 && (r._infoStatus = 4);
                        var c = 1 === r._infoStatus || 2 === r._infoStatus ? 112 : 126
                          , l = 1 === r._infoStatus || 2 === r._infoStatus ? 119 : 105;
                        1 !== r._infoStatus && 2 !== r._infoStatus || (r._infoWindow.style.left = r._curPixel.x - Math.round(c / 2) + "px",
                        1 === r._infoStatus ? (r._infoWindow.style.top = r._curPixel.y - l - 42 + "px",
                        r._infoWindow.style.backgroundPosition = "0 0",
                        r._thumb.style.top = "6px",
                        r._thumb.style.bottom = "",
                        r._stDescription.style.top = "85px",
                        r._stDescription.style.bottom = "") : (r._infoWindow.style.top = r._curPixel.y + 2 + "px",
                        r._infoWindow.style.backgroundPosition = "-112px 0",
                        r._thumb.style.top = "",
                        r._thumb.style.bottom = "6px",
                        r._stDescription.style.top = "",
                        r._stDescription.style.bottom = "85px"),
                        r._infoWindow.style.width = "112px",
                        r._infoWindow.style.height = "119px",
                        r._thumb.style.left = "6px",
                        r._stDescription.style.left = "0"),
                        3 !== r._infoStatus && 4 !== r._infoStatus || (r._infoWindow.style.top = r._curPixel.y - Math.round(l / 2) - 20 + "px",
                        3 === r._infoStatus ? (r._infoWindow.style.left = r._curPixel.x + 12 + "px",
                        r._infoWindow.style.backgroundPosition = "0 -119px",
                        r._thumb.style.left = "20px",
                        r._stDescription.style.left = "14px") : (r._infoWindow.style.left = r._curPixel.x - 12 - c + "px",
                        r._infoWindow.style.backgroundPosition = "-126px -119px",
                        r._thumb.style.left = "6px",
                        r._stDescription.style.left = "0"),
                        r._infoWindow.style.width = "126px",
                        r._infoWindow.style.height = "105px"),
                        r._infoWindow.style.backgroundImage = 'url("'.concat(o, 'st-infowindow.gif")'),
                        r._timerId && (clearTimeout(r._timerId),
                        r._timerId = null),
                        r._timerId = setTimeout((function() {
                            r._currentPoint = u,
                            r._scout.style.backgroundPosition = "-24px 0";
                            var e = r._map.lnglatToMercator(u.lng, u.lat);
                            r._pano.setPosition(new t.Point(e[0],e[1]))
                        }
                        ), 200)
                    }
                }
                )),
                this._map.addEventListener("click", (function(t) {
                    r._isOn && v.isMobile && (r._pano.setPosition(t.point),
                    r._pano.show(),
                    r._close()),
                    r._isOn && r._currentSvId && (r._pano.setId(r._currentSvId),
                    r._pano.show(),
                    r._map.config.enableWheelZoom && (r._map.disableScrollWheelZoom(),
                    r.isMapEnableWheelZoom = !0),
                    r._close())
                }
                ))
            },
            _open: function() {
                this._isOn || (this._isOn = !0,
                this._map.addTileLayer(this._panoCoverageLayer),
                v.isPc && (this._preDefaultCursor = this._map.getDefaultCursor(),
                this._preDraggingCursor = this._map.getDraggingCursor(),
                this._map.setDefaultCursor("pointer"),
                this._map.setDraggingCursor("pointer"))),
                this._updateView()
            },
            _close: function() {
                this._isOn && (this._map.removeTileLayer(this._panoCoverageLayer),
                v.isPc && (this._scout.style.display = "none",
                this._infoWindow.style.display = "none",
                this._map.setDefaultCursor(this._preDefaultCursor),
                this._map.setDraggingCursor(this._preDraggingCursor)),
                this._isOn = !1),
                this._updateView()
            }
        }),
        new a(t.Control)
    }
    ,
    t.getStreetViewCoverageLayer = function(t) {
        var e = new t.TileLayer({
            transparentPng: !0,
            dataType: 1,
            cacheSize: 32
        });
        return e.zIndex = 110,
        e.getTilesUrl = window.PANORAMA_URL ? function(t, e) {
            var n = window.PANORAMA_URL + "/tile"
              , r = t.x
              , i = t.y;
            return window.BMAPGL_84 && (i = Math.pow(2, e) - i - 1),
            "".concat(n, "?customid=panorama&x=").concat(r, "&y=").concat(i, "&z=").concat(e, "&type=WGS84")
        }
        : function(t, e) {
            var n = ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"]
              , r = (Math.abs(t.x) + Math.abs(t.y)) % n.length;
            return "".concat(n[r], "?udt=").concat("20150114", "&qt=tile&styles=").concat("pl", "&x=").concat(t.x, "&y=").concat(t.y, "&z=").concat(e).replace(/-(\d+)/gi, "M$1") + "&" + $("/", {
                isCounter: !1
            })
        }
        ,
        e
    }
    ,
    t.init = function(t, e) {
        return new sa(t,e)
    }
    ,
    Object.defineProperty(t, "__esModule", {
        value: !0
    })
}
)(Pano = {});
window.BMapGL = window.BMapGL || {};
(function(bw, fe) {
    var eJ = eJ || {
        version: "20150702",
        emptyFn: function() {}
    };
    (function() {
        eJ._log = [];
        var i = 0;
        var T = {};
        eJ.BaseClass = function(jO) {
            T[(this.hashCode = (jO || eJ.BaseClass.guid()))] = this
        }
        ;
        eJ.BaseClass.guid = function() {
            return "mz_" + (i++).toString(36)
        }
        ;
        eJ.BaseClass.create = function() {
            var jO = new eJ.BaseClass();
            jO.decontrol();
            return jO
        }
        ;
        var e = eJ.instance = eJ.I = function(jO) {
            return T[jO]
        }
        ;
        eJ.BaseClass.prototype.dispose = function() {
            if (this.hashCode) {
                delete T[this.hashCode]
            }
            for (var jO in this) {
                if (typeof this[jO] != "function") {
                    delete this[jO]
                }
            }
        }
        ;
        eJ.BaseClass.prototype.getHashCode = function() {
            if (!this.hashCode) {
                T[(this.hashCode = eJ.BaseClass.guid())] = this
            }
            return this.hashCode
        }
        ;
        eJ.BaseClass.prototype.decontrol = function() {
            delete T[this.hashCode]
        }
        ;
        eJ.BaseClass.prototype.toString = function() {
            return "[object " + (this._className || "Object") + "]"
        }
        ;
        eJ.BaseClass.prototype._wlog = function(jP, jQ) {
            var jO = eJ._log;
            if (jO.length > 100) {
                jO.reverse().length = 50;
                jO.reverse()
            }
            jO[jO.length] = "[" + jP + "][" + (this._className || "Object") + " " + this.hashCode + "] " + jQ
        }
    }
    )();
    Function.prototype.inherits = function(jO, T) {
        var e, jP, jR = this.prototype, jQ = function() {};
        jQ.prototype = jO.prototype;
        jP = this.prototype = new jQ();
        if (typeof (T) == "string") {
            jP._className = T
        }
        for (e in jR) {
            jP[e] = jR[e]
        }
        this.prototype.constructor = jR.constructor;
        jR = jQ = null;
        return jP
    }
    ;
    eJ.BaseEvent = function(e, i) {
        this.type = e;
        this.returnValue = true;
        this.target = i || null;
        this.currentTarget = this.srcElement = null;
        this.cancelBubble = false;
        this.domEvent = null
    }
    ;
    eJ.BaseClass.prototype.on = eJ.BaseClass.prototype.addEventListener = function(T, i) {
        if (typeof i !== "function") {
            return this._wlog("error", "addEventListener:" + i + " is not a function")
        }
        if (!this._listeners) {
            this._listeners = {}
        }
        var e = this._listeners;
        if (T.indexOf("on") !== 0) {
            T = "on" + T
        }
        if (typeof e[T] !== "object") {
            e[T] = {}
        }
        var jO = i.hashCode || eJ.BaseClass.guid();
        i.hashCode = jO;
        if (e[T][jO]) {
            this._wlog("warning", "repeat key:" + jO)
        }
        e[T][jO] = i
    }
    ;
    eJ.BaseClass.prototype.off = eJ.BaseClass.prototype.removeEventListener = function(T, i) {
        if (typeof i == "function") {
            i = i.hashCode
        } else {
            if (typeof i !== "string" && typeof i !== "undefined") {
                return
            }
        }
        if (!this._listeners) {
            this._listeners = {}
        }
        if (T.indexOf("on") != 0) {
            T = "on" + T
        }
        var e = this._listeners;
        if (!e[T]) {
            return
        }
        if (i === undefined) {
            e[T] = {};
            return
        }
        if (e[T][i]) {
            delete e[T][i]
        }
    }
    ;
    eJ.BaseClass.prototype.fire = eJ.BaseClass.prototype.dispatchEvent = function(jO) {
        if (!this._listeners) {
            this._listeners = {}
        }
        var T, e = this._listeners, jP = jO.type;
        jO.target = jO.srcElement = jO.target || jO.srcElement || this;
        jO.currentTarget = this;
        if (typeof this[jP] == "function") {
            this[jP](jO)
        }
        if (typeof e[jP] == "object") {
            for (T in e[jP]) {
                if (typeof e[jP][T] == "function") {
                    e[jP][T].call(this, jO)
                }
            }
        }
        return jO.returnValue
    }
    ;
    eJ.BaseEvent.prototype.inherit = function(T) {
        var i = this;
        this.domEvent = T = window.event || T;
        i.clientX = T.clientX || T.pageX;
        i.clientY = T.clientY || T.pageY;
        i.offsetX = T.offsetX || T.layerX;
        i.offsetY = T.offsetY || T.layerY;
        i.screenX = T.screenX;
        i.screenY = T.screenY;
        i.ctrlKey = T.ctrlKey || T.metaKey;
        i.shiftKey = T.shiftKey;
        i.altKey = T.altKey;
        return i
    }
    ;
    eJ.Browser = (function() {
        var T = navigator.userAgent;
        var jP = 0;
        var e = 0;
        var jQ = 0;
        var i = 0;
        var jU = 0;
        var jS = 0;
        var jT = 0;
        var jR = 0;
        var jO = 0;
        var jV = 0;
        if (typeof window.opera === "object" && /Opera(\s|\/)(\d+(\.\d+)?)/.test(T)) {
            jQ = parseFloat(RegExp.$2)
        } else {
            if (/OPR(\/(\d+)(\..?)?)/.test(T)) {
                jQ = parseInt(RegExp.$2, 10)
            } else {
                if (/Edge\/((\d+)\.\d+)/.test(T)) {
                    jP = parseInt(RegExp.$2, 10)
                } else {
                    if (/MSIE (\d+(\.\d+)?)/.test(T)) {
                        e = parseFloat(RegExp.$1)
                    } else {
                        if (T.indexOf("Trident") > -1 && /rv:(\d+(\.\d+)?)/.test(T)) {
                            e = parseInt(RegExp.$1, 10)
                        } else {
                            if (/Firefox(\s|\/)(\d+(\.\d+)?)/.test(T)) {
                                jU = parseFloat(RegExp.$2)
                            } else {
                                if (navigator.vendor === "Netscape" && /Netscape(\s|\/)(\d+(\.\d+)?)/.test(T)) {
                                    jT = parseFloat(RegExp.$2)
                                } else {
                                    if (T.indexOf("Safari") > -1 && /Version\/(\d+(\.\d+)?)/.test(T)) {
                                        i = parseFloat(RegExp.$1)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (T.indexOf("Trident") > -1 && /Trident\/(\d+(\.\d+)?)/.test(T)) {
            jR = parseInt(RegExp.$1, 10)
        } else {
            if (!e && !jP && T.indexOf("Gecko") > -1 && T.indexOf("KHTML") === -1 && /rv\:(\d+(\.\d+)?)/.test(T)) {
                jO = parseFloat(RegExp.$1)
            } else {
                if (!jP && /chrome\/(\d+(\.\d+)?)/i.test(T)) {
                    jS = parseFloat(RegExp.$1)
                } else {
                    if (!jP && /AppleWebKit\/(\d+(\.\d+)?)/.test(T)) {
                        jV = parseInt(RegExp.$1, 10)
                    }
                }
            }
        }
        var jW = {
            edge: jP,
            ie: e,
            firefox: jU,
            netscape: jT,
            opera: jQ,
            safari: i,
            chrome: jS,
            gecko: jO,
            trident: jR,
            webkit: jV
        };
        return jW
    }
    )();
    window.FeBrowser = eJ.Browser;
    eJ.Dom = {};
    eJ.Dom.createDom = function(i, e) {
        if (eJ.isIE && e && e.name) {
            i = "<" + i + ' name="' + eJ.String.escapeHTML(e.name) + '">'
        }
        var T = document.createElement(i);
        if (e) {
            eJ.Dom.setProperties(T, e)
        }
        return T
    }
    ;
    eJ.Dom.getOffset = function(jO) {
        var jR = eJ.Dom.getOwnerDocument(jO);
        var jQ = eJ.isGecko > 0 && jR.getBoxObjectFor && eJ.Dom.getStyle(jO, "position") == "absolute" && (jO.style.top === "" || jO.style.left === "");
        var jS = {
            left: 0,
            top: 0
        };
        var i = (eJ.isIE && !eJ.isStrict) ? jR.body : jR.documentElement;
        if (jO == i) {
            return jS
        }
        var T = null;
        var jP;
        if (jO.getBoundingClientRect) {
            jP = jO.getBoundingClientRect();
            jS.left = jP.left + Math.max(jR.documentElement.scrollLeft, jR.body.scrollLeft);
            jS.top = jP.top + Math.max(jR.documentElement.scrollTop, jR.body.scrollTop);
            jS.left -= jR.documentElement.clientLeft;
            jS.top -= jR.documentElement.clientTop;
            if (eJ.isIE && !eJ.isStrict) {
                jS.left -= 2;
                jS.top -= 2
            }
        } else {
            if (jR.getBoxObjectFor && !jQ) {
                jP = jR.getBoxObjectFor(jO);
                var e = jR.getBoxObjectFor(i);
                jS.left = jP.screenX - e.screenX;
                jS.top = jP.screenY - e.screenY
            } else {
                T = jO;
                do {
                    jS.left += T.offsetLeft;
                    jS.top += T.offsetTop;
                    if (eJ.isWebkit > 0 && eJ.Dom.getStyle(T, "position") == "fixed") {
                        jS.left += jR.body.scrollLeft;
                        jS.top += jR.body.scrollTop;
                        break
                    }
                    T = T.offsetParent
                } while (T && T != jO);
                if (eJ.isOpera > 0 || (eJ.isWebkit > 0 && eJ.Dom.getStyle(jO, "position") == "absolute")) {
                    jS.top -= jR.body.offsetTop
                }
                T = jO.offsetParent;
                while (T && T != jR.body) {
                    jS.left -= T.scrollLeft;
                    if (!eJ.isOpera || T.tagName != "TR") {
                        jS.top -= T.scrollTop
                    }
                    T = T.offsetParent
                }
            }
        }
        return jS
    }
    ;
    eJ.Dom.getOwnerDocument = function(e) {
        return e.nodeType == 9 ? e : e.ownerDocument || e.document
    }
    ;
    eJ.Dom.setProperties = function(i, e) {
        eJ.each(e, function(jO, T) {
            eJ.Dom._setProperty(i, T, jO)
        })
    }
    ;
    eJ.Dom._setProperty = function(i, e, T) {
        if (e == "style") {
            i.style.cssText = T
        } else {
            if (e == "class") {
                i.className = T
            } else {
                if (e == "for") {
                    i.htmlFor = T
                } else {
                    if (e in eJ.Dom._DIRECT_ATTRIBUTE_MAP) {
                        i.setAttribute(eJ.Dom._DIRECT_ATTRIBUTE_MAP[e], T)
                    } else {
                        i[e] = T
                    }
                }
            }
        }
    }
    ;
    eJ.Dom._DIRECT_ATTRIBUTE_MAP = {
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        colspan: "colSpan",
        rowspan: "rowSpan",
        valign: "vAlign",
        height: "height",
        width: "width",
        usemap: "useMap",
        frameborder: "frameBorder"
    };
    eJ.G = function() {
        for (var T = [], jO = arguments.length - 1; jO > -1; jO--) {
            var jP = arguments[jO];
            T[jO] = null;
            if (typeof jP == "object" && jP && jP.dom) {
                T[jO] = jP.dom
            } else {
                if ((typeof jP == "object" && jP && jP.tagName) || jP == window || jP == document) {
                    T[jO] = jP
                } else {
                    if (typeof jP == "string" && (jP = document.getElementById(jP))) {
                        T[jO] = jP
                    }
                }
            }
        }
        return T.length < 2 ? T[0] : T
    }
    ;
    eJ.ac = function(e, i) {
        if (!(e = this.G(e))) {
            return
        }
        i = this.trim(i);
        if (!new RegExp("(^| )" + i.replace(/(\W)/g, "\\$1") + "( |$)").test(e.className)) {
            e.className = e.className.split(/\s+/).concat(i).join(" ")
        }
    }
    ;
    eJ.addClassName = eJ.ac;
    eJ.each = function(jQ, e) {
        if (typeof e != "function") {
            return jQ
        }
        if (jQ) {
            if (jQ.length === undefined) {
                for (var T in jQ) {
                    e.call(jQ[T], jQ[T], T)
                }
            } else {
                for (var jO = 0, jP = jQ.length; jO < jP; jO++) {
                    e.call(jQ[jO], jQ[jO], jO)
                }
            }
        }
        return jQ
    }
    ;
    eJ.extend = function(jQ, jO) {
        if (jQ && jO && typeof (jO) == "object") {
            for (var jP in jO) {
                jQ[jP] = jO[jP]
            }
            var T = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
            for (var e = 0, i; e < T.length; e++) {
                i = T[e];
                if (Object.prototype.hasOwnProperty.call(jO, i)) {
                    jQ[i] = jO[i]
                }
            }
        }
        return jQ
    }
    ;
    eJ.hide = function() {
        eJ.each(arguments, function(e) {
            if (e = eJ.G(e)) {
                e.style.display = "none"
            }
        })
    }
    ;
    eJ.inherit = function(jS, jO, T) {
        var jR = jS.prototype;
        var jQ = function() {};
        jQ.prototype = jO.prototype;
        var jP = jS.prototype = new jQ();
        if (typeof T == "string") {
            jP._className = T
        }
        for (var e in jR) {
            jP[e] = jR[e]
        }
        jS.prototype.constructor = jR.constructor;
        jR = null;
        return jP
    }
    ;
    eJ.isIE = 0;
    (function() {
        if (navigator.userAgent.indexOf("MSIE") > 0 && !window.opera) {
            /MSIE (\d+(\.\d+)?)/.test(navigator.userAgent);
            eJ.isIE = parseFloat(RegExp.$1)
        }
    }
    )();
    eJ.rc = function(e, i) {
        if (!(e = this.G(e))) {
            return
        }
        i = this.trim(i);
        var T = e.className.replace(new RegExp("(^| +)" + i.replace(/(\W)/g, "\\$1") + "( +|$)","g"), "$2");
        if (e.className != T) {
            e.className = T
        }
    }
    ;
    eJ.removeClassName = eJ.rc;
    eJ.show = function() {
        this.each(arguments, function(e) {
            if (e = eJ.G(e)) {
                e.style.display = ""
            }
        })
    }
    ;
    eJ.trim = function(e) {
        return e.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+$)/g, "")
    }
    ;
    eJ.getElementsByClassName = function(e, i) {
        if (e.getElementsByClassName) {
            return e.getElementsByClassName(i)
        } else {
            return (function T(jV, jT) {
                if (jT == null) {
                    jT = document
                }
                var jS = [], jR = jT.getElementsByTagName("*"), jO = jR.length, jU = new RegExp("(^|\\s)" + jV + "(\\s|$)"), jQ, jP;
                for (jQ = 0,
                jP = 0; jQ < jO; jQ++) {
                    if (jU.test(jR[jQ].className)) {
                        jS[jP] = jR[jQ];
                        jP++
                    }
                }
                return jS
            }
            )(i, e)
        }
    }
    ;
    eJ.toggleClass = function(e, i) {
        if (eJ.hasClass(e, i)) {
            eJ.removeClassName(e, i)
        } else {
            eJ.addClassName(e, i)
        }
    }
    ;
    eJ.hasClass = function(jO, T) {
        if (!jO || !jO.className || typeof jO.className != "string") {
            return false
        }
        var i = -1;
        try {
            i = jO.className == T || jO.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
        } catch (jP) {
            return false
        }
        return i > -1
    }
    ;
    eJ.insertHTML = function(jO, e, T) {
        jO = eJ.G(jO);
        if (jO === null) {
            return jO
        }
        var i, jP;
        if (jO.insertAdjacentHTML) {
            jO.insertAdjacentHTML(e, T)
        } else {
            i = jO.ownerDocument.createRange();
            e = e.toUpperCase();
            if (e == "AFTERBEGIN" || e == "BEFOREEND") {
                i.selectNodeContents(jO);
                i.collapse(e == "AFTERBEGIN")
            } else {
                jP = e == "BEFOREBEGIN";
                i[jP ? "setStartBefore" : "setEndAfter"](jO);
                i.collapse(jP)
            }
            i.insertNode(i.createContextualFragment(T))
        }
        return jO
    }
    ;
    if (typeof HTMLElement != "undefined" && HTMLElement.prototype.__lookupGetter__ && !HTMLElement.prototype.__lookupGetter__("children") && !window.opera) {
        try {
            HTMLElement.prototype.__defineGetter__("children", function() {
                for (var T = [], jO = 0, jQ, jP = 0, e = this.childNodes.length; jP < e; jP++) {
                    jQ = this.childNodes[jP];
                    if (jQ.nodeType == 1) {
                        T[jO++] = jQ;
                        if (jQ.name) {
                            if (!T[jQ.name]) {
                                T[jQ.name] = []
                            }
                            T[jQ.name][T[jQ.name].length] = jQ
                        }
                        if (jQ.id) {
                            T[jQ.id] = jQ
                        }
                    }
                }
                return T
            })
        } catch (i3) {}
    }
    if (typeof (HTMLElement) != "undefined" && !window.opera && HTMLElement.prototype && !HTMLElement.prototype.insertAdjacentHTML) {
        HTMLElement.prototype.insertAdjacentHTML = function(i, T) {
            var jO = this.ownerDocument.createRange();
            jO.setStartBefore(this);
            jO = jO.createContextualFragment(T);
            switch (i) {
            case "beforeBegin":
                this.parentNode.insertBefore(jO, this);
                break;
            case "afterBegin":
                this.insertBefore(jO, this.firstChild);
                break;
            case "beforeEnd":
                this.appendChild(jO);
                break;
            case "afterEnd":
                if (!this.nextSibling) {
                    this.parentNode.appendChild(jO)
                } else {
                    this.parentNode.insertBefore(jO, this.nextSibling)
                }
                break
            }
        }
    }
    if (typeof HTMLElement != "undefined" && !window.opera) {
        HTMLElement.prototype.contains = function(e) {
            if (!e) {
                return false
            }
            if (e == this) {
                return true
            }
            while (e = e.parentNode) {
                if (e == this) {
                    return true
                }
            }
            return false
        }
    }
    if (!eJ.Browser.ie && typeof Event != "undefined" && !window.opera) {
        Event.prototype.__defineSetter__("returnValue", function(e) {
            if (!e) {
                this.preventDefault()
            }
            return e
        });
        Event.prototype.__defineSetter__("cancelBubble", function(e) {
            if (e) {
                this.stopPropagation()
            }
            return e
        })
    }
    eJ.each = function(jP, jO) {
        if (bP(jO)) {
            for (var T = 0, e = jP.length; T < e; T++) {
                if (jO.call(jP, jP[T], T) === false) {
                    break
                }
            }
        }
        return jP
    }
    ;
    eJ.Platform = {
        x11: 0,
        macintosh: 0,
        windows: 0,
        android: 0,
        iphone: 0,
        ipad: 0
    };
    for (var i1 in eJ.Platform) {
        if (eJ.Platform.hasOwnProperty(i1)) {
            eJ.Platform[i1] = new RegExp(i1,"i").test(window.navigator.userAgent) ? 1 : 0
        }
    }
    if (typeof (eJ.Dom) === "undefined") {
        eJ.Dom = {}
    }
    eJ.Dom.getComputedStyle = function(i, e) {
        var jO = i.nodeType == 9 ? i : i.ownerDocument || i.document, T;
        if (jO.defaultView && jO.defaultView.getComputedStyle) {
            T = jO.defaultView.getComputedStyle(i, null);
            if (T) {
                return T[e] || T.getPropertyValue(e)
            }
        } else {
            if (i.currentStyle) {
                return i.currentStyle[e] || ""
            }
        }
        return ""
    }
    ;
    var fu = eJ.BaseEvent;
    var cZ = eJ.BaseClass;
    cZ.prototype.toString = function() {
        return this._className || ""
    }
    ;
    eJ.on = function(T, i, e) {
        if (!(T = eJ.G(T))) {
            return T
        }
        i = i.replace(/^on/, "");
        if (T.addEventListener) {
            T.addEventListener(i, e, false)
        } else {
            if (T.attachEvent) {
                T.attachEvent("on" + i, e)
            }
        }
        return T
    }
    ;
    eJ.un = function(T, i, e) {
        if (!(T = eJ.G(T))) {
            return T
        }
        i = i.replace(/^on/, "");
        if (T.removeEventListener) {
            T.removeEventListener(i, e, false)
        } else {
            if (T.detachEvent) {
                T.detachEvent("on" + i, e)
            }
        }
        return T
    }
    ;
    eJ.hc = function(jO, T) {
        if (!jO || !jO.className || typeof jO.className != "string") {
            return false
        }
        var i = -1;
        try {
            i = jO.className == T || jO.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
        } catch (jP) {
            return false
        }
        return i > -1
    }
    ;
    eJ.isEmptyObject = function(T) {
        if (Object.prototype.toString.call(T) === "[object Object]") {
            for (var e in T) {
                return false
            }
            return true
        } else {
            return false
        }
    }
    ;
    var bO = window.location.protocol === "http:" ? "http:" : "https:";
    var eh = {
        fontFamily: 'Arial,Helvetica,"PingFang SC","Hiragino Sans GB",STHeiti,sans-serif',
        mapStyleNameIdPair: {
            "default": 0,
            "grayed-out": 1
        },
        mapHost: bO + "//map.baidu.com",
        apiHost: bO + "//api.map.baidu.com",
        apiIMG: bO + "//api.map.baidu.com/images",
        staticHost: bO + "//webmap0.bdimg.com",
        imgPath: bO + "//webmap0.bdimg.com/image/api/",
        tileDomain: [bO + "//maponline0.bdimg.com", bO + "//maponline1.bdimg.com", bO + "//maponline2.bdimg.com", bO + "//maponline3.bdimg.com"],
        panoTilePath: "//apisv1.bdimg.com/",
        optDomain: "http://10.120.25.45:8017",
        rasterTilePath: "/tile/",
        vectorTilePath: "/pvd/",
        originTilePath: [bO + "//pcor.baidu.com"],
        stylePath: "//maponline0.bdimg.com/sty/",
        getIconSetPath: function(e) {
            var i = "map_icons2x/";
            if (typeof e === "string" && this.mapStyleNameIdPair[e] > 0) {
                i = "map_icons2x_" + (this.mapStyleNameIdPair[e] - 1) + "/"
            }
            return bO + this.stylePath + i
        },
        getMapStyleFiles: function(T) {
            var jP = true;
            if (typeof T === "string" && T !== "default") {
                jP = false
            }
            var jQ = jP ? "" : "_" + (this.mapStyleNameIdPair[T] - 1);
            var i = bx();
            var jO = "udt=" + i.udt + "&v=" + i.ver;
            var e = bO + this.stylePath;
            return [e + "icons_2x" + jQ + ".js?" + jO, e + "fs" + jQ + ".js?" + jO, e + "indoor_fs.js?" + jO]
        },
        tvc: {
            ditu: {
                normal: {
                    version: "088",
                    updateDate: "20210726"
                },
                satellite: {
                    version: "009",
                    updateDate: "20210726"
                },
                normalTraffic: {
                    version: "081",
                    updateDate: "20210726"
                },
                satelliteTraffic: {
                    version: "083",
                    updateDate: "20210726"
                },
                mapJS: {
                    version: "104",
                    updateDate: "20210726"
                },
                satelliteStreet: {
                    version: "083",
                    updateDate: "20210726"
                },
                panoClick: {
                    version: "1033",
                    updateDate: "20180108"
                },
                panoUdt: {
                    version: "20180108",
                    updateDate: "20180108"
                },
                panoSwfAPI: {
                    version: "20150123",
                    updateDate: "20150123"
                },
                panoSwfPlace: {
                    version: "20141112",
                    updateDate: "20141112"
                },
                earthVector: {
                    version: "001",
                    updateDate: "20210726"
                }
            }
        },
        msv: {
            mapstyle: {
                updateDate: "20221108",
                version: "001"
            }
        }
    };
    eh.imgResources = {
        blankGIF: eh.staticHost + "/res/litemapapi/v1d1/images/blank.gif?20170501",
        markerPng: eh.staticHost + "/res/litemapapi/v1d1/images/marker.png?20170501",
        locPng: eh.staticHost + "/res/litemapapi/v1d1/images/loc.png?20180918",
        locNewPng: eh.staticHost + "/res/litemapapi/v1d1/images/loc_new.png?20190314",
        zoomPng: eh.staticHost + "/res/litemapapi/v1d1/images/zoombtn.png?20180918",
        mapLogoPng: eh.staticHost + "/res/litemapapi/v1d1/images/logo-2x.png?20190226"
    };
    var B = eh;
    var iT = "ruler.cur";
    if (eJ.Browser.ie || eJ.Browser.edge) {
        eJ.extend(B, {
            distCursor: "url(" + B.imgPath + iT + "),crosshair",
            defaultCursor: "url(" + B.imgPath + "openhand.cur),default",
            draggingCursor: "url(" + B.imgPath + "closedhand.cur),move"
        })
    } else {
        if (eJ.Browser.firefox) {
            eJ.extend(B, {
                distCursor: "url(" + B.imgPath + iT + "),crosshair",
                defaultCursor: "-moz-grab",
                draggingCursor: "-moz-grabbing"
            })
        } else {
            if (eJ.Browser.chrome || eJ.Browser.safari) {
                eJ.extend(B, {
                    distCursor: "url(" + B.imgPath + iT + ") 2 6,crosshair",
                    defaultCursor: "url(" + B.imgPath + "openhand.cur) 8 8,default",
                    draggingCursor: "url(" + B.imgPath + "closedhand.cur) 8 8,move"
                });
                if (eJ.Platform.macintosh) {
                    B.defaultCursor = "-webkit-grab";
                    B.draggingCursor = "-webkit-grabbing"
                }
            } else {
                eJ.extend(B, {
                    distCursor: "url(" + B.imgPath + iT + "),crosshair",
                    defaultCursor: "url(" + B.imgPath + "openhand.cur),default",
                    draggingCursor: "url(" + B.imgPath + "closedhand.cur),move"
                })
            }
        }
    }
    bw = bw || {};
    bw.version = "gl";
    bw._register = [];
    bw.register = function(e) {
        this._register[this._register.length] = e
    }
    ;
    bw.guid = 1;
    bw.getGUID = function(e) {
        return (e || "") + bw.guid++
    }
    ;
    var ez = window.BMAP_AUTHENTIC_KEY || "";
    function R(e, i, jO) {
        var T = new Date();
        T.setTime(T.getTime() + jO * 24 * 60 * 60 * 1000);
        document.cookie = e + "=" + escape(i) + ";expires=" + T.toGMTString()
    }
    function a2(e, i) {
        if (navigator.cookieEnabled) {
            return R(e, i, 30)
        }
        if (localStorage) {
            return localStorage.setItem(e, i)
        }
        if (sessionStorage) {
            return sessionStorage.setItem(e, i)
        }
    }
    bw.getSeckeyCid = function() {
        var i = +new Date();
        var e = bO + "//dlswbr.baidu.com/heicha/mw/abclite-2063-s.js?_t=" + i;
        gw.load(e, iq)
    }
    ;
    function iq() {
        if (window.___abvk) {
            a2("SECKEY_ABVK", window.___abvk)
        }
    }
    window.__abbaidu_2063_cb = function(i) {
        var e = JSON.parse(i);
        a2("BMAP_SECKEY", e.data)
    }
    ;
    bw.bmapVerifyCbk = function(jP) {
        if (jP && jP.error !== 0) {
            bw = null;
            BMapGL = null;
            var jQ = "百度未授权使用地图API，可能是因为您提供的密钥不是有效的百度地图开放平台密钥，或此密钥未对本应用的百度地图JavaScriptAPI授权。您可以访问如下网址了解如何获取有效的密钥：https://lbs.baidu.com/apiconsole/key#。";
            switch (jP.error) {
            case 101:
                jQ = "您所使用的密钥ak有问题，不支持jsapi服务，可以访问该网址了解如何获取有效密钥：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 102:
                jQ = "MCODE参数不存在，mobile类型MCODE参数必需，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 200:
                jQ = "APP不存在，AK有误请检查再重试，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 201:
                jQ = "APP被您禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 202:
                jQ = "APP被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 203:
                jQ = "APP类型错误，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 210:
                jQ = "APP IP校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 220:
                jQ = "APP Referer校验失败。请检查该ak设置的白名单与访问所有的域名是否一致。详情查看：http://lbsyun.baidu.com/apiconsole/key#";
                break;
            case 230:
                jQ = "APP Mcode码校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 240:
                jQ = "APP服务被禁用了，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 250:
                jQ = "该用户不存在... 请登录 https://lbs.baidu.com 的控制台，注册成为开发者申请ak吧。";
                break;
            case 251:
                jQ = "该用户被自己删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情。";
                break;
            case 252:
                jQ = "该用户被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 了解如何获取有效密钥，或请联系我们了解详情。";
                break;
            case 260:
                jQ = "您所使用的密钥AK不包含该服务呢，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
                break;
            case 261:
                jQ = "您所使用的密钥AK的该服务被禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
                break;
            case 401:
                jQ = "您所使用的AK并发超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
                break;
            case 302:
                jQ = "您所使用的AK天配额超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
                break
            }
            alert(jQ);
            var T = document.getElementsByClassName("bmap-container");
            if (T) {
                for (var jO = 0; jO < T.length; jO++) {
                    var e = T[jO];
                    if (e && e.firstChild && e.firstChild.id === "platform") {
                        e.innerText = ""
                    }
                }
            }
        }
    }
    ;
    bw.frequencyCbk = function(e) {
        if (e) {
            window.QTFrequency = e
        }
    }
    ;
    bw.verify = function() {
        var e = B.apiHost + "/?qt=verify&v=gl&type=webgl&ak=" + ez + "&callback=" + fe + ".bmapVerifyCbk";
        gw.load(e)
    }
    ;
    bw.frequency = function() {}
    ;
    bw.apiLoad = bw.apiLoad || function() {}
    ;
    function hN(i, e) {
        this._size = i;
        this._cache = [];
        this._totalGetTimes = 0;
        this._totalHitTimes = 0;
        this._options = {
            clearCallback: null,
            removeOldCallback: null
        };
        e = e || {};
        for (var T in e) {
            if (e.hasOwnProperty(T)) {
                this._options[T] = e[T]
            }
        }
    }
    hN.prototype.setData = function(T, jO) {
        var e = this._cache;
        var i = this._size;
        if (i === 0) {
            return
        }
        if (e.length > i) {
            this._removeOld()
        }
        if (!e[T]) {
            e.push(jO)
        }
        e[T] = jO;
        jO._key_ = T
    }
    ;
    hN.prototype.getHitRate = function() {
        return Math.round(this._totalHitTimes / this._totalGetTimes * 1000) / 1000
    }
    ;
    hN.prototype.getData = function(i) {
        var e = this._cache[i];
        if (e) {
            this._totalHitTimes++
        }
        this._totalGetTimes++;
        return e
    }
    ;
    hN.prototype.removeData = function(jP) {
        if (this._options.clearCallback) {
            this._options.clearCallback(this._cache[jP])
        }
        var T = this._cache;
        var jQ = T[jP];
        for (var jO = 0, e = T.length; jO < e; jO++) {
            if (T[jO] === jQ) {
                T.splice(jO, 1);
                break
            }
        }
        delete T[jP]
    }
    ;
    hN.prototype._removeOld = function() {
        var e = this._cache;
        var jP = Math.round(this._size * 0.6);
        for (var jO = 0; jO < jP; jO++) {
            var T = e[jO]._key_;
            if (this._options.clearCallback) {
                this._options.clearCallback(e[T])
            }
            delete e[T]
        }
        e.splice(0, jP);
        if (this._options.removeOldCallback) {
            this._options.removeOldCallback()
        }
    }
    ;
    hN.prototype.clear = function() {
        var T = this._cache;
        for (var jP = 0, e = T.length; jP < e; jP++) {
            var jO = T[jP]._key_;
            if (this._options.clearCallback) {
                this._options.clearCallback(T[jO])
            }
            delete T[jO]
        }
        this._cache = T = []
    }
    ;
    hN.prototype.forEach = function(jO) {
        var T = this._cache;
        for (var jQ = 0, e = T.length; jQ < e; jQ++) {
            var jP = T[jQ]._key_;
            jO(T[jP])
        }
    }
    ;
    hN.prototype.getBatch = function(jP) {
        var e = [];
        for (var jO = 0, T = jP.length; jO < T; jO++) {
            if (this.getData(jP[jO])) {
                e[e.length] = this.getData(jP[jO])
            }
        }
        return e
    }
    ;
    hN.prototype.clearExcept = function(jQ) {
        var T = this._cache;
        for (var e = T.length, jP = e - 1; jP >= 0; jP--) {
            var jO = this._cache[jP]._key_;
            if (!jQ[jO]) {
                T.splice(jP, 1);
                if (this._options.clearCallback) {
                    this._options.clearCallback(T[jO])
                }
                delete T[jO]
            }
        }
    }
    ;
    hN.prototype.getDataCount = function() {
        return this._cache.length
    }
    ;
    function iw() {}
    eJ.extend(iw.prototype, {
        centerAndZoomIn: function(jT, T, jU) {
            var jR = this;
            if (!jT && !T) {
                return
            }
            jT = jT || this.centerPoint;
            T = T || this.zoomLevel;
            T = this._getProperZoom(T).zoom;
            if (this.mapType === BMAP_EARTH_MAP) {
                if (!this._earth) {
                    this.mapType = BMAPGL_NORMAL_MAP;
                    this.temp.originMapType = BMAP_EARTH_MAP;
                    function jS() {
                        jR._earth = new bw.Earth(jR,{
                            showRealSunlight: jR.config.showRealSunlight,
                            showMilkyway: jR.config.showMilkyway,
                            earthBackground: jR.config.earthBackground
                        });
                        jR._proxyEarthEvents();
                        jR._changeEarthMapType(BMAP_EARTH_MAP);
                        eJ.extend(jR, bw.EarthView.prototype);
                        if (!jR._navigationCtrl && jR.config.showControls) {
                            jR._navigationCtrl = new bw.NavigationControl3D(jR)
                        }
                        delete jR.temp.originMapType
                    }
                    gK.load("earth", function() {
                        if (bw["FeatureStyle" + jR.config.style]) {
                            jS()
                        } else {
                            jR.loadMapStyleFiles(function() {
                                jS()
                            })
                        }
                    })
                }
            }
            this.lastLevel = this.zoomLevel || T;
            this.zoomLevel = T;
            var jP = new fu("onload");
            jP.point = jT;
            jP.zoom = T;
            this.centerPoint = this.restrictCenter(new cr(jT.lng,jT.lat));
            if (this.centerPoint.zoom) {
                this.zoomLevel = this.centerPoint.zoom
            }
            this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
            this.defaultCenter = this.defaultCenter || this.centerPoint;
            if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
                var i = this.config.defaultMaxBounds;
                var jQ = new m(i,"baidu",this.mapType);
                var jO = new hc({
                    mapType: this.mapType,
                    copyright: jQ,
                    customLayer: false,
                    baseLayer: true,
                    tileTypeName: "web"
                });
                jO._isInnerLayer = true;
                this.addTileLayer(jO);
                if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
                    this._addHybirdMap()
                }
            }
            this.dispatchEvent(jP);
            this.loaded = true;
            jU = jU || {};
            jU.callback && jU.callback()
        },
        _setPlatformPosition: function(jU, jT, jX) {
            jX = jX || {};
            if (jU === 0 && jT === 0 && !jX.point) {
                return
            }
            if (isNaN(jX.initMapOffsetX)) {
                jX.initMapOffsetX = this.offsetX
            }
            if (isNaN(jX.initMapOffsetY)) {
                jX.initMapOffsetY = this.offsetY
            }
            var jV = jU + jX.initMapOffsetX;
            var jS = jT + jX.initMapOffsetY;
            if (jX.point) {
                var i = this.restrictCenter(jX.point);
                if (!i.equals(this.centerPoint)) {
                    this.centerPoint = i.clone();
                    this.fire(new fu("oncenter_changed"))
                }
            } else {
                var jO = this.offsetX - jV;
                var e = this.offsetY - jS;
                var T = this.getZoomUnits();
                var jR = this.centerPoint.lng;
                var jQ = this.centerPoint.lat;
                var jP = new cr(jR,jQ);
                this.centerPoint = this.restrictCenter(new cr(jP.lng + jO * T,jP.lat - e * T), T);
                this.fire(new fu("oncenter_changed"));
                if (this.zoomLevel < 10) {
                    jV = this.offsetX - (this.centerPoint.lng - jP.lng) / T;
                    jS = this.offsetY + (this.centerPoint.lat - jP.lat) / T
                }
            }
            this.offsetX = jV;
            this.offsetY = jS;
            var jW = this.platform.style;
            jW.left = jV + "px";
            jW.top = jS + "px";
            this.maskLayer.style.left = -jV + "px";
            this.maskLayer.style.top = -jS + "px";
            if (jX.dispatchEvent !== false) {
                this.dispatchEvent(new fu("onmoving"))
            }
        },
        zoomTo: function(e, jR, jV) {
            jV = jV || {};
            jV.zoomCenter = jR;
            if (jV.noAnimation !== true) {
                this.deepZoomTo(e, jV);
                return
            }
            if (typeof e !== "number") {
                return
            }
            var jP = d6[this.mapType];
            if (!jP) {
                return
            }
            var T = e;
            e = this._getProperZoom(e).zoom;
            if (e === this.zoomLevel) {
                var jS = new fu("onzoomexceeded");
                jS.targetZoom = T;
                this.dispatchEvent(jS);
                jV.callback && jV.callback();
                return
            }
            this.lastLevel = this.zoomLevel;
            if (jR) {
                this.temp._cPoint = jR;
                this.temp._cPixel = this.pointToPixelIn(jR)
            } else {
                if (this.getInfoWindow()) {
                    var jU = this.getInfoWindow().getPoint();
                    this.temp._cPixel = this.pointToPixelIn(jU);
                    this.temp._cPoint = jU
                }
            }
            if (this.config.zoomCenter) {
                jR = this.config.zoomCenter;
                this.temp._cPoint = jR;
                this.temp._cPixel = this.pointToPixelIn(jR)
            }
            if (jR || this.temp.infoWin && this.temp.infoWin.isOpen()) {
                var i = this.temp._cPoint;
                var jT = this.temp._cPixel;
                var jO = this.getZoomUnits(e);
                var jQ = new cr(i.lng + jO * (this.width / 2 - jT.x),i.lat - jO * (this.height / 2 - jT.y));
                this.centerPoint = this.restrictCenter(jQ, jO, e);
                if (this.centerPoint.zoom) {
                    e = this.centerPoint.zoom
                }
            }
            if (jV.fireEvent !== false) {
                this.dispatchEvent(new fu("onzoomstart"))
            }
            if (e !== this.zoomLevel) {
                this.zoomLevel = e;
                this.dispatchEvent(new fu("onzooming"));
                this.dispatchEvent(new fu("onzoomstartcode"))
            }
            if (jV.fireEvent !== false) {
                this.dispatchEvent(new fu("onzoomend"))
            }
            if (jV.callback) {
                jV.callback()
            }
        },
        deepZoomMedia: function(e) {
            var i = this;
            if (!i.temp.isStdCtrlBusy) {
                i.temp.isStdCtrlBusy = true;
                i.deepZoomTo(i.zoomLevel + e);
                setTimeout(function() {
                    i.temp.isStdCtrlBusy = false
                }, 400)
            }
        },
        deepZoomTo: function(jS, jO) {
            jO = jO || {};
            var jQ = jS - this.zoomLevel;
            var jP = this._getProperZoom(jS);
            if (jP.exceeded) {
                var e = new fu("onzoomexceeded");
                e.targetZoom = jS;
                this.dispatchEvent(e);
                return
            }
            var i;
            if (jO.zoomCenter) {
                i = this.pointToPixelIn(jO.zoomCenter)
            } else {
                if (this.getInfoWindow()) {
                    i = this.pointToPixelIn(this.getInfoWindow().getPoint(), {
                        zoom: this.lastLevel
                    })
                } else {
                    var i = new e4(this.width / 2,this.height / 2)
                }
            }
            this.lastLevel = this.zoomLevel;
            var jR = this.deepZoom || new aD(this);
            var T = jQ > 0 ? 1 : -1;
            jR.zoomMap(i, jQ, T, null, jO)
        },
        flyToIn: function(jT, e) {
            if (e === this.zoomLevel) {
                this.panToIn(jT);
                return
            }
            var jQ = this._getProperZoom(e);
            if (jQ.exceeded) {
                var jU = new fu("onzoomexceeded");
                jU.targetZoom = e;
                this.dispatchEvent(jU);
                return
            }
            var jS = e - this.zoomLevel;
            var T = new e4(this.width / 2,this.height / 2);
            var i = this.pointToPixelIn(jT);
            var jR = new iE(i.x - T.x,i.y - T.y);
            this.lastLevel = this.zoomLevel;
            if (Math.abs(jS) >= 4 || Math.abs(jR.width) > this.width || Math.abs(jR.height) > this.height) {
                this.centerAndZoomIn(jT, e);
                return
            }
            var jP = this.deepZoom || new aD(this);
            var jO = jS > 0 ? 1 : -1;
            jP.zoomMap(i, jS, jO, jR)
        },
        panToIn: function(i, T) {
            T = T || {};
            if (!i || i.equals(this.centerPoint)) {
                T.callback && T.callback();
                return
            }
            var jO = this.pointToPixelIn(i);
            var e = Math.round(this.width / 2);
            var jP = Math.round(this.height / 2);
            if (Math.abs(e - jO.x) > this.width || Math.abs(jP - jO.y) > this.height || T.noAnimation === true) {
                this._panToIn(e - jO.x, jP - jO.y, i);
                T.callback && T.callback()
            } else {
                this._panBy(e - jO.x, jP - jO.y, T)
            }
        },
        _panToIn: function(i, e, jO) {
            var T = this.temp;
            if (T.operating === true) {
                return
            }
            if (T.dragAni) {
                T.dragAni.stop();
                T.dragAni = null;
                this.dispatchEvent(new fu("onmoveend"))
            }
            this.dispatchEvent(new fu("onmovestart"));
            this._setPlatformPosition(i, e, {
                point: jO
            });
            this.dispatchEvent(new fu("onmoveend"))
        },
        panBy: function(i, e, T) {
            T = T || {};
            i = Math.round(i) || 0;
            e = Math.round(e) || 0;
            if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
                this._panBy(i, e, T)
            } else {
                this._panToIn(i, e);
                T.callback && T.callback()
            }
        },
        _panBy: function(i, e, jP) {
            if (this.temp.operating === true) {
                return
            }
            jP = jP || {};
            this.dispatchEvent(new fu("onmovestart"));
            var jO = this;
            var T = jO.temp;
            T.pl = jO.offsetX;
            T.pt = jO.offsetY;
            if (T.tlPan) {
                T.tlPan.cancel()
            }
            if (T.dragAni) {
                T.dragAni.stop();
                T.dragAni = null;
                this.dispatchEvent(new fu("onmoveend"))
            }
            T.tlPan = new fk({
                fps: jP.fps || jO.config.fps,
                duration: jP.duration || jO.config.actionDuration,
                transition: jP.transition || gk.easeInOutQuad,
                render: function(jQ) {
                    this.terminative = jO.temp.operating;
                    if (jO.temp.operating) {
                        return
                    }
                    jO._setPlatformPosition(Math.ceil(i * jQ), Math.ceil(e * jQ), {
                        initMapOffsetX: T.pl,
                        initMapOffsetY: T.pt
                    })
                },
                finish: function(jQ) {
                    jO.dispatchEvent(new fu("onmoveend"));
                    jO.temp.tlPan = false;
                    if (jO.temp.stopArrow === true) {
                        jO.temp.stopArrow = false;
                        if (jO.temp.arrow !== 0) {
                            jO._arrow()
                        }
                    }
                    jP.callback && jP.callback()
                }
            })
        },
        getCenterIn: function() {
            return this.centerPoint
        },
        getZoom: function() {
            return this.zoomLevel
        },
        setTilt: function() {},
        getTilt: function() {
            return this._tilt
        },
        setHeading: function() {},
        getHeading: function() {
            return this._heading
        },
        restrictCenter: function(jW, i, e) {
            this.isRestrict = false;
            i = i || this.getZoomUnits();
            e = e || this.zoomLevel;
            var jU = this.pixelToPointIn(new e4(this.width,0), {
                center: jW,
                zoom: e
            });
            var jS = this.pixelToPointIn(new e4(0,this.height), {
                center: jW,
                zoom: e
            });
            var jX = jW.lng;
            var j2 = jW.lat;
            if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
                var j1 = this.config.restrictBounds;
                var jO = j1.getSouthWest();
                var jZ = j1.getNorthEast();
                var jV = iN.convertLL2MC(jO);
                var jQ = iN.convertLL2MC(jZ);
                jW.lng = this.calcNewLngByBounds(jX, jS, jU, jV.lng, jQ.lng, i);
                jW.lat = this.calcNewLatByBounds(j2, jS, jU, jV.lat, jQ.lat, i);
                return jW
            }
            var jT = this.pixelToPointIn(new e4(0,0), {
                center: jW,
                zoom: e
            });
            var jP = this.pixelToPointIn(new e4(0,this.height), {
                center: jW,
                zoom: e
            });
            if (this.zoomLevel < 5) {
                if (jT.lat > hr.MAX_LAT && jP.lat < hr.MIN_LAT) {
                    this.isRestrict = true;
                    var T = hr.MAX_LAT - jW.lat;
                    var jR = jW.lat - hr.MIN_LAT;
                    var j0;
                    if (T < jR) {
                        j0 = T / (this.height / 2)
                    } else {
                        j0 = jR / (this.height / 2)
                    }
                    var jY = 18 - p(j0);
                    this.zoomLevel = Math.ceil(jY);
                    jW.zoom = Math.ceil(jY);
                    return jW
                }
            }
            if (jT.lat > hr.MAX_LAT) {
                this.isRestrict = true;
                jW.lat = hr.MAX_LAT - this.height / 2 * i
            } else {
                if (jP.lat < hr.MIN_LAT) {
                    this.isRestrict = true;
                    jW.lat = hr.MIN_LAT + this.height / 2 * i
                }
            }
            return jW
        }
    });
    function hr(e, T) {
        if (typeof e === "string") {
            e = document.getElementById(e)
        }
        cZ.call(this);
        this.container = e;
        this.width = e.clientWidth;
        this.height = e.clientHeight;
        this.offsetX = 0;
        this.offsetY = 0;
        this._setStyle(e);
        e.unselectable = "on";
        e.innerHTML = "";
        eJ.ac(e, "bmap-container");
        e.appendChild(this.render());
        this._initDate = new Date();
        this.platform = e.children[0];
        this.maskLayer = this.platform.children[0];
        this._panes = {};
        this.centerPoint = new cr(0,0);
        this.zoomLevel = 0;
        this._heading = 0;
        this._tilt = 0;
        this._bounds = new hF();
        this.lastLevel = 0;
        this._lock = false;
        this._enableTiltZoom = 7;
        this._enableHeadingZoom = 7;
        this.defaultZoomLevel = null;
        this.defaultCenter = null;
        this.zoomEventStatus = "idle";
        this.currentOperation = dZ.idle;
        this._setConfig(T);
        this._initMapRenderType();
        this._animationInfo = {};
        this._animationInfoUnstopable = {};
        this.suspendLoad = false;
        this._customTileLabels = [];
        if (this._renderType === "webgl") {
            this._workerMgr = new i9(this);
            this._featureMgr = new b8();
            eJ.extend(this, C.prototype);
            this.jobScheduler = new bi(this);
            this.benchmark = new cQ();
            this._setupWebGLMap();
            this.deviceInfo = {
                hardwareInfo: {
                    renderer: "",
                    vendor: ""
                }
            };
            if (cX.ifSupportWebGL._renderer) {
                this.deviceInfo.hardwareInfo.renderer = cX.ifSupportWebGL._renderer;
                this.deviceInfo.hardwareInfo.vendor = cX.ifSupportWebGL._vendor
            }
        } else {
            eJ.extend(this, iw.prototype)
        }
        if (!d6[this.config.mapType]) {
            this.config.mapType = BMAPGL_NORMAL_MAP
        }
        if (this.config.mapType === BMAP_EARTH_MAP && !this.config.enableEarth) {
            if (this.forceEnableEarth() === false) {
                this.config.mapType = BMAPGL_NORMAL_MAP
            }
        }
        this.mapType = this.config.mapType;
        this.preMapType = null;
        if (this.config.enableEarth) {
            var jQ = this.maskLayer.style;
            jQ.opacity = 0;
            jQ.background = "#000";
            if (this.config.mapType === BMAP_EARTH_MAP) {
                jQ.opacity = 1
            }
            setTimeout(function() {
                jQ.WebkitTransition = jQ.transition = "opacity .4s"
            }, 100)
        }
        this._isHybridShow = this.config.showStreetLayer;
        this.temp = {
            operating: false,
            arrow: 0,
            lastDomMoveTime: 0,
            lastLoadTileTime: 0,
            lastMovingTime: 0,
            canKeyboard: false,
            I: function(i) {
                return eJ.I(i)
            },
            curSpots: [],
            curSpotsArray: [],
            curAreaSpot: null,
            spotsGuid: 1,
            registerIndex: -1,
            hoverOnSpot: null,
            isStdCtrlBusy: false
        };
        window.InstanceCore = this.temp.I;
        this.platform.style.cursor = this.config.defaultCursor;
        this._bind();
        for (var jO = 0; jO < bw._register.length; jO++) {
            bw._register[jO](this)
        }
        this.temp.registerIndex = jO;
        var jP = this;
        if (this._renderType === "webgl") {
            gK.load("oppcgl", function() {
                jP._asyncRegister()
            })
        } else {
            gK.load("oppc", function() {
                jP._asyncRegister()
            })
        }
        if (this.config.mapType === "B_EARTH_MAP") {
            if (!bw.Earth) {
                gK.load("earth", function() {})
            } else {
                jP._syncAndChangeMapType("B_EARTH_MAP")
            }
        }
    }
    hr.MAX_TILT = 87;
    hr.MAX_DRAG_TILT = 73;
    hr.MAX_DRAG_TILT_L2 = 50;
    hr.MIN_TILT = 0;
    hr.MAX_LAT = 19431424;
    hr.MIN_LAT = -16023552;
    hr.WORLD_SIZE_MC_HALF = 20037726.372307256;
    hr.WORLD_SIZE_MC = hr.WORLD_SIZE_MC_HALF * 2;
    hr.RIGHT_EDGE_POINT = new cr(hr.WORLD_SIZE_MC_HALF,0);
    hr.LEFT_EDGE_POINT = new cr(-hr.WORLD_SIZE_MC_HALF,0);
    hr.HIGH_RES_MIN_RATIO = 1.2;
    hr.inherits(cZ, "Map");
    var fc = {
        NORMAL: "B_NORMAL_MAP",
        EARTH: "B_EARTH_MAP",
        SATELLITE: "B_STREET_MAP"
    };
    bw.MapTypeId = fc;
    eJ.extend(hr.prototype, {
        render: function() {
            var e = bT("div", {
                id: "platform"
            });
            var jO = e.style;
            jO.overflow = "visible";
            jO.position = "absolute";
            jO.zIndex = 5;
            jO.top = jO.left = "0px";
            var i = bT("div", {
                id: "mask",
                "class": "BMap_mask"
            });
            var T = i.style;
            T.position = "absolute";
            T.top = T.left = "0px";
            T.zIndex = "9";
            T.overflow = "hidden";
            T.WebkitUserSelect = "none";
            T.width = this.width + "px";
            T.height = this.height + "px";
            e.appendChild(i);
            return e
        },
        _initMapRenderType: function() {
            var e = this.config.forceRenderType;
            if (e === "dom") {
                this._renderType = "dom";
                return
            } else {
                if (e === "canvas") {
                    if (cX.isModernBrowser && !cX.ifCanvas2dInBlackList()) {
                        this._renderType = "canvas";
                        return
                    } else {
                        this._renderType = "dom";
                        return
                    }
                } else {
                    if (e === "webgl") {
                        if (cX.ifSupportWebGL()) {
                            this._renderType = "webgl";
                            return
                        }
                    }
                }
            }
            if (cX.ifSupportWebGL() && cX.ifEnableWebGLMap()) {
                this._renderType = "webgl";
                return
            }
            if (cX.isModernBrowser && cX.ifEnableCanvas2dMap()) {
                this._renderType = "canvas";
                return
            }
            this._renderType = "dom"
        },
        _setConfig: function(i) {
            i = i || {};
            this.config = {
                bottomOffset: 0,
                clickInterval: 200,
                enableDragging: true,
                enableRotate: true,
                enableTilt: true,
                enableKeyboard: false,
                enableDblclickZoom: true,
                enableContinuousZoom: true,
                enableWheelZoom: false,
                enableRotateGestures: true,
                enableTiltGestures: true,
                enablePinchZoom: true,
                fixCenterWhenPinch: false,
                enableAutoResize: true,
                zoomCenter: null,
                fps: eJ.Browser.ie ? 30 : 60,
                zoomerDuration: 240,
                actionDuration: 450,
                defaultCursor: B.defaultCursor,
                draggingCursor: B.draggingCursor,
                overlayMoveCursor: "pointer",
                coordType: BMAP_COORD_MERCATOR,
                mapType: BMAPGL_NORMAL_MAP,
                drawer: BMAP_SYS_DRAWER,
                enableInertialDragging: true,
                drawMargin: 500,
                drawMarginGL: 500,
                enableFulltimeSpotClick: false,
                enableResizeOnCenter: false,
                isModernBrowser: cX.isModernBrowser,
                forceRenderType: "",
                textRenderType: null,
                ratio: fX() >= hr.HIGH_RES_MIN_RATIO ? 2 : 1,
                enableEarth: cX.ifEnableEarth(),
                defaultMaxBounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
                showControls: false,
                showRealSunlight: true,
                showMilkyway: true,
                earthBackground: null,
                showStreetLayer: true,
                minZoom: null,
                maxZoom: null,
                style: "default",
                backgroundColor: null,
                enableIconClick: false,
                autoSafeArea: false,
                ak: null,
                webgl2: false,
                restrictCenter: true,
                restrictBounds: null,
                smaa: true,
                preserveDrawingBuffer: false,
                privateOn: false,
                privateRegions: null,
                popRightClick: false
            };
            for (var T in i) {
                if (i.hasOwnProperty(T)) {
                    this.config[T] = i[T];
                    if (T === "fixCenterWhenResize") {
                        this.config.enableResizeOnCenter = i[T]
                    }
                }
            }
            if (i.style) {
                if (i.style["styleId"] && i.style["styleId"].length < 32) {
                    this.config.style = i.style["styleId"]
                } else {
                    this.config.style = i.style
                }
            }
            this._setTextRenderType();
            this._displayOptions = {
                poi: true,
                poiText: true,
                poiIcon: true,
                overlay: true,
                layer: true,
                building: true,
                indoor: true,
                street: true,
                skyColors: ["rgba(226, 237, 248, 0)", "rgba(186, 211, 252, 1)"],
                isFlat: false,
                labelMargin: 0
            };
            if (i.displayOptions) {
                for (var e in i.displayOptions) {
                    if (i.displayOptions.hasOwnProperty(e)) {
                        this._displayOptions[e] = i.displayOptions[e]
                    }
                }
            }
            if (this.config.restrictCenter === false) {
                this._enableTiltZoom = 0;
                this._enableHeadingZoom = 0
            }
        },
        getMinZoom: function() {
            var T;
            if (d6[this.mapType][this._renderType]) {
                T = d6[this.mapType][this._renderType].minZoom
            } else {
                T = d6[this.mapType].minZoom
            }
            if (this.config.minZoom !== null && this.config.minZoom >= T) {
                T = this.config.minZoom
            }
            if (this.mapType === "B_EARTH_MAP") {
                return T
            }
            var i = this.getSize();
            var e = this.worldSize(T);
            while (e < i.width) {
                T++;
                e = this.worldSize(T)
            }
            return T
        },
        getMaxZoom: function() {
            var e;
            if (d6[this.mapType][this._renderType]) {
                e = d6[this.mapType][this._renderType].maxZoom
            } else {
                e = d6[this.mapType].maxZoom
            }
            if (this.config.maxZoom !== null && this.config.maxZoom <= e) {
                e = this.config.maxZoom
            } else {
                if (this._renderType === "webgl") {
                    e = 21
                }
            }
            return e
        },
        _drawFrame: function() {
            this._webglMapScene._painter.draw()
        },
        _setupWebGLMap: function() {
            var e = this;
            gK.load("mapgl", function() {
                e._asyncRegister()
            })
        },
        _setStyle: function(i) {
            var e = i.style;
            e.overflow = "hidden";
            if (cc(i).position !== "absolute") {
                e.position = "relative"
            }
            e.backgroundImage = "url(" + B.imgPath + "bg.png)";
            e.textAlign = "left";
            e.touchAction = e.MSTouchAction = "none"
        },
        _bind: function() {
            var e = this;
            if (e._renderType !== "webgl") {
                e._watchSize = function() {
                    var T = e.getContainerSize();
                    if (e.width !== T.width || e.height !== T.height) {
                        var jR = (T.width - e.width) / 2;
                        var jT = (T.height - e.height) / 2;
                        var jO = e.getZoomUnits();
                        var jQ = e.centerPoint;
                        if (jQ && !e.config.enableResizeOnCenter) {
                            e.centerPoint = new cr(jQ.lng + jR * jO,jQ.lat - jT * jO)
                        }
                        e.maskLayer.style.width = (e.width = T.width) + "px";
                        e.maskLayer.style.height = (e.height = T.height) + "px";
                        var jP = new fu("onresize");
                        jP.size = T;
                        e.dispatchEvent(jP);
                        e.fire(new fu("onsize_changed"));
                        var i = parseInt(e.platform.style.left, 10) || 0;
                        var jS = parseInt(e.platform.style.top, 10) || 0;
                        if (e.currentOperation !== "undefined" && e.currentOperation !== dZ.idle && (e.offsetX !== i || e.offsetY !== jS)) {
                            e._setPlatformPosition(i, jS)
                        }
                    }
                }
            } else {
                e._watchSize = function() {
                    var i = e.getContainerSize();
                    if (e.width !== i.width || e.height !== i.height) {
                        var jO = e.getSize();
                        e.maskLayer.style.width = (e.width = i.width) + "px";
                        e.maskLayer.style.height = (e.height = i.height) + "px";
                        if (fX() !== e.config.ratio) {
                            e.config.ratio = fX()
                        }
                        var jP = new fu("onresize");
                        jP.size = i;
                        e.dispatchEvent(jP);
                        var T = new fu("onsize_changed");
                        T.size = i;
                        T.oldSize = jO;
                        e.fire(T)
                    }
                }
            }
            if (e.config.enableAutoResize) {
                e.temp.autoResizeTimer = setInterval(e._watchSize, 16)
            }
            this.on("size_changed", function() {
                var i = e.getMinZoom();
                if (e.zoomLevel < i) {
                    e.setZoomIn(i, {
                        noAnimation: true
                    })
                }
            });
            this.on("zoom_changed", function() {
                this.dispatchEvent(new fu("onzooming"))
            })
        },
        addControl: function(e) {
            if (e && bP(e._i)) {
                e._i(this);
                this.dispatchEvent(new fu("onaddcontrol",e))
            }
        },
        removeControl: function(e) {
            if (e && bP(e.remove)) {
                e.remove();
                this.dispatchEvent(new fu("onremovecontrol",e))
            }
        },
        addContextMenu: function(i, e) {
            if (i) {
                i.initialize(this, e);
                this.dispatchEvent(new fu("onaddcontextmenu",i))
            }
        },
        removeContextMenu: function(e) {
            if (e) {
                this.dispatchEvent(new fu("onremovecontextmenu",e));
                e.remove()
            }
        },
        addDistrictLayer: function(e) {
            if (e) {
                e.initialize(this)
            }
        },
        removeDistrictLayer: function(e) {
            if (e) {
                e.removeDistrict(this, e)
            }
        },
        addOverlay: function(i) {
            if (i && bP(i._i)) {
                var T = new fu("onbeforeaddoverlay",i);
                T.overlay = i;
                this.dispatchEvent(T);
                i._i(this);
                T = new fu("onaddoverlay",i);
                T.overlay = i;
                this.dispatchEvent(T)
            }
        },
        removeOverlay: function(i) {
            if (i && bP(i.remove)) {
                if (i instanceof ce) {
                    if (this.stencil) {
                        this.stencil = null
                    }
                }
                var T = new fu("onremoveoverlay",i);
                T.overlay = i;
                i.remove();
                this.dispatchEvent(T)
            }
        },
        clearOverlays: function() {
            this.dispatchEvent(new fu("onclearoverlays"))
        },
        addTileLayer: function(jP) {
            if (!jP) {
                return
            }
            if (jP instanceof dh || jP instanceof dU) {
                if (jP.layer) {
                    jP = jP.layer
                } else {
                    return
                }
            }
            for (var jO = 0, e = this.tileMgr.tileLayers.length; jO < e; jO++) {
                var T = this.tileMgr.tileLayers[jO];
                if (T === jP || T.getMapType() === jP.getMapType()) {
                    return
                }
            }
            jP.initialize(this);
            this.dispatchEvent(new fu("onaddtilelayer",jP))
        },
        removeTileLayer: function(e) {
            if (e) {
                if (e instanceof dh || e instanceof dU) {
                    if (e.layer) {
                        e = e.layer
                    } else {
                        return
                    }
                }
                e.remove();
                this.dispatchEvent(new fu("onremovetilelayer",e))
            }
        },
        addGeoJSONLayer: function(e) {
            if (e && e instanceof aM) {
                e.init(this)
            }
        },
        removeGeoJSONLayer: function(e) {
            if (e && e instanceof aM) {
                e.remove()
            }
        },
        getTileLayer: function(e) {
            if (this.tileMgr) {
                return this.tileMgr.getTileLayer(e)
            }
            return null
        },
        setMapType: function(e) {
            var i = this;
            if (this.mapType === e || this._mapTypeChanging) {
                return
            }
            if (e === BMAP_EARTH_MAP && !this.config.enableEarth) {
                return
            }
            if (this._earth && this._earth.getLock()) {
                return
            }
            this._mapTypeChanging = true;
            this.preMapType = this.mapType;
            this._boundsInPreMapType = this.getBoundsIn();
            if (this.preMapType === BMAP_SATELLITE_MAP) {
                this._preStreetLayerShow = this._isHybridShow
            }
            if (e === BMAP_EARTH_MAP) {
                if (!bw.Earth) {
                    gK.load("earth", function() {
                        i._syncAndChangeMapType(e)
                    });
                    return
                }
                i._syncAndChangeMapType(e)
            } else {
                if (this.preMapType !== BMAP_EARTH_MAP) {
                    this._changeFlatMapType(e);
                    this._mapTypeChanging = false
                } else {
                    this._setMapTypeStatus(e, function(T, jO) {
                        var jP = i._earth.getEarthCanvas();
                        i._changeFlatMapType(e, this.preMapType);
                        if (i._mapTypeChangAni) {
                            i._mapTypeChangAni.stop()
                        }
                        i._mapTypeChangAni = dd.start({
                            el: jP,
                            style: "opacity",
                            startValue: 1,
                            endValue: 0,
                            duration: 200,
                            callback: function() {
                                i._mapTypeChangAni = null;
                                i._mapTypeChanging = false
                            }
                        });
                        T = iN.convertLL2MC(T);
                        if (i._renderType === "webgl") {
                            eJ.extend(i, C.prototype);
                            i.setCenterIn(T, {
                                noAnimation: true
                            });
                            i.setZoomIn(jO, {
                                noAnimation: true
                            })
                        } else {
                            eJ.extend(i, iw.prototype);
                            i.centerAndZoomIn(T, jO)
                        }
                    })
                }
            }
        },
        _changeFlatMapType: function(jR) {
            if (!jR || !d6[jR]) {
                return
            }
            var jZ = this.preMapType;
            this.mapType = jR;
            var jO = this.getTileLayer(jZ);
            if (jO) {
                this.removeTileLayer(jO)
            } else {
                if (this.tileMgr.tileLayers.length) {
                    var jY = this.getTileLayer("B_NORMAL_MAP");
                    if (jY) {
                        this.removeTileLayer(jY)
                    } else {
                        jY = this.getTileLayer("B_SATELLITE_MAP");
                        jY && this.removeTileLayer(jY)
                    }
                }
            }
            this._preStreetLayerShow = this.config.showStreetLayer;
            if (jZ === BMAP_SATELLITE_MAP && this._preStreetLayerShow) {
                this._removeHybirdMap()
            }
            if (this.mapType !== BMAP_EARTH_MAP || this._renderType !== "webgl" || this.baseLayerAdded !== true) {
                var T = new hF(new cr(-21364736,-10616832),new cr(23855104,15859712));
                var jW = new m(T,"baidu",jR);
                var jP = new hc({
                    mapType: this.mapType,
                    copyright: jW,
                    dataType: this.mapType === BMAP_SATELLITE_MAP ? gp : hp,
                    customLayer: this.mapType === BMAP_SATELLITE_MAP,
                    baseLayer: true,
                    transparentPng: false,
                    tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
                });
                jP._isInnerLayer = true;
                jP.setZIndex(0);
                this.addTileLayer(jP);
                if (this._renderType === "webgl" && !this.baseLayerAdded) {
                    this.baseLayerAdded = true
                }
            }
            if (jR === BMAP_SATELLITE_MAP) {
                this._featureMgr.clearLabelOverlayData();
                this._featureMgr.setLabelData([]);
                if (this._preStreetLayerShow === true || typeof this._preStreetLayerShow === "undefined") {
                    this._addHybirdMap()
                }
            }
            var jT = this.tileMgr.tileLayers;
            for (var jS = 0, jQ = jT.length; jS < jQ; jS++) {
                var jU = jT[jS];
                var jX = jU.tilesDiv;
                if (!jX) {
                    continue
                }
                if (!jU._isInnerLayer && jX.style.visibility === "hidden") {
                    jX.style.visibility = ""
                }
            }
            var jV = new fu("onmaptypechange");
            jV.zoomLevel = this.zoomLevel;
            jV.mapType = jR;
            jV.exMapType = jZ;
            this.dispatchEvent(jV)
        },
        showStreetLayer: function(e) {
            e ? this._addHybirdMap() : this._removeHybirdMap()
        },
        hideStreetLayer: function(e) {
            this._hideStreetLayerOptions = e;
            this._removeHybirdMap(e)
        },
        _addHybirdMap: function() {
            this._isHybridShow = true;
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth) {
                    this._earth.showStreetLayer()
                }
                return
            }
            if (this._hybridTileLayer) {
                this.addTileLayer(this._hybridTileLayer);
                var jR = new fu("onstreetlayer_show");
                this.dispatchEvent(jR);
                return
            }
            var jP = new hF(new cr(-21364736,-10616832),new cr(23855104,15859712));
            var T = new m(jP,"",BMAP_HYBRID_MAP);
            var i = new hc({
                copyright: T,
                transparentPng: true,
                tileTypeName: "web"
            });
            i._isInnerLayer = true;
            var jO = this.isCanvasMap();
            i.getTilesUrl = function(jS, jX) {
                var jV = d6.B_STREET_MAP;
                var jW = jr("ditu", "satelliteStreet");
                var jT = jW.ver;
                var e = jW.udt;
                var jU = jV.tileUrls[Math.abs(jS.x + jS.y) % jV.tileUrls.length] + "?qt=vtile&x=" + (jS.x + "").replace(/-/gi, "M") + "&y=" + (jS.y + "").replace(/-/gi, "M") + "&z=" + jX + "&styles=sl&v=" + jT + "&udt=" + e + "&scaler=" + fX() + "&showtext=" + (jO ? 0 : 1);
                return jU
            }
            ;
            this._isHybridShow = true;
            this.addTileLayer(i);
            this._hybridTileLayer = i;
            var jQ = new fu("onstreetlayer_show");
            this.dispatchEvent(jQ)
        },
        _removeHybirdMap: function(i) {
            this._isHybridShow = false;
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth) {
                    this._earth.hideStreetLayer(i)
                }
                return
            }
            if (this._hybridTileLayer) {
                this.removeTileLayer(this._hybridTileLayer);
                var T = new fu("onstreetlayer_hide");
                this.dispatchEvent(T)
            }
        },
        isStreetLayerShow: function() {
            return this._isHybridShow
        },
        getTileId: function(e, jQ) {
            var jO = d6[this.mapType];
            if (typeof jO !== "object") {
                return null
            }
            var T = jO.baseUnits * Math.pow(2, (jO.zoomLevelBase - jQ));
            var jP = parseInt(e.lng / T, 10);
            var i = parseInt(e.lat / T, 10);
            return {
                row: jP,
                column: i,
                level: jQ
            }
        },
        reset: function() {
            this.centerAndZoomIn(this.defaultCenter, this.defaultZoomLevel, true)
        },
        setOptions: function(i) {
            i = i || {};
            var jP = this;
            for (var jO in i) {
                if (i.hasOwnProperty(jO)) {
                    var T = true;
                    if (typeof i[jO] !== "object") {
                        T = i[jO] !== this.config[jO]
                    }
                    this.config[jO] = i[jO];
                    if (jO === "fixCenterWhenResize") {
                        this.config.enableResizeOnCenter = i[jO]
                    }
                    if (!T) {
                        continue
                    }
                    switch (jO) {
                    case "style":
                    case "styleUrl":
                        var e = {
                            os: i.style.os,
                            sv: i.style.sv
                        };
                        if (jO === "style" && i.styleUrl) {
                            break
                        }
                        this.fire(new fu("onstyle_willchange"));
                        this.loadMapStyleFiles(function() {
                            var jQ = new fu("onlayer_update");
                            jQ.name = "na";
                            jP.fire(jQ)
                        }, e);
                        break;
                    case "enableAutoResize":
                        if (i[jO] === true) {
                            this.enableAutoResize()
                        } else {
                            this.disableAutoResize()
                        }
                        break;
                    case "displayOptions":
                        this.setDisplayOptions(i[jO]);
                        break
                    }
                }
            }
        },
        setPrivateStatus: function(i) {
            if (typeof i === "boolean") {
                if (this.config.privateOn !== i) {
                    this.config.privateOn = i;
                    var e = new fu("onlayer_update");
                    e.name = "na";
                    this.fire(e)
                }
            }
        },
        getPrivateStatus: function() {
            return this.config.privateOn
        },
        setPrivateRegions: function(jP) {
            if (jP && jP instanceof Array) {
                var jO = true;
                for (var T = 0; T < jP.length; T++) {
                    if (jP[T]instanceof cE) {
                        continue
                    } else {
                        jO = false;
                        break
                    }
                }
                if (jO) {
                    this.config.privateRegions = jP;
                    var e = new fu("onlayer_update");
                    e.name = "na";
                    this.fire(e)
                }
            }
        },
        getPrivateRegions: function() {
            if (!this.config.privateRegions) {
                return null
            } else {
                return this.config.privateRegions
            }
        },
        enableDragging: function() {
            this.config.enableDragging = true
        },
        disableDragging: function() {
            this.config.enableDragging = false
        },
        enableInertialDragging: function() {
            this.config.enableInertialDragging = true
        },
        disableInertialDragging: function() {
            this.config.enableInertialDragging = false
        },
        enableScrollWheelZoom: function() {
            this.config.enableWheelZoom = true
        },
        disableScrollWheelZoom: function() {
            this.config.enableWheelZoom = false
        },
        enableContinuousZoom: function() {
            this.config.enableContinuousZoom = true
        },
        disableContinuousZoom: function() {
            this.config.enableContinuousZoom = false
        },
        enableResizeOnCenter: function() {
            this.config.enableResizeOnCenter = true
        },
        disableResizeOnCenter: function() {
            this.config.enableResizeOnCenter = false
        },
        enableDoubleClickZoom: function() {
            this.config.enableDblclickZoom = true
        },
        disableDoubleClickZoom: function() {
            this.config.enableDblclickZoom = false
        },
        enableKeyboard: function() {
            this.config.enableKeyboard = true
        },
        disableKeyboard: function() {
            this.config.enableKeyboard = false
        },
        getSize: function() {
            return new iE(this.width,this.height)
        },
        enablePinchToZoom: function() {
            this.config.enablePinchZoom = true
        },
        disablePinchToZoom: function() {
            this.config.enablePinchZoom = false
        },
        enableTilt: function() {
            this.config.enableTilt = true
        },
        disableTilt: function() {
            this.config.enableTilt = false
        },
        enableRotate: function() {
            this.config.enableRotate = true
        },
        disableRotate: function() {
            this.config.enableRotate = false
        },
        enableAutoResize: function() {
            this.config.enableAutoResize = true;
            this._watchSize();
            if (!this.temp.autoResizeTimer) {
                this.temp.autoResizeTimer = setInterval(this._watchSize, 16)
            }
        },
        disableAutoResize: function() {
            this.config.enableAutoResize = false;
            if (this.temp.autoResizeTimer) {
                clearInterval(this.temp.autoResizeTimer);
                this.temp.autoResizeTimer = null
            }
        },
        checkResize: function() {
            this._watchSize()
        },
        resize: function() {
            this._watchSize()
        },
        getContainerSize: function() {
            return new iE(this.container.clientWidth,this.container.clientHeight)
        },
        _getProperZoom: function(T) {
            if (!T) {
                T = this.zoomLevel
            }
            var i = this.getMinZoom();
            var e = this.getMaxZoom();
            var jO = false;
            if (T < i) {
                jO = true;
                T = i
            }
            if (T > e) {
                jO = true;
                T = e
            }
            if (this._renderType !== "webgl") {
                T = Math.round(T)
            }
            return {
                zoom: T,
                exceeded: jO
            }
        },
        getContainer: function() {
            return this.container
        },
        getZoomUnits: function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return Math.pow(2, 18 - this._earth.getImageZoom())
            }
            var e = d6[this.mapType];
            if (typeof e !== "object") {
                return null
            }
            var i = T || this.zoomLevel;
            return Math.pow(2, (e.zoomLevelBase - i))
        },
        pointToPixelIn: function(jZ, j1) {
            if (!jZ) {
                return
            }
            j1 = j1 || {};
            if (this.mapType === BMAP_EARTH_MAP) {
                var jQ;
                if (!jZ._llPt) {
                    jQ = iN.convertMC2LL(jZ);
                    jZ._llPt = jQ
                }
                jQ = jZ._llPt;
                var jV = null;
                var jP = null;
                if (typeof j1.zoom === "number") {
                    var jY = this._earth;
                    var j0 = jY._getEarthZoomByImgZoom(j1.zoom);
                    if (j0 <= 3) {
                        jV = jY._generateTmpPMatrix(j0)
                    }
                    jP = jY._generateTmpMVMatrix(jY.getCenter(), j0)
                }
                var jR = this._earth.fromLatLngToPixel(jQ, {
                    useRound: false,
                    isCalcOnBack: true,
                    matrixInfo: {
                        modelViewMatrix: jP,
                        projectionMatrix: jV
                    }
                });
                return jR
            }
            if ((this._heading % 360 === 0 && this._tilt === 0) || !this._webglMapCamera) {
                var jX = this.getZoomUnits(j1.zoom);
                var jT = j1.center || this.centerPoint;
                var jO = this.width / 2;
                var jS = this.height / 2;
                var jW;
                if (jZ.lng * jT.lng < 0) {
                    var i = Math.abs(jZ.lng - jT.lng);
                    var e = (eM._mc180X * 2 - i) / jX;
                    if (jT.lng < 0) {
                        jW = jO - e
                    } else {
                        jW = jO + e
                    }
                } else {
                    jW = (jZ.lng - jT.lng) / jX + jO
                }
                var jU = (jT.lat - jZ.lat) / jX + jS;
                if (j1.useRound !== false) {
                    jW = Math.round(jW);
                    jU = Math.round(jU)
                }
                return new e4(jW,jU)
            }
            var T = this._webglMapCamera.fromMCToScreenPixel(jZ.lng, jZ.lat, j1);
            if (j1.useRound === false) {
                return T
            }
            T.x = Math.round(T.x);
            T.y = Math.round(T.y);
            return T
        },
        pixelToPointIn: function(e, jV) {
            if (!e) {
                return
            }
            jV = jV || {};
            if (this.mapType === BMAP_EARTH_MAP) {
                if (typeof jV.zoom === "number") {
                    var jT = this._earth;
                    var jQ = null;
                    var T = null;
                    var jU = jT._getEarthZoomByImgZoom(jV.zoom);
                    if (jU <= 3) {
                        jQ = jT._generateTmpPMatrix(jU)
                    }
                    T = jT._generateTmpMVMatrix(jT.getCenter(), jU)
                }
                var i = this._earth.fromPixelToLatLng(e, {
                    matrixInfo: {
                        modelViewMatrix: T,
                        projectionMatrix: jQ
                    }
                });
                if (i === null) {
                    return null
                }
                return iN.convertLL2MC(i)
            }
            if ((this._heading % 360 !== 0 || this._tilt > 0) && this._webglMapCamera) {
                return this._webglMapCamera.fromScreenPixelToMC(e.x, e.y, jV)
            }
            var jR = jV.center || this.centerPoint;
            var jS = this.getZoomUnits(jV.zoom);
            var jP = jR.lng + jS * (e.x - this.width / 2);
            var jO = jR.lat - jS * (e.y - this.height / 2);
            return new cr(jP,jO)
        },
        pointToOverlayPixelIn: function(e, jO) {
            jO = jO || {};
            var T = this.pointToPixelIn(e, {
                zoom: jO.zoom,
                center: jO.center,
                forLabel: true,
                frustumTest: true,
                useRound: jO.useRound
            });
            if (!T) {
                return
            }
            if (jO.fixPosition && this.mapType !== "B_EARTH_MAP") {
                var jP = this.getSize();
                var i = this.worldSize(jO.zoom);
                if (T.x > jP.width) {
                    while (T.x > jP.width) {
                        T.x -= i
                    }
                } else {
                    if (T.x < 0) {
                        while (T.x < 0) {
                            T.x += i
                        }
                    }
                }
            }
            if (this._renderType === "webgl") {
                return T
            }
            T.x -= this.offsetX;
            T.y -= this.offsetY;
            return T
        },
        overlayPixelToPointIn: function(i, e) {
            if (!i) {
                return
            }
            var T = i.clone();
            if (this._renderType !== "webgl") {
                T.x += this.offsetX;
                T.y += this.offsetY
            }
            return this.pixelToPointIn(T, e)
        },
        getProjection: function() {
            return new iN()
        },
        lnglatToMercator: function(e, jO) {
            var i = new cr(e,jO);
            var T = iN.convertLL2MC(i);
            return [T.lng, T.lat]
        },
        mercatorToLnglat: function(i, e) {
            if (isNaN(i) || isNaN(e)) {
                return []
            }
            i = parseFloat(i);
            e = parseFloat(e);
            var jO = new cr(i,e);
            var T = iN.convertMC2LL(jO);
            return [T.lng, T.lat]
        },
        getBoundsIn: function() {
            var j1 = arguments[0];
            if (this.mapType === BMAP_EARTH_MAP && this._earth) {
                var jV = this._earth.getCustomBounds();
                if (!jV) {
                    return this.config.defaultMaxBounds
                }
                var jU = jV.getSouthWest();
                var e = jV.getNorthEast();
                if (jU.lng > e.lng) {
                    e.lng = 180
                }
                var ki = iN.convertLL2MC(jU);
                var j8 = iN.convertLL2MC(e);
                var jY = this.config.defaultMaxBounds;
                var j7 = Math.max(ki.lng, jY.sw.lng);
                var j6 = Math.max(ki.lat, jY.sw.lat);
                var j0 = Math.min(j8.lng, jY.ne.lng);
                var jZ = Math.min(j8.lat, jY.ne.lat);
                var j3 = new hF(new cr(j7,j6),new cr(j0,jZ));
                j3.pointBottomLeft = new cr(j7,j6);
                j3.pointBottomRight = new cr(j0,j6);
                j3.pointTopLeft = new cr(j7,jZ);
                j3.pointTopRight = new cr(j0,jZ);
                j3.setMinMax();
                j3.makeNormalizedPoint(this._earth.getHeading());
                return j3
            }
            j1 = j1 || {};
            var jP = j1.margins || [0, 0, 0, 0];
            var kd = this.pixelToPointIn({
                x: jP[3],
                y: this.height - jP[2]
            }, j1);
            var kh = this.pixelToPointIn({
                x: this.width - jP[1],
                y: jP[0]
            }, j1);
            var j5 = typeof j1.heading === "number" ? j1.heading : (this._heading % 360);
            var T = typeof j1.tilt === "number" ? j1.tilt : this._tilt;
            var jX = this._webglMapCamera;
            if ((j5 === 0 && T === 0) || !jX) {
                this._bounds.setSouthWest(kd);
                this._bounds.setNorthEast(kh);
                this._bounds.pointBottomLeft = kd;
                this._bounds.pointBottomRight = new cr(kh.lng,kd.lat);
                this._bounds.pointTopRight = kh;
                this._bounds.pointTopLeft = new cr(kd.lng,kh.lat);
                this._bounds.setMinMax();
                this._bounds.makeNormalizedPoint(j5);
                return this._bounds
            }
            var j4 = this.pixelToPointIn({
                x: jP[3],
                y: jP[0]
            }, j1);
            var jO = jX.getPosition();
            var kj = Math.sqrt(Math.pow(j4.lng - jO[0], 2) + Math.pow(j4.lat - jO[1], 2));
            var ke = this.getZoomUnits();
            var kl = kj / ke;
            var kb = jX._frustumSideLen;
            var jT = jX._fovy;
            if (kl > kb || (90 - T) < jT / 2) {
                var kk = [j4.lng - jO[0], j4.lat - jO[1]];
                if ((90 - T) < jT / 2) {
                    kk[0] = -kk[0];
                    kk[1] = -kk[1]
                }
                var kc = kb * ke;
                var jS = [kk[0] / kj * kc + jO[0], kk[1] / kj * kc + jO[1]];
                var j9 = [kh.lng - jO[0], kh.lat - jO[1]];
                if ((90 - T) < jT / 2) {
                    j9[0] = -j9[0];
                    j9[1] = -j9[1]
                }
                var jQ = [j9[0] / kj * kc + jO[0], j9[1] / kj * kc + jO[1]];
                j4.lng = jS[0];
                j4.lat = jS[1];
                kh.lng = jQ[0];
                kh.lat = jQ[1]
            }
            var j2 = this.pixelToPointIn({
                x: this.width - jP[1],
                y: this.height - jP[2]
            }, j1);
            var ka = [kd, kh, j4, j2];
            var kg = ka[0].lng;
            var km = ka[0].lat;
            var jR = ka[0].lng;
            var jW = ka[0].lat;
            for (var kf = 1; kf < 4; kf++) {
                if (ka[kf].lng < kg) {
                    kg = ka[kf].lng
                }
                if (ka[kf].lng > jR) {
                    jR = ka[kf].lng
                }
                if (ka[kf].lat < km) {
                    km = ka[kf].lat
                }
                if (ka[kf].lat > jW) {
                    jW = ka[kf].lat
                }
            }
            this._bounds.setSouthWest(new cr(kg,km));
            this._bounds.setNorthEast(new cr(jR,jW));
            this._bounds.pointTopLeft = j4;
            this._bounds.pointTopRight = kh;
            this._bounds.pointBottomRight = j2;
            this._bounds.pointBottomLeft = kd;
            this._bounds.makeNormalizedPoint(j5);
            this._bounds.setMinMax();
            return this._bounds
        },
        isLoaded: function() {
            return !!this.loaded
        },
        _getBestLevel: function(i, jX) {
            var jQ = 0;
            if (this._renderType === "webgl" && !bS()) {
                jQ = 100
            }
            var jR = jX.margins || [10, 10, 10, 10];
            var jO = jX.zoomFactor || 0;
            var jS = jR[1] + jR[3];
            var jP = jR[0] + jR[2];
            var e = this.getMinZoom();
            var jW = this.getMaxZoom();
            var jV = i.toSpan();
            var jU = jV.width / (this.width - jS - jQ);
            var jT = jV.height / (this.height - jP - jQ);
            var T = 18 - p(Math.max(jU, jT));
            if (T < e) {
                T = e
            }
            if (T > jW) {
                T = jW
            }
            T += jO;
            if (this._renderType !== "webgl") {
                T = Math.floor(T)
            }
            return T
        },
        getViewportIn: function(jX, jP) {
            if (this.mapType === BMAP_EARTH_MAP) {
                jX = jX || [];
                var jR = [];
                for (var jY = 0; jY < jX.length; jY++) {
                    if (!jX[jY]) {
                        continue
                    }
                    jR.push(iN.convertMC2LL(jX[jY]))
                }
                var jZ = this._earth.getViewportIn(jR, jP);
                var jO = jZ.center;
                var jV = jZ.zoom;
                var j3 = iN.convertLL2MC(jO);
                return {
                    center: j3,
                    zoom: jV
                }
            }
            var jT = {
                center: this.getCenterIn(),
                zoom: this.getZoom()
            };
            if (!jX || jX.length === 0) {
                return jT
            }
            jP = jP || {};
            var jS;
            if (jX instanceof hF) {
                jS = jX
            } else {
                var jQ = jX;
                jS = new hF();
                for (var jW = jQ.length - 1; jW >= 0; jW--) {
                    jS.extend(jQ[jW])
                }
                if (jS.isEmpty()) {
                    return jT
                }
            }
            var j2 = jS.getCenter();
            var e = this._getBestLevel(jS, jP);
            if (jP.margins) {
                var T = jP.margins;
                var j1 = (T[1] - T[3]) / 2;
                var jU = (T[0] - T[2]) / 2;
                var j0 = this.getZoomUnits(e);
                j2.lng = j2.lng + j0 * j1;
                j2.lat = j2.lat + j0 * jU
            }
            return {
                center: j2,
                zoom: e
            }
        },
        setViewportIn: function(jO, jP) {
            if (this.mapType === BMAP_EARTH_MAP) {
                var jT;
                if (jO && jO.center) {
                    var T = iN.convertMC2LL(jO.center);
                    var jR = this._earth._getEarthZoomByImgZoom(jO.zoom, T);
                    jT = {
                        center: T,
                        zoom: jR
                    }
                } else {
                    jT = [];
                    for (var jQ = 0; jQ < jO.length; jQ++) {
                        var jS = iN.convertMC2LL(jO[jQ]);
                        jT[jQ] = new cl(jS.lat,jS.lng)
                    }
                }
                this._earth.setViewportIn(jT, jP);
                return
            }
            var e;
            if (jO && jO.center) {
                e = jO
            } else {
                e = this.getViewportIn(jO, jP)
            }
            jP = jP || {};
            if (this._renderType === "webgl") {
                this.centerAndZoomIn(e.center, e.zoom, jP);
                return
            }
            if (e.zoom === this.zoomLevel && jP.enableAnimation !== false) {
                this.panToIn(e.center, {
                    duration: 200,
                    callback: jP.callback
                })
            } else {
                this.centerAndZoomIn(e.center, e.zoom, jP)
            }
        },
        addSpots: function(T, i) {
            if (!T || T.length === 0) {
                return
            }
            i = i || {};
            var jQ = i.zIndex || 0;
            var jP = typeof i.enableMultiResponse === "undefined" ? true : !!i.enableMultiResponse;
            this.spotsPool = this.spotsPool || {};
            var e = "sp" + (this.temp.spotsGuid++);
            this.spotsPool[e] = {
                spots: T.slice(0),
                zIndex: jQ,
                enableMultiResponse: jP
            };
            var jO = this;
            gK.load("hotspot", function() {
                jO._asyncRegister()
            });
            return e
        },
        getSpots: function(e) {
            return this.spotsPool[e] && this.spotsPool[e].spots || []
        },
        removeSpots: function(e) {
            if (!e || !this.spotsPool[e]) {
                return
            }
            delete this.spotsPool[e]
        },
        clearSpots: function() {
            delete this.spotsPool
        },
        getIconByClickPosition: function(i) {
            if (!this.config.enableIconClick || !this._spotsMgr) {
                return null
            }
            var e = this._spotsMgr.getSpotsByScreenPosition(i);
            if (e[0] && e[0].userdata) {
                var T = e[0].userdata;
                return {
                    name: T.name,
                    uid: T.uid,
                    position: T.iconPoint || e[0].pt
                }
            }
            return null
        },
        setBounds: function(e) {
            d6[this.mapType].bounds = e.clone()
        },
        getCoordType: function() {
            return this.config.coordType
        },
        getPanes: function() {
            return this._panes
        },
        getInfoWindow: function() {
            if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                return this.temp.infoWin
            }
            return null
        },
        getDistanceIn: function(jP, e) {
            if (!jP || !e) {
                return
            }
            if (jP.equals(e)) {
                return 0
            }
            if (this.mapType === BMAP_EARTH_MAP) {
                var jO = iN.convertMC2LL(jP);
                var T = iN.convertMC2LL(e);
                return this._earth.getDistance(jO, T)
            }
            var i = iN.getDistanceByMC(jP, e);
            return i
        },
        getOverlays: function() {
            var jQ = [];
            var jR = this._overlays;
            var jP = this._customOverlays;
            if (jR) {
                for (var jO in jR) {
                    if (jR[jO]instanceof en) {
                        jQ.push(jR[jO])
                    }
                }
            }
            if (jP) {
                for (var T = 0, e = jP.length; T < e; T++) {
                    jQ.push(jP[T])
                }
            }
            return jQ
        },
        getMapType: function() {
            return this.mapType
        },
        getMapCoordType: function() {
            return this.coordType
        },
        _asyncRegister: function() {
            for (var e = this.temp.registerIndex; e < bw._register.length; e++) {
                bw._register[e](this)
            }
            this.temp.registerIndex = e
        },
        setDefaultCursor: function(e) {
            this.config.defaultCursor = e;
            if (this.platform) {
                this.platform.style.cursor = this.config.defaultCursor
            }
        },
        getDefaultCursor: function() {
            return this.config.defaultCursor
        },
        setOverlayMoveCursor: function(e) {
            this.config.overlayMoveCursor = e
        },
        getOverlayMoveCursor: function() {
            return this.config.overlayMoveCursor
        },
        setDraggingCursor: function(e) {
            this.config.draggingCursor = e
        },
        getDraggingCursor: function() {
            return this.config.draggingCursor
        },
        _syncAndChangeMapType: function(e) {
            var i = this;
            if (i._renderType === "webgl" && i.getTilt() > hr.MAX_DRAG_TILT_L2) {
                i.setTilt(hr.MAX_DRAG_TILT_L2, {
                    callback: function() {
                        i._changeEarthMapType(e)
                    }
                })
            } else {
                i._changeEarthMapType(e)
            }
        },
        _changeEarthMapType: function(T) {
            var jO = this;
            var jR = jO.tileMgr.tileLayers;
            if (this._mapTypeChangAni) {
                this._mapTypeChangAni.stop()
            }
            var jQ;
            if (this._earth) {
                jQ = this._earth.getEarthCanvas()
            }
            if (!this._earth) {
                this.maskLayer.style.opacity = 1;
                this.maskLayer.style.zIndex = 999;
                this.maskLayer.style.background = "#000"
            }
            this._mapTypeChangAni = new fk({
                duration: 400,
                render: function(e) {
                    if (!jO._earth) {
                        return
                    }
                    jQ.style.opacity = e
                },
                finish: function() {
                    for (var e = jR.length - 1, jS = e; jS >= 0; jS--) {
                        var jU = jR[jS].tilesDiv;
                        if (jU) {
                            jU.style.visibility = "hidden"
                        }
                        if (jR[jS]._isInnerLayer && jO._renderType !== "webgl") {
                            jO.removeTileLayer(jR[jS])
                        }
                    }
                    jO._mapTypeChangAni = null;
                    jO._mapTypeChanging = false;
                    function jT() {
                        var jY = jO.getZoom() - 2;
                        var jZ = jO.getCenterIn();
                        var jW = iN.convertMC2LL(jZ);
                        jO._earth = new bw.Earth(jO,{
                            center: jW,
                            zoom: jY,
                            showRealSunlight: jO.config.showRealSunlight,
                            showMilkyway: jO.config.showMilkyway,
                            earthBackground: jO.config.earthBackground
                        });
                        jO._proxyEarthEvents();
                        var jV = jO.mapType;
                        jO.mapType = T;
                        var jX = new fu("onmaptypechange");
                        jX.zoomLevel = this.zoomLevel;
                        jX.mapType = T;
                        jX.exMapType = jV;
                        jO.dispatchEvent(jX);
                        jO._setMapTypeStatus(T);
                        eJ.extend(jO, bw.EarthView.prototype);
                        if (!jO._navigationCtrl && jO.config.showControls) {
                            jO._navigationCtrl = new eL(jO)
                        }
                    }
                    if (!jO._earth) {
                        if (bw["FeatureStyle" + jO.config.style]) {
                            jT()
                        } else {
                            jO.loadMapStyleFiles(function() {
                                jT()
                            })
                        }
                    }
                    if (parseInt(jO.maskLayer.style.opacity, 10) === 1) {
                        setTimeout(function() {
                            jO.maskLayer.style.zIndex = 9;
                            jO.maskLayer.style.opacity = 0
                        }, 1000)
                    }
                }
            });
            if (!this._earth) {
                return
            }
            var i = this.mapType;
            this.mapType = T;
            var jP = new fu("onmaptypechange");
            jP.zoomLevel = this.zoomLevel;
            jP.mapType = T;
            jP.exMapType = i;
            this.dispatchEvent(jP);
            jO._setMapTypeStatus(T);
            eJ.extend(jO, bw.EarthView.prototype)
        },
        getMapStyleId: function() {
            if (typeof this.config.style === "string") {
                return this.config.style
            }
            return this.config.mapStyleId || "custom"
        },
        _setMapTypeStatus: function(T) {
            var jS = arguments[1];
            if (T === BMAP_EARTH_MAP) {
                var jQ = this._earth.getEarthCanvas();
                if (jQ) {
                    jQ.style.display = ""
                }
                var jT = {
                    noAnimation: true
                };
                this._earth.setCenter(iN.convertMC2LL(this.centerPoint), jT);
                this._earth.setImageZoom(this.zoomLevel, jT);
                this._earth.setTilt(this.getTilt(), jT);
                this._earth.setHeading(this.getHeading(), jT)
            } else {
                if (this.preMapType === BMAP_EARTH_MAP && this._earth) {
                    var jR = this._earth;
                    var jO = jR.getMapZoom();
                    var jP = jR._imageRawZoom || jO;
                    var i = jP - jO;
                    var e = jR.getCenter();
                    if (this._renderType === "webgl") {
                        this._tilt = jR.getTilt();
                        if (this.zoomLevel > 7) {
                            this._heading = jR.getHeading();
                            jS && jS(e, jO);
                            return
                        }
                        if (jR.getHeading() !== 0) {
                            jR.setTilt(this.getTilt());
                            jR.setHeading(this.getHeading(), {
                                callback: function() {
                                    jS && jS(e, jO)
                                }
                            })
                        } else {
                            jS && jS(e, jO)
                        }
                        return
                    }
                    if (i < 0.1 && jR.getTilt() === 0 && jR.getHeading() === 0) {
                        jS && jS(e, jO);
                        return
                    }
                    jR.setTilt(0);
                    jR.setHeading(0);
                    jR.setZoom(jR.getZoom() - i, {
                        callback: function() {
                            jS && jS(e, jO)
                        }
                    })
                }
            }
        },
        _proxyEarthEvents: function() {
            var jP = this;
            var jQ = this._earth;
            jQ.on("tilesload", function(i) {
                jP.fire(i)
            });
            jQ.on("centerandzoom", function(i) {
                jP.dispatchEvent(new fu("onmoveend"));
                jP.dispatchEvent(new fu("onzoomend"))
            });
            function jO(i) {
                jP.fire(i)
            }
            var e = ["zoomstart", "zoomend", "tilesload", "sunlighttime_change", "sunlighttime_clear", "centerandzoom", "animation_start", "animation_stop", "movestart", "moveend", "moving", "dragstart", "dragend", "dragging"];
            for (var T = 0; T < e.length; T++) {
                jQ.on(e[T], jO)
            }
        },
        forceEnableEarth: function() {
            this.config.forceEnableEarth = true;
            this.config.enableEarth = cX.ifEnableEarth(true);
            this.dispatchEvent(new fu("forceenableearth"));
            return this.config.enableEarth
        },
        setLock: function(e) {
            if (this.mapType === BMAP_EARTH_MAP) {
                this._earth.setLock(e)
            }
            this._lock = e
        },
        getLock: function() {
            if (this.mapType === BMAP_EARTH_MAP) {
                return this._earth.getLock()
            }
            return this._lock
        },
        getEarth: function() {
            return this._earth
        },
        isSupportEarth: function() {
            return this.config.enableEarth
        },
        isCanvasMap: function() {
            return !!(this._renderType === "canvas" && this.getMapType() !== "B_EARTH_MAP")
        },
        getCanvasMapCoordByUid: function(jP) {
            if (this._renderType === "webgl") {
                var jQ = this.tileMgr.tileLayers;
                for (var jO = 0; jO < jQ.length; jO++) {
                    if (jQ[jO].labelProcessor) {
                        return jQ[jO].labelProcessor.getLabelByUid(jP, "")
                    }
                }
                return null
            }
            var e = this.canvas2dMapMgr._labelClick;
            var T = e.findLabelByUid(jP);
            return T ? new cr(T.iconPos.geoX,T.iconPos.geoY) : null
        },
        loadBizData: function(i) {
            var e = new fu("onloadbizdata");
            e.data = i;
            this.dispatchEvent(e)
        },
        unloadBizData: function() {
            var e = new fu("onunloadbizdata");
            this.dispatchEvent(e)
        },
        zoomIn: function(e) {
            this.setZoomIn(this.zoomLevel + 1, {
                zoomCenter: e
            })
        },
        zoomOut: function(e) {
            this.setZoomIn(this.zoomLevel - 1, {
                zoomCenter: e
            })
        },
        setMaxZoom: function(e) {
            if (this._renderType === "webgl") {
                this.config.maxZoom = e <= 21 ? e : 21
            } else {
                this.config.maxZoom = e <= 19 ? e : 19
            }
        },
        setMinZoom: function(e) {
            this.config.minZoom = e >= 3 ? e : 3
        },
        setCenterIn: function(e, i) {
            this.panToIn(e, i)
        },
        getRenderType: function() {
            return this._renderType
        },
        getSolarInfo: function(jO) {
            jO = jO || this._initDate;
            var T = fh(jO);
            var e = iN.convertLL2MC(new cr(T[0],T[1]));
            var jW = e.latLng;
            var jR = bw.Projection.convertMC2LL(this.centerPoint);
            var jT = jO.getUTCHours();
            var jV = jT + 24 * jR.lng / 360;
            var jU = jV - 12;
            var jS = jU * 60 * 0.25;
            var jQ = Math.asin(Math.sin(ie(jR.lat)) * Math.sin(ie(jW.lat)) + Math.cos(ie(jR.lat)) * Math.cos(ie(jW.lat)) * Math.cos(ie(jS)));
            var jP = Math.asin(Math.sin(ie(jS)) * Math.cos(ie(jW.lat)) / Math.cos(jQ));
            var i = "north";
            if (jR.lat < jW.lat) {
                i = "south"
            }
            return {
                zenith: e,
                solarAltitude: jQ,
                solarAzimuth: jP,
                centerPosition: i,
                position: e
            }
        },
        setDisplayOptions: function(T) {
            if (!T) {
                return
            }
            for (var e in this._displayOptions) {
                if (this._displayOptions.hasOwnProperty(e)) {
                    if (typeof T[e] === "boolean" || (e === "skyColors" && typeof T.skyColors === "object") || (e === "labelMargin" && typeof T.labelMargin === "number")) {
                        this._displayOptions[e] = T[e]
                    }
                }
            }
            var i = this.getMapType();
            if (i === fc.NORMAL) {
                this.fire(new fu("ondisplayoptions_changed"))
            } else {
                if (i === fc.EARTH && this._earth) {
                    this._earth.fire(new fu("ondisplayoptions_changed"))
                }
            }
        },
        getHorizonPosY: function(e) {
            if (!e || !this._webglMapCamera) {
                return null
            }
            var i = this._webglMapCamera.fromMCToScreenPixel(e.lng, e.lat, {
                heading: 0
            });
            return i.y
        },
        getIndoorInfo: function() {
            if (!this._indoorMgr) {
                return
            }
            return this._indoorMgr.getData()
        },
        showIndoor: function(e, T) {
            var i = new fu("onindoor_status_changed");
            i.uid = e;
            i.floor = T;
            this.fire(i)
        },
        addAreaSpot: function(e, T) {
            if (!e || e.length === 0) {
                return
            }
            T = T || {};
            this.areaSpots = this.areaSpots || {};
            var i = T.id || ("sp" + (this.temp.spotsGuid++));
            this.areaSpots[i] = {
                spot: e,
                userData: T.userData
            };
            var jO = this;
            gK.load("hotspot", function() {
                jO._asyncRegister()
            });
            return i
        },
        getAreaSpot: function(e) {
            if (this.areaSpots && this.areaSpots[e]) {
                return this.areaSpots[e]
            }
            return null
        },
        removeAreaSpot: function(e) {
            if (!e || !this.areaSpots[e]) {
                return
            }
            delete this.areaSpots[e]
        },
        clearAreaSpots: function() {
            this.areaSpots = {}
        },
        resetSpotStatus: function() {
            this.fire(new fu("onspot_status_reset"))
        },
        hightlightSpotByUid: function(e, T) {
            var i = new fu("onspot_highlight");
            i.uid = e;
            i.tilePosStr = T;
            this.fire(i)
        },
        setZoomIn: function(i, e) {
            e = e || {};
            this.zoomTo(i, e.zoomCenter || null, e)
        },
        restrictBounds: function(e) {
            if (e instanceof hF) {
                this.config.restrictBounds = e;
                this.restrictCenter(this.getCenterIn());
                this.fire(new fu("oncenter_changed"))
            }
        },
        getCurrentMaxTilt: function() {
            var e = this.zoomLevel;
            if (this.mapType === "B_EARTH_MAP") {
                return hr.MAX_DRAG_TILT_L2
            }
            if (this.config.restrictCenter === false) {
                return hr.MAX_DRAG_TILT
            }
            if (e >= 19) {
                return hr.MAX_DRAG_TILT
            } else {
                if (e <= 18) {
                    if (e < this._enableTiltZoom) {
                        if (e >= this._enableTiltZoom - 2) {
                            return (1 - (this._enableTiltZoom - e) / 2) * hr.MAX_DRAG_TILT_L2
                        }
                        return 0
                    }
                    return hr.MAX_DRAG_TILT_L2
                } else {
                    return (hr.MAX_DRAG_TILT - hr.MAX_DRAG_TILT_L2) * (e - 18) + hr.MAX_DRAG_TILT_L2
                }
            }
        },
        worldSize: function(i) {
            var e = i || this.zoomLevel;
            return hr.WORLD_SIZE_MC / this.getZoomUnits(e)
        },
        setTrafficOn: function(e) {
            if (e && Number(e) > 1) {
                jh.setZIndex(Number(e))
            }
            this.addTileLayer(jh)
        },
        setTrafficOff: function() {
            this.removeTileLayer(jh)
        },
        showOverlayContainer: function() {
            this.setDisplayOptions({
                overlay: true
            })
        },
        hideOverlayContainer: function() {
            this.setDisplayOptions({
                overlay: false
            })
        },
        addLabelsToMapTile: function(jR, jQ) {
            for (var jO = 0; jO < jR.length; jO++) {
                if (typeof jR[jO].type === "undefined") {
                    jR[jO].type = "fixed"
                }
                if (typeof jR[jO].rank !== "number") {
                    jR[jO].rank = 50000
                }
                jR[jO].pt = jR[jO].position;
                jR[jO].custom = true;
                jR[jO].processedInZoom = 0;
                var T = false;
                for (var e = 0; e < this._customTileLabels.length; e++) {
                    if (this._customTileLabels[e].uid === jR[jO].uid) {
                        T = true;
                        break
                    }
                }
                if (!T) {
                    this._customTileLabels.push(jR[jO])
                }
            }
            var jP = new fu("onadd_tile_labels");
            if (jQ && jQ instanceof dU) {
                jP.data = jR;
                jP.index = jQ.layer.drawIndex;
                jP.model = "mvt"
            }
            this.dispatchEvent(jP)
        },
        removeLabelsFromMapTile: function(jP, jO, T) {
            var jR = new fu("onremove_tile_labels");
            if (jO && T) {
                jR.data = jP;
                jR.index = jO;
                jR.model = T
            } else {
                for (var jQ = 0; jQ < jP.length; jQ++) {
                    for (var e = 0; e < this._customTileLabels.length; e++) {
                        if (this._customTileLabels[e].uid === jP[jQ]) {
                            this._customTileLabels.splice(e, 1)
                        }
                    }
                }
            }
            this.dispatchEvent(jR)
        },
        clearLabels: function(T, i) {
            var e = new fu("onclear_labels");
            if (T && i) {
                e.data = [];
                e.index = T;
                e.model = i
            } else {
                this._customTileLabels.length = 0
            }
            this.dispatchEvent(e)
        },
        loadMapStyleFiles: function(jQ, e) {
            this.customLoaded = false;
            var T = this.config.style;
            var jP = this.config.styleUrl;
            var jO = this;
            this._setTextRenderType();
            if (typeof T === "string" && !jP) {
                if (bw["FeatureStyle" + T]) {
                    this.customLoaded = true;
                    jO.fire(new fu("onstyle_loaded"));
                    jQ();
                    return
                }
                bw["FeatureStyle" + T] = window.FeatureStyle;
                bw["iconSetInfo" + T] = window.iconSetInfo_high;
                bw.indoorStyle = window.indoorStyle;
                gw.load(B.getMapStyleFiles(T), function() {
                    if (jO.config.style === T) {
                        bw["FeatureStyle" + T] = window.FeatureStyle;
                        bw["iconSetInfo" + T] = window.iconSetInfo_high;
                        bw.indoorStyle = window.indoorStyle;
                        jO.customLoaded = true;
                        jO.fire(new fu("onstyle_loaded"));
                        jQ()
                    }
                })
            } else {
                var i = T;
                u.init(jO);
                u.getStyleJson(i, function(jS) {
                    var jX = ez;
                    var jZ = bw.getGUID("custom");
                    jO.config.mapStyleId = jZ;
                    var jV = {};
                    eJ.extend(jV, jS);
                    var jT = Math.floor(jO.getZoom());
                    var jW;
                    window["styleCbk_" + jZ] = function(j0, j1) {
                        if (j1 !== jW) {
                            return
                        }
                        if (typeof j0 === "string") {
                            j0 = JSON.parse(j0)
                        }
                        u.onStyleDataBack(j0, jT, jZ, jV, jX, bw["customStyleInfo_" + jZ]);
                        jO.customLoaded = true;
                        jO.fire(new fu("onstyle_loaded"));
                        jQ()
                    }
                    ;
                    bw["customStyleInfo_" + jZ] = {
                        zoomRegion: {},
                        zoomStyleBody: [],
                        zoomFrontStyle: {}
                    };
                    var jY = u.getStyleUrl(jS, jX, "styleCbk_" + jZ, jT, e, bw["customStyleInfo_" + jZ]);
                    var jR = jY.split("?")[0];
                    jW = jY.split("?")[1];
                    if (jP) {
                        jR = jP;
                        jW = jR.split("?")[1]
                    }
                    if (!bw.iconSetInfoCustom) {
                        var jU = B.getMapStyleFiles("default");
                        jU.splice(1, 1);
                        gw.load(jU, function() {
                            bw.iconSetInfoCustom = window.iconSetInfo_high;
                            bw.indoorStyle = window.indoorStyle;
                            if (jR.indexOf("jsonp") > "-1") {
                                gw.load(jR)
                            } else {
                                bw["customStyleInfo_" + jZ].xhr = hM.post(jR, jW, window["styleCbk_" + jZ])
                            }
                        })
                    } else {
                        if (jR.indexOf("jsonp") > "-1") {
                            gw.load(jR)
                        } else {
                            bw["customStyleInfo_" + jZ].xhr = hM.post(jR, jW, window["styleCbk_" + jZ])
                        }
                    }
                })
            }
        },
        getFeatureStyleTags: function() {
            var e = [];
            var jP = Object.keys(bw);
            for (var jO = 0; jO < jP.length; jO++) {
                var T = jP[jO];
                if (T.indexOf("FeatureStyle") > -1 && bw[T]) {
                    e.push(T)
                }
            }
            return e
        },
        setCopyrightOffset: function(jO, i) {
            var T = new fu("oncopyrightoffsetchange",{
                logo: jO,
                cpy: i
            });
            this.dispatchEvent(T)
        },
        _setTextRenderType: function(e) {
            if (e) {
                this.config.textRenderType = e;
                return
            }
            if (this.config.textRenderType !== null) {
                return
            }
            if (bS()) {
                this.config.textRenderType = "canvas"
            } else {
                if (typeof this.config.style === "string") {
                    this.config.textRenderType = "image"
                } else {
                    this.config.textRenderType = "canvas"
                }
            }
        },
        destroy: function() {
            this._destroyed = true;
            this.fire(new fu("ondestroy"))
        },
        centerAndZoom: function(e, jR, T) {
            if (Object.prototype.toString.call(jR) !== "[object Undefined]") {
                jR = parseInt(jR, 10)
            }
            if (typeof e === "string") {
                var jO = this;
                var jQ = new be();
                jQ.getPoint(e, function(jS) {
                    e = jS;
                    var jT = iN.convertLL2MC(e);
                    jO.centerAndZoomIn(jT, jR, T)
                }, e)
            } else {
                if (this.config.coordType === BMAP_COORD_GCJ02) {
                    var jP = h8(e, 3);
                    var i = iN.convertLL2MC(jP)
                } else {
                    var i = iN.convertLL2MC(e)
                }
                this.centerAndZoomIn(i, jR, T)
            }
        },
        pointToPixel: function(e, T) {
            var i = iN.convertLL2MC(e);
            var jO = {};
            eJ.extend(jO, T);
            if (jO && jO.center) {
                jO.center = iN.convertLL2MC(jO.center)
            }
            return this.pointToPixelIn(i, jO)
        },
        pixelToPoint: function(T, i) {
            var jO = {};
            eJ.extend(jO, i);
            if (jO && jO.center) {
                jO.center = iN.convertLL2MC(jO.center)
            }
            var e = this.pixelToPointIn(T, jO);
            return iN.convertMC2LL(e)
        },
        pointToOverlayPixel: function(e, T) {
            var i = iN.convertLL2MC(e);
            var jO = {};
            eJ.extend(jO, T);
            if (jO && jO.center) {
                jO.center = iN.convertLL2MC(jO.center)
            }
            return this.pointToOverlayPixelIn(i, jO)
        },
        overlayPixelToPoint: function(T, i) {
            var jO = {};
            eJ.extend(jO, i);
            if (jO && jO.center) {
                jO.center = iN.convertLL2MC(jO.center)
            }
            var e = this.overlayPixelToPointIn(T, jO);
            return iN.convertMC2LL(e)
        },
        setViewport: function(T, jO) {
            var e;
            if (T && T.center) {
                e = {};
                eJ.extend(e, T);
                e.center = iN.convertLL2MC(e.center)
            } else {
                e = [];
                for (var jP = 0; jP < T.length; jP++) {
                    e[jP] = iN.convertLL2MC(T[jP])
                }
            }
            this.setViewportIn(e, jO)
        },
        getViewport: function(jQ, jO) {
            var T;
            if (jQ && jQ.length) {
                T = [];
                for (var jP = 0; jP < jQ.length; jP++) {
                    T[jP] = iN.convertLL2MC(jQ[jP])
                }
            } else {
                if (jQ instanceof hF) {
                    T = new hF(iN.convertLL2MC(jQ.getSouthWest()),iN.convertLL2MC(jQ.getNorthEast()));
                    T.setMinMax()
                }
            }
            var e = this.getViewportIn(T, jO);
            e.center = iN.convertMC2LL(e.center);
            return e
        },
        getDistance: function(jP, T) {
            var i = iN.convertLL2MC(jP);
            var jO = iN.convertLL2MC(T);
            var e = this.getDistanceIn(i, jO);
            return e
        },
        setCenter: function(e, T) {
            if (typeof e === "string") {
                var jO = this;
                var jQ = new be();
                jQ.getPoint(e, function(jR) {
                    e = jR;
                    var jS = iN.convertLL2MC(e);
                    jO.setCenterIn(jS, T)
                }, e)
            } else {
                if (this.config.coordType === BMAP_COORD_GCJ02) {
                    var jP = h8(e, 3);
                    var i = iN.convertLL2MC(jP)
                } else {
                    var i = iN.convertLL2MC(e)
                }
                this.setCenterIn(i, T)
            }
        },
        setZoom: function(T, e) {
            var i = {};
            eJ.extend(i, e);
            if (i && i.zoomCenter) {
                i.zoomCenter = iN.convertLL2MC(i.zoomCenter)
            }
            this.setZoomIn(T, i)
        },
        flyTo: function(e, jP, T) {
            if (this.config.coordType === BMAP_COORD_GCJ02) {
                var jO = h8(e, 3);
                var i = iN.convertLL2MC(jO)
            } else {
                var i = iN.convertLL2MC(e)
            }
            this.flyToIn(i, jP, T)
        },
        panTo: function(e, T) {
            var i = iN.convertLL2MC(e);
            this.panToIn(i, T)
        },
        getCenter: function() {
            var e = this.getCenterIn();
            if (this.config.coordType === BMAP_COORD_GCJ02) {
                var i = iN.convertMC2LL(e);
                return et(i)
            }
            return iN.convertMC2LL(e)
        },
        getBounds: function() {
            var e = this.getBoundsIn();
            var i = new hF(iN.convertMC2LL(e.getSouthWest()),iN.convertMC2LL(e.getNorthEast()));
            return i
        },
        setMapStyleV2: function(e) {
            if (typeof e === "string") {
                this._setTextRenderType("image")
            } else {
                this._setTextRenderType("canvas")
            }
            this.setOptions({
                style: e
            })
        },
        startViewAnimation: function(T) {
            var e = T._options.delay;
            var i = this;
            setTimeout(function() {
                T._start(i)
            }, e)
        },
        pauseViewAnimation: function(e) {
            e._pause(this)
        },
        continueViewAnimation: function(e) {
            e._continue(this)
        },
        cancelViewAnimation: function(e) {
            e._cancel(this)
        },
        getMapScreenshot: function() {
            return this._webglMapScene._painter._canvas.toDataURL()
        }
    });
    window.BMAP_NORMAL_MAP = "B_NORMAL_MAP";
    window.BMAPGL_NORMAL_MAP = "B_NORMAL_MAP";
    window.BMAP_SATELLITE_MAP = "B_SATELLITE_MAP";
    window.BMAP_HYBRID_MAP = "B_STREET_MAP";
    window.BMAP_EARTH_MAP = "B_EARTH_MAP";
    window.BMAP_NONE_MAP = "B_NONE_MAP";
    window.BMAP_COORD_MERCATOR = 1;
    window.BMAP_COORD_GCJ02 = 2;
    window.BMAP_SYS_DRAWER = 0;
    window.BMAP_SVG_DRAWER = 1;
    window.BMAP_VML_DRAWER = 2;
    window.BMAP_CANVAS_DRAWER = 3;
    var u = {
        environment: "jsapi",
        map: null,
        ontilesloaded: false,
        onstyle_loaded: false,
        init: function(i) {
            var e = this;
            e.map = i;
            this.changeCopyright();
            this.setEnvironment(e.map.config.style);
            this.resetEventListener()
        },
        resetEventListener: function() {
            var e = this;
            this.ontilesloaded = false;
            this.onstyle_loaded = false;
            e.map.addEventListener("ontilesloaded", e.checkLoadedStatus);
            e.map.addEventListener("onstyle_loaded", e.checkLoadedStatus)
        },
        checkLoadedStatus: function(i) {
            u[i.type] = true;
            if (u.ontilesloaded && u.onstyle_loaded) {
                this.dispatchEvent(new fu("onstylechangetilesloaded"));
                this.removeEventListener("ontilesloaded", u.checkLoadedStatus);
                this.removeEventListener("onstyle_loaded", u.checkLoadedStatus)
            }
        },
        changeCopyright: function() {
            var e = this;
            if (e.map.cpyCtrl) {
                e.map.cpyCtrl.hide();
                if (e.environment !== "customEditor") {
                    e.map.setCopyrightOffset(new iE(1,1))
                }
            } else {
                e.map.addEventListener("oncopyrightaddend", function() {
                    e.map.cpyCtrl.hide();
                    if (e.environment !== "customEditor") {
                        e.map.setCopyrightOffset(new iE(1,1))
                    }
                })
            }
        },
        setEnvironment: function(e) {
            if (e.customEditor) {
                this.environment = "customEditor";
                aV.map = this.map
            } else {
                if (e.sharing) {
                    this.environment = "sharing"
                } else {
                    if (e.preview) {
                        this.environment = "preview"
                    } else {
                        this.environment = "jsapi"
                    }
                }
            }
        },
        getStyleJson: function(jO, jQ) {
            var jP = this;
            if (jO.styleJson) {
                jQ && jQ(jO.styleJson)
            } else {
                if (jO.styleId) {
                    var i = jO.styleId;
                    var e = (Math.random() * 100000).toFixed(0);
                    bw["_cbk_si_phpui" + e] = function(jS) {
                        var jR = [];
                        if (jS.result && jS.result["error"] === 0 && jS.content && jS.content["status"] === 0) {
                            jR = jP.parseJson(jS.content["data"]["json"]);
                            jQ && jQ(jR)
                        } else {
                            jQ && jQ("default")
                        }
                    }
                    ;
                    bw["_cbk_si_api" + e] = function(jS) {
                        var jR = [];
                        if (jS.status === 0) {
                            if (jS.info) {
                                jR = jP.parseJson(jS.info["json"])
                            } else {
                                jR = jP.parseJson(jS.data["json"])
                            }
                            jQ && jQ(jR)
                        } else {
                            jQ && jQ("default")
                        }
                    }
                    ;
                    var T = "";
                    switch (this.environment) {
                    case "jsapi":
                        T = eh.apiHost + "/?qt=custom_map&v=3.0&style_id=" + i + "&type=publish&ak=" + ez;
                        T += "&callback=" + fe + "._cbk_si_phpui" + e;
                        break;
                    case "sharing":
                        T += "/apiconsole/custommap/getSharingJson";
                        T += "?styleid=" + i + "&type=edit";
                        T += "&ck=" + fe + "._cbk_si_api" + e;
                        break;
                    case "preview":
                        T += "/apiconsole/custommap/getJson";
                        T += "?styleid=" + i + "&type=edit";
                        T += "&ck=" + fe + "._cbk_si_api" + e;
                        break
                    }
                    gw.load(T)
                } else {
                    jQ && jQ("default")
                }
            }
        },
        parseJson: function(T) {
            if (T === null || T === "") {
                return []
            }
            var i = {
                t: "featureType",
                e: "elementType",
                v: "visibility",
                c: "color",
                o: "opacity",
                l: "lightness",
                s: "saturation",
                w: "weight",
                z: "level",
                h: "hue",
                f: "fontsize",
                zri: "curZoomRegionId",
                zr: "curZoomRegion"
            };
            var jP = {
                all: "all",
                g: "geometry",
                "g.f": "geometry.fill",
                "g.s": "geometry.stroke",
                l: "labels",
                "l.t.f": "labels.text.fill",
                "l.t.s": "labels.text.stroke",
                "l.t": "labels.text",
                "l.i": "labels.icon",
                "g.tf": "geometry.topfill",
                "g.sf": "geometry.sidefill"
            };
            var jO = T.split(",");
            var e = jO.map(function(jT) {
                var jS = jT.split("|").map(function(jZ) {
                    var jX = i[jZ.split(":")[0]];
                    var jW = (jP[jZ.split(":")[1]] ? jP[jZ.split(":")[1]] : jZ.split(":")[1]);
                    switch (jW) {
                    case "poi":
                        jW = "poilabel";
                        break;
                    case "districtlabel":
                        jW = "districtlabel";
                        break
                    }
                    var jY = {};
                    jY[jX] = jW;
                    return jY
                });
                var jQ = jS[0];
                var jV = 1;
                if (jS[1]["elementType"]) {
                    jV = 2;
                    eJ.extend(jQ, jS[1])
                }
                var jU = {};
                for (var jR = jV; jR < jS.length; jR++) {
                    eJ.extend(jU, jS[jR])
                }
                return eJ.extend(jQ, {
                    stylers: jU
                })
            });
            return e
        },
        getStyleUrl: function(i, jR, jP, T, jO, jT) {
            this.styleJson = i;
            var e = B.apiHost + "/custom/v2/mapstyle?version=" + 4 + "&ak=" + jR + "&qt=custom_v2&is_all=true&is_new=1&";
            var jS = this.styleJson2styleStringV2(i, T, jT);
            e += "styles=" + encodeURIComponent(jS);
            if (jO && jO.os && jO.sv) {
                e += "&os=" + jO.os + "&sv=" + jO.sv
            }
            var jQ = new Date()["getTime"]();
            e += "&timeStamp=" + jQ;
            e += iZ()(e);
            return e
        },
        styleJson2styleStringV2: function(e, jW, jS) {
            var jX = {
                featureType: "t",
                elementType: "e",
                visibility: "v",
                color: "c",
                opacity: "o",
                lightness: "l",
                saturation: "s",
                weight: "w",
                level: "z",
                hue: "h",
                fontsize: "f"
            };
            var jY = {
                all: "all",
                geometry: "g",
                "geometry.fill": "g.f",
                "geometry.stroke": "g.s",
                labels: "l",
                "labels.text.fill": "l.t.f",
                "labels.text.stroke": "l.t.s",
                "labels.text": "l.t",
                "labels.icon": "l.i",
                "geometry.topfill": "g.tf",
                "geometry.sidefill": "g.sf"
            };
            var jZ = [];
            for (var jO = this.map.getMinZoom(); jO <= this.map.getMaxZoom(); jO++) {
                jS.zoomFrontStyle[jO] = {}
            }
            jS.zoomFrontStyle.main = {};
            var T = false;
            for (var jO = 0; !!e[jO]; jO++) {
                var jV = e[jO];
                if (this.isOnlyZoomStyler(jV)) {
                    continue
                }
                jW = this.getFrontZoom(jV, jW);
                if ((jV.featureType === "land" || jV.featureType === "all" || jV.featureType === "background") && typeof jV.elementType === "string" && (jV.elementType === "geometry" || jV.elementType === "geometry.fill" || jV.elementType === "all") && jV.stylers && !T) {
                    if (jV.stylers["color"]) {
                        jS.bmapLandColor = jV.stylers["color"]
                    }
                    if (jV.stylers["opacity"]) {
                        jS.bmapLandColor = jV.stylers["opacity"]
                    }
                    if (jV.stylers["visibility"] && jV.stylers["visibility"] === "off") {
                        jS.bmapLandColor = "#00000000"
                    }
                    if (jV.featureType === "land") {
                        T = true
                    }
                }
                if (jV.featureType === "building" && typeof jV.elementType === "string" && jV.elementType === "geometry.fill") {
                    jS.buildingFill = true
                }
                if (jV.featureType === "roadarrow" && jV.elementType === "labels.icon" && jV.stylers) {
                    var jT = jV.stylers["visibility"];
                    jS.zoomFrontStyle[jW]["bmapRoadarrowVisibility"] = jT
                }
                var jP = {};
                eJ.extend(jP, jV);
                var jR = jP.stylers;
                delete jP.stylers;
                eJ.extend(jP, jR);
                var jQ = [];
                for (var jU in jX) {
                    if (jP[jU]) {
                        if (this.isEditorZoomKeys(jU)) {
                            continue
                        }
                        if (jU === "elementType") {
                            jQ.push(jX[jU] + ":" + jY[jP[jU]])
                        } else {
                            switch (jP[jU]) {
                            case "poilabel":
                                jP[jU] = "poi";
                                break;
                            case "districtlabel":
                                jP[jU] = "label";
                                break
                            }
                            jQ.push(jX[jU] + ":" + jP[jU])
                        }
                    }
                }
                if (jQ.length > 2) {
                    jZ.push(jQ.join("|"))
                }
            }
            return jZ.join(",")
        },
        getFrontZoom: function(i, e) {
            var T = i.stylers["level"];
            if (T === undefined) {
                return "main"
            } else {
                return parseInt(T, 10)
            }
        },
        isZoomConfig: function(e) {
            var i = e.stylers["level"];
            if (i === undefined) {
                return false
            } else {
                return true
            }
        },
        isOnlyZoomStyler: function(e) {
            var i = {};
            eJ.extend(i, e.stylers);
            delete i.curZoomRegionId;
            delete i.curZoomRegion;
            delete i.level;
            if (eJ.isEmptyObject(i)) {
                return true
            } else {
                return false
            }
        },
        isSelectZoom: function(i, e) {
            var T = i.stylers["level"];
            if (T === undefined) {
                return true
            } else {
                if (T === e + "") {
                    return true
                } else {
                    return false
                }
            }
        },
        isEditorZoomKeys: function(e) {
            var i = {
                curZoomRegionId: true,
                curZoomRegion: true
            };
            if (i[e]) {
                return true
            } else {
                return false
            }
        },
        getZoomRegion: function(e, i) {
            var jO = e.stylers["level"];
            var T = {};
            eJ.extend(T, i);
            if (jO === undefined) {
                return T
            } else {
                T[parseInt(jO, 10)] = true;
                return T
            }
        },
        onStyleDataBack: function(jP, e, i, jO, jR, T) {
            if (jP.status !== 0) {
                return
            }
            if (jP.data.style.length === 3) {
                if (!T.baseFs) {
                    T.baseFs = jP.data.style
                }
                bw.StyleBody = jP.data.style[2]
            } else {
                bw.StyleBody = jP.data.style
            }
            var jQ = T.baseFs;
            bw["FeatureStyle" + i] = jQ;
            this.updateFrontFeatureStyle(T)
        },
        updateFrontFeatureStyle: function(T) {
            if (T.zoomFrontStyle.main["bmapRoadarrowVisibility"]) {
                for (var e = this.map.getMinZoom(); e <= this.map.getMaxZoom(); e++) {
                    if (!T.zoomFrontStyle[e]["bmapRoadarrowVisibility"]) {
                        T.zoomFrontStyle[e]["bmapRoadarrowVisibility"] = T.zoomFrontStyle.main["bmapRoadarrowVisibility"]
                    }
                }
            }
        }
    };
    var aV = {
        map: null,
        labelCache: {},
        calcDrawMc: function(T, i, e) {
            var jO = [];
            switch (i) {
            case "fill":
                jO = this.calcFill(T, e);
                break;
            case "line":
                break;
            case "building3d":
                jO = this.calcBuilding3d(T, e);
                break
            }
            return jO
        },
        calcFill: function(jP, T) {
            var jQ = [];
            for (var jO = 0; jO < jP.length; jO = jO + 5) {
                var e = this.coordToMc({
                    x: jP[jO],
                    y: jP[jO + 1]
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jQ.push(e[0], e[1])
            }
            return jQ
        },
        calcLine: function(jP, T) {
            var jQ = [];
            var jR = new Int16Array(jP.buffer);
            for (var jO = 0; jO < jR.length; jO = jO + 10) {
                var e = this.coordToMc({
                    x: jR[jO] / 10,
                    y: jR[jO + 1] / 10
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jQ.push(e[0], e[1])
            }
            return jQ
        },
        calcBuilding3d: function(jQ, T) {
            var jR = [];
            var jO = {};
            for (var jP = 0; jP < jQ.length / 2; jP = jP + 7) {
                if (jQ[jP] === jQ[jP - 7] && jQ[jP + 1] === jQ[jP - 6]) {
                    continue
                }
                if (jO[jQ[jP].toString() + jQ[jP + 1].toString()]) {
                    continue
                }
                jO[jQ[jP].toString() + jQ[jP + 1].toString()] = true;
                var e = this.coordToMc({
                    x: jQ[jP],
                    y: jQ[jP + 1]
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jR.push(e[0], e[1])
            }
            return jR
        },
        coordToMc: function(jP, jO, e, i, T) {
            return [jP.x * (i / T) + e * i, jP.y * (i / T) + jO * i]
        },
        addDrawIntoAreaSpots: function(e, jP) {
            if (u.environment !== "customEditor") {
                return
            }
            if (!jP.styleIds) {
                return
            }
            for (var T = 0; T < jP.styleIds.length; T++) {
                var jS = 0;
                if (T > 0) {
                    jS = jP.verticesLength[T - 1]
                }
                end = jP.verticesLength[T];
                var jQ = [];
                var jO = "";
                if (jP.vertex) {
                    jQ = jP.vertex;
                    jO = "building3d"
                } else {
                    if (jP.data[0]) {
                        jQ = jP.data[0];
                        jO = jP.type
                    } else {
                        continue
                    }
                }
                var jR = this.calcDrawMc(jQ.slice(jS, end), jO, e);
                this.map.addAreaSpot(jR, {
                    userData: {
                        styleId: jP.styleIds[T],
                        type: "mapstyle"
                    }
                })
            }
        },
        addLabelIntoAreaSpots: function(e) {
            if (u.environment !== "customEditor") {
                return
            }
            for (var jP = 0; jP < e.length; jP++) {
                var jQ = e[jP];
                for (var jO = 0; jO < jQ.fixedLabel.length; jO++) {
                    var T = jQ.fixedLabel[jO];
                    if (!T._mcBds) {
                        continue
                    }
                    var jR = [T._mcBds[0].lng, T._mcBds[0].lat, T._mcBds[0].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[0].lat];
                    if (!this.labelCache[jR.join()]) {
                        this.labelCache[jR.join()] = true;
                        this.map.addAreaSpot(jR, {
                            userData: {
                                styleId: T.styleId,
                                type: "mapstyle",
                                name: T.name
                            }
                        })
                    }
                }
            }
        }
    };
    function cg(i, e, jO, T) {
        this.cx = 3 * i;
        this.bx = 3 * (jO - i) - this.cx;
        this.ax = 1 - this.cx - this.bx;
        this.cy = 3 * e;
        this.by = 3 * (T - e) - this.cy;
        this.ay = 1 - this.cy - this.by;
        this.p1x = i;
        this.p1y = T;
        this.p2x = jO;
        this.p2y = T
    }
    cg.prototype.sampleCurveX = function(e) {
        return ((this.ax * e + this.bx) * e + this.cx) * e
    }
    ;
    cg.prototype.sampleCurveY = function(e) {
        return ((this.ay * e + this.by) * e + this.cy) * e
    }
    ;
    cg.prototype.sampleCurveDerivativeX = function(e) {
        return (3 * this.ax * e + 2 * this.bx) * e + this.cx
    }
    ;
    cg.prototype.solveCurveX = function(e, jT) {
        if (typeof jT === "undefined") {
            jT = 0.000001
        }
        var jS;
        var jR;
        var jP;
        var T;
        var jO;
        for (jP = e,
        jO = 0; jO < 8; jO++) {
            T = this.sampleCurveX(jP) - e;
            if (Math.abs(T) < jT) {
                return jP
            }
            var jQ = this.sampleCurveDerivativeX(jP);
            if (Math.abs(jQ) < 0.000001) {
                break
            }
            jP = jP - T / jQ
        }
        jS = 0;
        jR = 1;
        jP = e;
        if (jP < jS) {
            return jS
        }
        if (jP > jR) {
            return jR
        }
        while (jS < jR) {
            T = this.sampleCurveX(jP);
            if (Math.abs(T - e) < jT) {
                return jP
            }
            if (e > T) {
                jS = jP
            } else {
                jR = jP
            }
            jP = (jR - jS) * 0.5 + jS
        }
        return jP
    }
    ;
    cg.prototype.solve = function(e, i) {
        return this.sampleCurveY(this.solveCurveX(e, i))
    }
    ;
    var gk = {};
    function fk(T) {
        var e = {
            duration: 1000,
            fps: 30,
            delay: 0,
            transition: gk.linear,
            dropLastAnimation: false
        };
        if (T) {
            for (var jO in T) {
                e[jO] = T[jO]
            }
        }
        if (T.beginTime) {
            this._beginTime = T.beginTime
        }
        this._callbacks = [];
        this._options = e;
        if (e.delay) {
            var jP = this;
            setTimeout(function() {
                jP._doStart()
            }, e.delay)
        } else {
            this._doStart()
        }
        this._pauseTime = 0
    }
    fk.INFINITE = "INFINITE";
    fk.prototype._doStart = function() {
        if (this._isPausing) {
            var e = performance.now() || new Date().getTime();
            this._pauseTime += e - this._isPausing;
            this._isPausing = undefined
        }
        if (window.requestAnimationFrame) {
            var i = this;
            i._timer = window.requestAnimationFrame(function(T) {
                i._loop(T)
            })
        } else {
            this._beginTime = new Date().getTime();
            if (this._options.duration === fk.INFINITE) {
                this._endTime = null
            } else {
                this._endTime = this._beginTime + this._options.duration
            }
            this._loop()
        }
    }
    ;
    fk.prototype._loop = function(jO) {
        var jR = this;
        jO = jO || new Date().getTime();
        jO = jO - this._pauseTime;
        if (!this._beginTime) {
            this._beginTime = jO
        }
        if (!this._endTime && typeof this._options.duration === "number") {
            this._endTime = this._beginTime + this._options.duration
        }
        if (jR._endTime !== null && jO >= jR._endTime) {
            if (jR._options.dropLastAnimation === false) {
                jR._options.render(jR._options.transition(1), 1, jO)
            }
            if (typeof jR._options.finish === "function") {
                jR._options.finish(jO, this)
            }
            for (var jQ = 0, e = jR._callbacks.length; jQ < e; jQ++) {
                jR._callbacks[jQ]()
            }
            return
        }
        var jP;
        if (typeof jR._options.duration === "number") {
            jP = (jO - jR._beginTime) / jR._options.duration;
            jR.schedule = jR._options.transition(jP)
        } else {
            jP = jO - jR._beginTime;
            jR.schedule = 0
        }
        jR._options.render(jR.schedule, jP, jO);
        if (!jR.terminative) {
            if (window.requestAnimationFrame) {
                jR._timer = requestAnimationFrame(function T(i) {
                    jR._loop(i)
                })
            } else {
                jR._timer = setTimeout(function() {
                    jR._loop()
                }, 1000 / jR._options.fps)
            }
        }
    }
    ;
    fk.prototype.stop = function(i, e) {
        this.terminative = true;
        if (this._timer) {
            if (window.cancelAnimationFrame) {
                cancelAnimationFrame(this._timer)
            } else {
                clearTimeout(this._timer)
            }
            this._timer = null;
            if (typeof this._options.onStop === "function") {
                this._options.onStop(e)
            }
        }
        if (i) {
            this._endTime = this._beginTime;
            this._loop()
        }
    }
    ;
    fk.prototype.pause = function() {
        if (!this._isPausing) {
            this.stop();
            this.terminative = undefined;
            this._isPausing = performance.now() || new Date().getTime()
        }
    }
    ;
    fk.prototype.cancel = function() {
        this.stop()
    }
    ;
    fk.prototype.append = function(e) {
        this._callbacks.push(e);
        return this
    }
    ;
    gk = {
        _p1: 1,
        _p2: 1 * 1.525,
        linear: function(e) {
            return e
        },
        reverse: function(e) {
            return 1 - e
        },
        easeInQuad: function(e) {
            return e * e
        },
        easeInCubic: function(e) {
            return Math.pow(e, 3)
        },
        easeInBiquad: function(e) {
            return Math.pow(e, 4)
        },
        easeInBack: function(e) {
            return e * e * ((gk._p1 + 1) * e - gk._p1)
        },
        easeOutQuad: function(e) {
            return -(e * (e - 2))
        },
        easeOutCubic: function(e) {
            return Math.pow((e - 1), 3) + 1
        },
        easeOutBiquad: function(e) {
            return 1 - Math.pow((e - 1), 4)
        },
        easeOutBack: function(e) {
            return ((e = e - 1) * e * ((gk._p1 + 1) * e + gk._p1) + 1)
        },
        easeInOutQuad: function(e) {
            if (e < 0.5) {
                return e * e * 2
            } else {
                return -2 * (e - 2) * e - 1
            }
        },
        easeInOutCubic: function(e) {
            if (e < 0.5) {
                return Math.pow(e, 3) * 4
            } else {
                return Math.pow(e - 1, 3) * 4 + 1
            }
        },
        easeInOutBiquad: function(e) {
            if (e < 0.5) {
                return Math.pow(e, 4) * 8
            } else {
                return 1 - (Math.pow(e - 1, 4) * 8)
            }
        },
        easeInOutSine: function(e) {
            return (1 - Math.cos(Math.PI * e)) / 2
        }
    };
    gk.ease = (function() {
        var e = new cg(0.4,0,0.6,1);
        return function(i) {
            return e.solve(i)
        }
    }
    )();
    gk["ease-in"] = gk.easeInQuad;
    gk["ease-out"] = gk.easeOutQuad;
    var dd = {
        start: function(jU) {
            var jO = jU.el;
            var e = jU.style;
            var i = jU.startValue;
            var jR = jU.endValue;
            var jP = jU.duration || 1400;
            var jQ = jU.transition || gk.linear;
            var jT = jU.callback;
            var jS = jR - i;
            var T = jU.unit || "";
            return new fk({
                fps: 60,
                duration: jP,
                transition: jQ,
                render: function(jV) {
                    jO.style[e] = i + jS * jV + T
                },
                finish: function() {
                    jT && jT()
                }
            })
        }
    };
    function q(jP, T) {
        cZ.call(this);
        this.keyframes = jP;
        var e = {
            duration: 1000,
            delay: 0,
            transition: gk.linear,
            interation: 1
        };
        if (T) {
            for (var jO in T) {
                e[jO] = T[jO]
            }
        }
        this._options = e
    }
    q.inherits(cZ, "ViewAnimation");
    q.prototype._start = function(jQ) {
        var T = this;
        T.map = jQ;
        var jP = new fu("onanimationstart");
        T.dispatchEvent(jP);
        this._initStatus(T.map);
        var jO = this._options.duration;
        var i = this._options.interation;
        var jR = this._options.transition;
        var jS = 0;
        T.poiStatus = T.map._displayOptions.poi;
        if (T.poiStatus) {
            T.map.setDisplayOptions({
                poi: false
            })
        }
        T.map.viewAnimationTime = new Date().getTime();
        this.animation = new fk({
            duration: jO,
            transition: jR,
            start: function(e) {},
            render: function(jT, e) {
                if (jT === 0) {
                    T._initStatus(T.map)
                } else {
                    T._setViewByRate(jT)
                }
            },
            finish: function(jU, jT) {
                if (++jS < i || i === "INFINITE") {
                    var jV = new fu("onanimationiterations");
                    T.dispatchEvent(jV);
                    delete jT._beginTime;
                    delete jT._endTime;
                    jT._doStart()
                } else {
                    var jV = new fu("onanimationend");
                    T.dispatchEvent(jV);
                    delete T.map.viewAnimationTime;
                    T.map.setDisplayOptions({
                        poi: T.poiStatus
                    })
                }
            }
        })
    }
    ;
    q.prototype._getTotalDuration = function(e, i) {
        if (e === fk.INFINITE) {
            return fk.INFINITE
        } else {
            return e * i
        }
    }
    ;
    q.prototype._initStatus = function(e) {
        if (this.keyframes[0]) {
            e.setCenter(this.keyframes[0].center, {
                noAnimation: true
            });
            e.setZoom(this.keyframes[0].zoom, {
                noAnimation: true
            });
            e.setTilt(this.keyframes[0].tilt, {
                noAnimation: true
            });
            e.setHeading(this.keyframes[0].heading, {
                noAnimation: true
            })
        }
    }
    ;
    q.prototype._setViewByRate = function(jO) {
        for (var e = 0; e < this.keyframes.length - 1; e++) {
            var jP = this.keyframes[e];
            var T = this.keyframes[e + 1];
            if (jO >= jP.percentage && jO < T.percentage) {
                this.map.setHeading(this._getHeadingDelta(jP, T, jO), {
                    noAnimation: true
                });
                this.map.setTilt(this._getTiltDelta(jP, T, jO), {
                    noAnimation: true
                });
                this.map.setCenter(this._getCenterDelta(jP, T, jO), {
                    noAnimation: true
                });
                this.map.setZoom(this._getZoomDelta(jP, T, jO), {
                    noAnimation: true
                })
            }
        }
    }
    ;
    q.prototype._getHeadingDelta = function(T, i, e) {
        var jP = (e - T.percentage) / (i.percentage - T.percentage);
        var jO = T.heading + (i.heading - T.heading) * jP;
        return jO
    }
    ;
    q.prototype._getTiltDelta = function(T, i, e) {
        var jP = (e - T.percentage) / (i.percentage - T.percentage);
        var jO = T.tilt + (i.tilt - T.tilt) * jP;
        return jO
    }
    ;
    q.prototype._getCenterDelta = function(T, i, e) {
        var jP = (e - T.percentage) / (i.percentage - T.percentage);
        var jO = T.center.add(i.center.sub(T.center).mult(jP));
        return jO
    }
    ;
    q.prototype._getZoomDelta = function(jO, T, i) {
        var jP = (i - jO.percentage) / (T.percentage - jO.percentage);
        var e = jO.zoom + (T.zoom - jO.zoom) * jP;
        return e
    }
    ;
    q.prototype._pause = function(e) {
        this.animation.pause()
    }
    ;
    q.prototype._continue = function(e) {
        this.animation._doStart()
    }
    ;
    q.prototype._cancel = function(T) {
        T.setDisplayOptions({
            poi: this.poiStatus
        });
        this.animation.cancel();
        delete T.viewAnimationTime;
        var i = new fu("onanimationcancel");
        this.dispatchEvent(i)
    }
    ;
    var cB = undefined;
    var ff = {
        is64Bit: function() {
            if (/Windows/.test(navigator.userAgent)) {
                if (/Win64; x64/.test(navigator.userAgent)) {
                    return true
                } else {
                    if (/WOW64/.test(navigator.userAgent)) {
                        return true
                    } else {
                        return false
                    }
                }
            }
            return true
        },
        isIOS112: function a3(e) {
            return /11_2/.test(navigator.userAgent)
        },
        canUseWebAssembly: function(i) {
            if (cB !== undefined) {
                i && i(cB);
                return
            }
            if (window.WebAssembly && this.is64Bit()) {
                if (window.disableWebAssembly === true) {
                    cB = false;
                    i && i(cB)
                } else {
                    if (!cn()) {
                        cB = true;
                        i && i(cB)
                    } else {
                        if (this.isIOS112()) {
                            cB = false;
                            i && i(cB)
                        } else {
                            var e = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]);
                            WebAssembly.instantiate(e).then(function(T) {
                                cB = true;
                                i && i(cB)
                            }, function(T) {
                                cB = false;
                                i && i(cB)
                            })
                        }
                    }
                }
            } else {
                cB = false;
                i && i(cB)
            }
        }
    };
    var aH = {};
    bw.Utils = aH;
    function jF(e) {
        return e.style
    }
    function hH(i) {
        if (eJ.Browser.ie > 0) {
            i.unselectable = "on";
            i.selectstart = function() {
                return false
            }
            ;
            i.onmousedown = function(T) {
                T.preventDefault();
                return false
            }
        } else {
            var e = jF(i);
            e.MozUserSelect = "none";
            e.WebkitUserSelect = "none";
            i.addEventListener("mousedown", function(T) {
                T.preventDefault()
            }, false)
        }
    }
    function aR(e) {
        return e && e.parentNode && e.parentNode.nodeType !== 11
    }
    function bI(i, e) {
        i.insertAdjacentHTML("beforeEnd", e);
        return i.lastChild
    }
    function fx(T, i) {
        var jO = document.createElement("div");
        jO.innerHTML = i;
        var e = jO.childNodes[0];
        return T.parentNode.insertBefore(e, T)
    }
    function ah(i) {
        i = i || window.event;
        i.stopPropagation ? i.stopPropagation() : i.cancelBubble = true
    }
    function c(i) {
        i = i || window.event;
        i.preventDefault ? i.preventDefault() : i.returnValue = false;
        return false
    }
    function g5(i) {
        ah(i);
        return c(i)
    }
    function gB() {
        var e = document.documentElement;
        var i = document.body;
        if (e && (e.scrollTop || e.scrollLeft)) {
            return [e.scrollTop, e.scrollLeft]
        } else {
            if (i) {
                return [i.scrollTop, i.scrollLeft]
            } else {
                return [0, 0]
            }
        }
    }
    function h2(jP) {
        if (!jP) {
            return
        }
        jP.onload = jP.onerror = null;
        var T = jP.attributes, jO, e, jQ;
        if (T) {
            e = T.length;
            for (jO = 0; jO < e; jO += 1) {
                jQ = T[jO].name;
                if (typeof jP[jQ] === "function") {
                    jP[jQ] = null
                }
            }
        }
        T = jP.children;
        if (T) {
            e = T.length;
            for (jO = 0; jO < e; jO += 1) {
                h2(jP.children[jO])
            }
        }
    }
    function fA(i, jR, jQ) {
        var jP = jR.lng - jQ.lng;
        var jO = jR.lat - jQ.lat;
        if (jP === 0) {
            return Math.abs(i.lng - jR.lng)
        }
        if (jO === 0) {
            return Math.abs(i.lat - jR.lat)
        }
        var T = jO / jP;
        var e = jR.lat - T * jR.lng;
        return Math.abs(T * i.lng - i.lat + e) / Math.sqrt(T * T + 1)
    }
    function cd(i, e) {
        if (!i || !e) {
            return
        }
        return Math.round(Math.sqrt(Math.pow(i.x - e.x, 2) + Math.pow(i.y - e.y, 2)))
    }
    function ef(i, e) {
        if (!i || !e) {
            return 0
        }
        return Math.round(Math.sqrt(Math.pow(i.lng - e.lng, 2) + Math.pow(i.lat - e.lat, 2)))
    }
    function eW(T, i) {
        var e = Math.round((T.x + i.x) / 2);
        var jO = Math.round((T.y + i.y) / 2);
        return new e4(e,jO)
    }
    function iX(e, T) {
        var i = [];
        T = T || function(jP) {
            return jP
        }
        ;
        for (var jO in e) {
            i.push(jO + "=" + T(e[jO]))
        }
        return i.join("&")
    }
    function bT(T, i, jQ) {
        var jR = document.createElement(T);
        if (jQ) {
            jR = document.createElementNS(jQ, T)
        }
        i = i || {};
        for (var jO in i) {
            var jP = {
                "for": "htmlFor",
                "class": "cssClass"
            }[jO] || jO;
            if (jO === "style") {
                jR.style.cssText = i[jO];
                continue
            }
            if (jO === "class") {
                eJ.ac(jR, i[jO]);
                continue
            }
            if (jR.setAttribute) {
                jR.setAttribute(jP, i[jO])
            } else {
                try {
                    jR[jP] = i[jO]
                } catch (jR) {}
            }
        }
        return jR
    }
    function cc(e) {
        if (e.currentStyle) {
            return e.currentStyle
        } else {
            if (e.ownerDocument && e.ownerDocument.defaultView) {
                return e.ownerDocument.defaultView.getComputedStyle(e, null)
            }
        }
    }
    function bP(e) {
        return typeof e === "function"
    }
    function fW(e) {
        return e === void 0
    }
    function je(e, i) {
        return Object.prototype.hasOwnProperty.call(e, i)
    }
    function g(jP, jQ) {
        if (fW(jP.length)) {
            for (var jO in jP) {
                if (je(jP, jO)) {
                    jQ.call(null, jO, jP[jO])
                }
            }
        } else {
            var T = jP.length;
            if (T) {
                for (var e = 0; e < T; e++) {
                    jQ.call(null, e, jP[e])
                }
            }
        }
    }
    function ap(i, e) {
        if (!e) {
            return i
        }
        g(e, function(T, jO) {
            i[T] = jO
        });
        return i
    }
    var gO = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    function da(jP) {
        var T = "";
        var jW;
        var jU;
        var jS = "";
        var jV;
        var jT;
        var jR;
        var jQ = "";
        var jO = 0;
        var e = /[^A-Za-z0-9+/=]/g;
        if (!jP || e.exec(jP)) {
            return jP
        }
        jP = jP.replace(/[^A-Za-z0-9+/=]/g, "");
        do {
            jV = gO.indexOf(jP.charAt(jO++));
            jT = gO.indexOf(jP.charAt(jO++));
            jR = gO.indexOf(jP.charAt(jO++));
            jQ = gO.indexOf(jP.charAt(jO++));
            jW = (jV << 2) | (jT >> 4);
            jU = ((jT & 15) << 4) | (jR >> 2);
            jS = ((jR & 3) << 6) | jQ;
            T = T + String.fromCharCode(jW);
            if (jR !== 64) {
                T = T + String.fromCharCode(jU)
            }
            if (jQ !== 64) {
                T = T + String.fromCharCode(jS)
            }
            jW = jU = jS = "";
            jV = jT = jR = jQ = ""
        } while (jO < jP.length);
        return T
    }
    function iW(e) {
        return btoa(encodeURIComponent(e))
    }
    function fH(e) {
        return decodeURIComponent(atob(e))
    }
    (function(e) {
        if (!e.Utils) {
            e.Utils = {}
        }
        var i = e.Utils;
        i.format = (function() {
            function T(jR, jQ, jS) {
                var jP = jS[+jQ];
                return typeof (jP) === "function" ? jP(jQ) : jP
            }
            function jO(jR, jQ, jS) {
                var jU = jQ;
                var jV = [];
                var jP = jQ.split(":");
                if (jP.length === 2) {
                    jU = jP[0];
                    jV.push(jP[1])
                }
                var jT = typeof (jS[jU]);
                if (jT === "function") {
                    return jS[jU].apply(undefined, jV)
                } else {
                    if (jT === "undefined") {
                        return jR
                    } else {
                        return String(jS[jU])
                    }
                }
            }
            return function(jP, jQ) {
                var jS = jQ.splice ? T : jO;
                var jR = jP.splice ? jP.join("") : jP;
                return jR.replace(/{([a-zA-Z0-9_$:.]+)}/g, function(jU, jT) {
                    return jS(jU, jT, jQ)
                })
            }
        }
        )();
        i.ErrorMonitor = function(jO, T, jP) {}
        ;
        ff.canUseWebAssembly(function(T) {
            i.canUseWebAssembly = T
        })
    }
    )(bw);
    function bS() {
        return (cn() || hz())
    }
    function cn() {
        var e = navigator.userAgent;
        if (e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1) {
            return true
        }
        return false
    }
    function hz() {
        var e = navigator.userAgent;
        if (e.indexOf("Android") > -1) {
            return true
        }
        return false
    }
    function ie(e) {
        return e * Math.PI / 180
    }
    function eV(e) {
        return e / Math.PI * 180
    }
    function bA(e, jP) {
        var jO = Math.pow(10, jP);
        if (typeof e === "number") {
            return Math.round(e * jO) / jO
        }
        for (var T = 0; T < e.length; T++) {
            e[T] = bA(e[T], jP)
        }
        return e
    }
    function b6(T, i, e) {
        if (T < i) {
            T = i
        } else {
            if (T > e) {
                T = e
            }
        }
        return T
    }
    function d0(e, i) {
        while (e < 0) {
            e += i
        }
        return e % i
    }
    function hw(i, e) {
        return (i >= 0 && e >= 0) || (i < 0 && e < 0)
    }
    function L(i) {
        if (i._gl) {
            return i._gl
        }
        var e = {
            alpha: true,
            antialias: false,
            failIfMajorPerformanceCaveat: false,
            preserveDrawingBuffer: false,
            stencil: false
        };
        var T = i.getContext("webgl", e) || i.getContext("experimental-webgl", e);
        i._gl = T;
        return T
    }
    function ic(jO, T) {
        for (var e = 0; e < T.length; e++) {
            eJ.on(jO, T[e], ah)
        }
    }
    function eD(i, T, e) {
        T[e] = i.getUniformLocation(T, e)
    }
    function bV(jP, jQ, e, T, i) {
        var jO = "";
        switch (i) {
        case "mat4":
            jP.uniformMatrix4fv(jQ[e], false, T);
            return;
        case "v3":
            jO = "uniform3fv";
            break;
        case "f":
            jO = "uniform1f";
            break;
        case "i":
            jO = "uniform1i";
            break
        }
        if (jO === "") {
            throw "error"
        }
        jP[jO](jQ[e], T)
    }
    function hh(jW, e) {
        while (jW < 0) {
            jW += 360
        }
        jW = jW % 360;
        var jO = e.width;
        var jV = e.height;
        var jR = jO;
        var T = jV;
        if (jW < 90) {
            var i = Math.sin(ie(jW)) * jO;
            var jT = Math.sin(ie(jW)) * jV;
            var jU = Math.cos(ie(jW)) * jO;
            var jQ = Math.cos(ie(jW)) * jV;
            var jR = Math.ceil(jU + jT);
            var T = Math.ceil(i + jQ)
        } else {
            if (jW < 180) {
                var jW = jW - 90;
                var i = Math.sin(ie(jW)) * jO;
                var jT = Math.sin(ie(jW)) * jV;
                var jU = Math.cos(ie(jW)) * jO;
                var jQ = Math.cos(ie(jW)) * jV;
                var jR = Math.ceil(i + jQ);
                var T = Math.ceil(jU + jT)
            } else {
                if (jW < 270) {
                    var jW = jW - 180;
                    var i = Math.sin(ie(jW)) * jO;
                    var jT = Math.sin(ie(jW)) * jV;
                    var jU = Math.cos(ie(jW)) * jO;
                    var jQ = Math.cos(ie(jW)) * jV;
                    var jR = Math.ceil(jU + jT);
                    var T = Math.ceil(i + jQ)
                } else {
                    var jW = jW - 270;
                    var i = Math.sin(ie(jW)) * jO;
                    var jT = Math.sin(ie(jW)) * jV;
                    var jU = Math.cos(ie(jW)) * jO;
                    var jQ = Math.cos(ie(jW)) * jV;
                    var jR = Math.ceil(i + jQ);
                    var T = Math.ceil(jU + jT)
                }
            }
        }
        var jS = jR - jO;
        var jP = T - jV;
        return [0 - jS / 2, 0 - jP / 2, jO + jS / 2, jV + jP / 2]
    }
    function b5(e) {
        if (e.toDataURL() === b5._blankData) {
            return true
        }
        return false
    }
    function V(jP, jO, T) {
        var i = [T.lng - jP.lng, T.lat - jP.lat];
        var e = [jO.lng - jP.lng, jO.lat - jP.lat];
        return i[0] * e[1] - i[1] * e[0]
    }
    function iC(jQ, jP, T) {
        var e;
        var jR;
        var jO;
        var i;
        if (jQ.lng < jP.lng) {
            e = jQ.lng;
            jO = jP.lng
        } else {
            e = jP.lng;
            jO = jQ.lng
        }
        if (jQ.lat < jP.lat) {
            jR = jQ.lat;
            i = jP.lat
        } else {
            jR = jP.lat;
            i = jQ.lat
        }
        if (T.lng < e || T.lng > jO || T.lat < jR || T.lat > i) {
            return false
        }
        return true
    }
    function iM(jS, jR, jQ, jO) {
        var jP = V(jQ, jO, jS);
        var T = V(jQ, jO, jR);
        var i = V(jS, jR, jQ);
        var e = V(jS, jR, jO);
        if (jP * T < 0 && i * e < 0) {
            return true
        } else {
            if (jP === 0 && iC(jQ, jO, jS)) {
                return true
            } else {
                if (T === 0 && iC(jQ, jO, jR)) {
                    return true
                } else {
                    if (i === 0 && iC(jS, jR, jQ)) {
                        return true
                    } else {
                        if (e === 0 && iC(jS, jR, jO)) {
                            return true
                        } else {
                            return false
                        }
                    }
                }
            }
        }
    }
    function hk(T, i) {
        var e = i.parentNode;
        if (e.lastChild === i) {
            e.appendChild(T)
        } else {
            e.insertBefore(T, i.nextSibling)
        }
    }
    function dG(jU, jV) {
        if (jV === 0) {
            return jU
        }
        var jT = 0;
        var jR = 0;
        if (!jU) {
            throw "异常"
        }
        if (jU.length === 0) {
            return []
        }
        for (var jP = 1, T = jU.length - 1; jP < T; jP++) {
            var jS = fA(jU[jP], jU[0], jU[jU.length - 1]);
            if (jS > jT) {
                jR = jP;
                jT = jS
            }
        }
        var e = [];
        if (jT >= jV) {
            var jX = jU.slice(0, jR);
            var jW = jU.slice(jR, jU.length);
            var jQ = dG(jX, jV);
            var jO = dG(jW, jV);
            for (var jP = 0, T = jQ.length; jP < T; jP++) {
                e.push(jQ[jP])
            }
            for (var jP = 0, T = jO.length; jP < T; jP++) {
                e.push(jO[jP])
            }
        } else {
            e.push(jU[0]);
            e.push(jU[jU.length - 1])
        }
        return e
    }
    function p(e) {
        if (Math.log2) {
            return Math.log2(e)
        }
        return Math.log(e) / Math.LN2
    }
    function c3(T, i, e) {
        return Math.min(e, Math.max(i, T))
    }
    function ao(e, i) {
        if (!i) {
            return e
        }
        var jQ = i[0];
        var jP = i[1];
        var jO = i[2];
        var T = i[3];
        var jS = [];
        var jR = [];
        jS[0] = T * e[0] + jO * e[2];
        jS[1] = e[1];
        jS[2] = -jO * e[0] + T * e[2];
        jR[0] = jS[0];
        jR[1] = jP * jS[1] - jQ * jS[2];
        jR[2] = jQ * jS[1] + jP * jS[2];
        return jR
    }
    var n = Math.PI / 180;
    var gv = 180 / Math.PI;
    function fh(T) {
        var i = (T - Date.UTC(2000, 0, 1, 12)) / 86400000 / 36525;
        var e = (d3.utcDay.floor(T) - T) / 86400000 * 360 - 180;
        return [e - e7(i) * gv, dL(i) * gv]
    }
    function e7(jO) {
        var jP = bn(jO);
        var i = dR(jO);
        var T = ia(jO);
        var jQ = Math.tan(h9(jO) / 2);
        jQ *= jQ;
        return jQ * Math.sin(2 * T) - 2 * jP * Math.sin(i) + 4 * jP * jQ * Math.sin(i) * Math.cos(2 * T) - 0.5 * jQ * jQ * Math.sin(4 * T) - 1.25 * jP * jP * Math.sin(2 * i)
    }
    function dL(e) {
        return Math.asin(Math.sin(h9(e)) * Math.sin(bs(e)))
    }
    function bs(e) {
        return jz(e) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * e) * n)) * n
    }
    function jz(e) {
        return ia(e) + iR(e)
    }
    function dR(e) {
        return (357.52911 + e * (35999.05029 - 0.0001537 * e)) * n
    }
    function ia(i) {
        var e = (280.46646 + i * (36000.76983 + i * 0.0003032)) % 360;
        return (e < 0 ? e + 360 : e) / 180 * Math.PI
    }
    function iR(i) {
        var e = dR(i);
        return (Math.sin(e) * (1.914602 - i * (0.004817 + 0.000014 * i)) + Math.sin(e + e) * (0.019993 - 0.000101 * i) + Math.sin(e + e + e) * 0.000289) * n
    }
    function h9(e) {
        return dj(e) + 0.00256 * Math.cos((125.04 - 1934.136 * e) * n) * n
    }
    function dj(e) {
        return (23 + (26 + (21.448 - e * (46.815 + e * (0.00059 - e * 0.001813))) / 60) / 60) * n
    }
    function bn(e) {
        return 0.016708634 - e * (0.000042037 + 1.267e-7 * e)
    }
    function fX() {
        return window.devicePixelRatio || 1
    }
    function im(T) {
        var i;
        var e;
        var jO;
        if (T >= 0) {
            jO = Math.floor(T / 65536) * 65536;
            i = jO;
            e = T - jO
        } else {
            jO = Math.floor(-T / 65536) * 65536;
            i = -jO;
            e = T + jO
        }
        return [i, e]
    }
    function cx(e) {
        if (e.lng >= 0 && e.lat >= 0) {
            return new cr(e.lng - 10000000,e.lat - 6000000)
        }
        if (e.lng >= 0 && e.lat < 0) {
            return new cr(e.lng - 10000000,e.lat + 6000000)
        }
        if (e.lng < 0 && e.lat >= 0) {
            return new cr(e.lng + 10000000,e.lat - 6000000)
        }
        if (e.lng < 0 && e.lat < 0) {
            return new cr(e.lng + 10000000,e.lat + 6000000)
        }
    }
    var hR = null;
    if (window.performance && window.performance.now) {
        hR = function() {
            return performance.now()
        }
    } else {
        if (Date.now) {
            hR = function() {
                return Date.now()
            }
        } else {
            hR = function() {
                return (new Date).getTime()
            }
        }
    }
    function hv(jO, e, i) {
        var T = "mouseWheel";
        if (eJ.Platform.macintosh) {
            if (!isNaN(jO) && (jO < 10 || jO !== 120) && (e % 1 === 0 && e < 5)) {
                T = "padScroll"
            }
            if (eJ.Browser.firefox && (e % 1 === 0 && e < 5 && i === 0)) {
                T = "padScroll"
            }
        }
        if (eJ.Browser.safari && jO === 12) {
            T = "mouseWheel"
        }
        return T
    }
    function bJ(jX, jS) {
        var jW = jX[0];
        var jV = jX[1];
        var jO = false;
        for (var jR = 0, jQ = jS.length - 2; jR < jS.length; jR += 2) {
            var jU = jS[jR];
            var jP = jS[jR + 1];
            var jT = jS[jQ];
            var T = jS[jQ + 1];
            var e = ((jP > jV) !== (T > jV)) && (jW < (jT - jU) * (jV - jP) / (T - jP) + jU);
            if (e) {
                jO = !jO
            }
            jQ = jR
        }
        return jO
    }
    function ar(jP, jR) {
        var e = jR.length;
        var T = 0;
        var jQ = false;
        for (var jO = 0; jO < e; jO++) {
            T = (jO === e - 1) ? 0 : T + 1;
            if ((jR[jO].lat !== jR[T].lat) && (((jP.lat >= jR[jO].lat) && (jP.lat < jR[T].lat)) || ((jP.lat >= jR[T].lat) && (jP.lat < jR[jO].lat))) && (jP.lng < (jR[T].lng - jR[jO].lng) * (jP.lat - jR[jO].lat) / (jR[T].lat - jR[jO].lat) + jR[jO].lng)) {
                jQ = !jQ
            }
        }
        return jQ
    }
    function dE(T, e, i, jO) {
        jO = jO || 0.4;
        if (T > i) {
            T = Math.pow(T - i + 1, jO) + i - 1
        } else {
            if (T < e) {
                T = e - Math.pow(e - T + 1, jO) + 1
            }
        }
        return T
    }
    function eF(jS) {
        var jQ = "";
        for (var T = 0; T < jS.length; T++) {
            var jT = jS.charCodeAt(T) << 1;
            var e = jT.toString(2);
            var jP = e.length;
            var jW = e;
            if (jP < 8) {
                jW = "00000000" + e;
                jW = jW.substr(e.length, 8)
            }
            jQ += jW
        }
        var jU = 5 - jQ.length % 5;
        var jO = [];
        for (var T = 0; T < jU; T++) {
            jO[T] = "0"
        }
        jQ = jO.join("") + jQ;
        var jV = [];
        for (var T = 0; T < jQ.length / 5; T++) {
            var jT = jQ.substr(T * 5, 5);
            var jR = parseInt(jT, 2) + 50;
            jV.push(String.fromCharCode(jR))
        }
        return jV.join("") + jU.toString()
    }
    function jr(T, i) {
        var e = bw.TILE_VERSION || window.TILE_VERSION;
        if (!e || !e[T] || !e[T][i] || !e[T][i].version || !e[T][i].updateDate) {
            e = B.tvc
        }
        return {
            ver: e[T][i].version,
            udt: e[T][i].updateDate
        }
    }
    function bx() {
        var e = bw.MSV || window.MSV;
        if (!e || !e.mapstyle || !e.mapstyle.updateDate || !e.mapstyle.version) {
            e = B.msv
        }
        return {
            ver: e.mapstyle.version,
            udt: e.mapstyle.updateDate
        }
    }
    function dn(e, jP) {
        var jO = e.slice(0);
        for (var T = 0; T < jO.length; T++) {
            jO[T] += jP
        }
        return jO
    }
    var gI = null;
    function gX(e) {
        if (gI) {
            return
        }
        e.fire(new fu("onloadtile"));
        gI = setTimeout(function() {
            gI = null
        }, 1000)
    }
    function aK() {
        if (D("//map.baidu.com") || D("//maps.baidu.com") || D("//ditu.baidu.com")) {
            return true
        }
        return false
    }
    aH.inMapHost = aK();
    if (typeof window._inMapHost === "boolean") {
        aH.inMapHost = window._inMapHost
    }
    function D(i) {
        var T = window.location;
        var e = document.createElement("a");
        e.href = i;
        return e.hostname === T.hostname && e.port === T.port && e.protocol === T.protocol
    }
    var dK = [72.685732, 0.193351, 136.10888, 54.392257];
    var eI = [72.6892532, 0.1939743381, 136.1168614, 54.392257];
    var t = [72.69566833, 0.1999420909, 136.1232863, 54.39791217];
    var ib = 158;
    var dc = [98.789081, 122.948721, 107.857301, 118.082148, 119.126627, 128.021934, 79.939914, 99.021873, 119.912937, 122.084572, 127.906381, 130.933385, 106.496057, 108.066113, 119.818772, 126.367919, 111.789929, 119.311401, 100.742164, 102.220151, 99.853589, 100.781289, 97.522631, 98.834615, 99.092638, 99.892947, 122.905967, 123.761867, 123.716213, 125.494726, 123.723977, 124.755034, 125.475833, 126.398284, 125.471687, 126.065118, 130.817003, 133.605851, 127.900156, 128.656536, 128.646633, 129.625389, 132.88057, 134.104549, 117.365548, 119.230813, 116.073074, 117.416898, 114.406274, 116.123791, 116.479038, 119.591534, 110.566812, 111.851324, 74.465162, 79.993155, 82.858046, 91.345214, 85.71485, 98.969834, 127.651377, 129.532029, 129.462275, 130.209769, 133.716214, 134.731053, 134.366834, 135.103133, 130.854579, 131.32966, 115.499125, 117.530421, 115.765224, 116.734157, 108.524336, 110.601747, 121.351282, 124.612037, 126.151954, 127.332751, 91.273562, 95.604179, 79.87318, 82.935667, 76.413314, 78.336484, 78.275229, 79.993668, 83.956612, 85.725267, 85.500637, 89.346601, 97.990127, 98.94176, 106.641956, 108.599215, 111.386259, 111.810312, 111.578597, 111.803167, 115.99273, 117.010413, 116.24461, 116.675246, 119.422198, 119.909078, 120.646056, 121.38098, 120.335038, 120.662183, 124.579855, 125.773243, 126.207803, 126.774849, 95.565331, 102.037736, 95.576121, 96.158028, 95.556699, 97.799055, 91.296205, 93.348146, 93.321994, 94.690522, 89.339313, 90.540241, 82.263039, 82.882528, 78.335615, 80.023512, 76.623947, 78.352608, 73.495149, 74.48155, 74.846872, 76.479412, 91.560058, 94.871116, 88.759515, 89.235995, 83.237883, 83.965264, 82.292123, 83.246813, 81.876477, 83.253307, 80.75212, 81.463265, 86.463409, 88.267232, 102.199623, 104.225963, 112.153727, 116.823265, 108.965663, 113.021145, 111.166575, 117.972799];
    var db = [22.548416, 42.276971, 17.227969, 22.7346, 41.292761, 50.741667, 30.365133, 42.324913, 21.701924, 22.69335, 42.4176, 48.936335, 21.429059, 22.648399, 50.650499, 52.914825, 42.20449, 45.199078, 21.13391, 22.568612, 21.441033, 22.583349, 23.73862, 25.298628, 22.00409, 22.563095, 38.97849, 41.338631, 40.287973, 41.330108, 39.732801, 40.343252, 40.966852, 41.323446, 40.719312, 41.05937, 44.869472, 48.009884, 41.336325, 42.443362, 42.008104, 42.434713, 45.873151, 48.205746, 45.132322, 46.784582, 45.133383, 46.392803, 45.148771, 45.740273, 47.478161, 50.064393, 42.216229, 43.461282, 37.014302, 40.662281, 42.219985, 47.31417, 27.726965, 30.466651, 48.911271, 49.642488, 48.831706, 49.434487, 46.941762, 48.37425, 47.651781, 48.463782, 42.851964, 44.905396, 47.598273, 48.438467, 48.409141, 48.901651, 42.22756, 42.906402, 52.821047, 53.578094, 50.701837, 51.654278, 42.292419, 44.392214, 42.295918, 45.385017, 34.680866, 37.027803, 30.743515, 37.066586, 28.245649, 30.406053, 47.270872, 48.497371, 25.238932, 27.778469, 42.215754, 42.540416, 43.427677, 44.689208, 44.685587, 44.994131, 48.878657, 49.318659, 49.281099, 49.624515, 50.710468, 51.306809, 52.90717, 53.331981, 52.903016, 53.107959, 52.900867, 53.250033, 51.638073, 52.400678, 42.229657, 42.691928, 43.061242, 43.891083, 42.663095, 43.074222, 44.37174, 45.180155, 44.375135, 44.974219, 47.3035, 48.053221, 45.352401, 46.807875, 40.563053, 42.040289, 40.581871, 41.405172, 38.516328, 40.178756, 35.790476, 37.02337, 26.825605, 27.761303, 27.197399, 27.74932, 29.147561, 30.37813, 29.570893, 30.062042, 30.045026, 30.380952, 29.998038, 30.385203, 48.487385, 49.16832, 22.395733, 22.598229, 7.441114, 11.501436, 3.767491, 9.000793, 12.642067, 17.406563];
    var b2 = [98.795985, 122.960792, 107.867379, 118.093451, 119.139658, 128.035888, 79.948212, 99.029524, 119.923388, 122.094977, 127.918527, 130.94789, 106.50606, 108.076783, 119.8329, 126.382207, 111.803567, 119.324928, 100.749858, 102.227985, 99.860885, 100.788921, 97.529435, 98.841564, 99.100017, 99.90035, 122.917416, 123.774367, 123.728314, 125.507211, 123.736065, 124.767299, 125.488463, 126.410675, 125.484326, 126.07764, 130.830784, 133.620042, 127.912178, 128.668957, 128.658937, 129.638599, 132.894179, 134.119086, 117.379378, 119.244569, 116.086736, 117.431212, 114.420233, 116.137458, 116.492775, 119.605527, 110.579401, 111.86488, 74.468228, 80.001908, 82.867432, 91.353788, 85.721075, 98.976964, 127.664757, 129.546833, 129.476893, 130.22449, 133.730358, 134.745235, 134.381034, 135.1178, 130.868117, 131.34409, 115.513245, 117.544751, 115.779271, 116.748045, 108.536254, 110.614326, 121.365534, 124.626434, 126.165992, 127.347013, 91.281869, 95.611754, 79.879648, 82.945041, 76.413314, 78.345207, 78.275229, 80.002329, 83.956612, 85.734098, 85.510186, 89.356499, 97.997001, 98.948845, 106.653208, 108.610811, 111.400183, 111.824179, 111.592224, 111.817136, 116.00682, 117.024631, 116.258574, 116.689291, 119.436876, 119.922961, 120.659806, 121.395479, 120.349116, 120.676014, 124.59389, 125.787788, 126.221756, 126.788962, 95.572955, 102.046581, 95.583772, 96.165551, 95.564318, 97.806095, 91.30446, 93.356438, 93.330319, 94.698145, 89.349129, 90.548677, 82.268802, 82.892025, 78.335615, 80.032266, 76.625755, 78.361413, 73.498248, 74.490992, 74.846872, 76.488771, 91.563521, 94.878444, 88.768214, 89.244787, 83.247076, 83.974127, 82.29595, 83.256003, 81.885315, 83.26249, 80.760619, 81.472404, 86.470983, 88.276988, 102.207537, 104.234614, 112.164795, 116.833667, 108.965663, 113.032246, 111.166575, 117.983363];
    var b0 = [22.551183, 42.284787, 17.227969, 22.738314, 41.300981, 50.749638, 30.368087, 42.332701, 21.705055, 22.696452, 42.426047, 48.944674, 21.432184, 22.651387, 50.657409, 52.92296, 42.212192, 45.206905, 21.137031, 22.57186, 21.444502, 22.586566, 23.741571, 25.301472, 22.006806, 22.56637, 38.985114, 41.346531, 40.295617, 41.338581, 39.740021, 40.351012, 40.974644, 41.331562, 40.726852, 41.067192, 44.877158, 48.018285, 41.344597, 42.451798, 42.016305, 42.443235, 45.880906, 48.214001, 45.140027, 46.792775, 45.141083, 46.400433, 45.156418, 45.748281, 47.485889, 50.071879, 42.223667, 43.469487, 37.019867, 40.668675, 42.226823, 47.321605, 27.72944, 30.469853, 48.919002, 49.650614, 48.840188, 49.443166, 46.949801, 48.382798, 47.660603, 48.472692, 42.859946, 44.913298, 47.605896, 48.445914, 48.41698, 48.909667, 42.23507, 42.914193, 52.8281, 53.585952, 50.709311, 51.662219, 42.29968, 44.399225, 42.302746, 45.391958, 34.680866, 37.03377, 30.743515, 37.07228, 28.245649, 30.408935, 47.277693, 48.504255, 25.241528, 27.780726, 42.223363, 42.548418, 43.435888, 44.696952, 44.693193, 45.00187, 48.886267, 49.326755, 49.288642, 49.632304, 50.717486, 51.314369, 52.914204, 53.33964, 52.910094, 53.115926, 52.908382, 53.258095, 51.64533, 52.408305, 42.236825, 42.699126, 43.068466, 43.898632, 42.670403, 43.082219, 44.379045, 45.187742, 44.382336, 44.981379, 47.310362, 48.06019, 45.359099, 46.814439, 40.569751, 42.047741, 40.587956, 41.41263, 38.519192, 40.185033, 35.790476, 37.029005, 26.825605, 27.763896, 27.199658, 27.751649, 29.150192, 30.381073, 29.573886, 30.065162, 30.047775, 30.384089, 30.001277, 30.388525, 48.494118, 49.173841, 22.398528, 22.601198, 7.441114, 11.505968, 3.767491, 9.005209, 12.642067, 17.410886];
    var ac = 95;
    var cU = [110.3961374, 105.0743788, 96.8991824, 95.61810411, 93.82412598, 91.3892353, 91.38931858, 89.08325955, 87.22469808, 86.26278402, 85.17353, 85.23741211, 82.86627441, 81.90481038, 79.59687147, 80.39829237, 79.93319363, 77.80279948, 75.2557704, 73.49357829, 73.1892532, 73.87758816, 74.4064738, 74.10215224, 75.46409695, 76.77739692, 78.28299615, 78.15499485, 78.37920654, 78.89145345, 79.69282199, 81.19938178, 81.80830295, 83.89093424, 85.94149523, 87.86447266, 89.03414958, 90.05918132, 91.10026937, 92.15733832, 93.74361735, 95.82597331, 97.95655545, 97.12363037, 98.2129739, 99.2068571, 101.6587874, 102.5239084, 102.2356106, 105.0249238, 106.0992342, 107.8617093, 111.6439372, 109.591869, 112.284586, 117.7961157, 118.9495128, 114.2076584, 118.693565, 123.1475225, 122.730705, 120.9361393, 123.4207441, 122.3787782, 122.1385425, 121.5904281, 121.1773763, 120.6805404, 120.2483355, 122.795807, 122.8759077, 121.3060262, 122.1392177, 123.7418799, 126.4177599, 128.5647409, 129.7194884, 131.2259136, 131.9950494, 133.6289931, 135.6168614, 131.3875545, 130.8743365, 128.6303223, 126.0997773, 124.4015375, 122.22161, 119.6586483, 119.7866827, 118.5685878, 116.5177976, 114.819101, 119.0812964, 116.453265, 111.7431171];
    var cS = [43.2190351, 42.38053385, 43.17417589, 44.42226915, 45.09863634, 45.56708116, 47.33599718, 48.68832709, 49.62448486, 48.9482175, 48.4800472, 47.33564399, 47.43948676, 46.03452067, 45.20221788, 43.34563043, 42.32965739, 41.39690972, 40.82972331, 39.95567654, 39.25892877, 38.36098768, 38.05441569, 37.16878445, 36.38899414, 35.36126817, 34.30953451, 32.58503879, 31.56975694, 30.77800266, 30.43559814, 29.7744892, 30.0931977, 28.71103299, 27.70739665, 27.5775472, 27.01096137, 27.77857883, 27.50707954, 26.50328315, 26.70387804, 27.95548557, 27.29428901, 23.64685493, 23.62310601, 21.67493381, 20.77751465, 21.32070991, 22.1824113, 22.31232964, 22.51316054, 16.80037679, 13.19749864, 0.6939743381, 1.541660428, 10.50208252, 15.58926975, 17.89090007, 19.94928467, 22.18490153, 25.37285292, 25.61456434, 30.62532552, 31.08099284, 31.89238173, 32.50092692, 32.80325765, 34.25546956, 35.15486138, 36.90170139, 37.8348272, 37.941604, 38.6480797, 38.96797201, 40.98146918, 41.25573296, 42.07218153, 42.49132813, 44.65259766, 44.69330702, 48.62286865, 48.09383952, 49.19628499, 50.03402317, 53.27678901, 53.62976345, 53.89420546, 52.98933322, 52.01872884, 50.23210259, 50.18807048, 47.49769857, 47.34362712, 46.50502143, 45.24770128];
    var er = [98.7895, 122.954182, 107.860913, 118.087007, 119.133165, 128.029533, 79.941749, 99.023087, 119.916883, 122.08841, 127.912143, 130.941471, 106.499502, 108.070244, 119.826245, 126.375818, 111.797006, 119.318387, 100.743285, 102.221517, 99.854448, 100.782445, 97.522928, 98.835028, 99.093518, 99.893783, 122.910927, 123.767769, 123.721954, 125.50077, 123.729657, 124.760724, 125.481902, 126.404079, 125.477737, 126.071019, 130.824331, 133.613395, 127.905767, 128.662524, 128.652527, 129.6321, 132.887552, 134.11249, 117.37297, 119.237999, 116.080154, 117.424589, 114.413586, 116.130948, 116.486264, 119.598927, 110.5728, 111.858437, 74.465162, 79.995337, 82.860821, 91.347291, 85.716024, 98.970481, 127.658331, 129.540202, 129.470528, 130.21808, 133.723748, 134.738785, 134.374555, 135.111443, 130.861475, 131.337438, 115.506627, 117.538123, 115.772783, 116.741632, 108.529656, 110.60782, 121.358945, 124.619773, 126.159424, 127.340582, 91.275275, 95.605228, 79.874427, 82.938601, 76.413314, 78.338763, 78.275229, 79.995765, 83.956612, 85.727511, 85.503554, 89.349858, 97.990418, 98.942257, 106.646704, 108.604437, 111.393667, 111.817723, 111.585811, 111.810645, 116.000232, 117.018216, 116.252108, 116.682705, 119.430384, 119.916417, 120.653168, 121.38883, 120.342727, 120.669383, 124.587426, 125.781376, 126.215282, 126.782323, 95.566367, 102.040026, 95.577158, 96.159009, 95.557772, 97.799728, 91.298032, 93.350057, 93.323794, 94.691771, 89.342471, 90.542019, 82.264229, 82.885485, 78.335615, 80.025844, 76.623947, 78.355027, 73.495149, 74.484473, 74.846872, 76.482208, 91.560117, 94.871859, 88.761692, 89.23822, 83.240549, 83.967602, 82.292367, 83.2495, 81.878825, 83.256003, 80.75421, 81.465955, 86.465421, 88.270356, 102.201019, 104.228033, 112.158282, 116.827153, 108.965663, 113.025767, 111.166575, 117.97687];
    var eq = [22.545421, 42.279053, 17.226272, 22.731982, 41.294917, 50.743316, 30.361986, 42.326603, 21.699185, 22.690751, 42.419757, 48.938435, 21.426505, 22.64567, 50.651745, 52.916705, 42.20641, 45.201064, 21.131326, 22.565685, 21.438288, 22.580379, 23.735785, 25.295582, 22.001087, 22.560315, 38.979333, 41.340757, 40.28938, 41.332289, 39.734164, 40.344718, 40.968803, 41.325813, 40.721073, 41.061503, 44.871533, 48.012179, 41.338366, 42.445601, 42.010343, 42.436934, 45.875217, 48.208327, 45.134237, 46.786509, 45.135376, 46.394665, 45.150734, 45.742257, 47.480099, 50.065931, 42.217982, 43.46329, 37.014057, 40.662848, 42.221079, 47.315558, 27.723432, 30.46385, 48.913298, 49.644555, 48.83396, 49.436824, 46.944059, 48.376613, 47.654503, 48.466331, 42.854333, 44.907682, 47.600253, 48.440245, 48.410926, 48.903468, 42.229292, 42.908294, 52.822466, 53.58012, 50.703491, 51.656037, 42.29378, 44.393379, 42.296912, 45.385809, 34.679282, 37.027699, 30.740622, 37.066377, 28.241967, 30.403134, 47.271949, 48.49848, 25.235818, 27.774976, 42.217425, 42.542102, 43.429763, 44.691016, 44.687044, 44.995758, 48.880431, 49.320551, 49.282865, 49.626267, 50.711607, 51.308382, 52.908547, 53.333963, 52.904419, 53.109706, 52.902338, 53.251938, 51.639701, 52.402205, 42.231045, 42.693581, 43.062756, 43.892771, 42.664519, 43.075927, 44.372942, 45.1815, 44.376327, 44.975476, 47.304623, 48.054453, 45.353174, 46.808493, 40.563653, 42.041556, 40.582164, 41.4064, 38.51618, 40.179105, 35.789745, 37.023144, 26.825402, 27.757641, 27.193806, 27.745766, 29.144229, 30.375186, 29.567889, 30.059102, 30.041938, 30.378006, 29.995047, 30.382338, 48.48834, 49.169021, 22.392816, 22.595333, 7.439914, 11.500161, 3.766676, 9.000793, 12.640512, 17.406563];
    var ft = 3000;
    var gA = 0.00002;
    var gz = 0.000003;
    var iz = 0.0174532925194;
    var hn = 0.0065;
    var hm = 0.006;
    var dw = 40000;
    var fg = 0;
    var iS = 1;
    var ax = 2;
    var hJ = 3;
    var e9 = 4;
    var g1 = 1e-10;
    var ih = 6370996.81;
    var fw = 100000000;
    function ha(T, jP, i, jO) {
        var e = arguments.length;
        this.ll = {};
        this.ru = {};
        if (e === 0) {} else {
            if (e === 4) {
                this.normalize(T, jP, i, jO)
            }
        }
    }
    ha.prototype.contains = function(e) {
        if (e.lng > this.ll.lng && e.lng < this.ru.lng && e.lat > this.ll.lat && e.lat < this.ru.lat) {
            return hJ
        }
        if (Math.abs(e.lng - this.ll.lng) < g1 || Math.abs(e.lng - this.ru.lng) < g1 || Math.abs(e.lat - this.ll.lat) < g1 || Math.abs(e.y - this.ru.lat) > g1) {
            return ax
        }
        return fg
    }
    ;
    ha.prototype.normalize = function(i, jO, e, T) {
        if (i > e) {
            this.ll.lng = e;
            this.ru.lng = i
        } else {
            this.ll.lng = i;
            this.ru.lng = e
        }
        if (jO > T) {
            this.ll.lat = T;
            this.ru.lat = jO
        } else {
            this.ll.lat = jO;
            this.ru.lat = T
        }
    }
    ;
    function ei(i, jO, e, T) {
        this.sp = {
            lng: i,
            lat: jO
        };
        this.ep = {
            lng: e,
            lat: T
        };
        this.mbr = new ha(i,jO,e,T)
    }
    function hT(jO, e, jQ, jP) {
        for (var T = 0; T < jP; T = T + 2) {
            if (jO.lng >= e[T] && jO.lng <= e[T + 1] && jO.lat >= jQ[T] && jO.lat <= jQ[T + 1]) {
                return true
            }
        }
        return false
    }
    function f3(jT) {
        var i = jT.lng;
        var jS = jT.lat;
        var jO = Math.sqrt(i * i + jS * jS);
        var jQ = Math.atan2(jS, i);
        var T = jO + ge(jS);
        var jP = jQ + gd(i);
        var e = T * Math.cos(jP);
        var jR = T * Math.sin(jP);
        return {
            lng: e + hn,
            lat: jR + hm
        }
    }
    function aY(jT) {
        var i = jT.lng - hn;
        var jS = jT.lat - hm;
        var jO = Math.sqrt(i * i + jS * jS);
        var jQ = Math.atan2(jS, i);
        var T = jO - ge(jS);
        var jP = jQ - gd(i);
        var e = T * Math.cos(jP);
        var jR = T * Math.sin(jP);
        return {
            lng: e,
            lat: jR
        }
    }
    function ge(e) {
        return Math.sin(e * ft * iz) * gA
    }
    function gd(e) {
        return Math.cos(e * ft * iz) * gz
    }
    function aq(T, i, e) {
        return ((i.lng - T.lng) * (e.lat - T.lat) - (e.lng - T.lng) * (i.lat - T.lat))
    }
    function hs(i, e) {
        return Math.abs(i - e) <= g1
    }
    function gl(jO, T) {
        var i = jO.lat * iz;
        var jT = jO.lng * iz;
        var e = T.lat * iz;
        var jS = T.lng * iz;
        var jQ = Math.cos(i) * Math.cos(e);
        var jP = Math.cos(jT) * Math.cos(jS);
        var jV = Math.sin(i) * Math.sin(e);
        var jU = Math.sin(jT) * Math.sin(jS);
        var jW = jQ * jP + jQ * jU + jV;
        if (jW < -1) {
            jW = -1
        } else {
            if (jW > 1) {
                jW = 1
            }
        }
        var jR = Math.acos(jW) * ih;
        return jR
    }
    function h(jS, jR) {
        var i = jS.lat * iz;
        var e = jR.lat * iz;
        var jO = jS.lng * iz;
        var T = jR.lng * iz;
        var jQ = i - e;
        var jP = jO - T;
        var jT = Math.sin(jQ / 2) * Math.sin(jQ / 2) + Math.cos(i) * Math.cos(e) * Math.sin(jP / 2) * Math.sin(jP / 2);
        return 2 * Math.asin(Math.sqrt(jT)) * ih
    }
    function gj(jT, T) {
        var jV = by(jT, T);
        var jU = 180;
        var jS = 90;
        var jR = -180;
        var jP = -90;
        var jQ = T.sp;
        var jO = T.ep;
        jU = jQ.lng < jO.lng ? jQ.lng : jO.lng;
        jS = jQ.lat < jO.lat ? jQ.lat : jO.lat;
        jR = jQ.lng < jO.lng ? jQ.lng : jO.lng;
        jP = jQ.lat < jO.lat ? jQ.lat : jO.lat;
        if (jV.lng <= jR && jV.lng >= jU && jV.lng <= jP && jV.lat >= jS) {
            return gl(jT, jV)
        } else {
            var i = h(jT, T.sp);
            var e = h(jT, T.ep);
            return i < e ? i : e
        }
    }
    function aZ(i, e) {}
    function bC(i, jO, e, T) {
        return Math.sqrt((i - e) * (i - e) + (jO - T) * (jO - T))
    }
    function by(jZ, jR) {
        var jQ = jZ.lng;
        var jY = jZ.lat;
        var jP = jR.sp.lng;
        var jX = jR.sp.lat;
        var T = jR.ep.lng;
        var jV = jR.ep.lat;
        var jW = jV - jX;
        var jU = jP - T;
        if (hs(jW, 0) && hs(jU, 0)) {
            return jR.sp
        }
        var jT = T * jX - jP * jV;
        var jS = jU * jQ - jW * jY;
        var e = jW * jW - jU * jU;
        var jO = jU * jS - jW * jT;
        var i = jW * jS + jU * jT;
        return {
            lng: jO / e,
            lat: -i / e
        }
    }
    function bG(jO) {
        var T = 0;
        for (var e = 0; e < ac; ++e) {
            if (cS[e] <= jO.lat) {
                if (cS[(e + 1) % ac] > jO.lat) {
                    if (aq({
                        lng: cU[e],
                        lat: cS[e]
                    }, {
                        lng: cU[(e + 1) % ac],
                        lat: cS[(e + 1) % ac]
                    }, jO) > 0) {
                        ++T
                    }
                }
            } else {
                if (cS[(e + 1) % ac] <= jO.lat) {
                    if (aq({
                        lng: cU[e],
                        lat: cS[e]
                    }, {
                        lng: cU[(e + 1) % ac],
                        lat: cS[(e + 1) % ac]
                    }, jO) < 0) {
                        --T
                    }
                }
            }
        }
        return T === 0 ? fg : hJ
    }
    function ju(jO) {
        var jR = {};
        if (jO.lng < eI[0] - 0.4 || jO.lat < eI[1] - 0.4 || jO.lng > eI[2] + 0.4 || jO.lat > eI[3] + 0.4) {
            jR.lng = jO.lng;
            jR.lat = jO.lat;
            return jR
        } else {
            if (hT(jO, er, eq, ib)) {
                jR = f3(jO);
                return jR
            }
        }
        var e = 0;
        var jU = dw;
        var T = 0;
        var jS = new ha();
        var jT = 1;
        if (bG(jO) === fg) {
            for (var jQ = 0; jQ < ac; ++jQ) {
                var jP = new ei(cU[jQ],cS[jQ],cU[(jQ + 1) % ac],cS[(jQ + 1) % ac]);
                jS.ll.lng = jP.mbr.ll.lng - 0.5;
                jS.ll.lat = jP.mbr.ll.lat - 0.5;
                jS.ru.lng = jP.mbr.ru.lng + 0.5;
                jS.ru.lat = jP.mbr.ru.lat + 0.5;
                if (jS.contains(jO) === fg) {
                    continue
                }
                T = gj(jO, jP);
                if (T < jU) {
                    jU = T
                }
            }
            if (jU < dw) {
                e = (dw - jU) / dw;
                jT = 2
            }
        } else {
            jT = 3;
            e = 1
        }
        var jV = f3(jO);
        jR = {
            lng: jO.lng + (jV.lng - jO.lng) * e,
            lat: jO.lat + (jV.lat - jO.lat) * e
        };
        return jR
    }
    function eK(i) {
        var T = {};
        if (i.lng < t[0] - 0.4 || i.lat < t[1] - 0.4 || i.lng > t[2] + 0.4 || i.lat > t[3] + 0.4) {
            T.lng = i.lng;
            T.lat = i.lat;
            return T
        } else {
            if (hT(i, b2, b0, ib)) {
                T = aY(i);
                return T
            }
        }
        var e = ju(i);
        if (i.lng === e.lng && i.lat === e.lng) {
            T.lng = i.lng;
            T.lat = i.lat;
            return T
        }
        return decryptPt1(i, ju)
    }
    function h8(i, e) {
        if (e === 3 && i instanceof cr) {
            var T = ju(i);
            return new cr(T.lng,T.lat)
        } else {
            return i
        }
    }
    function et(i, e) {
        if (e === 3 && i instanceof cr) {
            var T = eK(i);
            return new cr(T.lng,T.lat)
        } else {
            if (e === 5 && i instanceof cr) {
                return new cr(i.lng,i.lat)
            } else {
                return i
            }
        }
    }
    function o(jQ) {
        if (!jQ) {
            jQ = {}
        }
        var jR = JSON.stringify(jQ);
        var jP = 0, T, jO, e;
        if (jR.length === 0) {
            return jP
        }
        for (T = 0,
        e = jR.length; T < e; T++) {
            jO = jR.charCodeAt(T);
            jP = ((jP << 5) - jP) + jO;
            jP |= 0
        }
        return jP
    }
    function cV() {
        var i = new Date().getTime();
        var e = "xxxyxxxy".replace(/[xy]/g, function(jO) {
            var T = (i + Math.random() * 16) % 16 | 0;
            i = Math.floor(i / 16);
            return (jO == "x" ? T : (T & 3 | 8)).toString(16)
        });
        return e
    }
    var bW = 0;
    function fM() {
        return bW++
    }
    function iZ() {
        var T = function(j8, j7) {
            var j6 = {
                "\x6c\x68\x65\x6d\x61": "\x65\x65\x6c",
                "\x64\x65\x65\x6c\x65": "\x64\x64\x64",
                "\x65\x6c\x6d\x6c\x65": function(ka, j9) {
                    return ka < j9
                },
                "\x78\x69\x69\x6d\x68": function(ka, j9) {
                    return ka + j9
                },
                "\x68\x6c\x78\x68\x6d": function(ka, j9) {
                    return ka(j9)
                },
                "\x64\x63\x6c\x78\x65": "\x31\x2e\x31\x2e\x32",
                "\x69\x6c\x6c\x6d\x61": function(ka, j9) {
                    return ka + j9
                },
                "\x68\x63\x6d\x68\x61": function(kb, ka, j9) {
                    return kb(ka, j9)
                }
            };
            var j3 = j6["\x64\x63\x6c\x78\x65"];
            function j1(kc, kb) {
                var ka = "\x61\x65\x61";
                while (ka !== "\x69\x69\x68\x61") {
                    switch (ka) {
                    case "\x61\x65\x61":
                        var kf = kc["\x6c\x65\x6e\x67\x74\x68"];
                        ka = "\x69\x65\x61";
                        break;
                    case "\x69\x65\x61":
                        var kd = [];
                        ka = "\x64\x64\x64";
                        break;
                    case j6["\x6c\x68\x65\x6d\x61"]:
                        return kd;
                    case j6["\x64\x65\x65\x6c\x65"]:
                        for (var j9 = 0; j6["\x65\x6c\x6d\x6c\x65"](j9, kf); j9++) {
                            var ke = kb(kc[j9]);
                            kd["\x70\x75\x73\x68"](ke)
                        }
                        ka = j6["\x6c\x68\x65\x6d\x61"];
                        break
                    }
                }
            }
            var j5, j4, j2, j0, jZ, jY = decodeURIComponent, jX = "\x43\x68\x61\x72", jW = "";
            var jV = [T];
            j5 = "\x64\x65";
            j4 = "\x66\x72";
            j2 = "\x6f";
            jZ = j6["\x69\x6c\x6c\x6d\x61"](j6["\x69\x6c\x6c\x6d\x61"](j4, j2), "\x6d");
            j0 = "\x43\x6f" + j5;
            var jU = function(j9) {
                return (j9 + jW)["\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72"][j6["\x78\x69\x69\x6d\x68"](jZ, jX) + j0](j9)
            };
            var jT = function(j9) {
                return j1(j9, function(ka) {
                    return j6["\x68\x6c\x78\x68\x6d"](jU, ka)
                })
            };
            var jS = jT["\x63\x61\x6c\x6c"](jU, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
            var jR = j6["\x68\x63\x6d\x68\x61"](j1, [28782, 27702, 26416, 25167, 24183], function(j9) {
                return jY(j9)
            });
            var jQ = jT["\x63\x61\x6c\x6c"](jR, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
              , jP = {};
            jR = jT(jR);
            var jO = new RegExp(jR["\x6a\x6f\x69\x6e"]("\x7c"));
            for (var j5 = 0; j6["\x65\x6c\x6d\x6c\x65"](j5, jS["\x6c\x65\x6e\x67\x74\x68"]); j5++) {
                jP[jQ[j5]] = jS[j5]
            }
            j7 = j1(j7["\x73\x70\x6c\x69\x74"](jW), function(j9) {
                return jP[j9] || j9
            })["\x6a\x6f\x69\x6e"](jW);
            return j1(j7["\x73\x70\x6c\x69\x74"](jO), function(j9) {
                return j6["\x68\x6c\x78\x68\x6d"](jY, j9)
            })
        }(this, "\x48\u5e52\u6256\u5f6e\x50\u62a1\x50\u692d\x59\u6c19\u6256\u63cb\x51\x4f\u5e52\u624f\u58a0\x6c\u545a\u6c36\u5f5f\u66f0\u6c19\x73\x69\u577a\u72b8\u5f5f\u6b31\u6b9b\u6730\u7209\u72ba\x4c\u66f0\x4f\u6c19\x52\u6c19\u6256\u6b9b\u62a1\u5f6e\u5f6e\u5e52\x4f\u5e77\x68\u545a\u545a\u624f\u545a\u545a\u5ef2\u735c\u58a0\u6730\x73\x75\u5c2b\x73\x74\x72\u6730\u545a\u56c4\u545a\u735c\x6c\u5e77\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u624f\u545a\u56c4\u735c\u735c\u5ef2\u5e77\x69\u59c8\u545a\x6c\u59c8\u706e\u545a\x69\u5ef2\u706e\u545a\u545a\u5ef2\u5e77\u545a\u5ef2\u56c4\x68\u5ef2\u706e\u5ef2\x68\u5ef2\u545a\u5ef2\u706e\x73\x75\u5c2b\x73\x74\x72\x69\u72b8\u577a\u5e77\x6c\u545a\u72b8\u577a\x74\x68\u5e77\u735c\x68\x69\x6c\u5ef2\u624f\u545a\u56c4\u56c4\u56c4\u6c36\x69\u5ef2\u735c");
        (function(jQ, jP) {
            var jO = function(jR) {
                while (--jR) {
                    jQ.push(jQ.shift())
                }
            };
            jO(++jP)
        }(T, 478));
        var i = function(jQ, jP) {
            jQ = jQ - 0;
            var jO = T[jQ];
            return jO
        };
        function e(jU) {
            var jS = {
                "\x65\x65\x61\x6d\x78": i("0x0"),
                "\x65\x64\x65\x6d\x6c": function(jW, jV) {
                    return jW + jV
                },
                "\x65\x64\x6d\x6d\x61": i("0x1"),
                "\x69\x61\x68\x6c\x65": function(jW, jV) {
                    return jW(jV)
                },
                "\x69\x63\x65\x6c\x63": function(jW, jV) {
                    return jW(jV)
                },
                "\x69\x65\x68\x61\x61": i("0x2"),
                "\x65\x61\x64\x68\x61": i("0x3"),
                "\x61\x68\x61\x65\x61": i("0x4"),
                "\x6d\x68\x69\x6c\x61": i("0x5"),
                "\x68\x78\x78\x65\x78": "\x65\x65\x61"
            };
            var jQ = i("0x6");
            while (jQ !== jS[i("0x7")]) {
                switch (jQ) {
                case i("0x3"):
                    var jP = jU[i("0x8")](jS[i("0x9")](jU[i("0xa")]("\x3f"), 1));
                    jQ = jS[i("0xb")];
                    break;
                case jS[i("0xb")]:
                    var jO = jS["\x69\x61\x68\x6c\x65"](md5, jS[i("0x9")](jS[i("0xc")](md5, jS[i("0x9")](jP, jR)), jT));
                    jQ = i("0xd");
                    break;
                case i("0xe"):
                    var jT = jS["\x69\x65\x68\x61\x61"];
                    jQ = jS[i("0xf")];
                    break;
                case i("0xd"):
                    return jS[i("0x10")] + jO[i("0x11")](jO[i("0x12")] - 12);
                case i("0x6"):
                    var jR = jS[i("0x13")];
                    jQ = jS["\x68\x78\x78\x65\x78"];
                    break
                }
            }
        }
        return e
    }
    function gK() {}
    eJ.extend(gK, {
        Request: {
            INITIAL: -1,
            WAITING: 0,
            LOADED: 1,
            COMPLETED: 2
        },
        Dependency: {
            poly: ["marker"],
            layer: ["poly"],
            hotspot: ["poly"],
            infowindow: ["marker", "hotspot"],
            simpleInfowindow: ["marker"],
            tools: ["marker", "poly"],
            mapgl: ["glcommon", "poly"],
            earth: ["glcommon"],
            control: ["scommon"],
            scommon: [],
            localSearch: ["scommon"],
            otherSearch: ["scommon"],
            route: ["scommon"],
            buslineSearch: ["route"],
            autocomplete: ["scommon"],
            mvtParse: ["marker", "poly", "style"]
        },
        MD5Mapping: {
            control: "53gtvx",
            marker: "pvronw",
            poly: "tyunmd",
            layer: "$layer$",
            infowindow: "1hcmhv",
            simpleInfowindow: "apfsl2",
            hotspot: "n4tsps",
            menu: "xwaysb",
            tools: "j3dbd4",
            oppc: "lkcena",
            oppcgl: "gupz2q",
            mapgl: "ixgox1",
            markeranimation: "rb1jrt",
            earth: "ttwryz",
            glcommon: "psfyhu",
            localSearch: "0ny0mn",
            scommon: "noo4os",
            otherSearch: "x13xf3",
            route: "hguub1",
            buslineSearch: "o3nrfb",
            autocomplete: "mchqcc",
            style: "guqocu",
            mvtParse: "zgjokf"
        },
        Config: {
            baseUrl: B.apiHost + "/getmodules?v=1.0&type=webgl",
            jsModPath: (aH.inMapHost ? "" : B.mapHost) + "/res/newui/",
            timeout: 5000
        },
        delayFlag: false,
        Module: {
            modules: {},
            modulesNeedToLoad: []
        },
        _getMd5ModsStr: function(jQ) {
            var jP = [];
            for (var jS = 0, T = jQ.length; jS < T; jS++) {
                var jR = jQ[jS];
                var e = this.MD5Mapping[jR];
                var jO = "$" + jR + "$";
                if (e !== jO) {
                    jP.push(jR + "_" + e)
                }
            }
            return jP.join(",")
        },
        load: function(i, jQ, jO) {
            var e = this.getModuleInfo(i);
            if (e.status === this.Request.COMPLETED) {
                if (jO === true) {
                    jQ()
                }
            } else {
                if (e.status === this.Request.INITIAL) {
                    this.combine(i);
                    this.addToLoadQueue(i);
                    var T = this;
                    if (T.delayFlag === false) {
                        T.delayFlag = true;
                        setTimeout(function() {
                            var jR = T.Config.baseUrl + "&mod=" + T._getMd5ModsStr(T.Module.modulesNeedToLoad);
                            gw.load(jR);
                            T.Module.modulesNeedToLoad.length = 0;
                            T.delayFlag = false
                        }, 1)
                    }
                    e.status = this.Request.WAITING;
                    function jP(jT) {
                        var jS = T.getModuleInfo(i);
                        if (jS.status !== T.Request.COMPLETED) {
                            if (window.map) {
                                var jR = new fu("onmod_timeout");
                                jR.timeout = jT / 1000;
                                jR.moduleName = i;
                                window.map.fire(jR)
                            }
                        }
                    }
                    setTimeout(jP, this.Config.timeout, this.Config.timeout);
                    setTimeout(jP, this.Config.timeout * 2, this.Config.timeout * 2)
                }
                if (jQ) {
                    e.callbacks.push(jQ)
                }
            }
        },
        combine: function(e) {
            if (e && this.Dependency[e]) {
                var jO = this.Dependency[e];
                for (var T = 0; T < jO.length; T++) {
                    this.combine(jO[T]);
                    if (!this.Module.modules[jO[T]]) {
                        this.addToLoadQueue(jO[T])
                    }
                }
            }
        },
        addToLoadQueue: function(e) {
            var i = this.getModuleInfo(e);
            if (i.status === this.Request.INITIAL) {
                i.status = this.Request.WAITING;
                this.Module.modulesNeedToLoad.push(e)
            }
        },
        run: function(T, jO) {
            var jS = this.getModuleInfo(T);
            var jV = this.Dependency[T];
            if (jV) {
                for (var jQ = 0; jQ < jV.length; jQ++) {
                    var jR = this.getModuleInfo(jV[jQ]);
                    if (jR.status !== this.Request.COMPLETED) {
                        jR.modsNeedToRun.push({
                            name: T,
                            code: jO
                        });
                        return
                    }
                }
            }
            try {
                eval(jO)
            } catch (jT) {
                return
            }
            jS.status = this.Request.COMPLETED;
            for (var jQ = 0, jP = jS.callbacks.length; jQ < jP; jQ++) {
                jS.callbacks[jQ]()
            }
            jS.callbacks.length = 0;
            for (jQ = 0; jQ < jS.modsNeedToRun.length; jQ++) {
                var jU = jS.modsNeedToRun[jQ];
                this.run(jU.name, jU.code)
            }
            jS.modsNeedToRun.length = 0
        },
        getModuleInfo: function(i) {
            var e;
            if (!this.Module.modules[i]) {
                this.Module.modules[i] = {
                    status: this.Request.INITIAL,
                    callbacks: [],
                    modsNeedToRun: []
                }
            }
            e = this.Module.modules[i];
            return e
        }
    });
    window._jsload = function(jP, jQ) {
        var i = gK.getModuleInfo(jP);
        i.status = gK.Request.LOADED;
        if (jQ !== "") {
            gK.run(jP, jQ)
        } else {
            if (window.map) {
                var e = new fu("ongetmodules_fail");
                e.moduleName = jP;
                window.map.fire(e)
            }
            var T = document.createElement("script");
            var jO = gK.MD5Mapping[jP];
            T.src = gK.Config.jsModPath + jP + "_" + jO + ".js";
            document.getElementsByTagName("head")[0].appendChild(T)
        }
    }
    ;
    function cQ() {
        this._timeData = {}
    }
    var bu;
    if (typeof window !== "undefined") {
        bu = window
    } else {
        bu = self
    }
    cQ.prototype.mark = function(e) {
        this._timeData[e] = this._getTime()
    }
    ;
    cQ.prototype.getMark = function(e) {
        return this._timeData[e]
    }
    ;
    cQ.prototype.getTime = function(i, e) {
        return parseFloat((this._timeData[e] - this._timeData[i]).toFixed(2))
    }
    ;
    cQ.prototype.print = function() {}
    ;
    cQ.prototype.clear = function() {
        this._timeData = {}
    }
    ;
    if (bu.performance && bu.performance.now) {
        cQ.prototype._getTime = function() {
            return performance.now()
        }
    } else {
        cQ.prototype._getTime = function() {
            return Date.now()
        }
    }
    !function(i, T) {
        T(i.d3 = i.d3 || {})
    }(window, function(kr) {
        function kJ(kQ, kR, T, kP) {
            function e(i) {
                return kQ(i = new Date(+i)),
                i
            }
            return e.floor = e,
            e.ceil = function(i) {
                return kQ(i = new Date(i - 1)),
                kR(i, 1),
                kQ(i),
                i
            }
            ,
            e.round = function(i) {
                var kS = e(i)
                  , kT = e.ceil(i);
                return kT - i > i - kS ? kS : kT
            }
            ,
            e.offset = function(i, kS) {
                return kR(i = new Date(+i), null == kS ? 1 : Math.floor(kS)),
                i
            }
            ,
            e.range = function(kT, i, kS) {
                var kU = [];
                if (kT = e.ceil(kT),
                kS = null == kS ? 1 : Math.floor(kS),
                !(i > kT && kS > 0)) {
                    return kU
                }
                do {
                    kU.push(new Date(+kT))
                } while (kR(kT, kS),
                kQ(kT),
                i > kT);
                return kU
            }
            ,
            e.filter = function(i) {
                return kJ(function(kS) {
                    for (; kQ(kS),
                    !i(kS); ) {
                        kS.setTime(kS - 1)
                    }
                }, function(kS, kT) {
                    for (; --kT >= 0; ) {
                        for (; kR(kS, 1),
                        !i(kS); ) {}
                    }
                })
            }
            ,
            T && (e.count = function(i, kS) {
                return kt.setTime(+i),
                kx.setTime(+kS),
                kQ(kt),
                kQ(kx),
                Math.floor(T(kt, kx))
            }
            ,
            e.every = function(i) {
                return i = Math.floor(i),
                isFinite(i) && i > 0 ? i > 1 ? e.filter(kP ? function(kS) {
                    return kP(kS) % i === 0
                }
                : function(kS) {
                    return e.count(0, kS) % i === 0
                }
                ) : e : null
            }
            ),
            e
        }
        function ky(e) {
            return kJ(function(i) {
                i.setDate(i.getDate() - (i.getDay() + 7 - e) % 7),
                i.setHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setDate(i.getDate() + 7 * T)
            }, function(i, T) {
                return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * ks) / kG
            })
        }
        function kq(e) {
            return kJ(function(i) {
                i.setUTCDate(i.getUTCDate() - (i.getUTCDay() + 7 - e) % 7),
                i.setUTCHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setUTCDate(i.getUTCDate() + 7 * T)
            }, function(i, T) {
                return (T - i) / kG
            })
        }
        var kt = new Date
          , kx = new Date
          , kE = kJ(function() {}, function(i, T) {
            i.setTime(+i + T)
        }, function(i, T) {
            return T - i
        });
        kE.every = function(e) {
            return e = Math.floor(e),
            isFinite(e) && e > 0 ? e > 1 ? kJ(function(i) {
                i.setTime(Math.floor(i / e) * e)
            }, function(i, T) {
                i.setTime(+i + T * e)
            }, function(i, T) {
                return (T - i) / e
            }) : kE : null
        }
        ;
        var kN = kE.range
          , kL = 1000
          , ks = 60000
          , kI = 3600000
          , kA = 86400000
          , kG = 604800000
          , jU = kJ(function(e) {
            e.setTime(Math.floor(e / kL) * kL)
        }, function(i, T) {
            i.setTime(+i + T * kL)
        }, function(i, T) {
            return (T - i) / kL
        }, function(e) {
            return e.getUTCSeconds()
        })
          , kK = jU.range
          , kz = kJ(function(e) {
            e.setTime(Math.floor(e / ks) * ks)
        }, function(i, T) {
            i.setTime(+i + T * ks)
        }, function(i, T) {
            return (T - i) / ks
        }, function(e) {
            return e.getMinutes()
        })
          , j2 = kz.range
          , km = kJ(function(i) {
            var T = i.getTimezoneOffset() * ks % kI;
            0 > T && (T += kI),
            i.setTime(Math.floor((+i - T) / kI) * kI + T)
        }, function(i, T) {
            i.setTime(+i + T * kI)
        }, function(i, T) {
            return (T - i) / kI
        }, function(e) {
            return e.getHours()
        })
          , kF = km.range
          , kc = kJ(function(e) {
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setDate(i.getDate() + T)
        }, function(i, T) {
            return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * ks) / kA
        }, function(e) {
            return e.getDate() - 1
        })
          , jT = kc.range
          , j9 = ky(0)
          , kb = ky(1)
          , jP = ky(2)
          , j7 = ky(3)
          , jW = ky(4)
          , kp = ky(5)
          , kw = ky(6)
          , jR = j9.range
          , ko = kb.range
          , j0 = jP.range
          , kl = j7.range
          , kB = jW.range
          , kn = kp.range
          , kM = kw.range
          , kD = kJ(function(e) {
            e.setDate(1),
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setMonth(i.getMonth() + T)
        }, function(i, T) {
            return T.getMonth() - i.getMonth() + 12 * (T.getFullYear() - i.getFullYear())
        }, function(e) {
            return e.getMonth()
        })
          , kO = kD.range
          , j6 = kJ(function(e) {
            e.setMonth(0, 1),
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setFullYear(i.getFullYear() + T)
        }, function(i, T) {
            return T.getFullYear() - i.getFullYear()
        }, function(e) {
            return e.getFullYear()
        });
        j6.every = function(e) {
            return isFinite(e = Math.floor(e)) && e > 0 ? kJ(function(i) {
                i.setFullYear(Math.floor(i.getFullYear() / e) * e),
                i.setMonth(0, 1),
                i.setHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setFullYear(i.getFullYear() + T * e)
            }) : null
        }
        ;
        var jZ = j6.range
          , ku = kJ(function(e) {
            e.setUTCSeconds(0, 0)
        }, function(i, T) {
            i.setTime(+i + T * ks)
        }, function(i, T) {
            return (T - i) / ks
        }, function(e) {
            return e.getUTCMinutes()
        })
          , ke = ku.range
          , kd = kJ(function(e) {
            e.setUTCMinutes(0, 0, 0)
        }, function(i, T) {
            i.setTime(+i + T * kI)
        }, function(i, T) {
            return (T - i) / kI
        }, function(e) {
            return e.getUTCHours()
        })
          , ka = kd.range
          , j8 = kJ(function(e) {
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCDate(i.getUTCDate() + T)
        }, function(i, T) {
            return (T - i) / kA
        }, function(e) {
            return e.getUTCDate() - 1
        })
          , j5 = j8.range
          , j4 = kq(0)
          , j3 = kq(1)
          , j1 = kq(2)
          , jY = kq(3)
          , jX = kq(4)
          , jS = kq(5)
          , jQ = kq(6)
          , jO = j4.range
          , kk = j3.range
          , kH = j1.range
          , kv = jY.range
          , kC = jX.range
          , kj = jS.range
          , ki = jQ.range
          , kh = kJ(function(e) {
            e.setUTCDate(1),
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCMonth(i.getUTCMonth() + T)
        }, function(i, T) {
            return T.getUTCMonth() - i.getUTCMonth() + 12 * (T.getUTCFullYear() - i.getUTCFullYear())
        }, function(e) {
            return e.getUTCMonth()
        })
          , kg = kh.range
          , jV = kJ(function(e) {
            e.setUTCMonth(0, 1),
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCFullYear(i.getUTCFullYear() + T)
        }, function(i, T) {
            return T.getUTCFullYear() - i.getUTCFullYear()
        }, function(e) {
            return e.getUTCFullYear()
        });
        jV.every = function(e) {
            return isFinite(e = Math.floor(e)) && e > 0 ? kJ(function(i) {
                i.setUTCFullYear(Math.floor(i.getUTCFullYear() / e) * e),
                i.setUTCMonth(0, 1),
                i.setUTCHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setUTCFullYear(i.getUTCFullYear() + T * e)
            }) : null
        }
        ;
        var kf = jV.range;
        kr.timeInterval = kJ,
        kr.timeMillisecond = kE,
        kr.timeMilliseconds = kN,
        kr.utcMillisecond = kE,
        kr.utcMilliseconds = kN,
        kr.timeSecond = jU,
        kr.timeSeconds = kK,
        kr.utcSecond = jU,
        kr.utcSeconds = kK,
        kr.timeMinute = kz,
        kr.timeMinutes = j2,
        kr.timeHour = km,
        kr.timeHours = kF,
        kr.timeDay = kc,
        kr.timeDays = jT,
        kr.timeWeek = j9,
        kr.timeWeeks = jR,
        kr.timeSunday = j9,
        kr.timeSundays = jR,
        kr.timeMonday = kb,
        kr.timeMondays = ko,
        kr.timeTuesday = jP,
        kr.timeTuesdays = j0,
        kr.timeWednesday = j7,
        kr.timeWednesdays = kl,
        kr.timeThursday = jW,
        kr.timeThursdays = kB,
        kr.timeFriday = kp,
        kr.timeFridays = kn,
        kr.timeSaturday = kw,
        kr.timeSaturdays = kM,
        kr.timeMonth = kD,
        kr.timeMonths = kO,
        kr.timeYear = j6,
        kr.timeYears = jZ,
        kr.utcMinute = ku,
        kr.utcMinutes = ke,
        kr.utcHour = kd,
        kr.utcHours = ka,
        kr.utcDay = j8,
        kr.utcDays = j5,
        kr.utcWeek = j4,
        kr.utcWeeks = jO,
        kr.utcSunday = j4,
        kr.utcSundays = jO,
        kr.utcMonday = j3,
        kr.utcMondays = kk,
        kr.utcTuesday = j1,
        kr.utcTuesdays = kH,
        kr.utcWednesday = jY,
        kr.utcWednesdays = kv,
        kr.utcThursday = jX,
        kr.utcThursdays = kC,
        kr.utcFriday = jS,
        kr.utcFridays = kj,
        kr.utcSaturday = jQ,
        kr.utcSaturdays = ki,
        kr.utcMonth = kh,
        kr.utcMonths = kg,
        kr.utcYear = jV,
        kr.utcYears = kf,
        Object.defineProperty(kr, "__esModule", {
            value: !0
        })
    });
    function eT(e) {
        this._elemType = e;
        this._objCollection = {}
    }
    eT.prototype.get = function() {
        var i = null;
        for (var e in this._objCollection) {
            if (this._objCollection[e] && this._objCollection[e]._free === true) {
                this._objCollection[e]._free = false;
                return this._objCollection[e]
            }
        }
        i = bT(this._elemType);
        e = bw.getGUID("obj_pool_");
        this._objCollection[e] = i;
        return i
    }
    ;
    eT.prototype.free = function(e) {
        if (!e) {
            return
        }
        e._free = true;
        if (e.tagName.toLowerCase() === "img") {
            e.src = "";
            e.crossOrigin = null;
            e.onload = e.onerror = null
        }
    }
    ;
    eT.prototype.clear = function() {
        for (var e in this._objCollection) {
            if (this._objCollection[e] && this._objCollection[e].tagName.toLowerCase === "img") {
                this._objCollection[e].onload = this._objCollection[e].onerror = null
            }
        }
        this._objCollection = {}
    }
    ;
    var hM = {
        get: function(i, jP, e, T) {
            var jO = new XMLHttpRequest();
            jO.open("GET", i, true);
            jO.timeout = 10000;
            jO.ontimeout = function() {
                T && T()
            }
            ;
            jO.onreadystatechange = function(jQ) {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        jP && jP(jO.responseText)
                    } else {
                        e && e()
                    }
                }
            }
            ;
            jO.send()
        },
        post: function(i, jQ, jP, e, T) {
            var jO = new XMLHttpRequest();
            jO.open("POST", i, true);
            jO.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            jO.timeout = 10000;
            jO.ontimeout = function() {
                T && T()
            }
            ;
            jO.onreadystatechange = function(jR) {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        jP && jP(jO.responseText, jQ)
                    } else {
                        e && e()
                    }
                }
            }
            ;
            jO.send(jQ);
            return jO
        }
    };
    var gw = (function(e) {
        function i(jQ, T, jP) {
            if (jQ.indexOf("v=") === -1) {
                jQ += "&v=gl"
            }
            var jO = bT("script", {
                src: jQ,
                type: "text/javascript",
                charset: "utf-8"
            });
            if (jO.addEventListener) {
                jO.addEventListener("load", function(jS) {
                    var jR = jS.target;
                    jR.parentNode.removeChild(jR);
                    T && T()
                }, false);
                jO.addEventListener("error", function(jS) {
                    if (jS) {
                        var jR = jS.target;
                        jR && jR.parentNode && jR.parentNode.removeChild(jR)
                    }
                    jP && jP(null)
                }, false)
            } else {
                if (jO.attachEvent) {
                    jO.attachEvent("onreadystatechange", function(jS) {
                        var jR = window.event.srcElement;
                        if (jR && (jR.readyState === "loaded" || jR.readyState === "complete")) {
                            jR.parentNode.removeChild(jR)
                        }
                        T && T()
                    })
                }
            }
            e.getElementsByTagName("head")[0].appendChild(jO)
        }
        return {
            load: function(jR, T, jO) {
                if (typeof jR === "string") {
                    i(jR, T, jO)
                } else {
                    if (jR.length > 0) {
                        var jQ = jR.length;
                        for (var jP = 0; jP < jQ; jP++) {
                            i(jR[jP], function() {
                                jQ--;
                                if (jQ === 0 && T) {
                                    T()
                                }
                            })
                        }
                    }
                }
            }
        }
    }
    )(window.document);
    function hG() {}
    hG.instances = {};
    hG.getInstance = function(i, T) {
        if (hG.instances[i]) {
            return hG.instances[i]
        }
        var e = new jJ(i,T);
        hG.instances[i] = e;
        return e
    }
    ;
    function jJ(e, i) {
        this._name = e;
        this._baseZoom = 18;
        this._opts = {
            tileSize: 256
        };
        eJ.extend(this._opts, i || {})
    }
    jJ.mapZoomBaseIndex = [8, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 3, 3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0];
    jJ.baseScaleZoom = [19, 17, 15, 12, 10, 9, 7, 5, 3];
    jJ.baseScaleZoomMercatorSize = [512, 2048, 4096, 32768, 65536, 262144, 1048576, 4194304, 8388608];
    jJ.mapZoomBaseZoomMapping = [3, 3, 3, 3, 5, 5, 7, 7, 9, 9, 10, 12, 12, 12, 15, 15, 17, 17, 19, 19, 19, 19, 19, 19, 19, 19];
    jJ.mapZoomStartZoomMapping = [3, 3, 3, 3, 4, 4, 6, 6, 8, 8, 10, 11, 11, 11, 14, 14, 16, 16, 18, 18, 18, 18, 18, 18, 18, 18];
    jJ.baseScaleTileSize = [1024, 1024, 512, 512, 256, 512, 512, 512, 256];
    jJ.mapZoomTileSize = [256, 256, 256, 256, 256, 512, 256, 512, 256, 512, 256, 256, 512, 1024, 256, 512, 512, 1024, 512, 1024, 2048, 4096, 4096 * 2, 4096 * 2 * 2, 4096 * 2 * 2 * 2, 4096 * 2 * 2 * 2 * 2];
    jJ.baseZoomInfo = {
        "3": [3],
        "5": [4, 5],
        "7": [6, 7],
        "9": [8, 9],
        "10": [10],
        "12": [11, 12, 13],
        "15": [14, 15],
        "17": [16, 17],
        "19": [18, 19, 20, 21, 22, 23, 24, 25]
    };
    jJ.prototype = {
        getName: function() {
            return this._name
        },
        getTileSize: function(e) {
            e = Math.floor(e);
            if (e < 3) {
                e = 3
            }
            if (this._name === "na") {
                return jJ.mapZoomTileSize[e]
            }
            return this._opts.tileSize
        },
        getBaseTileSize: function(i) {
            i = Math.floor(i);
            if (this._name === "na") {
                var e = jJ.mapZoomBaseZoomMapping[i];
                return jJ.mapZoomTileSize[e]
            }
            return this._opts.tileSize
        },
        getDataZoom: function(e) {
            e = Math.floor(e);
            if (this._name === "na") {
                return jJ.mapZoomBaseZoomMapping[e]
            }
            return e
        },
        getZoomUnits: function(e) {
            return Math.pow(2, (this._baseZoom - e))
        },
        getMercatorSize: function(T, i) {
            if (this._name === "na") {
                T = Math.floor(T);
                var e = jJ.mapZoomBaseIndex[T];
                return jJ.baseScaleZoomMercatorSize[e]
            }
            return this._opts.tileSize * this.getZoomUnits(i)
        },
        getBaseZoom: function() {
            return this._baseZoom
        },
        getParentTile: function(jO, jU, jT, T, i) {
            if (this._name === "na") {
                var jP = jJ.baseZoomInfo[jT];
                T--;
                if (jP.indexOf(T) > -1) {
                    return {
                        col: jO,
                        row: jU,
                        zoom: jT,
                        useZoom: T
                    }
                } else {
                    var jR = jJ.mapZoomBaseIndex[jT];
                    var jQ = jJ.baseScaleZoom[jR + 1];
                    if (!jQ) {
                        return null
                    }
                    var jS = this.getFactorByZooms(jQ, jT);
                    var e = jJ.baseZoomInfo[jQ];
                    return {
                        col: Math.floor(jO / jS),
                        row: Math.floor(jU / jS),
                        zoom: jQ,
                        useZoom: e[e.length - 1]
                    }
                }
                return null
            }
            if (jT - 1 < i) {
                return null
            }
            return {
                col: Math.floor(jO / 2),
                row: Math.floor(jU / 2),
                zoom: jT - 1,
                useZoom: jT - 1
            }
        },
        getChildTiles: function(jP, jR, e, T, jY, j4) {
            if (this._name === "na") {
                var jO = jJ.baseZoomInfo[e];
                T += j4;
                if (jO.indexOf(T) > -1) {
                    return [{
                        col: jP,
                        row: jR,
                        zoom: e,
                        useZoom: T
                    }]
                } else {
                    var j2 = 0;
                    var jZ = e;
                    while (j2 < j4) {
                        var j3 = jJ.mapZoomBaseIndex[jZ];
                        var jT = jJ.baseScaleZoom[j3 - 1];
                        if (!jT) {
                            return null
                        }
                        var jU = jJ.baseZoomInfo[jT];
                        if (jU[j4 - 1]) {
                            var jV = [];
                            var jX = this.getFactorByZooms(e, jT);
                            var i = jP * jX;
                            var jW = jR * jX;
                            for (var j1 = 0; j1 < jX; j1++) {
                                var jQ = i + j1;
                                for (var j0 = 0; j0 < jX; j0++) {
                                    var jS = jW + j0;
                                    jV.push({
                                        col: jQ,
                                        row: jS,
                                        zoom: jT,
                                        useZoom: jU[j4 - 1]
                                    })
                                }
                            }
                            return jV
                        }
                        j2 += jU.length;
                        if (j4 === jU.length) {
                            jZ = jT
                        }
                    }
                }
                return null
            }
            var jV = [];
            if (e + j4 > jY) {
                return null
            }
            var jX = Math.pow(2, j4);
            var i = jP * jX;
            var jW = jR * jX;
            var jT = e + j4;
            var jV = [];
            for (var j1 = 0; j1 < 2; j1++) {
                var jQ = i + j1;
                for (var j0 = 0; j0 < 2; j0++) {
                    var jS = jW + j0;
                    jV.push({
                        col: jQ,
                        row: jS,
                        zoom: jT,
                        useZoom: jT
                    })
                }
            }
            return jV
        },
        getFactorByZooms: function(i, jO) {
            var T = jJ.mapZoomBaseIndex[i];
            var jP = jJ.mapZoomBaseIndex[jO];
            var e = jJ.baseScaleZoomMercatorSize[T];
            var jQ = jJ.baseScaleZoomMercatorSize[jP];
            return e / jQ
        }
    };
    var cX = {};
    var Z = ["swiftshader", "microsoft basic render driver"];
    var g4 = ["intel", "nvidia", "amd", "apple", "geforce"];
    function gn(e) {
        e = e.toLowerCase();
        if (Z.indexOf(e) >= 0) {
            return true
        }
        if (e.indexOf("mobile") >= 0) {
            return true
        }
        return false
    }
    function ct(T) {
        T = T.toLowerCase();
        for (var e = 0; e < g4.length; e++) {
            if (T.indexOf(g4[e]) >= 0) {
                return true
            }
        }
        return false
    }
    function jH(e) {
        if (!e) {
            return false
        }
        if (gn(e)) {
            return false
        }
        if (ct(e)) {
            return true
        }
        return false
    }
    cX.ifEnableEarth = function(i) {
        var e = cX.ifEnableEarth;
        if (!i && typeof e._enable === "boolean") {
            return e._enable
        }
        if (cX.ifSupportWebGL()) {
            e._enable = true;
            return true
        }
        e._enable = false;
        return false
    }
    ;
    cX.ifEnableWebGLMap = function(i) {
        var e = cX.ifEnableWebGLMap;
        if (!i && typeof e._enable === "boolean") {
            return e._enable
        }
        if (cX.ifSupportWebGL()) {
            if (aH.inMapHost) {
                e._enable = true;
                return true
            } else {
                if (window.Blob || window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder) {
                    e._enable = true;
                    return true
                } else {
                    e._enable = false;
                    return false
                }
            }
        }
        e._enable = false;
        return false
    }
    ;
    cX.params = {};
    cX.ifSupportWebGL = function() {
        var i = cX.ifSupportWebGL;
        if (typeof i._supportWebGL === "boolean") {
            return i._supportWebGL
        }
        if (!window.WebGLRenderingContext) {
            i._supportWebGL = false;
            return false
        }
        var T = document.createElement("canvas");
        T.width = 300;
        T.height = 150;
        var jP = null;
        var jV = {
            alpha: true,
            antialias: false,
            failIfMajorPerformanceCaveat: false,
            preserveDrawingBuffer: false,
            stencil: false
        };
        try {
            jP = T.getContext("webgl", jV) || T.getContext("experimental-webgl", jV)
        } catch (jR) {
            i._supportWebGL = false
        }
        if (jP === null) {
            i._supportWebGL = false
        } else {
            i._supportWebGL = true;
            var jT = jP.getExtension("WEBGL_debug_renderer_info");
            var jS = "";
            if (jT) {
                jS = jP.getParameter(jT.UNMASKED_RENDERER_WEBGL);
                if (jH(jS) === true) {
                    i._supportWebGL = true
                }
                var jU = jP.getParameter(jT.UNMASKED_VENDOR_WEBGL);
                i._renderer = jS;
                i._vendor = jU
            }
            if (!jT && eJ.Browser.firefox) {
                i._supportWebGL = true
            }
            if (!jT && eJ.Platform.macintosh) {
                i._supportWebGL = true
            }
            if (jP.drawingBufferWidth !== T.width || jP.drawingBufferHeight !== T.height) {
                i._supportWebGL = false
            }
            if (jP.getParameter(jP.MAX_VERTEX_TEXTURE_IMAGE_UNITS) < 4) {
                i._supportWebGL = false
            }
            var jO = jP.getParameter(jP.MAX_TEXTURE_SIZE);
            cX.params.maxTextureSize = jO;
            if (jO < 4096) {
                i._supportWebGL = false
            }
            var jQ = jP.getParameter(jP.MAX_TEXTURE_IMAGE_UNITS);
            if (jQ < 8) {
                i._supportWebGL = false
            }
            if (!jP.getShaderPrecisionFormat || jP.getShaderPrecisionFormat(jP.FRAGMENT_SHADER, jP.HIGH_FLOAT).precision < 23) {
                i._supportWebGL = false
            }
        }
        return i._supportWebGL
    }
    ;
    cX.ifSupportCanvas2d = function() {
        var jP = cX.ifSupportCanvas2d;
        if (typeof jP.supportCanvas2d === "boolean") {
            return jP.supportCanvas2d
        }
        var T = document.createElement("canvas");
        var i = null;
        try {
            i = T.getContext("2d")
        } catch (jO) {
            jP.supportCanvas2d = false
        }
        if (i === null) {
            jP.supportCanvas2d = false
        } else {
            jP.supportCanvas2d = true
        }
        return jP.supportCanvas2d
    }
    ;
    cX.ifCanvas2dInBlackList = function() {
        return true
    }
    ;
    cX.ifEnableCanvas2dMap = function() {
        return false;
        var i = navigator.userAgent;
        var e = 0;
        var jO = 0;
        var jP = 0;
        if (/macintosh/ig.test(i)) {
            var T = 0;
            if (/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(i) && !/chrome/i.test(i)) {
                T = parseInt((RegExp["\x241"] || RegExp["\x242"]), 10)
            }
            if (T > 0) {
                return false
            }
            return true
        }
        if (/windows nt (\d+\.\d)/ig.test(i)) {
            jO = parseFloat(RegExp.$1);
            if (jO >= 6.1) {
                if (/chrome\/(\d+\.\d)/i.test(i)) {
                    e = parseFloat(RegExp.$1);
                    if (e >= 31) {
                        return true
                    }
                }
                if (/MSIE (\d+(\.\d+)?)/.test(i)) {
                    jP = parseFloat(RegExp.$1);
                    if (jP >= 10) {
                        return true
                    }
                }
                if (/Firefox/.test(i)) {
                    return true
                }
                if (/rv:11.0/ig.test(i)) {
                    return true
                }
                if (/edge/ig.test(i)) {
                    return true
                }
            }
        }
        return false
    }
    ;
    cX.ifSupportCSS3 = function(jS, i) {
        var jR = document.createElement("div");
        var jQ = "Webkit Moz O ms".split(" ");
        var e = jQ.length;
        var T = "";
        var jO = jR.style;
        if (jS in jO) {
            T = jS
        }
        jS = jS.replace(/^[a-z]/, function(jT) {
            return jT.toUpperCase()
        });
        while (e--) {
            var jP = jQ[e] + jS;
            if (jP in jO) {
                T = jP;
                break
            }
        }
        if (i) {
            return T
        } else {
            return T.length > 0 ? true : false
        }
    }
    ;
    cX.isModernBrowser = cX.ifSupportCanvas2d() && cX.ifSupportCSS3("transform");
    function ay(i, e) {
        this._size = i;
        this._curSize = 0;
        this._cache = {};
        this._least = null;
        this._most = null;
        this._options = {
            clearCallback: null,
            removeOldCallback: null
        };
        e = e || {};
        for (var T in e) {
            this._options[T] = e[T]
        }
        this._getDataTimes = 0;
        this._hitTimes = 0
    }
    ay.prototype.setData = function(jO, jQ) {
        var i = this._cache;
        var T = this._size;
        if (T === 0) {
            return
        }
        var e = this._curSize;
        if (e === T) {
            this._removeOld()
        }
        var jP;
        if (!i[jO]) {
            jP = {
                key: jO,
                data: jQ,
                older: null,
                newwer: null
            };
            i[jO] = jP;
            if (this._least === null) {
                this._least = jP
            }
            if (this._most === null) {
                this._most = jP
            }
            this._curSize++
        } else {
            jP = i[jO];
            jP.data = jQ;
            if (this._most === jP) {
                return
            }
            jP.older && (jP.older.newer = jP.newer);
            jP.newer && (jP.newer.older = jP.older);
            if (this._least === jP) {
                this._least = jP.newer
            }
        }
        if (this._most && this._most !== jP) {
            this._most.newer = jP;
            jP.older = this._most;
            this._most = jP;
            jP.newer = null
        }
    }
    ;
    ay.prototype.getData = function(e) {
        var i = this._cache[e];
        this._getDataTimes++;
        if (i) {
            this._hitTimes++;
            var T = i.data;
            if (this._most === i) {
                return T
            }
            i.older && (i.older.newer = i.newer);
            i.newer && (i.newer.older = i.older);
            if (this._least === i) {
                this._least = i.newer
            }
            this._most.newer = i;
            i.older = this._most;
            i.newer = null;
            this._most = i;
            return T
        }
        return null
    }
    ;
    ay.prototype.getAllData = function() {
        return this._cache
    }
    ;
    ay.prototype.getHitRate = function() {
        return this._hitTimes / this._getDataTimes
    }
    ;
    ay.prototype.removeData = function(i) {
        var e = this._cache;
        var T = e[i];
        if (!T) {
            return
        }
        if (this._options.clearCallback) {
            this._options.clearCallback(T.data, T.key)
        }
        T.older && (T.older.newer = T.newer);
        T.newer && (T.newer.older = T.older);
        if (this._least === T) {
            this._least = T.newer
        }
        if (this._most === T) {
            this._most = T.older
        }
        delete e[i];
        this._curSize--
    }
    ;
    ay.prototype._removeOld = function() {
        var e = this._cache;
        var jO = Math.round(this._size * 0.6);
        var T = 0;
        while (this._least && T < jO) {
            var i = this._least;
            this._least = i.newer;
            i.newer && (i.newer.older = null);
            if (this._options.clearCallback) {
                this._options.clearCallback(i.data, i.key)
            }
            delete e[i.key];
            T++
        }
        this._curSize -= T;
        if (this._options.removeOldCallback) {
            this._options.removeOldCallback()
        }
    }
    ;
    ay.prototype.clear = function() {
        var e = this._cache;
        var i = this._least;
        if (this._options.clearCallback) {
            while (i) {
                this._options.clearCallback(i.data, i.key);
                i = i.newer
            }
        }
        this._least = this._most = null;
        this._cache = {};
        this._curSize = 0
    }
    ;
    ay.prototype.forEach = function(e) {
        var i = this._least;
        while (i) {
            e(i.data);
            i = i.newer
        }
    }
    ;
    ay.prototype.clearExcept = function(i) {
        var e = this._cache;
        var T = this._least;
        while (T) {
            if (!i[T.key]) {
                if (this._options.clearCallback) {
                    this._options.clearCallback(T.data, T.key)
                }
                T.older && (T.older.newer = T.newer);
                T.newer && (T.newer.older = T.older);
                if (this._least === T) {
                    this._least = T.newer
                }
                if (this._most === T) {
                    this._most = T.older
                }
                delete e[T.key];
                this._curSize--
            }
            T = T.newer
        }
    }
    ;
    !function(T, i) {
        "object" == typeof bw && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (T = "undefined" != typeof globalThis ? globalThis : T || self).gcoord = i()
    }(this, (function() {
        var ks = function() {
            return (ks = Object.assign || function(kx) {
                for (var i, T = 1, kz = arguments.length; T < kz; T++) {
                    for (var ky in i = arguments[T]) {
                        Object.prototype.hasOwnProperty.call(i, ky) && (kx[ky] = i[ky])
                    }
                }
                return kx
            }
            ).apply(this, arguments)
        }
          , kd = Math.sin
          , kf = Math.cos
          , kj = Math.sqrt
          , ki = Math.abs
          , kw = Math.PI
          , ko = 6378245
          , kc = 0.006693421622965823;
        function kr(T, i) {
            return T >= 72.004 && T <= 137.8347 && i >= 0.8293 && i <= 55.8271
        }
        function ku(kz, ky) {
            var kC, i, kE, T = (kE = 300 + (kC = kz - 105) + 2 * (i = ky - 35) + 0.1 * kC * kC + 0.1 * kC * i + 0.1 * kj(ki(kC)),
            kE += 2 * (20 * kd(6 * kC * kw) + 20 * kd(2 * kC * kw)) / 3,
            (kE += 2 * (20 * kd(kC * kw) + 40 * kd(kC / 3 * kw)) / 3) + 2 * (150 * kd(kC / 12 * kw) + 300 * kd(kC / 30 * kw)) / 3), kx = function(kH, kG) {
                var kF = 2 * kH - 100 + 3 * kG + 0.2 * kG * kG + 0.1 * kH * kG + 0.2 * kj(ki(kH));
                return kF += 2 * (20 * kd(6 * kH * kw) + 20 * kd(2 * kH * kw)) / 3,
                kF += 2 * (20 * kd(kG * kw) + 40 * kd(kG / 3 * kw)) / 3,
                kF + 2 * (160 * kd(kG / 12 * kw) + 320 * kd(kG * kw / 30)) / 3
            }(kz - 105, ky - 35), kB = ky / 180 * kw, kA = kd(kB), kD = kj(kA = 1 - kc * kA * kA);
            return [T = 180 * T / (ko / kD * kf(kB) * kw), kx = 180 * kx / (ko * (1 - kc) / (kA * kD) * kw)]
        }
        function kl(kx) {
            var i = kx[0]
              , T = kx[1];
            if (!kr(i, T)) {
                return [i, T]
            }
            var ky = ku(i, T);
            return [i + ky[0], T + ky[1]]
        }
        function ke(kz) {
            var kD = kz[0]
              , T = kz[1];
            if (!kr(kD, T)) {
                return [kD, T]
            }
            for (var kx = [kD, T], kB = kx[0], ky = kx[1], kC = kl([kB, ky]), kA = kC[0] - kD, kE = kC[1] - T; ki(kA) > 0.000001 || ki(kE) > 0.000001; ) {
                kA = (kC = kl([kB -= kA, ky -= kE]))[0] - kD,
                kE = kC[1] - T
            }
            return [kB, ky]
        }
        var kp = Math.sin
          , kq = Math.cos
          , jW = Math.atan2
          , kt = Math.sqrt
          , kb = 3000 * Math.PI / 180;
        function kh(kx) {
            var i = kx[0] - 0.0065
              , T = kx[1] - 0.006
              , kz = kt(i * i + T * T) - 0.00002 * kp(T * kb)
              , ky = jW(T, i) - 0.000003 * kq(i * kb);
            return [kz * kq(ky), kz * kp(ky)]
        }
        function j0(kx) {
            var i = kx[0]
              , T = kx[1]
              , kz = kt(i * i + T * T) + 0.00002 * kp(T * kb)
              , ky = jW(T, i) + 0.000003 * kq(i * kb);
            return [kz * kq(ky) + 0.0065, kz * kp(ky) + 0.006]
        }
        var j8 = 180 / Math.PI
          , jR = Math.PI / 180
          , jT = 6378137
          , kv = 20037508.342789244;
        function j5(i) {
            return [i[0] * j8 / jT, (0.5 * Math.PI - 2 * Math.atan(Math.exp(-i[1] / jT))) * j8]
        }
        function kk(kx) {
            var i = Math.abs(kx[0]) <= 180 ? kx[0] : kx[0] - 360 * (kx[0] < 0 ? -1 : 1)
              , T = [jT * i * jR, jT * Math.log(Math.tan(0.25 * Math.PI + 0.5 * kx[1] * jR))];
            return T[0] > kv && (T[0] = kv),
            T[0] < -kv && (T[0] = -kv),
            T[1] > kv && (T[1] = kv),
            T[1] < -kv && (T[1] = -kv),
            T
        }
        var j4, j3, j2, ka, jZ, jO, j9 = Math.abs, km = [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0], jY = [75, 60, 45, 30, 15, 0], jQ = [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]], kn = [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]];
        function jX(ky, T, kx) {
            var kA = j9(T) / kx[9]
              , kz = kx[0] + kx[1] * j9(ky)
              , i = kx[2] + kx[3] * kA + kx[4] * Math.pow(kA, 2) + kx[5] * Math.pow(kA, 3) + kx[6] * Math.pow(kA, 4) + kx[7] * Math.pow(kA, 5) + kx[8] * Math.pow(kA, 6);
            return [kz *= ky < 0 ? -1 : 1, i *= T < 0 ? -1 : 1]
        }
        function kg(kx) {
            for (var i = kx[0], T = kx[1], kz = [], ky = 0; ky < jY.length; ky++) {
                if (j9(T) > jY[ky]) {
                    kz = kn[ky];
                    break
                }
            }
            return jX(i, T, kz)
        }
        function jV(kx) {
            for (var i = kx[0], T = kx[1], kz = [], ky = 0; ky < km.length; ky++) {
                if (T >= km[ky]) {
                    kz = jQ[ky];
                    break
                }
            }
            return jX(i, T, kz)
        }
        function jU(T, i) {
            if (!T) {
                throw new Error(i)
            }
        }
        function j6(i) {
            return !!i && "[object Array]" === Object.prototype.toString.call(i)
        }
        function j1(i) {
            return !isNaN(Number(i)) && null !== i && !j6(i)
        }
        function jS() {
            for (var kx = [], i = 0; i < arguments.length; i++) {
                kx[i] = arguments[i]
            }
            var T = kx.length - 1;
            return function() {
                for (var ky = [], kA = 0; kA < arguments.length; kA++) {
                    ky[kA] = arguments[kA]
                }
                for (var kz = T, e = kx[T].apply(null, ky); kz--; ) {
                    e = kx[kz].call(null, e)
                }
                return e
            }
        }
        function jP(kO, kD, kF) {
            if (void 0 === kF && (kF = !1),
            null !== kO) {
                for (var kI, kH, kR, kK, kC, kN, kQ, kJ, kE = 0, kL = 0, kM = kO.type, ky = "FeatureCollection" === kM, kP = "Feature" === kM, kB = ky ? kO.features.length : 1, kG = 0; kG < kB; kG++) {
                    kC = (kJ = !!(kQ = ky ? kO.features[kG].geometry : kP ? kO.geometry : kO) && "GeometryCollection" === kQ.type) ? kQ.geometries.length : 1;
                    for (var kA = 0; kA < kC; kA++) {
                        var kz = 0
                          , T = 0;
                        if (null !== (kK = kJ ? kQ.geometries[kA] : kQ)) {
                            var kx = kK.type;
                            switch (kE = !kF || "Polygon" !== kx && "MultiPolygon" !== kx ? 0 : 1,
                            kx) {
                            case null:
                                break;
                            case "Point":
                                if (!1 === kD(kN = kK.coordinates, kL, kG, kz, T)) {
                                    return !1
                                }
                                kL++,
                                kz++;
                                break;
                            case "LineString":
                            case "MultiPoint":
                                for (kN = kK.coordinates,
                                kI = 0; kI < kN.length; kI++) {
                                    if (!1 === kD(kN[kI], kL, kG, kz, T)) {
                                        return !1
                                    }
                                    kL++,
                                    "MultiPoint" === kx && kz++
                                }
                                "LineString" === kx && kz++;
                                break;
                            case "Polygon":
                            case "MultiLineString":
                                for (kN = kK.coordinates,
                                kI = 0; kI < kN.length; kI++) {
                                    for (kH = 0; kH < kN[kI].length - kE; kH++) {
                                        if (!1 === kD(kN[kI][kH], kL, kG, kz, T)) {
                                            return !1
                                        }
                                        kL++
                                    }
                                    "MultiLineString" === kx && kz++,
                                    "Polygon" === kx && T++
                                }
                                "Polygon" === kx && kz++;
                                break;
                            case "MultiPolygon":
                                for (kN = kK.coordinates,
                                kI = 0; kI < kN.length; kI++) {
                                    for (T = 0,
                                    kH = 0; kH < kN[kI].length; kH++) {
                                        for (kR = 0; kR < kN[kI][kH].length - kE; kR++) {
                                            if (!1 === kD(kN[kI][kH][kR], kL, kG, kz, T)) {
                                                return !1
                                            }
                                            kL++
                                        }
                                        T++
                                    }
                                    kz++
                                }
                                break;
                            case "GeometryCollection":
                                for (kI = 0; kI < kK.geometries.length; kI++) {
                                    if (!1 === jP(kK.geometries[kI], kD, kF)) {
                                        return !1
                                    }
                                }
                                break;
                            default:
                                throw new Error("Unknown Geometry Type")
                            }
                        }
                    }
                }
            }
        }
        !function(i) {
            i.WGS84 = "WGS84",
            i.WGS1984 = "WGS84",
            i.EPSG4326 = "WGS84",
            i.GCJ02 = "GCJ02",
            i.AMap = "GCJ02",
            i.BD09 = "BD09",
            i.BD09LL = "BD09",
            i.Baidu = "BD09",
            i.BMap = "BD09",
            i.BD09MC = "BD09MC",
            i.BD09Meter = "BD09MC",
            i.EPSG3857 = "EPSG3857",
            i.EPSG900913 = "EPSG3857",
            i.EPSG102100 = "EPSG3857",
            i.WebMercator = "EPSG3857",
            i.WM = "EPSG3857"
        }(jO || (jO = {}));
        var j7 = {
            WGS84: {
                to: (j4 = {},
                j4[jO.GCJ02] = kl,
                j4[jO.BD09] = jS(j0, kl),
                j4[jO.BD09MC] = jS(kg, j0, kl),
                j4[jO.EPSG3857] = kk,
                j4)
            },
            GCJ02: {
                to: (j3 = {},
                j3[jO.WGS84] = ke,
                j3[jO.BD09] = j0,
                j3[jO.BD09MC] = jS(kg, j0),
                j3[jO.EPSG3857] = jS(kk, ke),
                j3)
            },
            BD09: {
                to: (j2 = {},
                j2[jO.WGS84] = jS(ke, kh),
                j2[jO.GCJ02] = kh,
                j2[jO.EPSG3857] = jS(kk, ke, kh),
                j2[jO.BD09MC] = kg,
                j2)
            },
            EPSG3857: {
                to: (ka = {},
                ka[jO.WGS84] = j5,
                ka[jO.GCJ02] = jS(kl, j5),
                ka[jO.BD09] = jS(j0, kl, j5),
                ka[jO.BD09MC] = jS(kg, j0, kl, j5),
                ka)
            },
            BD09MC: {
                to: (jZ = {},
                jZ[jO.WGS84] = jS(ke, kh, jV),
                jZ[jO.GCJ02] = jS(kh, jV),
                jZ[jO.EPSG3857] = jS(kk, ke, kh, jV),
                jZ[jO.BD09] = jV,
                jZ)
            }
        };
        return ks(ks({}, jO), {
            CRSTypes: jO,
            transform: function(kB, kz, kA) {
                if (jU(!!kB, "The args[0] input coordinate is required"),
                jU(!!kz, "The args[1] original coordinate system is required"),
                jU(!!kA, "The args[2] target coordinate system is required"),
                kz === kA) {
                    return kB
                }
                var kD = j7[kz];
                jU(!!kD, "Invalid original coordinate system: " + kz);
                var kC = kD.to[kA];
                jU(!!kC, "Invalid target coordinate system: " + kA);
                var T = typeof kB;
                if (jU("string" === T || "object" === T, "Invalid input coordinate type: " + T),
                "string" === T) {
                    try {
                        kB = JSON.parse(kB)
                    } catch (kz) {
                        throw new Error("Invalid input coordinate: " + kB)
                    }
                }
                var ky = !1;
                j6(kB) && (jU(kB.length >= 2, "Invalid input coordinate: " + kB),
                jU(j1(kB[0]) && j1(kB[1]), "Invalid input coordinate: " + kB),
                kB = kB.map(Number),
                ky = !0);
                var kx = kC;
                return ky ? kx(kB) : (jP(kB, (function(kE) {
                    var i;
                    i = kx(kE),
                    kE[0] = i[0],
                    kE[1] = i[1]
                }
                )),
                kB)
            }
        })
    }
    ));
    var hi = {
        ColorRefTable: {
            aliceblue: ["#f0f8ff", "rgb(240,248,255)"],
            antiquewhite: ["#faebd7", "rgb(250,235,215)"],
            aqua: ["#00ffff", "rgb(0,255,255)"],
            aquamarine: ["#7fffd4", "rgb(127,255,212)"],
            azure: ["#f0ffff", "rgb(240,255,255)"],
            beige: ["#f5f5dc", "rgb(245,245,220)"],
            bisque: ["#ffe4c4", "rgb(255,228,196)"],
            black: ["#000000", "rgb(0,0,0)"],
            blanchedalmond: ["#ffebcd", "rgb(255,235,205)"],
            blue: ["#0000ff", "rgb(0,0,255)"],
            blueviolet: ["#8a2be2", "rgb(138,43,226)"],
            brown: ["#a52a2a", "rgb(165,42,42)"],
            burlywood: ["#deb887", "rgb(222,184,135)"],
            cadetblue: ["#5f9ea0", "rgb(95,158,160)"],
            chartreuse: ["#7fff00", "rgb(127,255,0)"],
            chocolate: ["#d2691e", "rgb(210,105,30)"],
            coral: ["#ff7f50", "rgb(255,127,80)"],
            cornflowerblue: ["#6495ed", "rgb(100,149,237)"],
            cornsilk: ["#fff8dc", "rgb(255,248,220)"],
            crimson: ["#dc143c", "rgb(220,20,60)"],
            cyan: ["#00ffff", "rgb(0,255,255)"],
            darkblue: ["#00008b", "rgb(0,0,139)"],
            darkcyan: ["#008b8b", "rgb(0,139,139)"],
            darkgoldenrod: ["#b8860b", "rgb(184,134,11)"],
            darkgray: ["#a9a9a9", "rgb(169,169,169)"],
            darkgreen: ["#006400", "rgb(0,100,0)"],
            darkgrey: ["#a9a9a9", "rgb(169,169,169)"],
            darkkhaki: ["#bdb76b", "rgb(189,183,107)"],
            darkmagenta: ["#8b008b", "rgb(139,0,139)"],
            darkolivegreen: ["#556b2f", "rgb(85,107,47)"],
            darkorange: ["#ff8c00", "rgb(255,140,0)"],
            darkorchid: ["#9932cc", "rgb(153,50,204)"],
            darkred: ["#8b0000", "rgb(139,0,0)"],
            darksalmon: ["#e9967a", "rgb(233,150,122)"],
            darkseagreen: ["#8fbc8f", "rgb(143,188,143)"],
            darkslateblue: ["#483d8b", "rgb(72,61,139)"],
            darkslategray: ["#2f4f4f", "rgb(47,79,79)"],
            darkslategrey: ["#2f4f4f", "rgb(47,79,79)"],
            darkturquoise: ["#00ced1", "rgb(0,206,209)"],
            darkviolet: ["#9400d3", "rgb(148,0,211)"],
            deeppink: ["#ff1493", "rgb(255,20,147)"],
            deepskyblue: ["#00bfff", "rgb(0,191,255)"],
            dimgray: ["#696969", "rgb(105,105,105)"],
            dimgrey: ["#696969", "rgb(105,105,105)"],
            dodgerblue: ["#1e90ff", "rgb(30,144,255)"],
            firebrick: ["#b22222", "rgb(178,34,34)"],
            floralwhite: ["#fffaf0", "rgb(255,250,240)"],
            forestgreen: ["#228b22", "rgb(34,139,34)"],
            fuchsia: ["#ff00ff", "rgb(255,0,255)"],
            gainsboro: ["#dcdcdc", "rgb(220,220,220)"],
            ghostwhite: ["#f8f8ff", "rgb(248,248,255)"],
            gold: ["#ffd700", "rgb(255,215,0)"],
            goldenrod: ["#daa520", "rgb(218,165,32)"],
            gray: ["#808080", "rgb(128,128,128)"],
            green: ["#008000", "rgb(0,128,0)"],
            greenyellow: ["#adff2f", "rgb(173,255,47)"],
            grey: ["#808080", "rgb(128,128,128)"],
            honeydew: ["#f0fff0", "rgb(240,255,240)"],
            hotpink: ["#ff69b4", "rgb(255,105,180)"],
            indianred: ["#cd5c5c", "rgb(205,92,92)"],
            indigo: ["#4b0082", "rgb(75,0,130)"],
            ivory: ["#fffff0", "rgb(255,255,240)"],
            khaki: ["#f0e68c", "rgb(240,230,140)"],
            lavender: ["#e6e6fa", "rgb(230,230,250)"],
            lavenderblush: ["#fff0f5", "rgb(255,240,245)"],
            lawngreen: ["#7cfc00", "rgb(124,252,0)"],
            lemonchiffon: ["#fffacd", "rgb(255,250,205)"],
            lightblue: ["#add8e6", "rgb(173,216,230)"],
            lightcoral: ["#f08080", "rgb(240,128,128)"],
            lightcyan: ["#e0ffff", "rgb(224,255,255)"],
            lightgoldenrodyellow: ["#fafad2", "rgb(250,250,210)"],
            lightgray: ["#d3d3d3", "rgb(211,211,211)"],
            lightgreen: ["#90ee90", "rgb(144,238,144)"],
            lightgrey: ["#d3d3d3", "rgb(211,211,211)"],
            lightpink: ["#ffb6c1", "rgb(255,182,193)"],
            lightsalmon: ["#ffa07a", "rgb(255,160,122)"],
            lightseagreen: ["#20b2aa", "rgb(32,178,170)"],
            lightskyblue: ["#87cefa", "rgb(135,206,250)"],
            lightslategray: ["#778899", "rgb(119,136,153)"],
            lightslategrey: ["#778899", "rgb(119,136,153)"],
            lightsteelblue: ["#b0c4de", "rgb(176,196,222)"],
            lightyellow: ["#ffffe0", "rgb(255,255,224)"],
            lime: ["#00ff00", "rgb(0,255,0)"],
            limegreen: ["#32cd32", "rgb(50,205,50)"],
            linen: ["#faf0e6", "rgb(250,240,230)"],
            magenta: ["#ff00ff", "rgb(255,0,255)"],
            maroon: ["#800000", "rgb(128,0,0)"],
            mediumaquamarine: ["#66cdaa", "rgb(102,205,170)"],
            mediumblue: ["#0000cd", "rgb(0,0,205)"],
            mediumorchid: ["#ba55d3", "rgb(186,85,211)"],
            mediumpurple: ["#9370db", "rgb(147,112,219)"],
            mediumseagreen: ["#3cb371", "rgb(60,179,113)"],
            mediumslateblue: ["#7b68ee", "rgb(123,104,238)"],
            mediumspringgreen: ["#00fa9a", "rgb(0,250,154)"],
            mediumturquoise: ["#48d1cc", "rgb(72,209,204)"],
            mediumvioletred: ["#c71585", "rgb(199,21,133)"],
            midnightblue: ["#191970", "rgb(25,25,112)"],
            mintcream: ["#f5fffa", "rgb(245,255,250)"],
            mistyrose: ["#ffe4e1", "rgb(255,228,225)"],
            moccasin: ["#ffe4b5", "rgb(255,228,181)"],
            navajowhite: ["#ffdead", "rgb(255,222,173)"],
            navy: ["#000080", "rgb(0,0,128)"],
            oldlace: ["#fdf5e6", "rgb(253,245,230)"],
            olive: ["#808000", "rgb(128,128,0)"],
            olivedrab: ["#6b8e23", "rgb(107,142,35)"],
            orange: ["#ffa500", "rgb(255,165,0)"],
            orangered: ["#ff4500", "rgb(255,69,0)"],
            orchid: ["#da70d6", "rgb(218,112,214)"],
            palegoldenrod: ["#eee8aa", "rgb(238,232,170)"],
            palegreen: ["#98fb98", "rgb(152,251,152)"],
            paleturquoise: ["#afeeee", "rgb(175,238,238)"],
            palevioletred: ["#db7093", "rgb(219,112,147)"],
            papayawhip: ["#ffefd5", "rgb(255,239,213)"],
            peachpuff: ["#ffdab9", "rgb(255,218,185)"],
            peru: ["#cd853f", "rgb(205,133,63)"],
            pink: ["#ffc0cb", "rgb(255,192,203)"],
            plum: ["#dda0dd", "rgb(221,160,221)"],
            powderblue: ["#b0e0e6", "rgb(176,224,230)"],
            purple: ["#800080", "rgb(128,0,128)"],
            red: ["#ff0000", "rgb(255,0,0)"],
            rosybrown: ["#bc8f8f", "rgb(188,143,143)"],
            royalblue: ["#4169e1", "rgb(65,105,225)"],
            saddlebrown: ["#8b4513", "rgb(139,69,19)"],
            salmon: ["#fa8072", "rgb(250,128,114)"],
            sandybrown: ["#f4a460", "rgb(244,164,96)"],
            seagreen: ["#2e8b57", "rgb(46,139,87)"],
            seashell: ["#fff5ee", "rgb(255,245,238)"],
            sienna: ["#a0522d", "rgb(160,82,45)"],
            silver: ["#c0c0c0", "rgb(192,192,192)"],
            skyblue: ["#87ceeb", "rgb(135,206,235)"],
            slateblue: ["#6a5acd", "rgb(106,90,205)"],
            slategray: ["#708090", "rgb(112,128,144)"],
            slategrey: ["#708090", "rgb(112,128,144)"],
            snow: ["#fffafa", "rgb(255,250,250)"],
            springgreen: ["#00ff7f", "rgb(0,255,127)"],
            steelblue: ["#4682b4", "rgb(70,130,180)"],
            tan: ["#d2b48c", "rgb(210,180,140)"],
            teal: ["#008080", "rgb(0,128,128)"],
            thistle: ["#d8bfd8", "rgb(216,191,216)"],
            tomato: ["#ff6347", "rgb(255,99,71)"],
            turquoise: ["#40e0d0", "rgb(64,224,208)"],
            violet: ["#ee82ee", "rgb(238,130,238)"],
            wheat: ["#f5deb3", "rgb(245,222,179)"],
            white: ["#ffffff", "rgb(255,255,255)"],
            whitesmoke: ["#f5f5f5", "rgb(245,245,245)"],
            yellow: ["#ffff00", "rgb(255,255,0)"],
            yellowgreen: ["#9acd32", "rgb(154,205,50)"]
        },
        regGroup: {
            hex: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,
            rgb: /rgb\(\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*\)/,
            rgba: /rgba\(\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(0|1|0\.[1-9])\s*\)/
        },
        parseHexToRgbaArray: function(jQ) {
            var jR = jQ.replace("#", "");
            if (jR.length === 3) {
                jR += "f"
            } else {
                if (jR.length === 6) {
                    jR += "ff"
                }
            }
            var e = [];
            var jP = jR.length;
            var jO = jP === 8 ? 2 : 1;
            for (var T = 0; T < jP; T = T + jO) {
                if (jO === 2) {
                    e.push(parseInt(jR.slice(T, T + 2), 16))
                } else {
                    e.push(parseInt(jR.slice(T, T + 1) + jR.slice(T, T + 1), 16))
                }
            }
            return e
        },
        parseRgbaStrToArray: function(i) {
            var e = [0, 0, 0, 255];
            if (i.indexOf("rgba(") === 0) {
                var jO = i.replace("rgba(", "").replace(")", "");
                var T = jO.split(",");
                e[0] = parseInt(T[0], 10);
                e[1] = parseInt(T[1], 10);
                e[2] = parseInt(T[2], 10);
                e[3] = Math.round(parseFloat(T[3]) * 255)
            } else {
                if (i.indexOf("rgb(") === 0) {
                    var jO = i.replace("rgb(", "").replace(")", "");
                    var jP = jO.split(",");
                    e[0] = parseInt(jP[0], 10);
                    e[1] = parseInt(jP[1], 10);
                    e[2] = parseInt(jP[2], 10);
                    e[3] = 255
                }
            }
            return e
        },
        parseHexAndOpacityToRgbaArray: function(jP, jQ) {
            var T = [];
            var jT = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
            var jS = jP.toLowerCase();
            if (jT.test(jS)) {
                if (jS.length === 4) {
                    var e = "#";
                    for (var jR = 1; jR < 4; jR++) {
                        e += jS.slice(jR, jR + 1).concat(jS.slice(jR, jR + 1))
                    }
                    jS = e
                }
                for (var jO = 1; jO < 7; jO += 2) {
                    T.push(parseInt(jS.slice(jO, jO + 2), 16))
                }
                T.push(jQ)
            }
            return T
        },
        parseCSSColor: function(e) {
            if (e.indexOf("#") === 0) {
                return hi.parseHexToRgbaArray(e)
            }
            return hi.parseRgbaStrToArray(e)
        },
        rgbToHSV: function(jP) {
            var e = jP[0] / 255;
            var T = jP[1] / 255;
            var jQ = jP[2] / 255;
            var jT = Math.max(e, T, jQ);
            var jO = Math.min(e, T, jQ);
            var jS = jT - jO;
            var i;
            if (jS === 0) {
                i = 0
            } else {
                if (jT === e) {
                    i = 60 * (((T - jQ) / jS) % 6)
                } else {
                    if (jT === T) {
                        i = 60 * ((jQ - e) / jS + 2)
                    } else {
                        if (jT === jQ) {
                            i = 60 * ((e - T) / jS + 4)
                        }
                    }
                }
            }
            var jU = jT === 0 ? 0 : (jS / jT);
            var jR = jT;
            while (i < 0) {
                i += 360
            }
            return [i, jU, jR]
        },
        hsvToRGB: function(jO) {
            var jS = jO[2] * jO[1];
            var T = jS * (1 - Math.abs((jO[0] / 60) % 2 - 1));
            var i = jO[2] - jS;
            var jP = jO[0];
            var jR;
            var jQ;
            var e;
            if (jP >= 0 && jP < 60) {
                jR = jS;
                jQ = T;
                e = 0
            } else {
                if (jP >= 60 && jP < 120) {
                    jR = T;
                    jQ = jS;
                    e = 0
                } else {
                    if (jP >= 120 && jP < 180) {
                        jR = 0;
                        jQ = jS;
                        e = T
                    } else {
                        if (jP >= 180 && jP < 240) {
                            jR = 0;
                            jQ = T;
                            e = jS
                        } else {
                            if (jP >= 240 && jP < 300) {
                                jR = T;
                                jQ = 0;
                                e = jS
                            } else {
                                if (jP >= 300 && jP < 360) {
                                    jR = jS;
                                    jQ = 0;
                                    e = T
                                }
                            }
                        }
                    }
                }
            }
            jR = (jR + i) * 255 > 255 ? 255 : (jR + i) * 255;
            jQ = (jQ + i) * 255 > 255 ? 255 : (jQ + i) * 255;
            e = (e + i) * 255 > 255 ? 255 : (e + i) * 255;
            return [Math.round(jR), Math.round(jQ), Math.round(e)]
        },
        formatColorCssToRgbaArray: function(jQ, T, jO) {
            jO = (typeof jO !== "boolean") ? true : jO;
            if (typeof jQ !== "string") {
                return jO ? [0, 0, 0, 1] : [0, 0, 0, 255]
            }
            var i = (jQ || "Black").trim().toLowerCase();
            var e = [];
            var jP = hi.ColorRefTable[i];
            if (jP !== undefined) {
                i = jP[0]
            }
            e = hi.parseCSSColor(i);
            if (T !== undefined && !isNaN(Number(T))) {
                T = Number(T);
                e[3] = hi.fitTo(T, 0, 1)
            } else {
                e[3] = Number((e[3] / 255).toFixed(2))
            }
            if (!jO) {
                e[3] = Math.floor(e[3] * 255)
            }
            return e
        },
        fitTo: function(T, i, e) {
            if (T < i) {
                T = i
            } else {
                if (T > e) {
                    T = e
                }
            }
            return T
        },
        generateColorRamp: function(e, jU, jV, jO, j0) {
            jV = jV || [];
            jO = jO || "#ccc";
            j0 = j0 || 1;
            const T = document.createElement("canvas");
            const j1 = T.getContext("2d");
            T.width = 256;
            T.height = j0;
            const jQ = jU[0];
            const jX = jU[jU.length - 1];
            if (e.length === jU.length) {
                const jY = j1.createLinearGradient(0, 0, 256, 1);
                for (var jT = 0; jT < e.length; ++jT) {
                    var jZ = (jU[jT] - jQ) / (jX - jQ);
                    jY.addColorStop(jZ, e[jT])
                }
                j1.fillStyle = jY;
                j1.fillRect(0, 0, 256, j0)
            } else {
                if (e.length - jU.length === -1) {
                    var jS = 0;
                    var jP = 1;
                    for (var jT = 0; jT < e.length; ++jT) {
                        var jW = (jU[jP] - jQ) / (jX - jQ);
                        var jZ = Math.floor(jW * 256);
                        j1.fillStyle = e[jT];
                        j1.fillRect(jS, 0, jZ, j0);
                        jS = jZ;
                        jP++
                    }
                } else {
                    j1.fillStyle = jO || "#ccc";
                    j1.fillRect(0, 0, 256, j0)
                }
            }
            if (e.length - jU.length <= -1 && jV.length === 2) {
                j1.fillStyle = jO || "#ccc";
                var jW = (jV[0] - jQ) / (jX - jQ);
                var jZ = Math.floor(jW * 256);
                j1.fillRect(0, 0, jZ, j0);
                jW = (jV[1] - jQ) / (jX - jQ);
                jZ = Math.floor(jW * 256);
                j1.fillRect(jZ, 0, 255, j0)
            }
            var jR = new Uint8Array(new Uint8ClampedArray(j1.getImageData(0, 0, 256, j0).data));
            return {
                canvas: T,
                data: jR,
                width: 256,
                height: j0
            }
        },
        validateColor: function(e, i) {
            return hi.regGroup[i].test(e)
        },
        convert2rgba: function(e, i) {
            if (i === undefined) {
                i = 1
            }
            if (hi.validateColor(e, "rgba")) {
                return e
            }
            if (hi.validateColor(e, "rgb")) {
                e = e.replace(/rgb/g, "rgba");
                e = e.replace(/\)/, "," + i + ")");
                return e
            }
            var T = hi.formatColorCssToRgbaArray(e, i, true);
            return "rgba(" + T.join(",") + ")"
        }
    };
    (function(jQ) {
        function j0(j5, j8) {
            var j7 = (j5 & 65535) + (j8 & 65535);
            var j6 = (j5 >> 16) + (j8 >> 16) + (j7 >> 16);
            return (j6 << 16) | (j7 & 65535)
        }
        function jZ(j5, j6) {
            return (j5 << j6) | (j5 >>> (32 - j6))
        }
        function jU(ka, j7, j6, j5, j9, j8) {
            return j0(jZ(j0(j0(j7, ka), j0(j5, j8)), j9), j6)
        }
        function e(j7, j6, kb, ka, j5, j9, j8) {
            return jU((j6 & kb) | (~j6 & ka), j7, j6, j5, j9, j8)
        }
        function jR(j7, j6, kb, ka, j5, j9, j8) {
            return jU((j6 & ka) | (kb & ~ka), j7, j6, j5, j9, j8)
        }
        function jX(j7, j6, kb, ka, j5, j9, j8) {
            return jU(j6 ^ kb ^ ka, j7, j6, j5, j9, j8)
        }
        function j3(j7, j6, kb, ka, j5, j9, j8) {
            return jU(kb ^ (j6 | ~ka), j7, j6, j5, j9, j8)
        }
        function T(kf, ka) {
            kf[ka >> 5] |= 128 << (ka % 32);
            kf[((ka + 64) >>> 9 << 4) + 14] = ka;
            var j7;
            var j9;
            var j8;
            var j6;
            var j5;
            var ke = 1732584193;
            var kd = -271733879;
            var kc = -1732584194;
            var kb = 271733878;
            for (j7 = 0; j7 < kf.length; j7 += 16) {
                j9 = ke;
                j8 = kd;
                j6 = kc;
                j5 = kb;
                ke = e(ke, kd, kc, kb, kf[j7], 7, -680876936);
                kb = e(kb, ke, kd, kc, kf[j7 + 1], 12, -389564586);
                kc = e(kc, kb, ke, kd, kf[j7 + 2], 17, 606105819);
                kd = e(kd, kc, kb, ke, kf[j7 + 3], 22, -1044525330);
                ke = e(ke, kd, kc, kb, kf[j7 + 4], 7, -176418897);
                kb = e(kb, ke, kd, kc, kf[j7 + 5], 12, 1200080426);
                kc = e(kc, kb, ke, kd, kf[j7 + 6], 17, -1473231341);
                kd = e(kd, kc, kb, ke, kf[j7 + 7], 22, -45705983);
                ke = e(ke, kd, kc, kb, kf[j7 + 8], 7, 1770035416);
                kb = e(kb, ke, kd, kc, kf[j7 + 9], 12, -1958414417);
                kc = e(kc, kb, ke, kd, kf[j7 + 10], 17, -42063);
                kd = e(kd, kc, kb, ke, kf[j7 + 11], 22, -1990404162);
                ke = e(ke, kd, kc, kb, kf[j7 + 12], 7, 1804603682);
                kb = e(kb, ke, kd, kc, kf[j7 + 13], 12, -40341101);
                kc = e(kc, kb, ke, kd, kf[j7 + 14], 17, -1502002290);
                kd = e(kd, kc, kb, ke, kf[j7 + 15], 22, 1236535329);
                ke = jR(ke, kd, kc, kb, kf[j7 + 1], 5, -165796510);
                kb = jR(kb, ke, kd, kc, kf[j7 + 6], 9, -1069501632);
                kc = jR(kc, kb, ke, kd, kf[j7 + 11], 14, 643717713);
                kd = jR(kd, kc, kb, ke, kf[j7], 20, -373897302);
                ke = jR(ke, kd, kc, kb, kf[j7 + 5], 5, -701558691);
                kb = jR(kb, ke, kd, kc, kf[j7 + 10], 9, 38016083);
                kc = jR(kc, kb, ke, kd, kf[j7 + 15], 14, -660478335);
                kd = jR(kd, kc, kb, ke, kf[j7 + 4], 20, -405537848);
                ke = jR(ke, kd, kc, kb, kf[j7 + 9], 5, 568446438);
                kb = jR(kb, ke, kd, kc, kf[j7 + 14], 9, -1019803690);
                kc = jR(kc, kb, ke, kd, kf[j7 + 3], 14, -187363961);
                kd = jR(kd, kc, kb, ke, kf[j7 + 8], 20, 1163531501);
                ke = jR(ke, kd, kc, kb, kf[j7 + 13], 5, -1444681467);
                kb = jR(kb, ke, kd, kc, kf[j7 + 2], 9, -51403784);
                kc = jR(kc, kb, ke, kd, kf[j7 + 7], 14, 1735328473);
                kd = jR(kd, kc, kb, ke, kf[j7 + 12], 20, -1926607734);
                ke = jX(ke, kd, kc, kb, kf[j7 + 5], 4, -378558);
                kb = jX(kb, ke, kd, kc, kf[j7 + 8], 11, -2022574463);
                kc = jX(kc, kb, ke, kd, kf[j7 + 11], 16, 1839030562);
                kd = jX(kd, kc, kb, ke, kf[j7 + 14], 23, -35309556);
                ke = jX(ke, kd, kc, kb, kf[j7 + 1], 4, -1530992060);
                kb = jX(kb, ke, kd, kc, kf[j7 + 4], 11, 1272893353);
                kc = jX(kc, kb, ke, kd, kf[j7 + 7], 16, -155497632);
                kd = jX(kd, kc, kb, ke, kf[j7 + 10], 23, -1094730640);
                ke = jX(ke, kd, kc, kb, kf[j7 + 13], 4, 681279174);
                kb = jX(kb, ke, kd, kc, kf[j7], 11, -358537222);
                kc = jX(kc, kb, ke, kd, kf[j7 + 3], 16, -722521979);
                kd = jX(kd, kc, kb, ke, kf[j7 + 6], 23, 76029189);
                ke = jX(ke, kd, kc, kb, kf[j7 + 9], 4, -640364487);
                kb = jX(kb, ke, kd, kc, kf[j7 + 12], 11, -421815835);
                kc = jX(kc, kb, ke, kd, kf[j7 + 15], 16, 530742520);
                kd = jX(kd, kc, kb, ke, kf[j7 + 2], 23, -995338651);
                ke = j3(ke, kd, kc, kb, kf[j7], 6, -198630844);
                kb = j3(kb, ke, kd, kc, kf[j7 + 7], 10, 1126891415);
                kc = j3(kc, kb, ke, kd, kf[j7 + 14], 15, -1416354905);
                kd = j3(kd, kc, kb, ke, kf[j7 + 5], 21, -57434055);
                ke = j3(ke, kd, kc, kb, kf[j7 + 12], 6, 1700485571);
                kb = j3(kb, ke, kd, kc, kf[j7 + 3], 10, -1894986606);
                kc = j3(kc, kb, ke, kd, kf[j7 + 10], 15, -1051523);
                kd = j3(kd, kc, kb, ke, kf[j7 + 1], 21, -2054922799);
                ke = j3(ke, kd, kc, kb, kf[j7 + 8], 6, 1873313359);
                kb = j3(kb, ke, kd, kc, kf[j7 + 15], 10, -30611744);
                kc = j3(kc, kb, ke, kd, kf[j7 + 6], 15, -1560198380);
                kd = j3(kd, kc, kb, ke, kf[j7 + 13], 21, 1309151649);
                ke = j3(ke, kd, kc, kb, kf[j7 + 4], 6, -145523070);
                kb = j3(kb, ke, kd, kc, kf[j7 + 11], 10, -1120210379);
                kc = j3(kc, kb, ke, kd, kf[j7 + 2], 15, 718787259);
                kd = j3(kd, kc, kb, ke, kf[j7 + 9], 21, -343485551);
                ke = j0(ke, j9);
                kd = j0(kd, j8);
                kc = j0(kc, j6);
                kb = j0(kb, j5)
            }
            return [ke, kd, kc, kb]
        }
        function jY(j6) {
            var j7;
            var j5 = "";
            var j8 = j6.length * 32;
            for (j7 = 0; j7 < j8; j7 += 8) {
                j5 += String.fromCharCode((j6[j7 >> 5] >>> (j7 % 32)) & 255)
            }
            return j5
        }
        function jT(j6) {
            var j8;
            var j5 = [];
            j5[(j6.length >> 2) - 1] = undefined;
            for (j8 = 0; j8 < j5.length; j8 += 1) {
                j5[j8] = 0
            }
            var j7 = j6.length * 8;
            for (j8 = 0; j8 < j7; j8 += 8) {
                j5[j8 >> 5] |= (j6.charCodeAt(j8 / 8) & 255) << (j8 % 32)
            }
            return j5
        }
        function jS(j5) {
            return jY(T(jT(j5), j5.length * 8))
        }
        function j4(j7, ka) {
            var j6;
            var j9 = jT(j7);
            var j5 = [];
            var j8 = [];
            var kb;
            j5[15] = j8[15] = undefined;
            if (j9.length > 16) {
                j9 = T(j9, j7.length * 8)
            }
            for (j6 = 0; j6 < 16; j6 += 1) {
                j5[j6] = j9[j6] ^ 909522486;
                j8[j6] = j9[j6] ^ 1549556828
            }
            kb = T(j5.concat(jT(ka)), 512 + ka.length * 8);
            return jY(T(j8.concat(kb), 512 + 128))
        }
        function j2(j8) {
            var j7 = "0123456789abcdef";
            var j6 = "";
            var j5;
            var j9;
            for (j9 = 0; j9 < j8.length; j9 += 1) {
                j5 = j8.charCodeAt(j9);
                j6 += j7.charAt((j5 >>> 4) & 15) + j7.charAt(j5 & 15)
            }
            return j6
        }
        function jV(j5) {
            return unescape(encodeURIComponent(j5))
        }
        function jO(j5) {
            return jS(jV(j5))
        }
        function jW(j5) {
            return j2(jO(j5))
        }
        function i(j5, j6) {
            return j4(jV(j5), jV(j6))
        }
        function j1(j5, j6) {
            return j2(i(j5, j6))
        }
        function jP(j6, j7, j5) {
            if (!j7) {
                if (!j5) {
                    return jW(j6)
                }
                return jO(j6)
            }
            if (!j5) {
                return j1(j7, j6)
            }
            return i(j7, j6)
        }
        if (typeof define === "function" && define.amd) {
            define(function() {
                return jP
            })
        } else {
            if (typeof module === "object" && module.exports) {
                module.exports = jP
            } else {
                jQ.md5 = jP
            }
        }
    }
    )(this);
    var cD = {
        levels: {
            INFO: "info",
            WARNING: "warning",
            ERROR: "error"
        },
        category: {
            JS: "js",
            RESOURCE: "resource",
            AJAX: "ajax"
        },
        config: {
            jsError: true,
            resourceError: true,
            ajaxError: true
        },
        hosts: "api.map.baidu.com|webmap0.bdimg.com|maponline0.bdimg.com|",
        ignoreUrl: "api.map.baidu.com/images/blank.gif",
        sender: true,
        collections: [],
        sendError: function() {},
        init: function(i, e, T) {
            this.hosts += i ? i : "";
            ap && ap(this.config, e);
            this.sender = true;
            if (T) {
                this.sender = false
            }
            this.hosts = this.urlScope(this.hosts);
            this.sendError = this.notifyError();
            var jO = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
            this.config.jsError && this.handleJavaScriptError(jO);
            this.config.resourceError && this.handleResourceError(jO);
            this.config.ajaxError && this.handleAjaxError(jO)
        },
        handleJavaScriptError: function(T) {
            var e = this;
            var i = T.onerror;
            T.onerror = function(jS, jR, jO, jQ, jP) {
                if (e.isFetch(e.category.JS) && e.hostExit(jR)) {
                    if (jP && jP.stack) {
                        e.sendError({
                            title: jS,
                            msg: jP.stack,
                            category: e.category.JS,
                            level: e.levels.ERROR
                        })
                    } else {
                        if (typeof jS === "string") {
                            e.sendError({
                                title: jS,
                                msg: JSON.stringify({
                                    resourceUrl: jR,
                                    rowNum: jO,
                                    colNum: jQ
                                }),
                                category: "js",
                                level: e.levels.ERROR
                            })
                        }
                    }
                }
                if (i && bP(i)) {
                    i && i.apply(T, arguments)
                }
            }
        },
        handleResourceError: function(i) {
            var e = this;
            i.addEventListener("error", function(jQ) {
                if (jQ) {
                    var jR = jQ.target || jQ.srcElement;
                    var jP = jR instanceof HTMLScriptElement || jR instanceof HTMLLinkElement || jR instanceof HTMLImageElement;
                    if (!jP) {
                        if (!i.onerror) {
                            var T = jQ.filename || null;
                            if (!e.isFetch(e.category.JS) || !e.hostExit(T)) {
                                return
                            }
                            if (jQ.error && jQ.error.stack) {
                                e.sendError({
                                    title: jQ.message,
                                    msg: jQ.error.stack,
                                    category: e.category.JS,
                                    level: e.levels.ERROR
                                })
                            } else {
                                if (typeof jQ.message === "string") {
                                    e.sendError({
                                        title: jQ.message,
                                        msg: JSON.stringify({
                                            resourceUrl: T,
                                            rowNum: jQ.lineno,
                                            colNum: jQ.cowno
                                        }),
                                        category: e.category.JS,
                                        level: e.levels.ERROR
                                    })
                                }
                            }
                        }
                        return
                    }
                    var jO = jR.src || jR.href;
                    if (e.isFetch(e.category.RESOURCE) && e.hostExit(jO)) {
                        e.sendError({
                            title: jR.nodeName,
                            msg: jO,
                            category: e.category.RESOURCE,
                            level: e.levels.ERROR
                        })
                    }
                }
            }, true)
        },
        handleAjaxError: function(jQ) {
            var e = this;
            var jP = jQ.location.protocol;
            if (jP === "file:") {
                return
            }
            if (!jQ.XMLHttpRequest) {
                return
            }
            var i = jQ.XMLHttpRequest;
            var T = i.prototype.send;
            var jO = function(jS) {
                if (jS && jS.currentTarget && jS.currentTarget.status !== 200) {
                    var jR = jS.target.responseURL;
                    if (e.isFetch(e.category.AJAX) && e.hostExit(jR)) {
                        e.sendError({
                            title: jR,
                            msg: JSON.stringify({
                                response: jS.target.response,
                                responseURL: jR,
                                status: jS.target.status,
                                statusText: jS.target.statusText
                            }),
                            category: e.category.AJAX,
                            level: e.levels.ERROR
                        })
                    }
                }
            };
            i.prototype.send = function() {
                if (this["addEventListener"]) {
                    this["addEventListener"]("error", jO);
                    this["addEventListener"]("load", jO);
                    this["addEventListener"]("abort", jO)
                } else {
                    var jR = this["onreadystatechange"];
                    this["onreadystatechange"] = function(jS) {
                        if (this.readyState === 4) {
                            jO(jS)
                        }
                        jR && jR.apply(this, arguments)
                    }
                }
                return T.apply(this, arguments)
            }
        },
        notifyError: function(T) {
            var i = T || 1000;
            this._idleWorkerTicker = (function(jO) {
                return function() {
                    jO.runJob()
                }
            }
            )(this);
            var e = this;
            return function(jP) {
                if (jP.url) {
                    if (!e.isFetch(jP.category)) {
                        return
                    }
                    var jO = jP.url || "";
                    if (!e.hostExit(jO)) {
                        return
                    }
                    delete jP.url
                }
                if (!navigator.onLine) {
                    return
                }
                e.collections.push(jP);
                e.checkJob(i)
            }
        },
        runJob: function() {
            if (this.collections.length === 0) {
                clearInterval(this.idleWork);
                this.idleWork = null;
                return
            }
            var jP = this.collections.slice(0, 2);
            var T = iW(JSON.stringify({
                dataset: jP
            }));
            var jO = new Date().getTime();
            var i = eh.apiIMG + "/blank.gif?product=jsapi&v=gl&l=" + T + "&ak=" + ez + "&t=" + jO;
            if (this.sender) {
                try {
                    var jR = document.createElement("div");
                    jR.style = "width:0;height:0;visibility: hidden;opacity: 0;z-index:-999;background-image: url(" + i + ");";
                    document.querySelector("BODY").appendChild(jR);
                    setTimeout(function() {
                        document.querySelector("BODY").removeChild(jR)
                    })
                } catch (jQ) {}
            }
            this.collections.splice(0, 2);
            if (this.collections.length === 0) {
                clearInterval(this.idleWork);
                this.idleWork = null
            }
        },
        checkJob: function(e) {
            if (!this.idleWork && this._idleWorkerTicker) {
                this.idleWork = setInterval(this._idleWorkerTicker, e)
            }
        },
        urlScope: function(jO) {
            var T = {};
            var jQ = Object.keys(B);
            if (B && jQ.length > 0) {
                for (var jP in B) {
                    if (B[jP] && (typeof B[jP] !== "function")) {
                        T[jP] = B[jP]
                    }
                }
            }
            try {
                var jS = JSON.stringify(T);
                if (jS.length > 2) {
                    return jO + "|" + jS
                } else {
                    return jO
                }
            } catch (jR) {
                return jO
            }
        },
        hostExit: function(i) {
            try {
                if (i && i.indexOf("//") === 0) {
                    i = window.location.protocol + i
                }
                var T = new URL(i);
                if (!T || !T.host) {
                    return false
                }
                var jP = T.host + T.pathname;
                if (this.ignoreUrl.indexOf(jP) === -1 && this.hosts.indexOf(T.host) > -1) {
                    return true
                }
                return false
            } catch (jO) {
                return false
            }
        },
        isFetch: function(e) {
            return this.config[e + "Error"] || false
        }
    };
    bw.fetchDebug = cD;
    var jx = {
        request: function(jW, jS, jO, jZ, jQ) {
            var jT = new Date()["getTime"]();
            var jV = (Math.random() * 100000)["toFixed"](0);
            bw._rd["_cbk" + jV] = function(j0) {
                if (j0.result && j0.result["error"] && j0.result["error"] === 202) {
                    alert("该AK因为恶意行为已经被管理员封禁！");
                    return
                }
                jO = jO || {};
                jW && jW(j0, jO);
                delete bw._rd["_cbk" + jV]
            }
            ;
            jZ = jZ || "";
            var jY;
            var jP;
            if (jO && jO.useEncodeURI) {
                jY = iX(jS, encodeURI);
                jP = iX(jS)
            } else {
                jY = iX(jS, encodeURIComponent);
                jP = iX(jS)
            }
            var i = B.apiHost + "/" + jZ + "?" + jY + "&ie=utf-8&oue=1&fromproduct=jsapi";
            var jU = B.apiHost + "/" + jZ + "?" + jP + "&ie=utf-8&oue=1&fromproduct=jsapi";
            if (!jQ) {
                i += "&res=api";
                jU += "&res=api"
            }
            i += "&callback=" + fe + "._rd._cbk" + jV;
            jU += "&callback=" + fe + "._rd._cbk" + jV;
            var jR = window.___abvk ? window.___abvk : jx.getSeckeyCidItem("SECKEY_ABVK");
            var e = jx.getSeckeyCidItem("BMAP_SECKEY");
            var jX = encodeURIComponent(jR + "," + e);
            var T = jR + "," + e;
            i += "&ak=" + ez + "&v=gl&seckey=" + jX + "&timeStamp=" + jT;
            jU += "&ak=" + ez + "&v=gl&seckey=" + T + "&timeStamp=" + jT;
            i += iZ()(jU);
            gw.load(i)
        },
        getSeckeyCidItem: function(i) {
            if (navigator.cookieEnabled) {
                var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
                var e = document.cookie.match(T);
                if (e) {
                    return unescape(e[2])
                }
                return -1
            }
            if (localStorage) {
                return localStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
            if (sessionStorage) {
                return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
        }
    };
    window.srqtimer = null;
    window.firstTime = true;
    window.srqcount = 0;
    bw._rd = {};
    var c7 = {
        request: function(jR, e) {
            if (e) {
                var jQ = (Math.random() * 100000).toFixed(0);
                BMapGL._rd["_cbk" + jQ] = function(jT) {
                    e && e(jT);
                    delete BMapGL._rd["_cbk" + jQ]
                }
                ;
                jR += "&callback=BMapGL._rd._cbk" + jQ
            }
            function jP(jU) {
                var jT;
                var jV = new RegExp("(^| )" + jU + "=([^;]*)(;|$)");
                if (jT = document.cookie.match(jV)) {
                    return unescape(jT[2])
                } else {
                    return -1
                }
            }
            if (jR.indexOf("v=") === -1) {
                jR += "&v=gl"
            }
            var T = window.___abvk ? window.___abvk : this.getSeckeyCidItem("SECKEY_ABVK");
            var jS = this.getSeckeyCidItem("BMAP_SECKEY");
            var i = encodeURIComponent(T + "," + jS);
            jR += "&seckey=" + i;
            var jO = bT("script", {
                src: jR,
                type: "text/javascript",
                charset: "utf-8"
            });
            if (jO.addEventListener) {
                jO.addEventListener("load", function(jU) {
                    var jT = jU.target;
                    jT.parentNode.removeChild(jT)
                }, false);
                jO.addEventListener("error", function(jT) {
                    e && e([, , , , , ])
                }, false)
            } else {
                if (jO.attachEvent) {
                    jO.attachEvent("onreadystatechange", function(jU) {
                        var jT = window.event.srcElement;
                        if (jT && (jT.readyState == "loaded" || jT.readyState == "complete")) {
                            jT.parentNode.removeChild(jT)
                        }
                    })
                }
            }
            document.getElementsByTagName("head")[0].appendChild(jO);
            jO = null
        },
        getSeckeyCidItem: function(i) {
            if (navigator.cookieEnabled) {
                var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
                var e = document.cookie.match(T);
                if (e) {
                    return unescape(e[2])
                }
                return -1
            }
            if (localStorage) {
                return localStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
            if (sessionStorage) {
                return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
        }
    };
    function gr() {
        this._map = null;
        this._container;
        this._type = "control";
        this.blockInfoWindow = true;
        this._visible = true
    }
    gr.inherits(cZ, "Control");
    eJ.extend(gr.prototype, {
        initialize: function(e) {
            this._map = e;
            if (this._container) {
                if (this._opts && this._opts.container) {
                    this._opts.container.appendChild(this._container)
                } else {
                    e.container.appendChild(this._container)
                }
                return this._container
            }
            return
        },
        _i: function(e) {
            if (!this._container && this.initialize && bP(this.initialize)) {
                this._container = this.initialize(e)
            }
            this._opts = this._opts || {
                printable: false
            };
            this._setStyle();
            this._setPosition();
            if (this._container) {
                this._container._jsobj = this
            }
        },
        _setStyle: function() {
            var i = this._container;
            if (i) {
                var e = i.style;
                e.position = "absolute";
                e.zIndex = this._cZIndex || "10";
                e.MozUserSelect = "none";
                if (!this._opts.printable) {
                    eJ.ac(i, "BMap_noprint")
                }
                eJ.on(i, "contextmenu", g5)
            }
        },
        remove: function() {
            this._map = null;
            if (!this._container) {
                return
            }
            this._container.parentNode && this._container.parentNode.removeChild(this._container);
            this._container._jsobj = null;
            this._container = null
        },
        _render: function(e) {
            if (this._opts && this._opts.container) {
                this._container = bI(this._opts.container, '<div unselectable="on"></div>')
            } else {
                var i = '<div unselectable="on"></div>';
                if (e && e.config.autoSafeArea && cn()) {
                    this._safeAreaContainer = bI(this._map.container, i);
                    this._safeAreaContainer.style.position = "absolute";
                    this._safeAreaContainer.style.bottom = "env(safe-area-inset-bottom)";
                    this._container = bI(this._safeAreaContainer, i)
                } else {
                    this._container = bI(this._map.container, i)
                }
            }
            if (this._visible === false) {
                this._container.style.display = "none"
            }
            return this._container
        },
        _setPosition: function() {
            this.setAnchor(this._opts.anchor)
        },
        setAnchor: function(jO) {
            if (this.anchorFixed || typeof jO !== "number" || isNaN(jO) || jO < BMAP_ANCHOR_TOP_LEFT || jO > BMAP_ANCHOR_BOTTOM_RIGHT) {
                jO = this.defaultAnchor
            }
            this._opts.offset = this._opts.offset || this.defaultOffset;
            var T = this._opts.anchor;
            this._opts.anchor = jO;
            if (!this._container) {
                return
            }
            var jQ = this._container;
            var e = this._opts.offset.width;
            var jP = this._opts.offset.height;
            jQ.style.left = jQ.style.top = jQ.style.right = jQ.style.bottom = "auto";
            switch (jO) {
            case BMAP_ANCHOR_TOP_LEFT:
                jQ.style.top = jP + "px";
                jQ.style.left = e + "px";
                break;
            case BMAP_ANCHOR_TOP_RIGHT:
                jQ.style.top = jP + "px";
                jQ.style.right = e + "px";
                break;
            case BMAP_ANCHOR_BOTTOM_LEFT:
                jQ.style.bottom = jP + "px";
                jQ.style.left = e + "px";
                break;
            case BMAP_ANCHOR_BOTTOM_RIGHT:
                jQ.style.bottom = jP + "px";
                jQ.style.right = e + "px";
                break;
            default:
                break
            }
            var i = ["TL", "TR", "BL", "BR"];
            eJ.rc(this._container, "anchor" + i[T]);
            eJ.ac(this._container, "anchor" + i[jO])
        },
        getAnchor: function() {
            return this._opts.anchor
        },
        setOffset: function(e) {
            if (!e) {
                return
            }
            this._opts = this._opts || {};
            this._opts.offset = new iE(e.width,e.height);
            if (!this._container) {
                return
            }
            this.setAnchor(this._opts.anchor)
        },
        getOffset: function() {
            return this._opts.offset
        },
        getDom: function() {
            return this._container
        },
        show: function() {
            if (this._visible === true) {
                return
            }
            this._visible = true;
            if (this._container) {
                this._container.style.display = ""
            }
            this.dispatchEvent(new fu("onshow"))
        },
        hide: function() {
            if (this._visible === false) {
                return
            }
            this._visible = false;
            if (this._container) {
                this._container.style.display = "none"
            }
            this.dispatchEvent(new fu("onhide"))
        },
        isPrintable: function() {
            return !!this._opts.printable
        },
        isVisible: function() {
            if (!this._container && !this._map) {
                return false
            }
            return !!this._visible
        },
        _asyncLoadCode: function() {
            var e = this;
            gK.load("control", function() {
                if (e._asyncDraw) {
                    e._asyncDraw()
                }
            })
        }
    });
    var d2 = {
        TOP_LEFT: 0,
        TOP_RIGHT: 1,
        BOTTOM_LEFT: 2,
        BOTTOM_RIGHT: 3
    };
    bw.ControlAnchor = d2;
    window.BMAP_ANCHOR_TOP_LEFT = 0;
    window.BMAP_ANCHOR_TOP_RIGHT = 1;
    window.BMAP_ANCHOR_BOTTOM_LEFT = 2;
    window.BMAP_ANCHOR_BOTTOM_RIGHT = 3;
    function fP(e) {
        gr.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        eJ.extend(this._opts, e);
        this._copyrightCollection = [];
        this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
        this.defaultOffset = new iE(5,2);
        this.setAnchor(e.anchor);
        this._canShow = true;
        this.sateMapStyle = false;
        this.blockInfoWindow = false;
        this._asyncLoadCode()
    }
    fP.inherits(gr, "CopyrightControl");
    eJ.extend(fP.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        addCopyright: function(jO) {
            var e = {
                minZoom: 0,
                bounds: null,
                content: "",
                mapType: ""
            };
            for (var T in jO) {
                e[T] = jO[T]
            }
            if (this._map) {
                var jR = e.minZoom;
                if (jR === -1 || jR < this._map.getMinZoom() || jR > this._map.getMaxZoom()) {
                    e.minZoom = this._map.getMinZoom()
                }
                if (e.mapType !== "" && !d6[e.mapType]) {
                    e.mapType = BMAPGL_NORMAL_MAP
                }
            }
            var jP = this.getCopyright(jO.id);
            if (jP) {
                for (var jQ in e) {
                    jP[jQ] = e[jQ]
                }
            } else {
                this._copyrightCollection.push(e)
            }
        },
        getCopyright: function(jO) {
            for (var T = 0, e = this._copyrightCollection.length; T < e; T++) {
                if (this._copyrightCollection[T].id === jO) {
                    return this._copyrightCollection[T]
                }
            }
        },
        addSateMapStyle: function() {
            this.sateMapStyle = true;
            if (this._container) {
                eJ.ac(this._container, "BMap_cpyCtrl_w")
            }
        },
        removeSateMapStyle: function() {
            this.sateMapStyle = false;
            if (this._container) {
                eJ.rc(this._container, "BMap_cpyCtrl_w")
            }
        }
    });
    function br(e) {
        gr.call(this);
        e = e || {};
        this.canCheckSize = e.canCheckSize === false ? false : true;
        this.curCityName = "";
        this.curCityCode = "";
        this.defaultOffset = new iE(10,10);
        this.defaultAnchor = d2.TOP_LEFT;
        this.onChangeBefore = [];
        this.onChangeAfter = [];
        this.onChangeSuccess = [];
        this._opts = {
            printable: false,
            offset: e.offset || this.defaultOffset,
            anchor: e.anchor || this.defaultAnchor,
            expand: !!(e.expand)
        };
        if (e.onChangeBefore && bP(e.onChangeBefore)) {
            this.onChangeBefore.push(e.onChangeBefore)
        }
        if (e.onChangeAfter && bP(e.onChangeAfter)) {
            this.onChangeAfter.push(e.onChangeAfter)
        }
        if (e.onChangeSuccess && bP(e.onChangeSuccess)) {
            this.onChangeSuccess.push(e.onChangeSuccess)
        }
        this.setAnchor(e.anchor);
        this._asyncLoadCode()
    }
    br.inherits(gr, "CityListControl");
    eJ.extend(br.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        }
    });
    function jN(e) {
        gr.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        this._opts = eJ.extend(eJ.extend(this._opts, {
            unit: "metric"
        }), e);
        this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
        this.defaultOffset = new iE(81,18);
        if (bS()) {
            this.defaultOffset = new iE(75,10)
        }
        this.setAnchor(e.anchor);
        this._units = {
            metric: {
                name: "metric",
                conv: 1,
                incon: 1000,
                u1: "米",
                u2: "公里"
            },
            us: {
                name: "us",
                conv: 3.2808,
                incon: 5280,
                u1: "英尺",
                u2: "英里"
            }
        };
        this.sateMapStyle = false;
        if (!this._units[this._opts.unit]) {
            this._opts.unit = "metric"
        }
        this._scaleText = null;
        this._numberArray = {};
        this._asyncLoadCode()
    }
    window.BMAP_UNIT_METRIC = "metric";
    window.BMAP_UNIT_IMPERIAL = "us";
    jN.inherits(gr, "ScaleControl");
    eJ.extend(jN.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        setUnit: function(e) {
            this._opts.unit = this._units[e] && this._units[e].name || this._opts.unit
        },
        getUnit: function() {
            return this._opts.unit
        },
        addSateMapStyle: function() {
            this.sateMapStyle = true;
            var e = this._container;
            if (e) {
                eJ.ac(e.children[0], "dark")
            }
        },
        removeSateMapStyle: function() {
            this.sateMapStyle = false;
            var e = this._container;
            if (e) {
                eJ.rc(e.children[0], "dark")
            }
        }
    });
    window.BMAP_NAVIGATION_CONTROL_LARGE = 0;
    window.BMAP_NAVIGATION_CONTROL_SMALL = 1;
    window.BMAP_NAVIGATION_CONTROL_PAN = 2;
    window.BMAP_NAVIGATION_CONTROL_ZOOM = 3;
    window.BMAP_NAVIGATION_CONTROL_ANIM = 4;
    function jk(e) {
        gr.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        eJ.extend(this._opts, e);
        this.controlHeight = [{
            width: 65,
            height: 227,
            zoomHeight: 227,
            zoomWidth: 37,
            sliderHeight: 180
        }, {
            width: 65,
            height: 47,
            zoomHeight: (this._opts.forceNew === true) ? 56 : 47,
            zoomWidth: 37,
            sliderHeight: 0
        }, {
            width: 37,
            height: 57,
            zoomHeight: 0,
            zoomWidth: 0,
            sliderHeight: 0
        }, {
            width: 26,
            height: 56,
            zoomHeight: 56,
            zoomWidth: 6,
            sliderHeight: 0
        }, {
            width: 56,
            height: 47,
            zoomHeight: 47,
            zoomWidth: 37,
            sliderHeight: 180
        }];
        this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;
        this.defaultOffset = new iE(10,10);
        this.setAnchor(e.anchor);
        this.setType(e.type);
        this._maxTotalZoomLv = 19;
        this._minZoomLevel = -1;
        this._maxZoomLevel = -1;
        this._totalZoomLv = -1;
        this._sliderInterval = 10;
        this._sliderHeight = 180;
        this._minBarY = 1;
        this._maxBarY = -1;
        this._curBarY = -1;
        this._zoomDom = null;
        this._zoomBtnDom = null;
        this._sliderDom = null;
        this._sliderBaseDom = null;
        this._cZIndex = "1100";
        this._asyncLoadCode()
    }
    jk.inherits(gr, "NavigationControl");
    eJ.extend(jk.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        setType: function(e) {
            if (typeof e == "number" && e >= BMAP_NAVIGATION_CONTROL_LARGE && e <= BMAP_NAVIGATION_CONTROL_ANIM) {
                this._opts.type = e
            } else {
                this._opts.type = BMAP_NAVIGATION_CONTROL_LARGE
            }
        },
        getType: function() {
            return this._opts.type
        }
    });
    function v(i) {
        gr.call(this);
        i = i || {};
        this._opts = {
            printable: false
        };
        this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
        this.defaultOffset = new iE(10,10);
        this.setAnchor(i.anchor);
        this._opts = eJ.extend(eJ.extend(this._opts, {
            offset: this.defaultOffset,
            enableSwitch: true
        }), i);
        var e = this;
        gK.load("control", function() {
            e._asyncDraw()
        })
    }
    v.inherits(gr, "MapTypeControl");
    eJ.extend(v.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        showStreetLayer: function(e) {
            this._map.showStreetLayer(e)
        }
    });
    function iQ(e) {
        gr.call(this);
        e = e || {};
        this._opts = {};
        this._opts = eJ.extend(this._opts, e);
        this._zoomInDisabled = false;
        this._zoomOutDisabled = false;
        this._zoomInTapped = false;
        this._zoomOutTapped = false;
        this.defaultAnchor = d2.BOTTOM_RIGHT;
        this.defaultOffset = new iE(15,20);
        this.setAnchor(e.anchor);
        this._asyncLoadCode()
    }
    iQ.inherits(gr, "ZoomControl");
    eJ.extend(iQ.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        }
    });
    function f8(e) {
        gr.call(this);
        e = e || {};
        this._opts = {
            autoZoom: true,
            autoViewport: true
        };
        this._opts = eJ.extend(this._opts, e);
        this.defaultAnchor = d2.BOTTOM_LEFT;
        this.defaultOffset = new iE(10,50);
        this.watchPosition = this._opts.watchPosition || false;
        this.useCompass = this._opts.useCompass || false;
        this.locMarker = null;
        this.locLevel = 16;
        this.setAnchor(this._opts.anchor);
        this.onLocationStart = e.onLocationStart || null;
        this._asyncLoadCode()
    }
    f8.inherits(gr, "LocationControl");
    eJ.extend(f8.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        startLocation: function() {
            this._startLocationCalled = true
        },
        stopLocationTrace: function() {},
        setOptions: function(e) {
            e = e || {};
            eJ.extend(this._opts, e)
        }
    });
    function bz(e) {
        gr.call(this);
        e = e || {};
        this._opts = {};
        this._opts = eJ.extend(this._opts, e);
        this.defaultAnchor = d2.BOTTOM_LEFT;
        this.defaultOffset = new iE(5,15);
        if (bS()) {
            this.defaultOffset = new iE(10,10)
        }
        this.setAnchor(e.anchor)
    }
    bz.inherits(gr, "LogoControl");
    eJ.extend(bz.prototype, {
        initialize: function(i) {
            this._map = i;
            var e = this._container = document.createElement("div");
            e.innerHTML = '<img src="' + B.apiHost + '/images/logo_hd.png"  style="height:21px;width:62px;"/>';
            i.getContainer().appendChild(e);
            return e
        }
    });
    function at(e, i) {
        this._map = e;
        this._indoorInfo = i;
        this._visible = true;
        this._adjustVisible = true;
        this._isMobile = bS();
        this._sizeConfig = {
            FLOOR_BTN_HEIGHT: this._isMobile ? 35 : 26,
            SWITCH_ARROW_HEIGHT: this._isMobile ? 20 : 15
        };
        this._init()
    }
    at.prototype._init = function() {
        this._render();
        this._bindDom();
        this._bind();
        this._adjustDisplayHeight();
        var e = new fu("onindoor_bar_show");
        e.uid = this._indoorInfo.uid;
        this._map.dispatchEvent(e)
    }
    ;
    at.prototype._render = function() {
        if (!this._indoorInfo) {
            return
        }
        var jS = this._isMobile;
        var e = this._div = bT("div");
        eJ.ac(e, "floor-select-container");
        jS && eJ.ac(e, "mobile");
        jS && eJ.ac(e, "all-border-radius");
        var i = this._btnTop = bT("button");
        eJ.ac(i, "floor-switch-top");
        eJ.ac(i, "top-border-radius");
        var jQ = bT("div");
        eJ.ac(jQ, "floor-switch-top-icon");
        i.appendChild(jQ);
        var jP = this._btnBottom = bT("button");
        var T = bT("div");
        eJ.ac(T, "floor-switch-bottom-icon");
        jP.appendChild(T);
        eJ.ac(jP, "floor-switch-bottom");
        eJ.ac(jP, "bottom-border-radius");
        var jO = this._floorsContainer = bT("div");
        eJ.ac(jO, "floors-container");
        jO.appendChild(this._createFloorsDom());
        this._div.appendChild(i);
        this._div.appendChild(jO);
        this._div.appendChild(jP);
        var jT = 0;
        if (this._btnTop.style.display === "") {
            jT = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT
        }
        this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jT + "px";
        this._map.getContainer().appendChild(this._div);
        if (!jS) {
            var jR = this;
            setTimeout(function() {
                jR._div.style.right = "20px"
            }, 20)
        }
    }
    ;
    at.prototype._createFloorsDom = function() {
        if (!this._indoorInfo) {
            return
        }
        var T = this._ol = bT("ol");
        var jQ = this._indoorInfo.currentFloor;
        for (var jP = this._indoorInfo.floors.length - 1; jP >= 0; jP--) {
            var jR = this._indoorInfo.floors[jP].floorName;
            var e = bT("li");
            var jO = bT("button");
            eJ.ac(jO, "btn-select-floor");
            if (jP === jQ) {
                eJ.ac(jO, "selected")
            }
            jO.setAttribute("data-floor", jP);
            jO.innerHTML = jR;
            e.appendChild(jO);
            T.appendChild(e)
        }
        return T
    }
    ;
    at.prototype._updateUI = function() {
        if (!this._ol) {
            this._render();
            this._bind();
            this._adjustDisplayHeight();
            return
        }
        this._ol = null;
        this._ol = this._createFloorsDom();
        this._floorsContainer.innerHTML = "";
        this._floorsContainer.appendChild(this._ol);
        this._adjustDisplayHeight()
    }
    ;
    at.prototype._bindDom = function() {
        var e = this;
        eJ.on(this._floorsContainer, "click", function(jO) {
            var T = jO.target || jO.srcElement;
            if (T.tagName.toLowerCase() === "button") {
                e._map.showIndoor(e._indoorInfo.uid, parseInt(T.getAttribute("data-floor"), 10));
                var i = new fu("onindoor_bar_click");
                i.uid = e._indoorInfo.uid;
                e._map.dispatchEvent(i)
            }
        });
        eJ.on(this._floorsContainer, "mouseover", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                eJ.ac(i, "hover")
            }
        });
        eJ.on(this._floorsContainer, "mouseout", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                eJ.rc(i, "hover")
            }
        });
        eJ.on(this._floorsContainer, "touchstart", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                eJ.ac(i, "onmousedown")
            }
        });
        eJ.on(this._floorsContainer, "touchend", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                eJ.rc(i, "onmousedown")
            }
        });
        eJ.on(this._btnTop, "mouseover", function(i) {
            if (this._disable) {
                return
            }
            eJ.ac(this, "hover")
        });
        eJ.on(this._btnTop, "mouseout", function(i) {
            eJ.rc(this, "hover")
        });
        eJ.on(this._btnBottom, "mouseover", function(i) {
            if (this._disable) {
                return
            }
            eJ.ac(this, "hover")
        });
        eJ.on(this._btnBottom, "mouseout", function(i) {
            eJ.rc(this, "hover")
        });
        eJ.on(this._btnTop, "touchstart", function(i) {
            if (this.className.indexOf("disable") > -1) {
                return
            }
            eJ.ac(this, "onmousedown")
        });
        eJ.on(this._btnTop, "touchend", function(i) {
            eJ.rc(this, "onmousedown")
        });
        eJ.on(this._btnBottom, "touchstart", function(i) {
            if (this.className.indexOf("disable") > -1) {
                return
            }
            eJ.ac(this, "onmousedown")
        });
        eJ.on(this._btnBottom, "touchend", function(i) {
            eJ.rc(this, "onmousedown")
        });
        eJ.on(this._btnTop, "click", function(i) {
            e._setBarSliderTop(parseInt(e._ol.style.top, 10) + 26)
        });
        eJ.on(this._btnBottom, "click", function(i) {
            e._setBarSliderTop(parseInt(e._ol.style.top, 10) - 26)
        });
        eJ.on(this._div, "mousemove", ah);
        eJ.on(this._div, "wheel", g5);
        eJ.on(this._div, "mousewheel", g5);
        this._map.addEventListener("resize", function() {
            e._adjustDisplayHeight()
        })
    }
    ;
    at.prototype._adjustDisplayHeight = function() {
        if (!this._indoorInfo) {
            return
        }
        var jQ = this._map.getSize().height;
        var jR = this._sizeConfig.FLOOR_BTN_HEIGHT;
        var jS = jQ - 291 - 100;
        if (this._isMobile) {
            jS = jQ - 12 - 108 - this._map.config.bottomOffset
        }
        var e = this._indoorInfo.floors.length;
        var T = e * jR;
        var jO = e;
        var jU = 0;
        var jV = this._floorsContainer.children[0];
        if (T > jS) {
            this._showArrow = true;
            eJ.rc(jV.children[0].children[0], "top-border-radius");
            eJ.rc(jV.children[e - 1].children[0], "bottom-border-radius")
        } else {
            this._showArrow = false;
            eJ.ac(jV.children[0].children[0], "top-border-radius");
            eJ.ac(jV.children[e - 1].children[0], "bottom-border-radius")
        }
        while (T > jS) {
            if (jO === 0) {
                break
            }
            jO--;
            jU = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT;
            T = jO * jR + jU
        }
        this._currentDisplayHeight = T;
        if (jO < 3) {
            this._setAdjustVisbile(false)
        } else {
            this._setAdjustVisbile(true)
        }
        this._floorsContainer.style.height = jO * jR + "px";
        var jP = this._indoorInfo.currentFloor;
        var i = e - jP;
        var jT = jP - 1;
        this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jU + "px";
        var jW = -(e - (jP + Math.round(jO / 2))) * jR;
        this._setBarSliderTop(jW);
        if (jO < e) {
            eJ.show(this._btnTop);
            eJ.show(this._btnBottom)
        } else {
            eJ.hide(this._btnTop);
            eJ.hide(this._btnBottom);
            this._setBarSliderTop(0)
        }
        if (this._isMobile) {
            this._div.style.bottom = 108 + this._map.config.bottomOffset + "px"
        }
    }
    ;
    at.prototype._setBarSliderTop = function(jO) {
        var T = 26;
        var i = this._indoorInfo.floors.length;
        var e = i * T;
        if (this._currentDisplayHeight) {
            if (this._showArrow) {
                e = this._currentDisplayHeight - 30
            } else {
                e = this._currentDisplayHeight
            }
        }
        if (e - jO >= i * T) {
            jO = e - i * T;
            eJ.ac(this._btnBottom, "disable");
            eJ.rc(this._btnBottom, "hover");
            this._btnBottom._disable = true
        } else {
            eJ.rc(this._btnBottom, "disable");
            this._btnBottom._disable = false
        }
        if (jO >= 0) {
            jO = 0;
            eJ.ac(this._btnTop, "disable");
            eJ.rc(this._btnTop, "hover");
            this._btnTop._disable = true
        } else {
            eJ.rc(this._btnTop, "disable");
            this._btnTop._disable = false
        }
        this._ol.style.top = jO + "px"
    }
    ;
    at.prototype._setAdjustVisbile = function(e) {
        if (this._adjustVisible === e) {
            return
        }
        this._adjustVisible = e;
        if (e && this._visible) {
            this._div.style.right = "20px"
        } else {
            this._div.style.right = "-30px"
        }
    }
    ;
    at.prototype._bind = function() {
        var i = this._map;
        var e = this;
        i.on("indoor_status_changed", function(jS) {
            if (e._visible === false) {
                return
            }
            var T = e._ol;
            var jQ = jS.uid;
            if (!jQ) {
                return
            }
            var jR = jS.floor;
            for (var jP = 0; jP < T.children.length; jP++) {
                var jO = T.children[jP].children[0];
                if (parseInt(jO.getAttribute("data-floor"), 10) === jR) {
                    eJ.ac(jO, "selected")
                } else {
                    eJ.rc(jO, "selected")
                }
            }
        });
        i.on("zoomend", function(T) {
            if (this.getZoom() < 17) {
                e._setAdjustVisbile(false)
            } else {
                e._setAdjustVisbile(true)
            }
        })
    }
    ;
    at.prototype.setInfo = function(e) {
        if (this._indoorInfo && this._indoorInfo.uid === e.uid) {
            return
        }
        this._indoorInfo = e;
        this._updateUI()
    }
    ;
    at.prototype.show = function() {
        if (this._visible === true) {
            return
        }
        this._visible = true;
        if (!this._isMobile) {
            this._div.style.right = "20px"
        } else {
            this._div.style.display = ""
        }
        var e = new fu("onindoor_bar_show");
        e.uid = this._indoorInfo.uid;
        this._map.dispatchEvent(e)
    }
    ;
    at.prototype.hide = function() {
        if (this._visible === false) {
            return
        }
        this._visible = false;
        if (!this._isMobile) {
            this._div.style.right = "-30px"
        } else {
            this._div.style.display = "none"
        }
    }
    ;
    function eL(e) {
        this._opts = e || {};
        this.defaultOffset = new iE(2,80);
        this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
        if (this._opts.anchor === undefined) {
            this.setAnchor(this.defaultAnchor)
        } else {
            this.setAnchor(this._opts.anchor)
        }
        this._firstAnimation = true
    }
    eL.inherits(gr, "NavigationControl3D");
    eJ.extend(eL.prototype, {
        initialize: function(T) {
            this._map = T;
            this._createDom();
            this._bindDom();
            this._bind();
            if (!bS()) {
                this._headingControl = new ij(this._map,this._div)
            }
            this._tiltControl = new cK(this._map,this._div);
            this._render();
            var i = this._map.getMapType();
            var e = this;
            if (i === "B_EARTH_MAP" || this._map._renderType === "webgl") {
                e._div.style.opacity = "1";
                e._div.style.visibility = "visible"
            } else {
                e._div.style.opacity = "0";
                e._div.style.visibility = "hidden"
            }
            return this._container
        },
        _createDom: function() {
            var i = this._div = document.createElement("div");
            this._container = i;
            var e = i.style;
            e.position = "absolute";
            e.zIndex = 5;
            e.width = "52px";
            e.height = "82px";
            e.right = "-3px";
            e.bottom = "79px";
            e.opacity = "0";
            e.visibility = "hidden";
            e.WebkitTransition = e.transition = "opacity .3s ease-out,visibility .3s ease-out"
        },
        _render: function() {
            var e = document.getElementById("map-operate");
            if (e) {
                e.appendChild(this._div)
            } else {
                this._map.getContainer().appendChild(this._div)
            }
        },
        _bindDom: function() {
            this._div.addEventListener("mousemove", ah)
        },
        _bind: function() {
            if (this._map._renderType === "webgl") {
                return
            }
            var e = this;
            this._map.on("maptypechange", function() {
                if (this.mapType === "B_EARTH_MAP") {
                    if (e._firstAnimation) {
                        e._firstAnimation = false;
                        setTimeout(function() {
                            e._div.style.opacity = "1";
                            e._div.style.visibility = "visible"
                        }, 300)
                    } else {
                        e._div.style.opacity = "1";
                        e._div.style.visibility = "visible"
                    }
                } else {
                    e._div.style.opacity = "0";
                    e._div.style.visibility = "hidden"
                }
            })
        }
    });
    function ij(T, i) {
        this._map = T;
        this._target = T;
        var jO = T.temp.originMapType || T.mapType;
        if (jO === "B_EARTH_MAP" && T._earth) {
            this._target = T._earth
        }
        this._outContainer = i || T.getContainer();
        this._imgRatio = fX() >= hr.HIGH_RES_MIN_RATIO ? 2 : 1;
        this._imgPath = B.imgPath + "earth-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
        this._enabled = true;
        var e = this;
        this._setHeadingOptions = {
            callback: function() {
                e._target.setLock(false)
            }
        };
        this._init()
    }
    eJ.extend(ij.prototype, {
        _init: function() {
            this._createDom();
            this._render();
            this._bindDom();
            this._bind();
            this._updateUI();
            this._checkEnable()
        },
        _checkEnable: function() {
            if (this._target.getZoom() >= this._target._enableHeadingZoom) {
                this.enable()
            } else {
                this.disable()
            }
        },
        _createDom: function() {
            var i = this._div = bT("div");
            var e = i.style;
            e.position = "absolute";
            e.zIndex = 5;
            e.top = "0";
            e.left = "0";
            e.width = "52px";
            e.height = "54px";
            e.background = "url(" + this._imgPath + ") no-repeat";
            e.backgroundSize = "266px auto";
            this._rotateCCW = this._createButton();
            this._rotateCCW.title = "逆时针转动";
            e = this._rotateCCW.style;
            e.left = "2px";
            e.top = "5px";
            e.zIndex = "1";
            e.width = "15px";
            e.height = "42px";
            e.backgroundPosition = "-75px -5px";
            this._rotateCW = this._createButton();
            this._rotateCW.title = "顺时针转动";
            e = this._rotateCW.style;
            e.right = "2px";
            e.top = "5px";
            e.zIndex = "1";
            e.width = "15px";
            e.height = "42px";
            e.backgroundPosition = "-75px -5px";
            e.WebkitTransform = e.transform = "scaleX(-1)";
            this._compass = this._createButton();
            this._compass.title = "恢复正北方向";
            e = this._compass.style;
            e.left = "19px";
            e.top = "4px";
            e.width = "14px";
            e.height = "44px";
            e.backgroundPosition = "-56px -4px";
            e.WebkitTransform = e.transform = "rotate(0deg)";
            this._div.appendChild(this._rotateCCW);
            this._div.appendChild(this._compass);
            this._div.appendChild(this._rotateCW);
            this._domRendered = true
        },
        _createButton: function() {
            var e = bT("button");
            var i = e.style;
            i.position = "absolute";
            i.outline = "none";
            i.border = "none";
            i.background = "url(" + this._imgPath + ") no-repeat";
            i.backgroundSize = "266px auto";
            i.cursor = "pointer";
            return e
        },
        _render: function() {
            this._outContainer.appendChild(this._div)
        },
        enable: function() {
            this._enabled = true;
            if (this._domRendered) {
                this._rotateCCW.style.cursor = "pointer";
                this._rotateCCW.style.opacity = 1;
                this._rotateCW.style.cursor = "pointer";
                this._rotateCW.style.opacity = 1;
                this._compass.style.cursor = "pointer";
                this._compass.style.opacity = 1
            }
        },
        disable: function() {
            this._enabled = false;
            if (this._domRendered) {
                this._rotateCCW.style.cursor = "";
                this._rotateCCW.style.opacity = 0.4;
                this._rotateCW.style.cursor = "";
                this._rotateCW.style.opacity = 0.4;
                this._compass.style.cursor = "";
                this._compass.style.opacity = 0.4
            }
        },
        _bindDom: function() {
            ic(this._div, ["mousedown", "click", "dblclick"]);
            var i = this._map;
            var e = this;
            this._rotateCW.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                if (e._target.getHeading() === 360) {
                    e._target.setHeading(0)
                }
                e._target.setLock(true);
                e._target.setHeading(e._target.getHeading() + 90, e._setHeadingOptions);
                i.fire(new fu("onrotatecwclick"))
            }, false);
            this._rotateCCW.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                if (e._target.getHeading() === -360) {
                    e._target.setHeading(0)
                }
                e._target.setLock(true);
                e._target.setHeading(e._target.getHeading() - 90, e._setHeadingOptions);
                i.fire(new fu("onrotateccwclick"))
            }, false);
            this._rotateCW.addEventListener("mouseover", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-89px -5px"
            }, false);
            this._rotateCW.addEventListener("mouseout", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-75px -5px"
            }, false);
            this._rotateCCW.addEventListener("mouseover", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-89px -5px"
            }, false);
            this._rotateCCW.addEventListener("mouseout", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-75px -5px"
            }, false);
            this._compass.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                e._target.setLock(true);
                var T = false;
                if (e._target.getTilt() !== 0) {
                    T = true;
                    e._target.setTilt(0, e._setHeadingOptions)
                }
                if (e._target.getHeading() % 360 !== 0) {
                    T = true;
                    e._target.resetHeading(e._setHeadingOptions)
                }
                if (!T) {
                    e._target.setLock(false)
                }
                i.fire(new fu("oncompassclick"))
            }, false)
        },
        _bind: function() {
            var e = this;
            this._bindTarget(this._target);
            if (this._map._renderType === "webgl") {
                this._map.addEventListener("maptypechange", function(i) {
                    if (this.mapType === "B_EARTH_MAP") {
                        e._target = e._map._earth
                    } else {
                        e._target = e._map
                    }
                    e._bindTarget(e._target);
                    e._checkEnable()
                })
            }
        },
        _bindTarget: function(i) {
            if (i === this._map && this._mapBinded) {
                return
            }
            if (i === this._map._earth && this._earthBinded) {
                return
            }
            var e = this;
            i.addEventListener("heading_changed", function(T) {
                e._updateUI()
            });
            i.addEventListener("animation_start", function(T) {
                e._isOperating = true
            });
            i.addEventListener("animation_end", function(T) {
                e._isOperating = false
            });
            i.on("load", function() {
                e._checkEnable()
            });
            i.on("zoom_changed", function() {
                e._checkEnable()
            });
            if (i === this._map) {
                this._mapBinded = true
            } else {
                this._earthBinded = true
            }
        },
        _updateUI: function() {
            var e = this._target.getHeading();
            var i = this._compass.style;
            i.WebkitTransform = i.transform = "rotate(" + e + "deg)"
        },
        hide: function() {
            this._div.style.display = "none"
        },
        show: function() {
            this._div.style.display = "block"
        }
    });
    function cK(T, i) {
        this._map = T;
        this._target = T;
        var jO = T.temp.originMapType || T.mapType;
        if (jO === "B_EARTH_MAP" && T._earth) {
            this._target = T._earth
        }
        this._outContainer = i || T.getContainer();
        this._imgRatio = fX() >= hr.HIGH_RES_MIN_RATIO ? 2 : 1;
        this._imgPath = B.imgPath + "gl-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
        this._enabled = true;
        var e = this;
        this._setTiltOptions = {
            callback: function() {
                e._target.setLock(false)
            }
        };
        this._init()
    }
    eJ.extend(cK.prototype, {
        _init: function() {
            this._createDom();
            this._render();
            this._bindDom();
            this._bind();
            this._checkEnable()
        },
        _checkEnable: function() {
            if (this._target.getZoom() >= this._target._enableTiltZoom) {
                this.enable()
            } else {
                this.disable()
            }
        },
        _createDom: function() {
            var e = this._div = bT("button");
            e.title = "倾斜";
            var i = e.style;
            i.position = "absolute";
            i.zIndex = 5;
            i.outline = "none";
            i.border = "none";
            i.cursor = "pointer";
            i.width = "26px";
            i.height = "26px";
            i.top = "56px";
            i.right = "13px";
            i.background = "url(" + this._imgPath + ") no-repeat #fff";
            i.backgroundSize = "266px auto";
            i.backgroundPosition = "-110px 1px";
            i.boxShadow = "1px 2px 1px rgba(0, 0, 0, 0.15)"
        },
        enable: function() {
            this._enabled = true;
            if (this._div) {
                this._div.style.cursor = "pointer"
            }
            this._updateUI()
        },
        disable: function() {
            this._enabled = false;
            if (this._div) {
                this._div.style.cursor = ""
            }
            this._updateUI()
        },
        _render: function() {
            this._outContainer.appendChild(this._div)
        },
        _bindDom: function() {
            var e = this;
            this._div.addEventListener("mousedown", function(jO) {
                if (!e._enabled) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                var i = e._target.getTilt();
                var T;
                if (i === e._map.getCurrentMaxTilt()) {
                    T = "out"
                } else {
                    if (i === 0) {
                        T = "in"
                    } else {
                        T = e._preTrend ? e._preTrend : "in"
                    }
                }
                e._curTrend = T;
                e._clickTimer = setTimeout(function() {
                    e._map.fire(new fu("ontiltmsdown"));
                    e._tiltAni = new fk({
                        duration: 9999999,
                        render: function(jP) {
                            i = e._target.getTilt();
                            if (T === "in" && i < e._map.getCurrentMaxTilt()) {
                                e._target.setTilt(i + 1, {
                                    noAnimation: true
                                })
                            } else {
                                if (T === "out" && i > 0) {
                                    e._target.setTilt(i - 1, {
                                        noAnimation: true
                                    })
                                }
                            }
                        },
                        finish: function() {
                            e._tiltAni = null
                        }
                    });
                    e._clickTimer = null
                }, 200);
                jO.stopPropagation()
            }, false);
            this._div.addEventListener("mouseup", function(i) {
                if (!e._enabled) {
                    return
                }
                if (e._tiltAni) {
                    e._tiltAni.stop()
                }
                e._preTrend = e._curTrend
            }, false);
            this._div.addEventListener("click", function(jO) {
                if (!e._enabled) {
                    return
                }
                if (!e._clickTimer) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                clearTimeout(e._clickTimer);
                e._map.fire(new fu("ontiltclick"));
                var i = e._target.getTilt();
                e._target.setLock(true);
                jO.stopPropagation();
                var T = e._map.getCurrentMaxTilt();
                if (e._curTrend === "in") {
                    e._target.setTilt(T, e._setTiltOptions)
                } else {
                    if (e._curTrend === "out") {
                        e._target.setTilt(0, e._setTiltOptions)
                    } else {
                        if (i < T) {
                            e._target.setTilt(T, e._setTiltOptions)
                        } else {
                            e._target.setTilt(0, e._setTiltOptions)
                        }
                    }
                }
            }, false);
            this._div.addEventListener("mouseover", function(i) {
                if (!e._enabled) {
                    return
                }
                e._mouseOver = true;
                e._updateUI()
            }, false);
            this._div.addEventListener("mouseout", function(i) {
                if (!e._enabled) {
                    return
                }
                e._mouseOver = false;
                e._updateUI()
            }, false);
            ic(this._div, ["mousedown", "click", "dblclick"])
        },
        _bind: function() {
            var e = this;
            var i = this._map;
            this._bindTarget(this._target);
            if (this._map._renderType === "webgl") {
                this._map.addEventListener("maptypechange", function(T) {
                    if (this.mapType === "B_EARTH_MAP") {
                        e._target = e._map._earth
                    } else {
                        e._target = e._map
                    }
                    e._bindTarget(e._target);
                    e._checkEnable()
                })
            }
        },
        _bindTarget: function(i) {
            if (i === this._map && this._mapBinded) {
                return
            }
            if (i === this._map._earth && this._earthBinded) {
                return
            }
            var e = this;
            i.on("load", function() {
                e._checkEnable()
            });
            i.on("zoom_changed", function() {
                e._checkEnable()
            });
            i.on("tilt_changed", function() {
                e._updateUI()
            });
            if (i === this._map) {
                this._mapBinded = true
            } else {
                this._earthBinded = true
            }
        },
        _updateUI: function() {
            var T = this._target.getTilt();
            var i = 0;
            var jO = 0;
            var e = 0;
            if (T > 0) {
                i = 78
            }
            if (this._mouseOver) {
                e = 52
            }
            if (this._enabled === false) {
                jO = 26;
                e = 0;
                i = 0
            }
            var jP = "-" + (110 + i + jO + e) + "px 1px";
            this._div && (this._div.style.backgroundPosition = jP);
            if (this._enabled) {
                if (T > 0) {
                    this._div && (this._div.title = "恢复")
                } else {
                    this._div && (this._div.title = "倾斜")
                }
            } else {
                this._div && (this._div.title = "请放大地图后操作")
            }
        },
        hide: function() {
            this._div.style.display = "none"
        },
        show: function() {
            this._div.style.display = "block"
        }
    });
    function g3(i) {
        cZ.call(this);
        this._opts = {
            container: null,
            cursor: "default",
            marker: true
        };
        this._opts = eJ.extend(this._opts, i);
        this._type = "contextmenu";
        this._map = null;
        this._container;
        this._left = 0;
        this._top = 0;
        this._items = [];
        this._rItems = [];
        this._dividers = [];
        this._enable = true;
        this.curPixel = null;
        this.curPoint = null;
        this._isOpen = false;
        var e = this;
        gK.load("menu", function() {
            e._draw()
        })
    }
    g3.inherits(cZ, "ContextMenu");
    eJ.extend(g3.prototype, {
        initialize: function(i, e) {
            this._map = i;
            this._overlay = e || null
        },
        remove: function() {
            this._map = this._overlay = null
        },
        addItem: function(jP, e) {
            if (!jP || jP._type != "menuitem" || jP._text == "" || jP._width <= 0) {
                return
            }
            for (var jO = 0, T = this._items.length; jO < T; jO++) {
                if (this._items[jO] === jP) {
                    return
                }
            }
            if (e === undefined || e > this._items.length - 1) {
                e = -1
            }
            jP._insertIndex = e;
            if (e === -1) {
                this._items.push(jP);
                this._rItems.push(jP)
            } else {
                this._items.splice(e, 0, jP);
                this._rItems.splice(e, 0, jP)
            }
        },
        removeItem: function(jO) {
            if (!jO || jO._type != "menuitem") {
                return
            }
            for (var T = 0, e = this._items.length; T < e; T++) {
                if (this._items[T] === jO) {
                    this._items[T].remove();
                    this._items.splice(T, 1);
                    delete jO._insertIndex;
                    e--
                }
            }
            for (var T = 0, e = this._rItems.length; T < e; T++) {
                if (this._rItems[T] === jO) {
                    this._rItems[T].remove();
                    this._rItems.splice(T, 1);
                    delete jO._insertIndex;
                    e--
                }
            }
        },
        addSeparator: function(e) {
            if (e === undefined || e > this._items.length - 1) {
                e = -1
            }
            var i = {
                _type: "divider",
                _dIndex: this._dividers.length,
                _insertIndex: e
            };
            this._dividers.push({
                dom: null
            });
            if (e === -1) {
                this._items.push(i)
            } else {
                this._items.splice(e, 0, i)
            }
        },
        removeSeparator: function(T) {
            if (!this._dividers[T]) {
                return
            }
            for (var jO = 0, e = this._items.length; jO < e; jO++) {
                if (this._items[jO] && this._items[jO]._type == "divider" && this._items[jO]._dIndex == T) {
                    this._items.splice(jO, 1);
                    e--
                }
                if (this._items[jO] && this._items[jO]._type == "divider" && this._items[jO]._dIndex > T) {
                    this._items[jO]._dIndex--
                }
            }
            this._dividers.splice(T, 1)
        },
        getDom: function() {
            return this._container
        },
        show: function() {
            if (this._isOpen == true) {
                return
            }
            this._isOpen = true
        },
        hide: function() {
            if (this._isOpen == false) {
                return
            }
            this._isOpen = false
        },
        setCursor: function(e) {
            if (!e) {
                return
            }
            this._opts.cursor = e
        },
        getItem: function(e) {
            return this._rItems[e]
        },
        enable: function() {
            this._enable = true
        },
        disable: function() {
            this._enable = false
        }
    });
    function hD(T, jO, i) {
        if (!T || !jO || typeof jO != "function") {
            return
        }
        cZ.call(this);
        this._opts = {
            width: 100,
            id: ""
        };
        i = i || {};
        this._opts.width = (i.width * 1) ? i.width : 100;
        this._opts.id = i.id ? i.id : "";
        this._text = T + "";
        this._callback = jO;
        this._map = null;
        this._type = "menuitem";
        this._contextmenu = null;
        this._container = null;
        this._enabled = true;
        var e = this;
        gK.load("menu", function() {
            e._draw()
        })
    }
    hD.inherits(cZ, "MenuItem");
    eJ.extend(hD.prototype, {
        initialize: function(e, i) {
            this._map = e;
            this._contextmenu = i
        },
        remove: function() {
            this._contextmenu = null;
            this._map = null
        },
        setText: function(e) {
            if (!e) {
                return
            }
            this._text = e + ""
        },
        getDom: function() {
            return this._container
        },
        enable: function() {
            this._enabled = true
        },
        disable: function() {
            this._enabled = false
        }
    });
    function hF(e, i) {
        this.setSouthWest(e);
        this.setNorthEast(i)
    }
    eJ.extend(hF.prototype, {
        isEmpty: function() {
            return this.sw === null && this.ne === null
        },
        equals: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return false
            }
            return this.sw.equals(e.sw) && this.ne.equals(e.ne)
        },
        containsBounds: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return false
            }
            return (e.sw.lng > this.sw.lng && e.ne.lng < this.ne.lng && e.sw.lat > this.sw.lat && e.ne.lat < this.ne.lat)
        },
        getCenter: function() {
            if (this.isEmpty()) {
                return null
            }
            return new cr((this.sw.lng + this.ne.lng) / 2,(this.sw.lat + this.ne.lat) / 2)
        },
        intersects: function(T) {
            if (!T || T.isEmpty() || this.isEmpty()) {
                return null
            }
            if (Math.max(T.sw.lng, T.ne.lng) < Math.min(this.sw.lng, this.ne.lng) || Math.min(T.sw.lng, T.ne.lng) > Math.max(this.sw.lng, this.ne.lng) || Math.max(T.sw.lat, T.ne.lat) < Math.min(this.sw.lat, this.ne.lat) || Math.min(T.sw.lat, T.ne.lat) > Math.max(this.sw.lat, this.ne.lat)) {
                return null
            }
            var jP = Math.max(this.sw.lng, T.sw.lng);
            var i = Math.min(this.ne.lng, T.ne.lng);
            var jO = Math.max(this.sw.lat, T.sw.lat);
            var e = Math.min(this.ne.lat, T.ne.lat);
            return new hF(new cr(jP,jO),new cr(i,e))
        },
        setMinMax: function() {
            this.minX = this.sw ? this.sw.lng : null;
            this.minY = this.sw ? this.sw.lat : null;
            this.maxX = this.ne ? this.ne.lng : null;
            this.maxY = this.ne ? this.ne.lat : null
        },
        containsPoint: function(e) {
            if (!e) {
                return
            }
            return (e.lng >= this.sw.lng && e.lng <= this.ne.lng && e.lat >= this.sw.lat && e.lat <= this.ne.lat)
        },
        extend: function(e) {
            if (!e) {
                return
            }
            var i = e.lng;
            var T = e.lat;
            if (!this.sw) {
                this.sw = e.clone()
            }
            if (!this.ne) {
                this.ne = e.clone()
            }
            if (this.sw.lng > i) {
                this.sw.lng = i
            }
            if (this.ne.lng < i) {
                this.ne.lng = i
            }
            if (this.sw.lat > T) {
                this.sw.lat = T
            }
            if (this.ne.lat < T) {
                this.ne.lat = T
            }
        },
        getMin: function() {
            return this.sw
        },
        getMax: function() {
            return this.ne
        },
        getSouthWest: function() {
            return this.sw
        },
        getNorthEast: function() {
            return this.ne
        },
        setSouthWest: function(e) {
            this.sw = e ? e.clone() : null
        },
        setNorthEast: function(e) {
            this.ne = e ? e.clone() : null
        },
        clone: function() {
            return new hF(this.sw,this.ne)
        },
        toSpan: function() {
            if (this.isEmpty()) {
                return new iE(0,0)
            }
            return new iE(Math.abs(this.ne.lng - this.sw.lng),Math.abs(this.ne.lat - this.sw.lat))
        },
        div: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return 0
            }
            return ((this.ne.lng - this.sw.lng) * (this.ne.lat - this.sw.lat)) / ((e.ne.lng - e.sw.lng) * (e.ne.lat - e.sw.lat))
        },
        makeNormalizedPoint: function(e) {
            this.normalizedTopLeft = this.pointTopLeft.clone();
            this.normalizedTopRight = this.pointTopRight.clone();
            this.normalizedBottomRight = this.pointBottomRight.clone();
            this.normalizedBottomLeft = this.pointBottomLeft.clone();
            while (e < 0) {
                e += 360
            }
            e = e % 360;
            if (e >= 0 && e < 90 || e >= 270 && e < 360) {
                if (this.normalizedTopRight.lng < this.normalizedTopLeft.lng) {
                    this.normalizedTopRight.lng += hr.WORLD_SIZE_MC
                }
                if (this.normalizedBottomRight.lng < this.normalizedBottomLeft.lng) {
                    this.normalizedBottomRight.lng += hr.WORLD_SIZE_MC
                }
            } else {
                if (this.normalizedTopLeft.lng < this.normalizedTopRight.lng) {
                    this.normalizedTopLeft.lng += hr.WORLD_SIZE_MC
                }
                if (this.normalizedBottomLeft.lng < this.normalizedBottomRight.lng) {
                    this.normalizedBottomLeft.lng += hr.WORLD_SIZE_MC
                }
            }
        },
        toString: function() {
            return "Bounds"
        }
    });
    function cr(e, i) {
        if (isNaN(e)) {
            e = da(e);
            e = isNaN(e) ? 0 : e
        }
        if (typeof e === "string") {
            e = parseFloat(e)
        }
        if (isNaN(i)) {
            i = da(i);
            i = isNaN(i) ? 0 : i
        }
        if (typeof i === "string") {
            i = parseFloat(i)
        }
        this.lng = e;
        this.lat = i
    }
    cr.prototype.equals = function(i) {
        if (!i) {
            return false
        }
        var jO = Math.abs(this.lat - i.lat);
        var T = Math.abs(this.lng - i.lng);
        var e = 1e-8;
        if (jO < e && T < e) {
            return true
        }
        return false
    }
    ;
    cr.prototype.clone = function() {
        return new cr(this.lng,this.lat)
    }
    ;
    cr.prototype.add = function(e) {
        return new cr(this.lng + e.lng,this.lat + e.lat)
    }
    ;
    cr.prototype.sub = function(e) {
        return new cr(this.lng - e.lng,this.lat - e.lat)
    }
    ;
    cr.prototype.mult = function(e) {
        return new cr(this.lng * e,this.lat * e)
    }
    ;
    cr.prototype.div = function(e) {
        return new cr(this.lng / e,this.lat / e)
    }
    ;
    cr.prototype.mag = function() {
        return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
    }
    ;
    cr.prototype.toString = function() {
        return "Point"
    }
    ;
    cr.serialize = function(i, e) {
        return [i.lng, i.lat]
    }
    ;
    cr.deserialize = function(e) {
        return new cr(e[0],e[1])
    }
    ;
    function iN() {}
    eJ.extend(iN, {
        EARTHRADIUS: 6370996.81,
        MCBAND: [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0],
        LLBAND: [86, 60, 45, 30, 15, 0],
        MC2LL: [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]],
        LL2MC: [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]],
        getDistanceByMC: function(jQ, jO) {
            if (!jQ || !jO) {
                return 0
            }
            var i;
            var jP;
            var e;
            var T;
            jQ = this.convertMC2LL(jQ);
            if (!jQ) {
                return 0
            }
            i = ie(jQ.lng);
            jP = ie(jQ.lat);
            jO = this.convertMC2LL(jO);
            if (!jO) {
                return 0
            }
            e = ie(jO.lng);
            T = ie(jO.lat);
            return this.getDistance(i, e, jP, T)
        },
        getDistanceByLL: function(jQ, jO) {
            if (!jQ || !jO) {
                return 0
            }
            jQ.lng = this.getLoop(jQ.lng, -180, 180);
            jQ.lat = this.getRange(jQ.lat, -80, 84);
            jO.lng = this.getLoop(jO.lng, -180, 180);
            jO.lat = this.getRange(jO.lat, -80, 84);
            var i;
            var e;
            var jP;
            var T;
            i = ie(jQ.lng);
            jP = ie(jQ.lat);
            e = ie(jO.lng);
            T = ie(jO.lat);
            return this.getDistance(i, e, jP, T)
        },
        proximityCovertMC2LL: function(e) {
            if (e === null) {
                return e
            }
            if (e.lng < 180 && e.lng > -180 && e.lat < 90 && e.lat > -90) {
                return e
            }
            return this.convertMC2LL(e)
        },
        convertMC2LL: function(e) {
            if (e === null) {
                return e
            }
            if (!e) {
                return new cr(0,0)
            }
            var T;
            var jP;
            T = new cr(Math.abs(e.lng),Math.abs(e.lat));
            for (var jO = 0; jO < this.MCBAND.length; jO++) {
                if (T.lat >= this.MCBAND[jO]) {
                    jP = this.MC2LL[jO];
                    break
                }
            }
            var jQ = this.convertor(e, jP);
            return new cl(jQ.lat,jQ.lng)
        },
        convertLL2MC: function(jR) {
            if (!jR) {
                return new cr(0,0)
            }
            var jT = jR.lat;
            var jO = jR.lng;
            jO = this.getLoop(jR.lng, -180, 180);
            jT = b6(jT, -85, 85);
            var jQ;
            for (var jP = 0; jP < this.LLBAND.length; jP++) {
                if (jT >= this.LLBAND[jP]) {
                    jQ = this.LL2MC[jP];
                    break
                }
            }
            if (!jQ) {
                for (jP = 0; jP < this.LLBAND.length; jP++) {
                    if (jT <= -this.LLBAND[jP]) {
                        jQ = this.LL2MC[jP];
                        break
                    }
                }
            }
            var T = new cr(jO,jT);
            var jS = this.convertor(T, jQ);
            var e = new cr(jS.lng,jS.lat);
            e.latLng = new cl(jR.lat,jR.lng);
            return e
        },
        convertor: function(T, jO) {
            if (!T || !jO) {
                return
            }
            var e = jO[0] + jO[1] * Math.abs(T.lng);
            var i = Math.abs(T.lat) / jO[9];
            var jP = jO[2] + jO[3] * i + jO[4] * i * i + jO[5] * i * i * i + jO[6] * i * i * i * i + jO[7] * i * i * i * i * i + jO[8] * i * i * i * i * i * i;
            e *= (T.lng < 0 ? -1 : 1);
            jP *= (T.lat < 0 ? -1 : 1);
            return new cr(e,jP)
        },
        getDistance: function(i, e, jO, T) {
            return this.EARTHRADIUS * Math.acos((Math.sin(jO) * Math.sin(T) + Math.cos(jO) * Math.cos(T) * Math.cos(e - i)))
        },
        getRange: function(T, i, e) {
            if (i != null) {
                T = Math.max(T, i)
            }
            if (e != null) {
                T = Math.min(T, e)
            }
            return T
        },
        getLoop: function(T, i, e) {
            while (T > e) {
                T -= e - i
            }
            while (T < i) {
                T += e - i
            }
            return T
        },
        tileToBoundRange: function(T) {
            var i = T.col;
            var jV = T.row;
            var jU = T.baseTileSize;
            var jS = Math.pow(2, (18 - T.zoom));
            var jQ = {
                lbx: i * jU,
                lby: jV * jU,
                rtx: (i + 1) * jU,
                rty: (jV + 1) * jU
            };
            var e = {
                lbx: jQ.lbx * jS,
                lby: jQ.lby * jS,
                rtx: jQ.rtx * jS,
                rty: jQ.rty * jS
            };
            var jT = new cr(e.lbx,e.lby);
            var jP = new cr(e.rtx,e.rty);
            var jO = this.convertMC2LL(jT);
            var jR = this.convertMC2LL(jP);
            return {
                MC: new hF(jT,jP),
                LL: new hF(jO,jR)
            }
        }
    });
    eJ.extend(iN.prototype, {
        lnglatToMercator: function(e) {
            return iN.convertLL2MC(e)
        },
        lngLatToPoint: function(e) {
            var i = iN.convertLL2MC(e);
            return new e4(i.lng,i.lat)
        },
        mercatorToLnglat: function(e) {
            return iN.convertMC2LL(e)
        },
        pointToLngLat: function(i) {
            var e = new cr(i.x,i.y);
            var T = iN.convertMC2LL(e);
            return new cl(T.lat,T.lng)
        },
        pointToPixel: function(i, jQ, jP, jO) {
            if (!i) {
                return
            }
            i = this.lnglatToMercator(i);
            var T = this.getZoomUnits(jQ);
            var e = Math.round((i.lng - jP.lng) / T + jO.width / 2);
            var jR = Math.round((jP.lat - i.lat) / T + jO.height / 2);
            return new e4(e,jR)
        },
        mercatorToPixel: function(jQ, jP, jO, T) {
            if (!jQ) {
                return
            }
            var i = this.getZoomUnits(jP);
            var e = Math.round((jQ.lng - jO.lng) / i + T.width / 2);
            var jR = Math.round((jO.lat - jQ.lat) / i + T.height / 2);
            return new e4(e,jR)
        },
        pixelToPoint: function(jO, jR, jQ, jP) {
            if (!jO) {
                return
            }
            var i = this.getZoomUnits(jR);
            var T = jQ.lng + i * (jO.x - jP.width / 2);
            var jS = jQ.lat - i * (jO.y - jP.height / 2);
            var e = new cr(T,jS);
            return this.mercatorToLnglat(e)
        },
        tileToBound: function(jO, jS) {
            var i = jO.col;
            var jV = jO.row;
            var jU = jO.baseTileSize;
            var jT = this.getZoomUnits(jO.zoom);
            var T = {
                x: Math.round(jS.lng / jT),
                y: Math.round(jS.lat / jT)
            };
            var jQ = {
                lbx: i * jU,
                lby: jV * jU,
                rtx: (i + 1) * jU,
                rty: (jV + 1) * jU
            };
            var e = {
                lbx: jS.lng + (jQ.lbx - T.x) * jT,
                lby: jS.lat + (jQ.lby - T.y) * jT,
                rtx: jS.lng + (jQ.rtx - T.x) * jT,
                rty: jS.lat + (jQ.rty - T.y) * jT
            };
            var jP = iN.convertMC2LL(new cr(e.lbx,e.lby));
            var jR = iN.convertMC2LL(new cr(e.rtx,e.rty));
            return {
                MC: new hF(new cr(e.lbx,e.lby),new cr(e.rtx,e.rty)),
                LL: new hF(jP,jR)
            }
        },
        getZoomUnits: function(e) {
            return Math.pow(2, (18 - e))
        },
        setCoordType: function(e) {
            this.coordsType = e
        }
    });
    function dq() {}
    eJ.extend(dq, {
        RADIUS: 6378137,
        EXTENT4326: [-180, -90, 180, 90],
        WORLD_EXTENT: [-180, -85, 180, 85],
        HALF_SIZE: 20037508.342789244,
        METERS_PER_UNIT: 111319.49079327358,
        EXTENT3857: [-20037508.342789244, -20037508.342789244, 20037508.342789244, 20037508.342789244],
        MAX_SAFE_Y: 238107693.26496765,
        origin: [-20037508.342789244, 20037508.342789244],
        size: 156543.03392804097,
        gridSize: [256, 256],
        resolutions: [156543.03392804097, 78271.51696402048, 39135.75848201024, 19567.87924100512, 9783.93962050256, 4891.96981025128, 2445.98490512564, 1222.99245256282, 611.49622628141, 305.748113140705, 152.8740565703525, 76.43702828517625, 38.21851414258813, 19.109257071294063, 9.554628535647032, 4.777314267823516, 2.388657133911758, 1.194328566955879, 0.5971642834779395, 0.29858214173896974, 0.14929107086948487, 0.07464553543474244, 0.03732276771737122],
        gridScaleFrom3857ToBDMC: 0.5971642834779395,
        gridScaleFromBDMCTo3857: 1.674581061974954,
        calcResolutions: function(i) {
            if (this.resolutions.length - 1 < i) {
                this.resolutions = [];
                for (var e = 0; e < i; ++e) {
                    this.resolutions.push(this.size / Math.pow(2, e))
                }
            }
            return this.resolutions
        },
        forEachTileCoord: function(jU, jT, T, jR) {
            var e = this.getTileRangeForExtentFactory(jU, jT, T);
            for (var jP = e.minX, jS = e.maxX; jP <= jS; ++jP) {
                for (var jO = e.minY, jQ = e.maxY; jO <= jQ; ++jO) {
                    jR([jT, jP, jO])
                }
            }
        },
        getTileRangeForExtentFactory: function(T, jP, i, jO) {
            var e;
            switch (i.source) {
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    e = this.getBDTileRangeForExtentAndZ(T, jP, jO)
                } else {
                    e = this.getTileRangeForExtentAndZ(T, jP, jO)
                }
                break;
            case "EPSG3857":
                e = this.getTileRangeForExtentAndZ(T, jP, jO);
                break;
            default:
                e = this.getTileRangeForExtentAndZ(T, jP, jO);
                break
            }
            return e
        },
        getBDTileRangeForExtentAndZ: function(T, jP, jO) {
            var i = [0, 0, 0];
            this.getBDTileCoordForXYAndZ_(T[0], T[1], jP, false, i);
            var e = i[1];
            var jQ = i[2];
            this.getBDTileCoordForXYAndZ_(T[2], T[3], jP, true, i);
            return this.createOrUpdateTileRange(e, i[1], jQ, i[2], jO)
        },
        getTileRangeForExtentAndZ: function(T, jP, jO) {
            var i = [0, 0, 0];
            this.getTileCoordForXYAndZ_(T[0], T[3], jP, false, i);
            var e = i[1];
            var jQ = i[2];
            this.getTileCoordForXYAndZ_(T[2], T[1], jP, true, i);
            return this.createOrUpdateTileRange(e, i[1], jQ, i[2], jO)
        },
        getBDTileCoordForXYAndZ_: function(e, jS, jQ, jP, jO) {
            var jR = 256 * Math.pow(2, (18 - jQ));
            var T = e / jR;
            var i = jS / jR;
            if (jP) {
                T = Math.ceil(T) - 1;
                i = Math.ceil(i) - 1
            } else {
                T = Math.floor(T);
                i = Math.floor(i)
            }
            return this.createOrUpdateTileCoord(jQ, T, i, jO)
        },
        getTileCoordForXYAndZ_: function(jV, jU, jS, jT, e) {
            var jW = this.origin;
            var i = (this.resolutions.length === 0 ? this.calcResolutions(21)[jS] : this.resolutions[jS]);
            var jY = this.gridSize;
            var jO = jT ? 0.5 : 0;
            var T = jT ? 0.5 : 0;
            var jX = Math.floor((jV - jW[0]) / i + jO);
            var jQ = Math.floor((jW[1] - jU) / i + T);
            var jR = jX / jY[0];
            var jP = jQ / jY[1];
            if (jT) {
                jR = Math.ceil(jR) - 1;
                jP = Math.ceil(jP) - 1
            } else {
                jR = Math.floor(jR);
                jP = Math.floor(jP)
            }
            return this.createOrUpdateTileCoord(jS, jR, jP, e)
        },
        getTileCoordForCoordAndZ: function(T, i, e) {
            return this.getTileCoordForXYAndZ_(T[0], T[1], i, false, e)
        },
        getTileRangeExtent: function(T, jR) {
            var jS = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var jP = this.resolutions[T[0]];
            var jT = this.gridSize;
            var jQ = jS[0] + T[1] * jT[0] * jP;
            var jO = jS[1] - (T[2] + 1) * jT[1] * jP;
            var i = jQ + jT[0] * jP;
            var e = jO + jT[1] * jP;
            return this.createOrUpdateTileRange(jQ, i, jO, e, jR)
        },
        getTileLeftBottomMCPoint: function(jP, T) {
            var i = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var jO = this.resolutions[jP[0]];
            var jR = this.gridSize;
            var e = i[0] + jP[1] * jR[0] * jO;
            var jS = i[1] - (jP[2] + 1) * jR[1] * jO;
            var jQ = gcoord.transform([e, jS], gcoord.EPSG3857, gcoord.BD09MC);
            return jQ
        },
        getRangeExtent: function(i, jW, jS, jY, jO) {
            var jT = this.calPiexlResolution(jY, jO);
            var jR = jW / 2 * jT;
            var jU = jS / 2 * jT;
            var jQ = i[0] - jR;
            var T = i[0] + jR;
            var jP = i[1] - jU;
            var e = i[1] + jU;
            var jV = gcoord.transform([jQ, jP], gcoord[jO.target], gcoord[jO.source]);
            var jX = gcoord.transform([T, e], gcoord[jO.target], gcoord[jO.source]);
            return this.createOrUpdateTileRange(jV[0], jX[0], jV[1], jX[1])
        },
        getMousePoint: function(jR, jQ, i, jP, T) {
            var jO = jK(jR, jQ);
            return this.calLngLatByMapViewPixelInverse(jO.clientPos, i, jQ.width, jQ.height, jP, T)
        },
        calLngLatByMapViewPixelInverse: function(jO, e, i, jV, jW, T) {
            var jR = this.calPiexlResolution(jW, T);
            var jQ = jO.x - i / 2;
            var jP = jO.y - jV / 2;
            var jT = e[0] + jQ * jR;
            var jS = e[1] - jP * jR;
            var jU = gcoord.transform([jT, jS], gcoord[T.target], gcoord[T.source]);
            return jU
        },
        calPiexlResolution: function(T, i) {
            var e;
            switch (i.target) {
            case "BD09MC":
                e = Math.pow(2, (18 - T));
                break;
            case "EPSG3857":
                e = this.resolutions[Math.floor(T)];
                break;
            default:
                e = Math.pow(2, (18 - T));
                break
            }
            return e
        },
        getXYZCellPixelCoor: function(jR, jP, jO, i) {
            var jT = this.gridSize;
            var jS;
            var jQ;
            switch (i.source) {
            case "GCJ02":
            case "EPSG3857":
                var T = Math.pow(2, jO - 1) - (jP + 1);
                var e = jR - Math.pow(2, jO - 1);
                jS = e * jT[0];
                jQ = T * jT[1];
                break;
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    jS = jR * jT[0];
                    jQ = jP * jT[1]
                } else {
                    var T = Math.pow(2, jO - 1) - (jP + 1);
                    var e = jR - Math.pow(2, jO - 1);
                    jS = e * jT[0];
                    jQ = T * jT[1]
                }
            default:
                break
            }
            return {
                x: jS,
                y: jQ
            }
        },
        mcToPixel: function(i) {
            var T = this.resolutions[Math.floor(zoom)];
            var e = i.lng / T;
            var jO = i.lat / T;
            return [e, jO]
        },
        getBaiduCellPixelCoor: function(e, jO, T) {
            var i = 256;
            return {
                x: e * i,
                y: jO * i
            }
        },
        getRelativePixelCoor: function(jQ, jO) {
            var i = this.origin;
            var jP = jQ[0];
            var T = this.resolutions[Math.floor(jP)];
            var jR = this.gridSize;
            var e = i[0] / T + jQ[1] * jR[0];
            var jS = i[1] / T - (jQ[2] + 1) * jR[1];
            return [jO[0] - e, jO[1] - jS]
        },
        getPointPixelCoor: function(e, jT, i) {
            var jR;
            var jQ;
            var T = Math.pow(2, (18 - jT));
            var jO = this.resolutions[Math.floor(jT)];
            var jP = iN.convertMC2LL(e);
            switch (i.source) {
            case "GCJ02":
                var jS = gcoord.transform([jP.lng, jP.lat], gcoord.BD09LL, gcoord.GCJ02);
                jS = gcoord.transform(jS, gcoord.WGS84, gcoord.EPSG3857);
                jR = jS[0] / jO;
                jQ = jS[1] / jO;
                break;
            case "BD09LL":
            case "EPSG3857":
                var jS = gcoord.transform([jP.lng, jP.lat], gcoord.BD09LL, gcoord.EPSG3857);
                jR = jS[0] / jO;
                jQ = jS[1] / jO;
                break;
            case "BD09MC":
                jR = e.lng / T;
                jQ = e.lat / T;
                if (i.target === "BD09MC") {
                    jR *= dq.gridScaleFromBDMCTo3857;
                    jQ *= dq.gridScaleFromBDMCTo3857
                }
            default:
                break
            }
            return [jR, jQ]
        },
        getResolutionScale: function(i, e) {
            var T;
            switch (e.target) {
            case "BD09MC":
                T = this.gridScaleFrom3857ToBDMC;
                break;
            case "EPSG3857":
                T = this.gridScaleFromBDMCTo3857;
                break;
            default:
                T = this.gridScaleFrom3857ToBDMC;
                break
            }
            return T
        },
        getBaiduResolutionScale: function(T) {
            var i = this.resolutions[Math.floor(T)];
            var e = Math.pow(2, (18 - T));
            var jO = e / i;
            return jO
        },
        getTileCoordCenter: function(T) {
            var e = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var i = this.resolutions[T[0]];
            var jO = this.gridSize;
            return [e[0] + (T[1] + 0.5) * jO[0] * i, e[1] - (T[2] + 0.5) * jO[1] * i, ]
        },
        transformBDmcPoint: function(jP, i) {
            i = i || {};
            var T = i.source || "EPSG3857";
            var jO = iN.convertMC2LL(new cr(jP.lng,jP.lat));
            var e;
            switch (T) {
            case "GCJ02":
                e = gcoord.transform([jO.lng, jO.lat], gcoord.BD09LL, gcoord.GCJ02);
                e = gcoord.transform(e, gcoord.WGS84, gcoord.EPSG3857);
                break;
            case "EPSG3857":
                e = gcoord.transform([jO.lng, jO.lat], gcoord.BD09LL, gcoord.EPSG3857);
                break;
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    e = gcoord.transform([jO.lng, jO.lat], gcoord.BD09LL, gcoord.EPSG3857)
                } else {
                    e = [jP.lng, jP.lat]
                }
                break;
            default:
                e = gcoord.transform([jO.lng, jO.lat], gcoord.BD09LL, gcoord[T]);
                break
            }
            return e
        },
        transformPointArr: function(e, i, T) {
            return gcoord.transform(e, gcoord[i || "BD09LL"], gcoord[T || "BD09MC"])
        },
        getTilesLoop: function(T, e) {
            var i = Math.pow(2, T);
            while (e > i - 1) {
                e = e - i
            }
            while (e < 0) {
                e = e + i
            }
            return e
        },
        getLoopBox: function(e, jO) {
            var i = this.HALF_SIZE * 2;
            if (e[0] > 0 && jO[2] < 0) {
                jO[2] = jO[2] + i
            } else {
                if (e[0] < 0 && jO[0] > 0) {
                    jO[0] = jO[0] - i
                }
            }
            return jO
        },
        createOrUpdateTileCoord: function(T, e, jO, i) {
            if (i !== undefined) {
                i[0] = T;
                i[1] = e;
                i[2] = jO;
                return i
            } else {
                return [T, e, jO]
            }
        },
        createOrUpdateTileRange: function(e, jO, jP, T, i) {
            if (i !== undefined) {
                i.minX = e;
                i.maxX = jO;
                i.minY = jP;
                i.maxY = T;
                return i
            } else {
                return {
                    minX: e,
                    maxX: jO,
                    minY: jP,
                    maxY: T
                }
            }
        },
        fromEPSG4326: function(T, jT, jR) {
            var jP = T.length;
            var jQ = jR > 1 ? jR : 2;
            var e = jT;
            if (e === undefined) {
                if (jQ > 2) {
                    e = T.slice()
                } else {
                    e = new Array(jP)
                }
            }
            for (var jO = 0; jO < jP; jO += jQ) {
                e[jO] = (this.HALF_SIZE * T[jO]) / 180;
                var jS = this.RADIUS * Math.log(Math.tan((Math.PI * (+T[jO + 1] + 90)) / 360));
                if (jS > this.MAX_SAFE_Y) {
                    jS = this.MAX_SAFE_Y
                } else {
                    if (jS < -this.MAX_SAFE_Y) {
                        jS = -this.MAX_SAFE_Y
                    }
                }
                e[jO + 1] = jS
            }
            return e
        },
        toEPSG4326: function(T, jS, jR) {
            var jP = T.length;
            var jQ = jR > 1 ? jR : 2;
            var e = jS;
            if (e === undefined) {
                if (jQ > 2) {
                    e = T.slice()
                } else {
                    e = new Array(jP)
                }
            }
            for (var jO = 0; jO < jP; jO += jQ) {
                e[jO] = (180 * T[jO]) / this.HALF_SIZE;
                e[jO + 1] = (360 * Math.atan(Math.exp(T[jO + 1] / this.RADIUS))) / Math.PI - 90
            }
            return e
        },
        findParentGridAndPosition: function(jO, jY, jX, jS, jT, jV, jR) {
            if (jX - 1 < 0) {
                return false
            }
            var jZ = jO;
            var jU = jY;
            var T = jX;
            for (var jQ = 1; jQ <= jR; jQ++) {
                var e = this.findParent(jZ, jU, T, jQ);
                if (!e) {
                    return false
                }
                var jW = this.getTileKey(e);
                var jP = jS.getData(jW);
                if (jP && jP.status === "ready") {
                    if (jT[jW]) {
                        continue
                    }
                    jV.setData(jP, this.drawIndex, 0);
                    jT[jW] = true;
                    return true
                }
                jZ = e.col;
                jU = e.row;
                T = e.zoom
            }
        },
        findParent: function(i, jP, T, jO) {
            if (T - 1 < 0) {
                return null
            }
            var e = i % 2;
            var jQ = jP % 2;
            return {
                col: Math.floor(i / 2),
                row: Math.floor(jP / 2),
                sonX: e,
                sonY: jQ,
                thumbLB: [e * 0.5, 1 - jQ * 0.5 - 0.5],
                thumbRT: [e * 0.5 + 0.5, 1 - jQ * 0.5],
                radio: Math.pow(2, jO),
                zoom: T - 1,
                useZoom: T - 1
            }
        },
        getTileKey: function(e, jO) {
            jO = jO || {};
            var i = typeof jO.useZoom === "number" ? jO.useZoom : e.useZoom;
            var T = e.style || this.mapStyleId || "default";
            return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        lon2tile: function(i, e) {
            return (Math.floor((i + 180) / 360 * Math.pow(2, e)))
        },
        lat2tile: function(T, i) {
            var e = Math.tan(T * Math.PI / 180) + 1 / Math.cos(T * Math.PI / 180);
            return (Math.floor((1 - Math.log(e) / Math.PI) / 2 * Math.pow(2, i)))
        },
        tile2long: function(e, i) {
            return (e / Math.pow(2, i) * 360 - 180)
        },
        tile2lat: function(T, e) {
            var i = Math.PI - 2 * Math.PI * T / Math.pow(2, e);
            return (180 / Math.PI * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i))))
        }
    });
    function cl(i, e) {
        if (i < -90) {
            i = -90
        } else {
            if (i > 90) {
                i = 90
            }
        }
        while (e < -180) {
            e += 360
        }
        while (e > 180) {
            e -= 360
        }
        e = e || 0;
        i = i || 0;
        cr.call(this, e, i)
    }
    cl.inherits(cr, "LatLng");
    eJ.extend(cl.prototype, {
        equals: function(e) {
            return (this.lat === e.lat && this.lng === e.lng)
        },
        clone: function() {
            return new cl(this.lat,this.lng)
        },
        add: function(e) {
            return new cl(this.lng + e.lng,this.lat + e.lat)
        },
        sub: function(e) {
            return new cl(this.lat - e.lat,this.lng - e.lng)
        },
        mult: function(e) {
            return new cl(this.lng * e,this.lat * e)
        },
        div: function(e) {
            return new cl(this.lng / e,this.lat / e)
        },
        mag: function() {
            return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
        },
        getLngSpan: function(e) {
            var i = this.lng;
            var T = Math.abs(e - i);
            if (T > 180) {
                T = 360 - T
            }
            return T
        },
        toString: function() {
            return "LatLng"
        }
    });
    function cz(e, i) {
        if (e && !i) {
            i = e
        }
        this._sw = this._ne = null;
        this._swLng = this._swLat = null;
        this._neLng = this._neLat = null;
        if (e) {
            this._sw = new cl(e.lat,e.lng);
            this._ne = new cl(i.lat,i.lng);
            this._swLng = e.lng;
            this._swLat = e.lat;
            this._neLng = i.lng;
            this._neLat = i.lat
        }
    }
    eJ.extend(cz.prototype, {
        isEmpty: function() {
            return !this._sw || !this._ne
        },
        equals: function(e) {
            if (this.isEmpty()) {
                return false
            }
            return this.getSouthWest().equals(e.getSouthWest()) && this.getNorthEast().equals(e.getNorthEast())
        },
        getSouthWest: function() {
            return this._sw
        },
        getNorthEast: function() {
            return this._ne
        },
        containsBounds: function(e) {
            if (this.isEmpty() || e.isEmpty()) {
                return false
            }
            return (e._swLng > this._swLng && e._neLng < this._neLng && e._swLat > this._swLat && e._neLat < this._neLat)
        },
        getCenter: function() {
            if (this.isEmpty()) {
                return null
            }
            return new cl((this._swLat + this._neLat) / 2,(this._swLng + this._neLng) / 2)
        },
        intersects: function(T) {
            if (Math.max(T._swLng, T._neLng) < Math.min(this._swLng, this._neLng) || Math.min(T._swLng, T._neLng) > Math.max(this._swLng, this._neLng) || Math.max(T._swLat, T._neLat) < Math.min(this._swLat, this._neLat) || Math.min(T._swLat, T._neLat) > Math.max(this._swLat, this._neLat)) {
                return false
            }
            var jP = Math.max(this._swLng, T._swLng);
            var i = Math.min(this._neLng, T._neLng);
            var jO = Math.max(this._swLat, T._swLat);
            var e = Math.min(this._neLat, T._neLat);
            this._sw = new cl(jO,jP);
            this._ne = new cl(e,i);
            this._swLng = jP;
            this._swLat = jO;
            this._neLng = i;
            this._neLat = e;
            return true
        },
        containsPoint: function(e) {
            if (this.isEmpty()) {
                return false
            }
            return (e.lng >= this._swLng && e.lng <= this._neLng && e.lat >= this._swLat && e.lat <= this._neLat)
        },
        extend: function(e) {
            var i = e.lng;
            var T = e.lat;
            if (!this._sw) {
                this._sw = new cl(0,0)
            }
            if (!this._ne) {
                this._ne = new cl(0,0)
            }
            if (!this._swLng || this._swLng > i) {
                this._sw.lng = this._swLng = i
            }
            if (!this._neLng || this._neLng < i) {
                this._ne.lng = this._neLng = i
            }
            if (!this._swLat || this._swLat > T) {
                this._sw.lat = this._swLat = T
            }
            if (!this._neLat || this._neLat < T) {
                this._ne.lat = this._neLat = T
            }
        },
        toSpan: function() {
            if (this.isEmpty()) {
                return new cl(0,0)
            }
            return new cl(Math.abs(this._neLat - this._swLat),Math.abs(this._neLng - this._swLng))
        },
        union: function(i) {
            if (i.isEmpty()) {
                return false
            }
            var e = i.getSouthWest();
            var T = i.getNorthEast();
            if (this._swLat > e.lat) {
                this._swLat = e.lat
            }
            if (this._swLng > e.lng) {
                this._swLng = e.lng
            }
            if (this._neLat < T.lat) {
                this._neLat = T.lat
            }
            if (this._neLng < T.lng) {
                this._neLng = T.lng
            }
            this._sw = new cl(this._swLat,this._swLng);
            this._ne = new cl(this._neLat,this._neLng);
            return true
        },
        toString: function() {
            return this._swLat + ", " + this._swLng + ", " + this._neLat + ", " + this._neLng
        }
    });
    window.COORDINATES_WGS84 = 1;
    window.COORDINATES_WGS84_MC = 2;
    window.COORDINATES_GCJ02 = 3;
    window.COORDINATES_GCJ02_MC = 4;
    window.COORDINATES_BD09 = 5;
    window.COORDINATES_BD09_MC = 6;
    window.COORDINATES_MAPBAR = 7;
    window.COORDINATES_51 = 8;
    function fD() {}
    fD.inherits(cZ, "Convertor");
    eJ.extend(fD.prototype, {
        translate: function(i, jP, jO, T) {
            jP = jP || 1;
            jO = jO || 5;
            if (i.length > 10) {
                T && T({
                    status: 25
                });
                return
            }
            var e = B.apiHost + "/geoconv/v1/?coords=";
            eJ.each(i, function(jQ) {
                e += jQ.lng + "," + jQ.lat + ";"
            });
            e = e.replace(/;$/gi, "");
            e = e + "&from=" + jP + "&to=" + jO + "&v=gl&type=webgl&ak=" + ez;
            c7.request(e, function(jR) {
                if (jR.status === 0) {
                    var jQ = [];
                    eJ.each(jR.result, function(jS) {
                        jQ.push(new cr(jS.x,jS.y))
                    });
                    delete jR.result;
                    jR.points = jQ
                }
                T && T(jR)
            })
        }
    });
    var dZ = {
        idle: 0,
        freeze: 1,
        zooming: 2,
        dragging: 3,
        moving: 4,
        readyToDrag: 5,
        readyToPinch: 6,
        pinching: 7,
        stdMapCtrlDrag: 8,
        KEY_LEFT: 37,
        KEY_UP: 38,
        KEY_RIGHT: 39,
        KEY_DOWN: 40,
        arrowOpCodes: {
            37: 1,
            38: 2,
            39: 4,
            40: 8
        }
    };
    var ai = {
        _map: null,
        _html: "<div class='BMap_opMask' unselectable='on'></div>",
        _maskElement: null,
        _cursor: "default",
        inUse: false,
        show: function(e) {
            if (!this._map) {
                this._map = e
            }
            this.inUse = true;
            if (!this._maskElement) {
                this._createMask(e)
            }
            this._maskElement.style.display = "block"
        },
        _createMask: function(i) {
            if (!this._map) {
                this._map = i
            }
            if (!this._map) {
                return
            }
            var e = this._maskElement = bI(this._map.container, this._html);
            eJ.on(e, "mouseup", function(T) {
                if (T.button == 2) {
                    g5(T)
                }
            });
            eJ.on(e, "contextmenu", g5);
            e.style.display = "none"
        },
        getDrawPoint: function(jO, jR, jP) {
            jO = window.event || jO;
            var i = jO.offsetX || jO.layerX || 0;
            var jQ = parseInt(jO.offsetY) || parseInt(jO.layerY) || 0;
            var T = jO.target || jO.srcElement;
            if (T != ai.getDom(this._map) && jR == true) {
                while (T && T != this._map.container) {
                    if (!(T.clientWidth == 0 && T.clientHeight == 0 && T.offsetParent && T.offsetParent.nodeName.toLowerCase() == "td")) {
                        i += T.offsetLeft;
                        jQ += T.offsetTop
                    }
                    T = T.offsetParent
                }
            }
            if (T != ai.getDom(this._map) && T != this._map.container) {
                return
            }
            if (typeof i === "undefined" || typeof jQ === "undefined") {
                return
            }
            if (isNaN(i) || isNaN(jQ)) {
                return
            }
            if (jP) {
                i = i + jP.x;
                jQ = jQ + jP.y
            }
            return this._map.pixelToPointIn(new e4(i,jQ))
        },
        hide: function() {
            if (!this._map) {
                return
            }
            this.inUse = false;
            if (this._maskElement) {
                this._maskElement.style.display = "none"
            }
        },
        getDom: function(e) {
            if (!this._maskElement) {
                this._createMask(e)
            }
            return this._maskElement
        },
        setCursor: function(e) {
            this._cursor = e || "default";
            if (this._maskElement) {
                this._maskElement.style.cursor = this._cursor
            }
        }
    };
    function aQ() {
        this._type = "overlay"
    }
    aQ.inherits(eJ.BaseClass, "Overlay");
    aQ.getZIndex = function(i, e) {
        i = i * 1;
        if (!i) {
            return 0
        }
        if (e) {
            i = iN.convertMC2LL(new cr(0,i)).lat
        }
        return (i * -100000) << 1
    }
    ;
    eJ.extend(aQ.prototype, {
        _i: function(e) {
            this._map = e;
            if (!this.domElement && bP(this.initialize)) {
                this.domElement = this.initialize(e);
                if (this.domElement) {
                    this.domElement.style.WebkitUserSelect = "none"
                }
            }
            this.draw()
        },
        initialize: function(e) {
            throw "initialize方法未实现"
        },
        draw: function() {
            throw "draw方法未实现"
        },
        remove: function() {
            if (this.domElement && this.domElement.parentNode) {
                this.domElement.parentNode.removeChild(this.domElement)
            }
            this.domElement = null;
            this.dispatchEvent(new fu("onremove"))
        },
        hide: function() {
            this._visible = false;
            eJ.hide(this.domElement)
        },
        show: function() {
            this._visible = true;
            eJ.show(this.domElement)
        },
        getMap: function() {
            return this._map
        },
        dispose: function() {
            eJ.BaseClass.prototype.decontrol.call(this)
        }
    });
    function en() {
        eJ.BaseClass.call(this);
        aQ.call(this);
        this._visible = true;
        this._visibleInternal = true;
        this.zIndex = 0;
        this.infoWindow = null;
        this._dblclickTime = 0
    }
    en.inherits(aQ, "OverlayInternal");
    eJ.extend(en.prototype, {
        initialize: function(e) {
            this.map = e;
            eJ.BaseClass.call(this, this.hashCode);
            return null
        },
        draw: function() {},
        remove: function() {
            this.decontrol();
            aQ.prototype.remove.call(this)
        },
        hide: function() {
            this._visible = false
        },
        show: function() {
            this._visible = true
        },
        getDom: function() {
            return this.domElement
        },
        getContainer: function() {
            return this.domElement
        },
        setClassName: function() {},
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (i.hasOwnProperty(e)) {
                    this._config[e] = i[e]
                }
            }
        },
        getPoint: function(T, jO) {
            if (!T) {
                return this.point
            } else {
                var e = jO ? jO.width : 0;
                var jP = jO ? jO.height : 0;
                if (this.map) {
                    var i = this.map.pointToPixelIn(this.point);
                    if (this._config && this._config.offset) {
                        i.x = i.x + this._config.offset.width + e;
                        i.y = i.y + this._config.offset.height + jP
                    } else {
                        i.x = i.x + e;
                        i.y = i.y + jP
                    }
                    return this.map.pixelToPointIn(i)
                }
            }
        },
        setZIndex: function(e) {
            this.zIndex = e
        },
        isVisible: function() {
            if (!this.domElement) {
                return false
            }
            return !!this._visible
        },
        enableMassClear: function() {
            this._config.enableMassClear = true
        },
        disableMassClear: function() {
            this._config.enableMassClear = false
        },
        showInternal: function() {
            this._visibleInternal = true
        },
        hideInternal: function(e) {
            this._visibleInternal = false;
            this._hideInternalReason = e
        },
        addContextMenu: function(e) {
            this._menu = e
        },
        removeContextMenu: function(e) {
            this._menu = null
        }
    });
    function aO(e) {
        this.map = e;
        this._overlays = {};
        this._overlayArray = [];
        this._customOverlays = [];
        e._overlays = this._overlays;
        e._overlayArray = this._overlayArray;
        e._customOverlays = this._customOverlays;
        this._zoomingOrMoving = false;
        this._init()
    }
    aO.prototype._init = function() {
        if (this.map._renderType !== "webgl") {
            this._createOverlayContainers()
        } else {
            this._createWebGLOverlayContainers()
        }
        this._bind()
    }
    ;
    aO.prototype._createOverlayContainers = function() {
        var e = this.map;
        e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
        e.temp.overlayDivEx = e.overlayDivEx = this._createOverlayDiv(e.platform, 50);
        e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
        e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
        e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
        e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
        e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400);
        if (e.isCanvasMap()) {
            e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDivEx, 50)
        } else {
            e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDiv, 200)
        }
    }
    ;
    aO.prototype._createWebGLOverlayContainers = function() {
        var e = this.map;
        e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
        e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
        e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
        e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
        e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
        e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400)
    }
    ;
    aO.prototype._createOverlayDiv = function(e, jO) {
        var T = bT("div");
        var i = T.style;
        i.position = "absolute";
        i.top = i.left = i.width = i.height = "0";
        i.zIndex = jO;
        e.appendChild(T);
        return T
    }
    ;
    aO.prototype._bind = function() {
        var jP = this.map;
        var jO = this;
        function i(jR) {
            jO.draw(jR)
        }
        if (jP._renderType !== "webgl") {
            jP.addEventListener("load", i);
            jP.addEventListener("moveend", i);
            jP.addEventListener("resize", i);
            jP.addEventListener("zoomend", i);
            jP.addEventListener("zooming_inner", i)
        } else {
            jP.on("update", i)
        }
        jP.addEventListener("zoomend", function(jR) {
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
            }
        });
        jP.addEventListener("oncenterandzoom", function(jR) {
            jO.draw(jR);
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
            }
        });
        jP.addEventListener("maptypechange", function(jR) {
            if (this.mapType === "B_EARTH_MAP") {
                if (this._panes.mapPane) {
                    this._panes.mapPane.style.display = "none"
                }
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
                if (this._panes.markerPane) {
                    this._panes.markerPane.style.display = "none"
                }
            } else {
                if (this._panes.mapPane) {
                    this._panes.mapPane.style.display = ""
                }
                if (this._panes.markerPane) {
                    this._panes.markerPane.style.display = ""
                }
                if (this.temp.overlayDiv.style.display === "none") {
                    this.temp.overlayDiv.style.display = "";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = ""
                    }
                    if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                        this.temp.infoWin.redraw()
                    }
                }
            }
            jO.draw(jR)
        });
        jP.on("earthstatuschange", function jQ(jR) {
            jO.draw(jR)
        });
        jP.addEventListener("addoverlay", function(jV) {
            var jS = jV.target;
            if (jS instanceof en) {
                if (!jO._overlays[jS.hashCode]) {
                    jO._overlays[jS.hashCode] = jS;
                    jO._overlayArray.push(jS)
                }
            } else {
                var jU = false;
                for (var jT = 0, jR = jO._customOverlays.length; jT < jR; jT++) {
                    if (jO._customOverlays[jT] === jS) {
                        jU = true;
                        break
                    }
                }
                if (!jU) {
                    jO._customOverlays.push(jS)
                }
            }
        });
        jP.addEventListener("removeoverlay", function(jU) {
            var jS = jU.target;
            if (jS instanceof en) {
                delete jO._overlays[jS.hashCode];
                for (var jT = 0; jT < jO._overlayArray.length; jT++) {
                    if (jO._overlayArray[jT] === jS) {
                        jO._overlayArray.splice(jT, 1);
                        break
                    }
                }
            } else {
                for (var jT = 0, jR = jO._customOverlays.length; jT < jR; jT++) {
                    if (jO._customOverlays[jT] === jS) {
                        jO._customOverlays.splice(jT, 1);
                        break
                    }
                }
            }
        });
        jP.addEventListener("clearoverlays", function(jT) {
            this.closeInfoWindow();
            this.closeSimpleInfoWindow();
            for (var jS in jO._overlays) {
                if (jO._overlays[jS]._config.enableMassClear) {
                    this.removeOverlay(jO._overlays[jS])
                }
            }
            for (var jR = jO._customOverlays.length - 1; jR > 0; jR--) {
                if (jO._customOverlays[jR].enableMassClear !== false) {
                    this.removeOverlay(jO._customOverlays[jR]);
                    jO._customOverlays.splice(jR, 1)
                }
            }
        });
        jP.addEventListener("infowindowopen", function(jS) {
            var jR = this.infoWindow;
            if (jR) {
                eJ.hide(jR.popDom);
                eJ.hide(jR.shadowDom)
            }
        });
        function T() {
            if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
                if (jO._zoomingOrMoving === false) {
                    this._panes.markerMouseTarget.style.display = "none";
                    jO._zoomingOrMoving = true
                }
            }
        }
        function e(jT) {
            if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
                if (jO._zoomingOrMoving === true) {
                    this._panes.markerMouseTarget.style.display = "";
                    jO._zoomingOrMoving = false;
                    for (var jS = 0; jS < jO._overlayArray.length; jS++) {
                        var jR = jO._overlayArray[jS];
                        if (jR instanceof js === true) {
                            jR.draw(jT)
                        }
                    }
                }
            }
        }
        jP.addEventListener("movestart", T);
        jP.addEventListener("moveend", e);
        jP.addEventListener("zoomstart", T);
        jP.addEventListener("zoomend", e);
        jP.addEventListener("animation_start", T);
        jP.addEventListener("animation_end", e);
        jP.addEventListener("displayoptions_changed", function(jR) {
            if (this._displayOptions.overlay === false) {
                this.temp.overlayDiv.style.display = "none"
            } else {
                this.temp.overlayDiv.style.display = ""
            }
        })
    }
    ;
    aO.prototype.draw = function(jR) {
        jR = jR || {};
        if (this.map.getMapType() === "B_EARTH_MAP") {
            for (var jP = 0; jP < this._overlayArray.length; jP++) {
                var T = this._overlayArray[jP];
                if (T instanceof id === true) {
                    continue
                }
                if (this._zoomingOrMoving) {
                    if (T instanceof js === true) {
                        continue
                    }
                }
                T.draw(jR)
            }
        } else {
            for (var jP = 0, jO = this._overlayArray.length; jP < jO; jP++) {
                var T = this._overlayArray[jP];
                if (this._zoomingOrMoving && T instanceof js === true) {
                    continue
                }
                T.draw(jR)
            }
        }
        eJ.each(this._customOverlays, function(e) {
            e.draw(jR)
        });
        if (this.map.temp.infoWin) {
            this.map.temp.infoWin.setPosition(jR.center, jR.zoom)
        }
        if (this.map.getMapType() !== "B_EARTH_MAP" && this.map._renderType !== "webgl") {
            if (bw.DrawerSelector) {
                var jQ = bw.DrawerSelector.getDrawer(this.map);
                jQ.setPalette()
            }
        }
    }
    ;
    bw.register(function(e) {
        e._overlayMgr = new aO(e)
    });
    function id(e) {
        en.call(this);
        this._config = {
            strokeColor: "#000",
            strokeWeight: 2,
            strokeOpacity: 1,
            strokeStyle: "solid",
            dashArray: null,
            strokeLineCap: "round",
            strokeLineJoin: "round",
            enableMassClear: true,
            getParseTolerance: null,
            getParseCacheIndex: null,
            enableParse: true,
            enableEditing: false,
            mouseOverTolerance: 5,
            geodesic: false,
            clip: true,
            texture: null,
            textureSize: null,
            textureZoomWithMap: false,
            textureRepeat: true
        };
        this.setConfig(e);
        if (this._config.strokeOpacity < 0 || this._config.strokeOpacity > 1) {
            this._config.strokeOpacity = 1
        }
        if (this._config.fillOpacity < 0 || this._config.fillOpacity > 1) {
            this._config.fillOpacity = 1
        }
        if (this._config.strokeStyle !== "solid" && this._config.strokeStyle !== "dashed" && this._config.strokeStyle !== "dotted") {
            this._config.strokeStyle = "solid"
        }
        this.domElement = null;
        this._bounds = new hF();
        this.points = [];
        this.greatCirclePoints = [];
        this._parseCache = [];
        this._holesCache = [];
        this._parseCacheGL = [];
        this._parseCacheGLRaw = [];
        this._areaCacheGL = [];
        this._strokeStyleInfoForGL = [[]];
        this._fillStyleInfoForGL = "";
        this.vertexMarkers = [];
        this._temp = {}
    }
    id.JOININDEX = {
        miter: 0,
        round: 1,
        bevel: 2
    };
    id.CAPINDEX = {
        round: 0,
        butt: 1,
        square: 2
    };
    id.inherits(en, "Graph");
    id.getGraphPoints = function(i) {
        var e = [];
        if (!i || i.length === 0) {
            return e
        }
        if (typeof i === "string") {
            var T = i.split(";");
            eJ.each(T, function(jP) {
                var jO = jP.split(",");
                e.push(new cr(jO[0],jO[1]))
            })
        }
        if (i.constructor === Array && i.length > 0) {
            e = i
        }
        return e
    }
    ;
    id.parseTolerance = {
        0: [0.09, 0.005, 0.0001, 0.00001],
        1: [9000, 500, 20, 1]
    };
    eJ.extend(id.prototype, {
        initialize: function(e) {
            this.map = e;
            return null
        },
        draw: function() {},
        setPoints: function(e) {
            this._clearCache();
            this.points = id.getGraphPoints(e).slice(0);
            this._calcBounds()
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds = new hF();
            if (!this.hasMultipleParts) {
                eJ.each(this.points, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                eJ.each(this.points, function(i) {
                    eJ.each(i, function(T) {
                        e._bounds.extend(T)
                    })
                })
            }
        },
        getPoints: function() {
            return this.points
        },
        getPathIn: function() {
            return this.points
        },
        setPointAt: function(i, e) {
            if (!e || !this.points[i]) {
                return
            }
            this._clearCache();
            this.points[i] = new cr(e.lng,e.lat);
            this._calcBounds()
        },
        setPositionAt: function(i, e) {
            if (!e || !this.points[i]) {
                return
            }
            var T = iN.convertLL2MC(e);
            this.setPointAt(i, T)
        },
        setOptions: function(i) {
            i = i || {};
            for (var e in i) {
                if (i.hasOwnProperty(e)) {
                    this._config[e] = i[e]
                }
            }
        },
        setStrokeColor: function(e) {
            this._config.strokeColor = e
        },
        getStrokeColor: function() {
            return this._config.strokeColor
        },
        setStrokeLineCap: function(e) {
            this._config.strokeLineCap = e
        },
        getStrokeLineCap: function() {
            return this._config.strokeLineCap
        },
        setStrokeLineJoin: function(e) {
            this._config.strokeLineJoin = e
        },
        getStrokeLineJoin: function() {
            return this._config.strokeLineJoin
        },
        setStrokeWeight: function(e) {
            if (e > 0) {
                this._config.strokeWeight = e
            }
        },
        getStrokeWeight: function() {
            return this._config.strokeWeight
        },
        setStrokeOpacity: function(e) {
            if (!e || e > 1 || e < 0) {
                return
            }
            this._config.strokeOpacity = e
        },
        getStrokeOpacity: function() {
            return this._config.strokeOpacity
        },
        setFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.fillOpacity = e
        },
        getFillOpacity: function() {
            return this._config.fillOpacity
        },
        setStrokeStyle: function(e) {
            if (e !== "solid" && e !== "dashed" && e !== "dotted") {
                return
            }
            this._config.strokeStyle = e
        },
        getStrokeStyle: function() {
            return this._config.strokeStyle
        },
        setFillColor: function(e) {
            this._config.fillColor = e || ""
        },
        getFillColor: function() {
            return this._config.fillColor
        },
        getBoundsIn: function() {
            this._bounds.setMinMax();
            return this._bounds
        },
        getBounds: function() {
            var e = this.getBoundsIn();
            var i = new hF(iN.convertMC2LL(e.getSouthWest()),iN.convertMC2LL(e.getNorthEast()));
            i.setMinMax();
            return i
        },
        remove: function() {
            if (this.map) {
                this.map.removeEventListener("onmousemove", this._graphMouseEvent);
                this.map.removeEventListener("onclick", this._graphClickEvent)
            }
            en.prototype.remove.call(this);
            this._clearCache();
            var e = new fu("onlineupdate");
            e.action = "remove";
            e.overlay = this;
            this.fire(e)
        },
        enableEditing: function() {
            if (this.points.length < 2) {
                return
            }
            this._config.enableEditing = true;
            var e = this;
            gK.load("poly", function() {
                e.addVertexs()
            }, true)
        },
        disableEditing: function() {
            this._config.enableEditing = false;
            var e = this;
            gK.load("poly", function() {
                e.clearVertexs()
            }, true)
        },
        getLength: function() {
            if (typeof this._length === "number") {
                return this._length
            }
            if (typeof this._config.totalLength === "number") {
                this._length = this._config.totalLength;
                return this._length
            }
            var T = 0;
            if (this.points.length <= 1) {
                this._length = 0;
                return T
            }
            for (var e = 0; e < this.points.length - 1; e++) {
                T += ef(this.points[e], this.points[e + 1])
            }
            this._length = T;
            return T
        },
        getParsedPoints: function() {
            var e = this._simplification(this.points);
            if (this.hasMultipleParts) {
                return e
            }
            return [e]
        },
        _simplification: function(jT) {
            var e = this.map;
            var jS = this.getParseCacheIndex(e.getZoom());
            var jV;
            if (this._parseCache[jS]) {
                jV = this._parseCache[jS]
            } else {
                var jQ = jT;
                if (this.greatCirclePoints.length > 0) {
                    jQ = this.greatCirclePoints
                }
                var jP = e.config.coordType === 2 ? 1 : e.config.coordType;
                var jR = this.getParseTolerance(e.getZoom(), jP);
                if (!this.hasMultipleParts) {
                    var jU = dG(jQ, jR)
                } else {
                    var jU = [];
                    for (var T = 0; T < jQ.length; T++) {
                        var jO = dG(jQ[T], jR);
                        jU.push(jO)
                    }
                }
                jV = this._parseCache[jS] = jU
            }
            return jV
        },
        _clearCache: function() {
            this._length = null;
            this._parseCache.length = 0;
            this._parseCacheGL.length = 0;
            this._parseCacheGLRaw.length = 0;
            this._areaCacheGL.length = 0
        },
        canRenderDataBeMerged: function() {
            var e = this._config;
            if (e.texture) {
                return false
            }
            return true
        }
    });
    if (eJ.Browser.ie && document.namespaces && !document.namespaces.olv) {
        document.namespaces.add("olv", "urn:schemas-microsoft-com:vml")
    }
    function bp(jQ, jO, jX) {
        var jU = false, jS = false, jV = false, jZ = new e4(jQ.x,jQ.y), jY = new e4(jO.x,jO.y), jP = fv(jZ, jX), T = fv(jY, jX), jW;
        var j1, j0;
        var jT = jX.minX
          , jR = jX.minY
          , i = jX.maxX
          , e = jX.maxY;
        do {
            if (jP.all == 0 && T.all == 0) {
                jU = true;
                jV = true
            } else {
                if ((jP.all & T.all) != 0) {
                    jV = true
                } else {
                    if (jP.all != 0) {
                        jW = jP
                    } else {
                        jW = T
                    }
                    if (jW.top) {
                        j1 = jZ.x + (jY.x - jZ.x) * (jR - jZ.y) / (jY.y - jZ.y);
                        j0 = jR
                    } else {
                        if (jW.bottom) {
                            j1 = jZ.x + (jY.x - jZ.x) * (e - jZ.y) / (jY.y - jZ.y);
                            j0 = e
                        } else {
                            if (jW.right) {
                                j0 = jZ.y + (jY.y - jZ.y) * (i - jZ.x) / (jY.x - jZ.x);
                                j1 = i
                            } else {
                                if (jW.left) {
                                    j0 = jZ.y + (jY.y - jZ.y) * (jT - jZ.x) / (jY.x - jZ.x);
                                    j1 = jT
                                }
                            }
                        }
                    }
                    jS = true;
                    if (jW.all == jP.all) {
                        jZ.x = Math.round(j1);
                        jZ.y = Math.round(j0);
                        jP = fv(jZ, jX)
                    } else {
                        jY.x = Math.round(j1);
                        jY.y = Math.round(j0);
                        T = fv(jY, jX)
                    }
                }
            }
        } while (!jV);
        if (jU) {
            return {
                pixel0: new e4(jZ.x,jZ.y),
                pixel1: new e4(jY.x,jY.y),
                clip: jS ? true : false
            }
        }
    }
    function fv(i, jP) {
        var T = {
            top: 0,
            bottom: 0,
            right: 0,
            left: 0,
            all: 0
        };
        var e = i.x
          , jO = i.y;
        if (jO < jP.minY) {
            T.top = 8;
            T.all += T.top
        } else {
            if (jO > jP.maxY) {
                T.bottom = 4;
                T.all += T.bottom
            }
        }
        if (e > jP.maxX) {
            T.right = 2;
            T.all += T.right
        } else {
            if (e < jP.minX) {
                T.left = 1;
                T.all += T.left
            }
        }
        return T
    }
    function dx(e) {
        e = e.replace(/,/gm, " ");
        e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2");
        e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2");
        e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\s])/gm, "$1 $2");
        e = e.replace(/([^\s])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2");
        e = e.replace(/([0-9])([+\-])/gm, "$1 $2");
        e = e.replace(/(\.[0-9]*)(\.)/gm, "$1 $2");
        e = e.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm, "$1 $3 $4 ");
        e = dx.compressSpaces(e);
        e = dx.trim(e);
        this.PathParser = new (function(i) {
            this.tokens = i.split(" ");
            this.reset = function() {
                this.i = -1;
                this.command = "";
                this.previousCommand = "";
                this.start = new dx.Point(0,0);
                this.control = new dx.Point(0,0);
                this.current = new dx.Point(0,0);
                this.points = [];
                this.angles = []
            }
            ;
            this.isEnd = function() {
                return this.i >= this.tokens.length - 1
            }
            ;
            this.isCommandOrEnd = function() {
                if (this.isEnd()) {
                    return true
                }
                return this.tokens[this.i + 1].match(/^[A-Za-z]$/) != null
            }
            ;
            this.isRelativeCommand = function() {
                switch (this.command) {
                case "m":
                case "l":
                case "h":
                case "v":
                case "c":
                case "s":
                case "q":
                case "t":
                case "a":
                case "z":
                    return true;
                    break
                }
                return false
            }
            ;
            this.getToken = function() {
                this.i++;
                return this.tokens[this.i]
            }
            ;
            this.getScalar = function() {
                return parseFloat(this.getToken())
            }
            ;
            this.nextCommand = function() {
                this.previousCommand = this.command;
                this.command = this.getToken()
            }
            ;
            this.getPoint = function() {
                var T = new dx.Point(this.getScalar(),this.getScalar());
                return this.makeAbsolute(T)
            }
            ;
            this.getAsControlPoint = function() {
                var T = this.getPoint();
                this.control = T;
                return T
            }
            ;
            this.getAsCurrentPoint = function() {
                var T = this.getPoint();
                this.current = T;
                return T
            }
            ;
            this.getReflectedControlPoint = function() {
                if (this.previousCommand.toLowerCase() != "c" && this.previousCommand.toLowerCase() != "s" && this.previousCommand.toLowerCase() != "q" && this.previousCommand.toLowerCase() != "t") {
                    return this.current
                }
                var T = new dx.Point(2 * this.current.x - this.control.x,2 * this.current.y - this.control.y);
                return T
            }
            ;
            this.makeAbsolute = function(T) {
                if (this.isRelativeCommand()) {
                    T.x += this.current.x;
                    T.y += this.current.y
                }
                return T
            }
            ;
            this.addMarker = function(jO, jP, T) {
                if (T != null && this.angles.length > 0 && this.angles[this.angles.length - 1] == null) {
                    this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(T)
                }
                this.addMarkerAngle(jO, jP == null ? null : jP.angleTo(jO))
            }
            ;
            this.addMarkerAngle = function(jO, T) {
                this.points.push(jO);
                this.angles.push(T)
            }
            ;
            this.getMarkerPoints = function() {
                return this.points
            }
            ;
            this.getMarkerAngles = function() {
                for (var jO = 0; jO < this.angles.length; jO++) {
                    if (this.angles[jO] == null) {
                        for (var T = jO + 1; T < this.angles.length; T++) {
                            if (this.angles[T] != null) {
                                this.angles[jO] = this.angles[T];
                                break
                            }
                        }
                    }
                }
                return this.angles
            }
        }
        )(e);
        this.bounds = function() {
            return this.draw(null)
        }
        ;
        this.draw = function(j8) {
            var ka = this.PathParser;
            ka.reset();
            var jV = new dx.BoundingBox();
            if (j8 != null) {
                j8.beginPath()
            }
            while (!ka.isEnd()) {
                ka.nextCommand();
                switch (ka.command) {
                case "M":
                case "m":
                    var j5 = ka.getAsCurrentPoint();
                    ka.addMarker(j5);
                    jV.addPoint(j5.x, j5.y);
                    if (j8 != null) {
                        j8.moveTo(j5.x, j5.y)
                    }
                    ka.start = ka.current;
                    while (!ka.isCommandOrEnd()) {
                        var j5 = ka.getAsCurrentPoint();
                        ka.addMarker(j5, ka.start);
                        jV.addPoint(j5.x, j5.y);
                        if (j8 != null) {
                            j8.lineTo(j5.x, j5.y)
                        }
                    }
                    break;
                case "L":
                case "l":
                    while (!ka.isCommandOrEnd()) {
                        var ke = ka.current;
                        var j5 = ka.getAsCurrentPoint();
                        ka.addMarker(j5, ke);
                        jV.addPoint(j5.x, j5.y);
                        if (j8 != null) {
                            j8.lineTo(j5.x, j5.y)
                        }
                    }
                    break;
                case "H":
                case "h":
                    while (!ka.isCommandOrEnd()) {
                        var jO = new dx.Point((ka.isRelativeCommand() ? ka.current.x : 0) + ka.getScalar(),ka.current.y);
                        ka.addMarker(jO, ka.current);
                        ka.current = jO;
                        jV.addPoint(ka.current.x, ka.current.y);
                        if (j8 != null) {
                            j8.lineTo(ka.current.x, ka.current.y)
                        }
                    }
                    break;
                case "V":
                case "v":
                    while (!ka.isCommandOrEnd()) {
                        var jO = new dx.Point(ka.current.x,(ka.isRelativeCommand() ? ka.current.y : 0) + ka.getScalar());
                        ka.addMarker(jO, ka.current);
                        ka.current = jO;
                        jV.addPoint(ka.current.x, ka.current.y);
                        if (j8 != null) {
                            j8.lineTo(ka.current.x, ka.current.y)
                        }
                    }
                    break;
                case "C":
                case "c":
                    while (!ka.isCommandOrEnd()) {
                        var kc = ka.current;
                        var jQ = ka.getPoint();
                        var jR = ka.getAsControlPoint();
                        var jX = ka.getAsCurrentPoint();
                        ka.addMarker(jX, jR, jQ);
                        jV.addBezierCurve(kc.x, kc.y, jQ.x, jQ.y, jR.x, jR.y, jX.x, jX.y);
                        if (j8 != null) {
                            j8.bezierCurveTo(jQ.x, jQ.y, jR.x, jR.y, jX.x, jX.y)
                        }
                    }
                    break;
                case "S":
                case "s":
                    while (!ka.isCommandOrEnd()) {
                        var kc = ka.current;
                        var jQ = ka.getReflectedControlPoint();
                        var jR = ka.getAsControlPoint();
                        var jX = ka.getAsCurrentPoint();
                        ka.addMarker(jX, jR, jQ);
                        jV.addBezierCurve(kc.x, kc.y, jQ.x, jQ.y, jR.x, jR.y, jX.x, jX.y);
                        if (j8 != null) {
                            j8.bezierCurveTo(jQ.x, jQ.y, jR.x, jR.y, jX.x, jX.y)
                        }
                    }
                    break;
                case "Q":
                case "q":
                    while (!ka.isCommandOrEnd()) {
                        var kc = ka.current;
                        var jR = ka.getAsControlPoint();
                        var jX = ka.getAsCurrentPoint();
                        ka.addMarker(jX, jR, jR);
                        jV.addQuadraticCurve(kc.x, kc.y, jR.x, jR.y, jX.x, jX.y);
                        if (j8 != null) {
                            j8.quadraticCurveTo(jR.x, jR.y, jX.x, jX.y)
                        }
                    }
                    break;
                case "T":
                case "t":
                    while (!ka.isCommandOrEnd()) {
                        var kc = ka.current;
                        var jR = ka.getReflectedControlPoint();
                        ka.control = jR;
                        var jX = ka.getAsCurrentPoint();
                        ka.addMarker(jX, jR, jR);
                        jV.addQuadraticCurve(kc.x, kc.y, jR.x, jR.y, jX.x, jX.y);
                        if (j8 != null) {
                            j8.quadraticCurveTo(jR.x, jR.y, jX.x, jX.y)
                        }
                    }
                    break;
                case "A":
                case "a":
                    while (!ka.isCommandOrEnd()) {
                        var kc = ka.current;
                        var jU = ka.getScalar();
                        var jT = ka.getScalar();
                        var T = ka.getScalar() * (Math.PI / 180);
                        var jW = ka.getScalar();
                        var jS = ka.getScalar();
                        var jX = ka.getAsCurrentPoint();
                        var kh = new dx.Point(Math.cos(T) * (kc.x - jX.x) / 2 + Math.sin(T) * (kc.y - jX.y) / 2,-Math.sin(T) * (kc.x - jX.x) / 2 + Math.cos(T) * (kc.y - jX.y) / 2);
                        var j9 = Math.pow(kh.x, 2) / Math.pow(jU, 2) + Math.pow(kh.y, 2) / Math.pow(jT, 2);
                        if (j9 > 1) {
                            jU *= Math.sqrt(j9);
                            jT *= Math.sqrt(j9)
                        }
                        var j1 = (jW == jS ? -1 : 1) * Math.sqrt(((Math.pow(jU, 2) * Math.pow(jT, 2)) - (Math.pow(jU, 2) * Math.pow(kh.y, 2)) - (Math.pow(jT, 2) * Math.pow(kh.x, 2))) / (Math.pow(jU, 2) * Math.pow(kh.y, 2) + Math.pow(jT, 2) * Math.pow(kh.x, 2)));
                        if (isNaN(j1)) {
                            j1 = 0
                        }
                        var j0 = new dx.Point(j1 * jU * kh.y / jT,j1 * -jT * kh.x / jU);
                        var jP = new dx.Point((kc.x + jX.x) / 2 + Math.cos(T) * j0.x - Math.sin(T) * j0.y,(kc.y + jX.y) / 2 + Math.sin(T) * j0.x + Math.cos(T) * j0.y);
                        var j7 = function(ki) {
                            return Math.sqrt(Math.pow(ki[0], 2) + Math.pow(ki[1], 2))
                        };
                        var j3 = function(kj, ki) {
                            return (kj[0] * ki[0] + kj[1] * ki[1]) / (j7(kj) * j7(ki))
                        };
                        var kf = function(kj, ki) {
                            return (kj[0] * ki[1] < kj[1] * ki[0] ? -1 : 1) * Math.acos(j3(kj, ki))
                        };
                        var kg = kf([1, 0], [(kh.x - j0.x) / jU, (kh.y - j0.y) / jT]);
                        var jZ = [(kh.x - j0.x) / jU, (kh.y - j0.y) / jT];
                        var jY = [(-kh.x - j0.x) / jU, (-kh.y - j0.y) / jT];
                        var kd = kf(jZ, jY);
                        if (j3(jZ, jY) <= -1) {
                            kd = Math.PI
                        }
                        if (j3(jZ, jY) >= 1) {
                            kd = 0
                        }
                        var j6 = 1 - jS ? 1 : -1;
                        var kb = kg + j6 * (kd / 2);
                        var i = new dx.Point(jP.x + jU * Math.cos(kb),jP.y + jT * Math.sin(kb));
                        ka.addMarkerAngle(i, kb - j6 * Math.PI / 2);
                        ka.addMarkerAngle(jX, kb - j6 * Math.PI);
                        jV.addPoint(jX.x, jX.y);
                        if (j8 != null) {
                            var j3 = jU > jT ? jU : jT;
                            var j4 = jU > jT ? 1 : jU / jT;
                            var j2 = jU > jT ? jT / jU : 1;
                            j8.translate(jP.x, jP.y);
                            j8.rotate(T);
                            j8.scale(j4, j2);
                            j8.arc(0, 0, j3, kg, kg + kd, 1 - jS);
                            j8.scale(1 / j4, 1 / j2);
                            j8.rotate(-T);
                            j8.translate(-jP.x, -jP.y)
                        }
                    }
                    break;
                case "Z":
                case "z":
                    if (j8 != null) {
                        j8.closePath()
                    }
                    ka.current = ka.start
                }
            }
            return jV
        }
        ;
        this.getMarkers = function() {
            var jO = this.PathParser.getMarkerPoints();
            var jQ = this.PathParser.getMarkerAngles();
            var jP = [];
            for (var T = 0; T < jO.length; T++) {
                jP.push([jO[T], jQ[T]])
            }
            return jP
        }
    }
    dx.trim = function(e) {
        return e.replace(/^\s+|\s+$/g, "")
    }
    ;
    dx.compressSpaces = function(e) {
        return e.replace(/[\s\r\t\n]+/gm, " ")
    }
    ;
    dx.Point = function(e, i) {
        this.x = e;
        this.y = i
    }
    ;
    dx.Point.prototype.angleTo = function(e) {
        return Math.atan2(e.y - this.y, e.x - this.x)
    }
    ;
    dx.Point.prototype.applyTransform = function(e) {
        var i = this.x * e[0] + this.y * e[2] + e[4];
        var T = this.x * e[1] + this.y * e[3] + e[5];
        this.x = i;
        this.y = T
    }
    ;
    dx.BoundingBox = function(i, jO, e, T) {
        this.x1 = Number.NaN;
        this.y1 = Number.NaN;
        this.x2 = Number.NaN;
        this.y2 = Number.NaN;
        this.x = function() {
            return this.x1
        }
        ;
        this.y = function() {
            return this.y1
        }
        ;
        this.width = function() {
            return this.x2 - this.x1
        }
        ;
        this.height = function() {
            return this.y2 - this.y1
        }
        ;
        this.addPoint = function(jP, jQ) {
            if (jP != null) {
                if (isNaN(this.x1) || isNaN(this.x2)) {
                    this.x1 = jP;
                    this.x2 = jP
                }
                if (jP < this.x1) {
                    this.x1 = jP
                }
                if (jP > this.x2) {
                    this.x2 = jP
                }
            }
            if (jQ != null) {
                if (isNaN(this.y1) || isNaN(this.y2)) {
                    this.y1 = jQ;
                    this.y2 = jQ
                }
                if (jQ < this.y1) {
                    this.y1 = jQ
                }
                if (jQ > this.y2) {
                    this.y2 = jQ
                }
            }
        }
        ;
        this.addX = function(jP) {
            this.addPoint(jP, null)
        }
        ;
        this.addY = function(jP) {
            this.addPoint(null, jP)
        }
        ;
        this.addBoundingBox = function(jP) {
            this.addPoint(jP.x1, jP.y1);
            this.addPoint(jP.x2, jP.y2)
        }
        ;
        this.addQuadraticCurve = function(jU, jT, jQ, jP, jW, jV) {
            var jS = jU + 2 / 3 * (jQ - jU);
            var jR = jT + 2 / 3 * (jP - jT);
            var jY = jS + 1 / 3 * (jW - jU);
            var jX = jR + 1 / 3 * (jV - jT);
            this.addBezierCurve(jU, jT, jS, jY, jR, jX, jW, jV)
        }
        ;
        this.addBezierCurve = function(j2, j1, jT, jR, jY, jW, j4, j3) {
            var jU = [j2, j1]
              , jS = [jT, jR]
              , jQ = [jY, jW]
              , jP = [j4, j3];
            this.addPoint(jU[0], jU[1]);
            this.addPoint(jP[0], jP[1]);
            for (i1 = 0; i1 <= 1; i1++) {
                var j5 = function(j9) {
                    return Math.pow(1 - j9, 3) * jU[i1] + 3 * Math.pow(1 - j9, 2) * j9 * jS[i1] + 3 * (1 - j9) * Math.pow(j9, 2) * jQ[i1] + Math.pow(j9, 3) * jP[i1]
                };
                var j7 = 6 * jU[i1] - 12 * jS[i1] + 6 * jQ[i1];
                var j8 = -3 * jU[i1] + 9 * jS[i1] - 9 * jQ[i1] + 3 * jP[i1];
                var j6 = 3 * jS[i1] - 3 * jU[i1];
                if (j8 == 0) {
                    if (j7 == 0) {
                        continue
                    }
                    var j0 = -j6 / j7;
                    if (0 < j0 && j0 < 1) {
                        if (i1 == 0) {
                            this.addX(j5(j0))
                        }
                        if (i1 == 1) {
                            this.addY(j5(j0))
                        }
                    }
                    continue
                }
                var jV = Math.pow(j7, 2) - 4 * j6 * j8;
                if (jV < 0) {
                    continue
                }
                var jZ = (-j7 + Math.sqrt(jV)) / (2 * j8);
                if (0 < jZ && jZ < 1) {
                    if (i1 == 0) {
                        this.addX(j5(jZ))
                    }
                    if (i1 == 1) {
                        this.addY(j5(jZ))
                    }
                }
                var jX = (-j7 - Math.sqrt(jV)) / (2 * j8);
                if (0 < jX && jX < 1) {
                    if (i1 == 0) {
                        this.addX(j5(jX))
                    }
                    if (i1 == 1) {
                        this.addY(j5(jX))
                    }
                }
            }
        }
        ;
        this.isPointInBox = function(jP, jQ) {
            return (this.x1 <= jP && jP <= this.x2 && this.y1 <= jQ && jQ <= this.y2)
        }
        ;
        this.addPoint(i, jO);
        this.addPoint(e, T)
    }
    ;
    function e2(i, e) {
        this.id = bw.getGUID("symbol_icon_");
        this.size = (i instanceof iE) ? i : new iE(2,2);
        this.anchor = (e instanceof iE) ? e : new iE(this.size.width / 2,this.size.height / 2);
        this.data = null;
        this.offset = this.anchor;
        this.imageSize = this.size;
        this.imageOffset = new iE(0,0);
        this.style = {
            scale: 1,
            rotation: 0
        };
        this.srcSetObject = {};
        this._initOptions = {
            size: this.size,
            scale: this.style.scale,
            rotation: this.style.rotation
        };
        this.overlay = null;
        this.isReDraw = false
    }
    e2.prototype.add = function() {
        const e = document.createElement("canvas");
        e.width = this.size.width;
        e.height = this.size.height;
        this.context = e.getContext("2d")
    }
    ;
    e2.prototype.remove = function() {
        if (this.context) {
            this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);
            this.context.canvas.width = 0;
            this.context.canvas.height = 0
        }
        this.context = null;
        this.data = null
    }
    ;
    e2.prototype.render = function(e) {
        return true
    }
    ;
    e2.prototype.resetInitOptions = function() {
        this._initOptions = new iE(this.size.width,this.size.height);
        this._initOptions.scale = this.style.scale;
        this._initOptions.rotation = this.style.rotation
    }
    ;
    e2.prototype.update = function() {
        var e = this.overlay;
        if (e) {
            if (e.domElement) {
                var jO = (this.style.scale - this._initOptions.scale) / this._initOptions.scale;
                if (jO >= 0) {
                    jO = jO + 1
                } else {
                    jO = 1 + jO
                }
                var i = this._initOptions.rotation === 0 ? this.style.rotation : (this.style.rotation - this._initOptions.rotation);
                while (i < 0) {
                    i += 360
                }
                var T = e.domElement.style;
                T.width = this._initOptions.width + "px";
                T.height = this._initOptions.height + "px";
                T.transform = "rotate(" + i + "deg) scale(" + jO + ")"
            }
            if (!this.isReDraw) {
                this._refresh(e)
            }
        }
    }
    ;
    e2.prototype._refresh = function(e) {
        e.textureCoord = e.textureCoordGLMap = null;
        var i = new fu("onstatus_change");
        i.overlay = e;
        i.action = "setIcon";
        i.imageUrlChanged = true;
        setTimeout(function() {
            e.fire(i)
        }, 100)
    }
    ;
    e2.prototype.generateRenderData = function() {
        var i = this.offset = this.anchor;
        var e = this.size;
        var T = [];
        T.push(-i.width, i.height - e.height, 0);
        T.push(e.width - i.width, i.height - e.height, 0);
        T.push(e.width - i.width, i.height, 0);
        T.push(-i.width, i.height - e.height, 0);
        T.push(e.width - i.width, i.height, 0);
        T.push(-i.width, i.height, 0);
        return {
            vertex: T
        }
    }
    ;
    e2.prototype.getCurrentImageUrl = function() {
        return this.id
    }
    ;
    e2.prototype.getRenderData = function() {
        this._renderData = this.generateRenderData();
        return this._renderData
    }
    ;
    e2.prototype.toString = function() {
        return "Symbol"
    }
    ;
    var fi = {
        14: "m-0.00573,-10c-5.51975,0 -9.99427,4.47453 -9.99427,9.99428c0,5.51974 4.47452,9.99425 9.99427,9.99425c5.51972,0 9.99426,-4.47452 9.99426,-9.99425c0,-5.51975 -4.47453,-9.99428 -9.99426,-9.99428zm0,17.92491c-4.37412,0 -7.93132,-3.55788 -7.93132,-7.93063c0,-4.37345 3.5572,-7.93134 7.93132,-7.93134c4.37411,0 7.93062,3.55721 7.93062,7.93134c0,4.37412 -3.55789,7.93063 -7.93062,7.93063zm-0.00068,-15.4088c-0.38027,0 -0.68696,0.30807 -0.68696,0.68765l0,6.34078l-4.15752,1.81815c-0.34794,0.15266 -0.50611,0.55837 -0.35344,0.90632c0.11278,0.25787 0.36445,0.4119 0.6292,0.4119c0.09214,0 0.18635,-0.01857 0.27575,-0.05845l4.55635,-1.99279c0.00344,-0.00137 0.00619,-0.00275 0.00894,-0.00412l0.00275,-0.00138c0.01032,-0.00413 0.01581,-0.01376 0.02545,-0.01719c0.07151,-0.03576 0.13821,-0.07771 0.19185,-0.1341c0.02337,-0.02338 0.03644,-0.05364 0.05431,-0.08045c0.03301,-0.04401 0.06946,-0.08733 0.0894,-0.14028c0.0165,-0.04126 0.01787,-0.08596 0.02613,-0.12997c0.00894,-0.04469 0.02614,-0.08389 0.02614,-0.1286l0,-6.7905c0,-0.37889 -0.30807,-0.68697 -0.68833,-0.68697z",
        13: "m-0.00706,-9.5c-5.24281,0 -9.49294,4.25065 -9.49294,9.49294c0,5.24331 4.25014,9.49294 9.49294,9.49294c5.24281,0 9.49294,-4.24964 9.49294,-9.49294c0,-5.2423 -4.25013,-9.49294 -9.49294,-9.49294zm3.08857,3.85997c0.61044,0 1.10279,0.96873 1.10279,2.16271s-0.49384,2.1647 -1.10279,2.1647c-0.60844,0 -1.10228,-0.96873 -1.10228,-2.16372s0.49434,-2.16369 1.10228,-2.16369zm-6.28628,0c0.60844,0 1.10228,0.96873 1.10228,2.16271s-0.49284,2.1647 -1.10228,2.1647s-1.10277,-0.96873 -1.10277,-2.16372s0.49383,-2.16369 1.10277,-2.16369zm3.21167,12.16493c-1.87667,0 -3.63373,-1.14814 -5.14663,-3.14239c1.56571,1.02156 3.27993,1.59064 5.07786,1.59064c1.90905,0 3.72343,-0.63985 5.36539,-1.78497c-1.54429,2.11685 -3.35767,3.33672 -5.29662,3.33672l-0.00001,0z",
        12: "m9.27295,5.92958l-2.64443,-4.57961c-0.79727,-1.37992 -2.10131,-3.63983 -2.8986,-5.01973l-2.64441,-4.57858c-0.79782,-1.38093 -2.10186,-1.38093 -2.89913,0l-2.64335,4.57858c-0.79728,1.3799 -2.10188,3.63981 -2.89916,5.01973l-2.64387,4.57961c-0.79728,1.38101 -0.14472,2.50988 1.44983,2.50988l16.37221,0c1.59561,0 2.24711,-1.12887 1.45091,-2.50988l0,0zm-8.88166,0.70811l-1.56837,0l0,-1.50484l1.56837,0l0,1.50484zm-0.07527,-2.61447l-1.41621,0l-0.14044,-6.44231l1.68427,0l-0.12761,6.44231l0,0z",
        11: "m8.08295,-6.56414l-3.59319,0l0,-1.43586l-8.98155,0l0,1.43586l-3.59321,0c-1.0569,0 -1.915,0.85509 -1.915,1.91159l0,9.92258c0,1.05357 0.8581,1.91158 1.915,1.91158l16.16796,0c1.05692,0 1.91501,-0.85801 1.91501,-1.91158l0,-9.92258c0,-1.0565 -0.85809,-1.91159 -1.91501,-1.91159l0,0zm-8.08397,12.66884c-3.20143,0 -5.80643,-2.60031 -5.80643,-5.79596c0,-3.19569 2.605,-5.79891 5.80643,-5.79891s5.80789,2.60322 5.80789,5.79891c0,3.19565 -2.60794,5.79596 -5.80789,5.79596zm0,-9.6804c-2.15036,0 -3.89142,1.7394 -3.89142,3.88444c0,2.14503 1.74252,3.8844 3.89142,3.8844c2.1489,0 3.89141,-1.73937 3.89141,-3.8844c0,-2.14503 -1.74105,-3.88444 -3.89141,-3.88444z",
        10: "m0,-10c-0.20885,0 -0.39491,0.08583 -0.55177,0.24149c-0.15674,0.15536 -0.28646,0.37838 -0.39429,0.65665c-0.21586,0.55655 -0.34853,1.33844 -0.42114,2.27477c-0.07231,0.93446 -0.08474,2.02273 -0.05447,3.18765c-2.58175,1.05925 -7.81787,3.24648 -8.23854,3.73474c-0.56001,0.65029 -0.37908,1.3954 -0.15331,1.89002l8.608,-1.75235c0.18202,2.28374 0.4407,4.5455 0.66615,6.31771c-0.8418,0.24646 -2.41323,0.73303 -2.73754,1.03474c-0.4469,0.41562 -0.4469,1.75793 -0.4469,1.75793l3.52318,-0.28665c0.08286,0.57874 0.13486,0.9163 0.13486,0.9163l0.00511,0.03042l0.02778,0l0.06486,0l0.02778,0l0.00511,-0.03042c0,0 0.05185,-0.33756 0.13486,-0.9163l3.52424,0.28665c0,0 0,-1.34231 -0.44688,-1.75793c-0.32446,-0.30172 -1.89697,-0.7895 -2.73847,-1.0358c0.22484,-1.76681 0.4832,-4.02001 0.66507,-6.29634l8.50712,1.73203c0.22561,-0.49462 0.40765,-1.23973 -0.15237,-1.89002c-0.41538,-0.48221 -5.52504,-2.62071 -8.1386,-3.69423c0.03119,-1.17999 0.01971,-2.28285 -0.05353,-3.22816l0,-0.00233c-0.07263,-0.93523 -0.20545,-1.71635 -0.42114,-2.27244c-0.10784,-0.27827 -0.23634,-0.50114 -0.3932,-0.65665c-0.15689,-0.15567 -0.34293,-0.24149 -0.55195,-0.24149l0,0l0,0l0,0l0.00001,0l0,0l-0.00003,0.00001z",
        3: "m-10,0l10,-10l10,10l-10,10l-10,-10z",
        5: "M0,0 L-5,-15 0,-10 5,-15 z",
        6: "M0,0 L5,15 0,10 -5,15z",
        7: "M-5,-15 L0,0 5,-15",
        8: "M-5,15 L0,0 5,15",
        9: "m0,-24c-4.4183,0 -8,3.58167 -8,8c0,1.42102 0.3816,2.75 1.0312,3.90601c0.1079,0.19202 0.221,0.38098 0.3438,0.56299l6.625,11.53101l6.625,-11.53101c0.102,-0.151 0.19,-0.31097 0.281,-0.46899l0.063,-0.09399c0.649,-1.15601 1.031,-2.48499 1.031,-3.90601c0,-4.41833 -3.582,-8 -8,-8zm0,4c2.209,0 4,1.79089 4,4c0,2.20898 -1.791,4 -4,4c-2.2091,0 -4,-1.79102 -4,-4c0,-2.20911 1.7909,-4 4,-4z"
    };
    var b1 = {
        BMap_Symbol_SHAPE_CIRCLE: 1,
        BMap_Symbol_SHAPE_RECTANGLE: 2,
        BMap_Symbol_SHAPE_RHOMBUS: 3,
        BMap_Symbol_SHAPE_STAR: 4,
        BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW: 5,
        BMap_Symbol_SHAPE_FORWARD_CLOSED_ARROW: 6,
        BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW: 7,
        BMap_Symbol_SHAPE_FORWARD_OPEN_ARROW: 8,
        BMap_Symbol_SHAPE_POINT: 9,
        BMap_Symbol_SHAPE_PLANE: 10,
        BMap_Symbol_SHAPE_CAMERA: 11,
        BMap_Symbol_SHAPE_WARNING: 12,
        BMap_Symbol_SHAPE_SMILE: 13,
        BMap_Symbol_SHAPE_CLOCK: 14
    };
    function dz(i, e) {
        e2.call(this);
        e = e || {};
        this.style = {
            anchor: e.anchor || new iE(0,0),
            fillColor: e.fillColor || "#000",
            fillOpacity: e.fillOpacity || 0,
            scale: e.scale || 1,
            rotation: e.rotation || 0,
            strokeColor: e.strokeColor || "#000",
            strokeOpacity: e.strokeOpacity === undefined ? 1 : e.strokeOpacity,
            strokeWeight: e.strokeWeight
        };
        this._type = (typeof i === "number") ? i : "UserDefined";
        this._anchor = this.style.anchor;
        this._originOffset = new iE(0,0);
        this.anchor = new iE(0,0);
        this._rawPath = i;
        this._buildPath(true)
    }
    dz.inherits(e2, "SVGSymbol");
    dz.generateKey = function(jO, i) {
        if (!jO) {
            return null
        }
        if (parseInt(jO)) {
            jO = parseInt(jO)
        }
        if (typeof jO === "number") {
            if (!fi[jO] && ![0, 1, 2, 0, 4][jO]) {
                return null
            }
        }
        var e = {
            anchor: i.anchor || new iE(0,0),
            fillColor: i.fillColor || "#000",
            fillOpacity: i.fillOpacity || 0,
            scale: i.scale || 1,
            rotation: i.rotation || 0,
            strokeColor: i.strokeColor || "#000",
            strokeOpacity: i.strokeOpacity === undefined ? 1 : i.strokeOpacity,
            strokeWeight: i.strokeWeight
        };
        var T = o({
            path: jO,
            style: e
        });
        return "symbol_svg_icon_" + T
    }
    ;
    eJ.extend(dz.prototype, {
        _buildPath: function(jZ) {
            var jT = this;
            var jV = jT._rawPath;
            if (parseInt(jV)) {
                jV = parseInt(jV)
            }
            if (fi[jV]) {
                jV = fi[jV]
            }
            jT.id = dz.generateKey(jV, jT.style);
            if (!jT.id) {
                return
            }
            switch (jV) {
            case b1.BMap_Symbol_SHAPE_CIRCLE:
                var jW = jT._calSize(2)
                  , jU = jW
                  , j4 = jT.style.scale
                  , jP = jT._anchor;
                this.size = new iE(jW,jU);
                this.anchor = new iE(jW / 2 + jP.width * j4,jU / 2 + jP.height * j4);
                jT.path = b1.BMap_Symbol_SHAPE_CIRCLE;
                break;
            case b1.BMap_Symbol_SHAPE_RECTANGLE:
                var jW = jT._calSize(4)
                  , jU = jT._calSize(2)
                  , jP = jT._anchor
                  , j1 = jT.style.strokeWeight !== undefined ? jT.style.strokeWeight : jT.style.scale
                  , j4 = jT.style.scale;
                this.size = new iE(jW,jU);
                this._originOffset = new iE(Math.floor(-j1 / 2),Math.floor(-j1 / 2));
                this.anchor = new iE(jW / 2 + jP.width * j4,jU / 2 + jP.height * j4);
                jT.path = b1.BMap_Symbol_SHAPE_RECTANGLE;
                break;
            case b1.BMap_Symbol_SHAPE_STAR:
                var jW = jT._calSize(20)
                  , jU = jW
                  , jP = jT._anchor
                  , j4 = jT.style.scale;
                this.size = new iE(jW,jU);
                this.anchor = new iE(jW / 2 + jP.width * j4,jU / 2 + jP.height * j4);
                jT.path = b1.BMap_Symbol_SHAPE_STAR;
                break;
            default:
                var jV = new dx(jV)
                  , jO = jV.bounds()
                  , jY = jT.style.rotation * Math.PI / 180
                  , j1 = jT.style.strokeWeight !== undefined ? jT.style.strokeWeight : jT.style.scale
                  , j4 = jT.style.scale
                  , jP = jT._anchor;
                var j3 = new iE(Math.floor(jO.x1 * j4 - j1 / 2),Math.floor(jO.y1 * j4 - j1 / 2))
                  , e = {
                    topleft: new e4(Math.floor(jO.x1 * j4 - j1 / 2) - j4 * jP.width,Math.floor(jO.y1 * j4 - j1 / 2) - j4 * jP.height),
                    bottomleft: new e4(Math.floor(jO.x1 * j4 - j1 / 2) - j4 * jP.width,Math.ceil(jO.y2 * j4 - j1 / 2) - j4 * jP.height),
                    topright: new e4(Math.ceil(jO.x2 * j4 + j1 / 2) - j4 * jP.width,Math.floor(jO.y1 * j4 - j1 / 2) - j4 * jP.height),
                    bottomright: new e4(Math.ceil(jO.x2 * j4 + j1 / 2) - j4 * jP.width,Math.ceil(jO.y2 * j4 + j1 / 2) - j4 * jP.height)
                }
                  , i = {}
                  , j2 = []
                  , jS = [];
                var j0 = e.topleft.x === 0 ? 0 : Math.atan(e.topleft.y / e.topleft.x)
                  , T = j0 + jY;
                for (var jX in e) {
                    var jR = Math.cos(jY) * e[jX].x - Math.sin(jY) * e[jX].y
                      , jQ = Math.sin(jY) * e[jX].x + Math.cos(jY) * e[jX].y;
                    i[jX] = new e4(jR,jQ);
                    j2.push(jR);
                    jS.push(jQ)
                }
                xmax = Math.max.apply(Math, j2),
                ymax = Math.max.apply(Math, jS),
                xmin = Math.min.apply(Math, j2),
                ymin = Math.min.apply(Math, jS);
                this.size = new iE(Math.ceil(xmax - xmin),Math.ceil(ymax - ymin));
                this.anchor = new iE(-xmin,-ymin);
                this._originOffset = new iE(xmin - i.topleft.x,ymin - i.topleft.y);
                this._innerOffset = new e4(j3.width,j3.height);
                this._rotationAngle = jY;
                jT.path = jV;
                break
            }
            this.imageSize = new iE(this.size.width,this.size.height);
            this.offset = this.anchor;
            if (jZ) {
                this.resetInitOptions()
            }
        },
        _calSize: function(e) {
            if (this.style.strokeWeight) {
                return e * this.style.scale + this.style.strokeWeight % 3 + this.style.strokeWeight
            } else {
                return e * this.style.scale + this.style.scale + this.style.scale % 2
            }
        },
        render: function(T) {
            var jU = this, jO = this.style.scale, jV, jW = this.size;
            if (this.context) {
                jV = this.context;
                if (this.context.canvas.width / 2 !== this.size.width || this.context.canvas.height / 2 !== this.size.height) {
                    this.context.canvas.width = this.size.width * 2;
                    this.context.canvas.height = this.size.height * 2
                }
                jV.clearRect(0, 0, this.size.width * 2, this.size.height * 2);
                jV.fillStyle = hi.convert2rgba(jU.style.fillColor, jU.style.fillOpacity);
                jV.strokeStyle = hi.convert2rgba(jU.style.strokeColor, jU.style.strokeOpacity);
                jV.save()
            } else {
                return false
            }
            jV.scale(2, 2);
            jV.lineCap = "round";
            jV.lineJoin = "round";
            jV.lineWidth = jU.style.strokeWeight || jO;
            if (jU._originOffset) {
                jV.translate(-jU._originOffset.width, -jU._originOffset.height)
            }
            if (jU._rotationAngle) {
                jV.rotate(jU._rotationAngle)
            }
            if (jU._innerOffset) {
                jV.translate(-jU._innerOffset.x, -jU._innerOffset.y)
            }
            switch (jU.path) {
            case b1.BMap_Symbol_SHAPE_CIRCLE:
                jV.arc(jW.width / 2, jW.height / 2, jO, 0, 2 * Math.PI);
                break;
            case b1.BMap_Symbol_SHAPE_RECTANGLE:
                jV.rect(0, 0, 4 * jO, 2 * jO);
                break;
            case b1.BMap_Symbol_SHAPE_STAR:
                jV.beginPath();
                var jQ = jW.width / 2
                  , jS = jO * 10;
                var jP = (2 * Math.PI) / 10;
                for (var jR = 11; jR != 0; jR--) {
                    var e = jS * (jR % 2 + 1) / 2;
                    var jT = jP * jR;
                    jV.lineTo((e * Math.sin(jT)) + jQ, (e * Math.cos(jT)) + jQ)
                }
                jV.closePath();
                break;
            default:
                jV.lineWidth = jV.lineWidth / jO;
                jV.scale(jO, jO);
                jU.path.draw(jV)
            }
            jV.fill();
            jV.stroke();
            jV.restore();
            this.data = jV.getImageData(0, 0, this.size.width * 2, this.size.height * 2);
            return true
        },
        setPath: function(e) {
            this._rawPath = e;
            this._buildPath();
            this.update()
        },
        setAnchor: function(e) {
            this._anchor = this.style.anchor = e;
            this._buildPath();
            this.update()
        },
        setRotation: function(e) {
            this.style.rotation = e;
            this._buildPath();
            this.update()
        },
        setScale: function(e) {
            this.style.scale = e;
            this._buildPath();
            this.update()
        },
        setStrokeWeight: function(e) {
            this.style.strokeWeight = e;
            this._buildPath();
            this.update()
        },
        setStrokeColor: function(e) {
            e = hi.convert2rgba(e, this.style.strokeOpacity);
            this.style.strokeColor = e;
            this._buildPath();
            this.update()
        },
        setStrokeOpacity: function(e) {
            this.style.strokeOpacity = e;
            this._buildPath();
            this.update()
        },
        setFillOpacity: function(e) {
            this.style.fillOpacity = e;
            this._buildPath();
            this.update()
        },
        setFillColor: function(e) {
            this.style.fillColor = e;
            this._buildPath();
            this.update()
        }
    });
    bw.SymbolShapeType = b1;
    function i6(jQ, jO, T) {
        if (!jQ || !jO) {
            return
        }
        this.imageUrl = null;
        this.imageDom = null;
        if (typeof jQ === "string") {
            this.imageUrl = jQ
        } else {
            this.imageDom = jQ;
            if (!this.imageDom.id) {
                this.imageDom.id = bw.getGUID("icon_dom_")
            }
        }
        this.size = jO;
        var jP = new iE(Math.floor(jO.width / 2),Math.floor(jO.height / 2));
        var i = {
            offset: jP,
            imageOffset: new iE(0,0)
        };
        T = T || {};
        for (var e in T) {
            i[e] = T[e]
        }
        if (T.anchor) {
            i.offset = T.anchor
        }
        this.anchor = this.offset = i.offset;
        this.imageOffset = i.imageOffset;
        this.infoWindowOffset = T.infoWindowOffset || this.offset;
        this.printImageUrl = T.printImageUrl || "";
        this.imageSize = T.imageSize || this.size;
        this.srcSetObject = {};
        this.setImageSrcset(T.srcset || T.srcSet)
    }
    i6.prototype.setImageUrl = function(e) {
        if (!e) {
            return
        }
        this.imageUrl = e;
        this._renderData = null
    }
    ;
    i6.prototype.getCurrentImageUrl = function() {
        if (window.devicePixelRatio > 1 && this.srcSetObject["2x"]) {
            return this.srcSetObject["2x"]
        }
        return this.imageUrl
    }
    ;
    i6.prototype.setPrintImageUrl = function(e) {
        if (!e) {
            return
        }
        this.printImageUrl = e
    }
    ;
    i6.prototype.setSize = function(e) {
        if (!e) {
            return
        }
        this.size = new iE(e.width,e.height);
        this._renderData = null
    }
    ;
    i6.prototype.setOffset = function(e) {
        if (!e) {
            return
        }
        this.anchor = this.offset = new iE(e.width,e.height);
        this._renderData = null
    }
    ;
    i6.prototype.setAnchor = function(e) {
        this.setOffset(e)
    }
    ;
    i6.prototype.setImageOffset = function(e) {
        if (!e) {
            return
        }
        this.imageOffset = new iE(e.width,e.height);
        this._renderData = null
    }
    ;
    i6.prototype.setInfoWindowOffset = function(e) {
        if (!e) {
            return
        }
        this.infoWindowOffset = new iE(e.width,e.height)
    }
    ;
    i6.prototype.setImageSize = function(e) {
        if (!e) {
            return
        }
        this.imageSize = new iE(e.width,e.height)
    }
    ;
    i6.prototype.setImageSrcset = function(T) {
        var e = "";
        if (!T) {
            return
        }
        for (var i in T) {
            if (T.hasOwnProperty(i)) {
                this.srcSetObject[i] = T[i];
                e = T[i] + " " + i + ","
            }
        }
        this.srcSet = e
    }
    ;
    i6.prototype.toString = function() {
        return "Icon"
    }
    ;
    i6.prototype.generateRenderData = function(jQ) {
        var T = this.offset;
        var e = this.size;
        var jS = this.imageOffset;
        var jR = [];
        jR.push(-T.width, T.height - e.height, 0);
        jR.push(e.width - T.width, T.height - e.height, 0);
        jR.push(e.width - T.width, T.height, 0);
        jR.push(-T.width, T.height - e.height, 0);
        jR.push(e.width - T.width, T.height, 0);
        jR.push(-T.width, T.height, 0);
        if (jQ !== 0) {
            for (var jP = 0; jP < jR.length; jP += 3) {
                var jO = vec2.fromValues(jR[jP], jR[jP + 1]);
                vec2.rotate(jO, jO, [0, 0], ie(-jQ));
                jR[jP] = jO[0];
                jR[jP + 1] = jO[1]
            }
        }
        return {
            vertex: jR
        }
    }
    ;
    i6.prototype.getRenderData = function(e) {
        this._renderData = this.generateRenderData(e);
        return this._renderData
    }
    ;
    function dP(T, i) {
        eJ.BaseClass.call(this);
        this.content = T;
        this.map = null;
        this._config = {
            width: 0,
            height: 0,
            maxWidth: 600,
            offset: new iE(0,0),
            title: "",
            maxContent: "",
            enableMaximize: false,
            enableAutoPan: true,
            enableCloseOnClick: true,
            margin: [10, 10, 40, 10],
            collisions: [[10, 10], [10, 10], [10, 10], [10, 10]],
            ifMaxScene: false,
            onClosing: function() {
                return true
            }
        };
        this.setConfig(i);
        if (this._config.width !== 0) {
            if (this._config.width < 220) {
                this._config.width = 220
            }
            if (this._config.width > 730) {
                this._config.width = 730
            }
        }
        if (this._config.height !== 0) {
            if (this._config.height < 60) {
                this._config.height = 60
            }
            if (this._config.height > 650) {
                this._config.height = 650
            }
        }
        if (this._config.maxWidth !== 0) {
            if (this._config.maxWidth < 220) {
                this._config.maxWidth = 220
            }
            if (this._config.maxWidth > 730) {
                this._config.maxWidth = 730
            }
        }
        this.isWinMax = false;
        this.IMG_PATH = B.imgPath;
        this.overlay = null;
        var e = this;
        gK.load("infowindow", function() {
            e._draw()
        })
    }
    dP.inherits(eJ.BaseClass, "InfoWindow");
    eJ.extend(dP.prototype, {
        setWidth: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 220) {
                    e = 220
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.width = e
        },
        setHeight: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 60) {
                    e = 60
                }
                if (e > 650) {
                    e = 650
                }
            }
            this._config.height = e
        },
        setMaxWidth: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 220) {
                    e = 220
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.maxWidth = e
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        setContent: function(e) {
            this.content = e || ""
        },
        getContent: function() {
            return this.content
        },
        setMaxContent: function(e) {
            this._config.maxContent = e || ""
        },
        redraw: function() {},
        enableAutoPan: function() {
            this._config.enableAutoPan = true
        },
        disableAutoPan: function() {
            this._config.enableAutoPan = false
        },
        enableCloseOnClick: function() {
            this._config.enableCloseOnClick = true
        },
        disableCloseOnClick: function() {
            this._config.enableCloseOnClick = false
        },
        enableMaximize: function() {
            this._config.enableMaximize = true
        },
        disableMaximize: function() {
            this._config.enableMaximize = false
        },
        show: function() {
            this._visible = true
        },
        hide: function() {
            this._visible = false
        },
        close: function() {
            this.hide()
        },
        dispose: function() {
            eJ.BaseClass.prototype.decontrol.call(this)
        },
        maximize: function() {
            this.isWinMax = true
        },
        restore: function() {
            this.isWinMax = false
        },
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (typeof (this._config[e]) === typeof (i[e])) {
                    this._config[e] = i[e]
                }
            }
        },
        isVisible: function() {
            return this.isOpen()
        },
        isOpen: function() {
            return false
        },
        getPointIn: function() {
            if (this.overlay && this.overlay.getPoint) {
                return this.overlay.getPoint()
            }
        },
        getTitle: function() {
            return this._config.title || ""
        },
        getPosition: function() {
            return this.latLng
        },
        getPoint: function() {
            var e = this.getPointIn();
            if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                var i = iN.convertMC2LL(e);
                return et(i)
            }
            return iN.convertMC2LL(e)
        },
        getOffset: function() {
            return this._config.offset
        },
        dispose: function() {
            eJ.BaseClass.prototype.decontrol.call(this)
        },
        toString: function() {
            return "InfoWindow"
        }
    });
    hr.prototype.openInfoWindow = function(T, e) {
        T.latLng = new cl(e.lat,e.lng);
        var i = iN.convertLL2MC(e);
        this.openInfoWindowIn(T, i)
    }
    ;
    hr.prototype.closeInfoWindow = function() {
        var e = this.temp.infoWin || this.temp._infoWin;
        if (e && e.overlay) {
            e.overlay.closeInfoWindow()
        }
    }
    ;
    hr.prototype.openInfoWindowIn = function(jO, e) {
        if (!jO || jO.toString() !== "InfoWindow" || !e || e.toString() !== "Point") {
            return
        }
        var i = this.temp;
        if (!i.marker) {
            var T = new i6(B.imgPath + "blank.gif",{
                width: 1,
                height: 1
            });
            i.marker = new js(e,{
                icon: T,
                width: 1,
                height: 1,
                offset: new iE(0,0),
                infoWindowOffset: new iE(0,0),
                clickable: false
            });
            i.marker._fromMap = 1
        } else {
            i.marker.setPoint(e)
        }
        this.addOverlay(i.marker);
        i.marker.show();
        i.marker.openInfoWindow(jO)
    }
    ;
    en.prototype.openInfoWindow = function(e) {
        if (this.map) {
            this.map.closeInfoWindow();
            e._visible = true;
            this.map.temp._infoWin = e;
            e.overlay = this;
            eJ.BaseClass.call(e, e.hashCode)
        }
    }
    ;
    en.prototype.closeInfoWindow = function() {
        if (this.map && this.map.temp._infoWin) {
            this.map.temp._infoWin._visible = false;
            this.map.temp._infoWin.decontrol();
            this.map.temp._infoWin = null
        }
    }
    ;
    function bc(T, i) {
        en.call(this);
        this.content = T;
        this.map = null;
        this.domElement = null;
        this._config = {
            width: 0,
            offset: new iE(0,0),
            styles: {
                backgroundColor: "#fff",
                border: "1px solid #f00",
                padding: "1px",
                whiteSpace: "nowrap",
                fontSize: "12px",
                zIndex: "80",
                MozUserSelect: "none"
            },
            point: null,
            enableMassClear: true
        };
        i = i || {};
        this.setConfig(i);
        if (this._config.width < 0) {
            this._config.width = 0
        }
        this.point = this._config.point;
        var e = this;
        gK.load("marker", function() {
            e._draw()
        })
    }
    bc.inherits(en, "Label");
    eJ.extend(bc.prototype, {
        setPoint: function(e) {
            if (e && e.toString() === "Point" && !this.getMarker()) {
                if (this.coordType === BMAP_COORD_GCJ02) {
                    var i = h8(e, 3);
                    this.point = this._config.point = new cr(i.lng,i.lat)
                } else {
                    this.point = this._config.point = new cr(e.lng,e.lat)
                }
            }
        },
        setContent: function(e) {
            this.content = e
        },
        getContent: function(e) {
            return this.content
        },
        setOpacity: function(e) {
            if (e >= 0 && e <= 1) {
                this._config.opacity = e
            }
        },
        setOffset: function(e) {
            if (!e || e.toString() !== "Size") {
                return
            }
            this._config.offset = new iE(e.width,e.height)
        },
        getOffset: function() {
            return this._config.offset
        },
        setStyle: function(e) {
            e = e || {};
            this._config.styles = eJ.extend(this._config.styles, e)
        },
        setStyles: function(e) {
            this.setStyle(e)
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        getTitle: function() {
            return this._config.title
        },
        setMarker: function(e) {
            if (this._marker && this._marker !== e) {
                this._marker._config.label = null
            }
            this._marker = e;
            if (e) {
                this.point = this._config.point = e.getPoint()
            } else {
                this.point = this._config.point = null
            }
        },
        getMarker: function() {
            return this._marker || null
        },
        getPositionIn: function() {
            return this.getPoint()
        },
    });
    function hy(T, i) {
        var jO = {};
        for (var e in i) {
            if (i.hasOwnProperty(e)) {
                if (e === "position") {
                    jO.point = iN.convertLL2MC(i[e]);
                    this.latLng = new cl(i[e]["lat"],i[e]["lng"])
                } else {
                    jO[e] = i[e]
                }
            }
        }
        bc.call(this, T, jO)
    }
    hy.inherits(bc, "LabelOut");
    eJ.extend(hy.prototype, {
        toString: function() {
            return "Label"
        },
        setPosition: function(e) {
            this.latLng = new cl(e.lat,e.lng);
            var i = iN.convertLL2MC(e);
            this.setPoint(i)
        },
        getPosition: function() {
            return this.latLng
        }
    });
    window.BMAP_ANIMATION_DROP = 1;
    window.BMAP_ANIMATION_BOUNCE = 2;
    function js(e, i) {
        en.call(this);
        i = i || {};
        this.delFlag = i.delFlag;
        this.point = e;
        this._rotation = 0;
        this.map = null;
        this._animation = null;
        this.domElement = null;
        this.iconDom = null;
        this.infoWindowDom = null;
        this.siblingElement = null;
        this.textureCoord = null;
        this.textureCoordGLMap = null;
        this.collisionDetectionFailed = false;
        this._config = {
            offset: new iE(0,0),
            opacity: 1,
            icon: null,
            title: "",
            infoWindow: null,
            label: null,
            baseZIndex: 0,
            clickable: true,
            zIndexFixed: false,
            isTop: false,
            enableMassClear: true,
            enableDragging: false,
            raiseOnDrag: false,
            restrictDraggingArea: false,
            startAnimation: "",
            enableCollisionDetection: false,
            rank: 0,
            enableDraggingMap: false
        };
        this.setOptions(i);
        this._isDragging = false;
        var T = this;
        gK.load("marker", function() {
            T._draw()
        })
    }
    js.TOP_ZINDEX = aQ.getZIndex(-90) + 1000000;
    js.DRAG_ZINDEX = js.TOP_ZINDEX + 1000000;
    js._injectMethond = function(e) {
        eJ.extend(js.prototype, e)
    }
    ;
    js.inherits(en, "Marker");
    eJ.extend(js.prototype, {
        toString: function() {
            return "Marker"
        },
        setOptions: function(e) {
            this.setConfig(e);
            if (!e.icon) {
                this._config.icon = new i6(B.imgPath + "marker_red.png",new iE(23,25),{
                    offset: new iE(10,25),
                    infoWindowOffset: new iE(10,0)
                })
            }
        },
        setIcon: function(e) {
            if (e) {
                this._config.icon = e;
                this.textureCoord = this.textureCoordGLMap = null
            }
        },
        getIcon: function() {
            return this._config.icon
        },
        setLabel: function(e) {
            if (!(e instanceof bc)) {
                return
            }
            this._config.label = e;
            e._config.enableMassClear = this._config.enableMassClear;
            e.setPoint(this.point)
        },
        getLabel: function() {
            return this._config.label
        },
        enableDragging: function() {
            this._config.enableDragging = true
        },
        disableDragging: function() {
            this._config.enableDragging = false
        },
        setPoint: function(e) {
            if (e) {
                if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                    var i = h8(e, 3);
                    this.point = this._config.point = new cr(i.lng,i.lat);
                    this.latLng = iN.convertMC2LL(i)
                } else {
                    this.point = this._config.point = new cr(e.lng,e.lat);
                    this.latLng = iN.convertMC2LL(e)
                }
            }
        },
        setPositionIn: function(e) {
            this.setPoint(e)
        },
        getPositionIn: function() {
            return this.getPoint()
        },
        setTop: function(i, e) {
            this._config.isTop = !!i;
            if (i) {
                this._addi = e || 0
            }
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        getTitle: function() {
            return this._config.title
        },
        setOffset: function(e) {
            if (e) {
                this._config.offset = e
            }
        },
        getOffset: function() {
            return this._config.offset
        },
        setAnimation: function(e) {
            this._animation = e
        },
        setRank: function(e) {
            this._config.rank = e
        },
        getRank: function() {
            return this._config.rank
        },
        setRotation: function(e) {
            while (e < 0) {
                e += 360
            }
            this._rotation = e % 360
        },
        getRotation: function() {
            return this._rotation
        }
    });
    function s(e, T) {
        this.latLng = new cl(e.lat,e.lng);
        var i = iN.convertLL2MC(e);
        js.call(this, i, T)
    }
    s.inherits(js, "MarkerOut");
    eJ.extend(s.prototype, {
        toString: function() {
            return "Marker"
        },
        toGeoJSON: function() {
            var i = "Point";
            var T = [this.latLng.lng, this.latLng.lat];
            var e = {
                type: "Feature",
                geometry: {
                    type: i,
                    coordinates: T
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new gg();
            var jQ = e.readFeaturesFromObject(T) || [];
            for (var jO = 0, jP = jQ.length; jO < jP; ++jO) {
                if (jQ[jO]instanceof s) {
                    this.properties = jQ[jO].properties;
                    this.setPosition(jQ[jO].getPosition());
                    break
                }
            }
        },
        setPosition: function(e) {
            this.latLng = new cl(e.lat,e.lng);
            var i = iN.convertLL2MC(e);
            this.setPositionIn(i)
        },
        getPosition: function() {
            return this.latLng
        },
    });
    window.BMAP_SHAPE_CIRCLE = 1;
    window.BMAP_SHAPE_RECT = 2;
    function d1(i, e, T) {
        en.call(this, e, T);
        this.domElement = null;
        this.point = i;
        T = T || {};
        this._config = {};
        this._config.height = e || 0;
        this._config.size = typeof T.size === "number" ? T.size : 50;
        this._config.fillOpacity = typeof T.fillOpacity === "number" ? T.fillOpacity : 0.8;
        this._config.shape = typeof T.shape === "number" ? T.shape : 1;
        b6(this._config.fillOpacity, 0, 1);
        if (T.fillColor === "") {
            this._config.fillColor = ""
        } else {
            this._config.fillColor = T.fillColor ? T.fillColor : "#f00"
        }
        this._config.icon = T.icon instanceof i6 ? T.icon : "";
        this._config.enableMassClear = T.enableMassClear || true;
        var jO = this;
        gK.load("marker", function() {
            jO._draw()
        })
    }
    d1.inherits(en, "Marker3D");
    eJ.extend(d1.prototype, {
        setPoint: function(e) {
            if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                var T = h8(e, 3);
                this.point = this._config.point = new cr(T.lng,T.lat);
                this.latLng = iN.convertMC2LL(T)
            } else {
                this.point = this._config.point = new cr(e.lng,e.lat);
                this.latLng = iN.convertMC2LL(e)
            }
            var i = new fu("onstatus_change");
            i.overlay = this;
            i.action = "setPoint";
            this.fire(i)
        },
        setPositionIn: function(e) {
            this.setPoint(e)
        },
        getPositionIn: function() {
            return this.getPoint()
        },
        setDomAttribute: function(i, T) {
            var e = new fu("onlineupdate");
            e.overlay = this;
            this.dispatchEvent(e)
        }
    });
    function dY(i, e, jO) {
        this.latLng = new cl(i.lat,i.lng);
        var T = iN.convertLL2MC(i);
        d1.call(this, T, e, jO)
    }
    dY.inherits(d1, "Marker3d");
    eJ.extend(dY.prototype, {
        toString: function() {
            return "Marker3D"
        },
        setHeight: function(e) {
            this._config.height = Number(e);
            this.draw();
            var i = new fu("onlineupdate");
            i.overlay = this;
            this.dispatchEvent(i)
        },
        getHeight: function() {
            return this._config.height
        },
        setFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.fillOpacity = e;
            this.setDomAttribute("fillopacity", e)
        },
        getFillOpacity: function() {
            return this._config.fillOpacity
        },
        setFillColor: function(e) {
            this._config.fillColor = e || "";
            this.setDomAttribute("fillcolor", e)
        },
        getFillColor: function() {
            return this._config.fillColor
        },
        setIcon: function(i) {
            if (!i || !this.map) {
                return
            }
            this._config.icon = i;
            if (this._config.icon) {
                var e = this._config.icon.getCurrentImageUrl();
                var jO = i.getCurrentImageUrl() !== e;
                this._config.icon = i;
                this.textureCoord = this.textureCoordGLMap = null;
                this.draw();
                var T = new fu("onstatus_change");
                T.overlay = this;
                T.action = "setIcon";
                T.imageUrlChanged = jO;
                this.fire(T)
            }
        },
        getIcon: function() {
            return this._config.icon
        },
        setPosition: function(e) {
            this.latLng = new cl(e.lat,e.lng);
            var i = iN.convertLL2MC(e);
            this.setPositionIn(i)
        },
        getPosition: function() {
            var e = this.getPositionIn();
            return iN.convertMC2LL(e)
        }
    });
    function fE(T, e) {
        id.call(this, e);
        this._normalizedBounds = new hF();
        this.setPoints(T);
        var i = this;
        gK.load("poly", function() {
            i._draw()
        })
    }
    fE.inherits(id, "Polyline");
    eJ.extend(fE.prototype, {
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        setPoints: function(T) {
            this._clearCache();
            this.points = id.getGraphPoints(T).slice(0);
            if (this._config.geodesic === true) {
                this.greatCirclePoints.length = 0;
                for (var e = 0; e < this.points.length - 1; e++) {
                    this.calcGreatCirclePoints(this.points[e], this.points[e + 1])
                }
            }
            this._calcBounds()
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                eJ.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                eJ.each(e.points, function(i) {
                    e._bounds.extend(i)
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -hr.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hr.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -hr.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = hr.WORLD_SIZE_MC_HALF
            }
        },
        calcGreatCirclePoints: function(jO, T) {
            var jQ = jO.latLng;
            var jP = T.latLng;
            if (jQ.equals(jP)) {
                return
            }
            var e = iN.getDistance(ie(jQ.lng), ie(jQ.lat), ie(jP.lng), ie(jP.lat));
            if (e < 250000) {
                return
            }
            var jU = Math.round(e / 150000);
            var jY = this.calcAngularDistance(jQ, jP);
            this.greatCirclePoints.push(jO);
            var jX = jQ.lng;
            var jW = jO;
            for (var jR = 0; jR < jU; jR++) {
                var jT = this.calcMiddlePoint(jQ, jP, jR / jU, jY);
                var jV = iN.convertLL2MC(jT);
                var jS = jV.lng;
                var jZ = ef(jV, jW);
                if (jZ > 30037726) {
                    if (jV.lng < jW.lng) {
                        jV.lng += hr.WORLD_SIZE_MC
                    } else {
                        jV.lng -= hr.WORLD_SIZE_MC
                    }
                }
                this.greatCirclePoints.push(jV);
                jW = jV
            }
            var jZ = ef(T, jW);
            if (jZ > 30037726) {
                if (T.lng < jW.lng) {
                    T.lng += hr.WORLD_SIZE_MC
                } else {
                    T.lng -= hr.WORLD_SIZE_MC
                }
            }
            this.greatCirclePoints.push(T)
        },
        calcMiddlePoint: function(jV, jU, jW, j0) {
            var jP = jV.lat;
            var jO = jU.lat;
            var jZ = jV.lng;
            var jX = jU.lng;
            var j1 = ie(jP);
            var jY = ie(jO);
            var i = ie(jZ);
            var e = ie(jX);
            var j3 = Math.sin((1 - jW) * j0) / Math.sin(j0);
            var j2 = Math.sin(jW * j0) / Math.sin(j0);
            var jS = j3 * Math.cos(j1) * Math.cos(i) + j2 * Math.cos(jY) * Math.cos(e);
            var jR = j3 * Math.cos(j1) * Math.sin(i) + j2 * Math.cos(jY) * Math.sin(e);
            var jQ = j3 * Math.sin(j1) + j2 * Math.sin(jY);
            var T = Math.atan2(jQ, Math.sqrt(Math.pow(jS, 2) + Math.pow(jR, 2)));
            var jT = Math.atan2(jR, jS);
            return new cr(eV(jT),eV(T))
        },
        calcAngularDistance: function(jP, i) {
            var jQ = ie(jP.lat);
            var jO = ie(i.lat);
            var T = ie(jP.lng);
            var e = ie(i.lng);
            return Math.acos(Math.sin(jQ) * Math.sin(jO) + Math.cos(jQ) * Math.cos(jO) * Math.cos(Math.abs(e - T)))
        }
    });
    function bk(jP, e) {
        if (!jP || jP.length === 0) {
            return
        }
        var jO = [];
        for (var T = 0; T < jP.length; T++) {
            jO[T] = iN.convertLL2MC(jP[T])
        }
        fE.call(this, jO, e)
    }
    bk.inherits(fE, "PolylineOut");
    eJ.extend(bk.prototype, {
        toString: function() {
            return "Polyline"
        },
        toGeoJSON: function() {
            var jO = "LineString";
            var jP = [];
            var jQ = this.getPath();
            for (var T = 0; T < jQ.length; T++) {
                jP.push([jQ[T].lng, jQ[T].lat])
            }
            var e = {
                type: "Feature",
                geometry: {
                    type: jO,
                    coordinates: jP
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new gg();
            var jQ = e.readFeaturesFromObject(T) || [];
            for (var jO = 0, jP = jQ.length; jO < jP; ++jO) {
                if (jQ[jO]instanceof bk) {
                    this.properties = jQ[jO].properties;
                    this.setPath(jQ[jO].getPath());
                    break
                }
            }
        },
        setPath: function(jO) {
            if (!jO || jO.length === 0) {
                return
            }
            var T = [];
            for (var e = 0; e < jO.length; e++) {
                T[e] = iN.convertLL2MC(jO[e])
            }
            this.setPathIn(T);
            this._mouseEventPixels = null
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jO = [];
            for (var T = 0; T < e.length; T++) {
                jO[T] = iN.convertMC2LL(e[T])
            }
            return jO
        },
        getBounds: function(i) {
            var e = this.getBoundsIn(i);
            var T = new hF(iN.convertMC2LL(e.getSouthWest()),iN.convertMC2LL(e.getNorthEast()));
            return T
        }
    });
    function gy(T, jO, e) {
        id.call(this, e);
        this._normalizedBounds = new hF();
        this._cps = jO;
        this._path = T;
        this.setPoints(T);
        var i = this;
        gK.load("poly", function() {
            i._draw()
        })
    }
    gy.inherits(fE, "BezierCurve");
    eJ.extend(gy.prototype, {
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        setPoints: function(e) {
            this._clearCache();
            this.points = id.getGraphPoints(e).slice(0);
            this.points = this.calcBezierPoints(this.points, this._cps);
            this._calcBounds()
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                eJ.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                eJ.each(e.points, function(i) {
                    e._bounds.extend(i)
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -hr.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hr.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -hr.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = hr.WORLD_SIZE_MC_HALF
            }
        },
        getPathIn: function() {
            return this._path
        },
        setPathIn: function(e) {
            this._path = e;
            this.setPoints(e)
        },
        getCpsIn: function() {
            return this._cps
        },
        setCpsIn: function(e) {
            this._cps = e;
            this.setPoints(this._path)
        },
        calcBezierPoints: function(jO, jQ) {
            var T = [];
            for (var e = 0; e < jO.length - 1; e++) {
                var jP = [jO[e], jQ[e][0], jQ[e][1], jO[e + 1]];
                T = T.concat((this.bezierbetweenTwoP(jP)))
            }
            return T
        },
        bezierbetweenTwoP: function(jQ) {
            var T = 100;
            var jP = 1 / T;
            var e = [];
            for (var jO = 0; jO < T; jO++) {
                e.push(this.getPointOnCubicBezier(jQ, jO * jP))
            }
            return e
        },
        getPointOnCubicBezier: function(jR, jV) {
            var i;
            var jQ;
            var jO;
            var jW;
            var jP;
            var T;
            var jU;
            var e;
            var jT;
            var jS;
            jO = 3 * (jR[1].lng - jR[0].lng);
            jQ = 3 * (jR[2].lng - jR[1].lng) - jO;
            i = jR[3].lng - jR[0].lng - jO - jQ;
            T = 3 * (jR[1].lat - jR[0].lat);
            jP = 3 * (jR[2].lat - jR[1].lat) - T;
            jW = jR[3].lat - jR[0].lat - T - jP;
            jU = jV * jV;
            e = jU * jV;
            jT = (i * e) + (jQ * jU) + (jO * jV) + jR[0].lng;
            jS = (jW * e) + (jP * jU) + (T * jV) + jR[0].lat;
            return new cr(jT,jS)
        }
    });
    function cA(jP, jR, e) {
        if (!jP || jP.length === 0) {
            return
        }
        this.userPath = jP;
        this.userCps = jR;
        var jO = [];
        for (var T = 0; T < jP.length; T++) {
            jO[T] = iN.convertLL2MC(jP[T])
        }
        if (!jR || jR.length === 0) {
            return
        }
        var jQ = [];
        for (var T = 0; T < jR.length; T++) {
            jQ[T] = [];
            jQ[T][0] = iN.convertLL2MC(jR[T][0]);
            if (jR[T][1]) {
                jQ[T][1] = iN.convertLL2MC(jR[T][1])
            } else {
                jQ[T][1] = iN.convertLL2MC(jR[T][0])
            }
        }
        gy.call(this, jO, jQ, e)
    }
    cA.inherits(gy, "BezierCurveOut");
    eJ.extend(cA.prototype, {
        toString: function() {
            return "BezierCurve"
        },
        setPath: function(jO) {
            if (!jO || jO.length === 0) {
                return
            }
            this.userPath = jO;
            var T = [];
            for (var e = 0; e < jO.length; e++) {
                T[e] = iN.convertLL2MC(jO[e])
            }
            this.setPathIn(T);
            this._mouseEventPixels = null
        },
        getPath: function() {
            return this.userPath;
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jO = [];
            for (var T = 0; T < e.length; T++) {
                jO[T] = iN.convertMC2LL(e[T])
            }
            return jO
        },
        getControlPoints: function() {
            return this.userCps;
            var e = this.getCpsIn();
            if (!e || e.length === 0) {
                return []
            }
            var jO = [];
            for (var T = 0; T < e.length; T++) {
                jO[T] = [];
                jO[T][0] = iN.convertMC2LL(e[T][0]);
                jO[T][1] = iN.convertMC2LL(e[T][1])
            }
            return jO
        },
        setControlPoints: function(jO) {
            if (!jO || jO.length === 0) {
                return
            }
            this.userCps = jO;
            var T = [];
            for (var e = 0; e < jO.length; e++) {
                T[e] = [];
                T[e][0] = iN.convertLL2MC(jO[e][0]);
                if (jO[e][1]) {
                    T[e][1] = iN.convertLL2MC(jO[e][1])
                } else {
                    T[e][1] = iN.convertLL2MC(jO[e][0])
                }
            }
            this.setCpsIn(T)
        },
        getBounds: function(i) {
            var e = this.getBoundsIn(i);
            var T = new hF(iN.convertMC2LL(e.getSouthWest()),iN.convertMC2LL(e.getNorthEast()));
            return T
        }
    });
    function d8(e, T) {
        id.call(this, T);
        this._normalizedBounds = new hF();
        this.setPoints(e);
        var i = this;
        gK.load("poly", function() {
            i._draw()
        })
    }
    d8.inherits(fE, "PolylineMultipart");
    eJ.extend(d8.prototype, {
        setPoints: function(e) {
            if (!e) {
                return
            }
            this._clearCache();
            this.points = this._unifyArgs(e);
            this._calcBounds()
        },
        _unifyArgs: function(T) {
            var e = [];
            var i = [];
            if (T.constructor === Array) {
                if (T[0].constructor === cr) {
                    i.push(T)
                } else {
                    i = T
                }
            } else {
                if (typeof T === "string") {
                    i.push(T)
                }
            }
            eJ.each(i, function(jO) {
                e.push(id.getGraphPoints(jO))
            });
            return e
        },
        setPointAt: function(i, e, T) {
            T = T || 0;
            if (!e || !this.points[T] || !this.points[T][i]) {
                return
            }
            this._clearCache();
            this.points[T][i] = new cr(e.lng,e.lat);
            this._calcBounds()
        },
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                eJ.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                eJ.each(e.points, function(i) {
                    eJ.each(i, function(T) {
                        e._bounds.extend(T)
                    })
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -hr.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hr.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -hr.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = hr.WORLD_SIZE_MC_HALF
            }
        }
    });
    function gY(T, e) {
        id.call(this, e);
        e = e || {};
        if (typeof e.fillOpacity === "number") {
            this._config.fillOpacity = e.fillOpacity
        } else {
            this._config.fillOpacity = 0.6
        }
        b6(this._config.fillOpacity, 0, 1);
        if (e.fillColor === "") {
            this._config.fillColor = ""
        } else {
            this._config.fillColor = e.fillColor ? e.fillColor : "#fff"
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(T, e);
        var i = this;
        gK.load("poly", function() {
            i._draw()
        })
    }
    gY.inherits(id, "Polygon");
    eJ.extend(gY.prototype, {
        setPoints: function(jQ) {
            var jO = [];
            if (typeof jQ === "string" || jQ.length === 1 || jQ[0]instanceof cr || jQ[0]instanceof cl || this instanceof gF || jQ.length === 0) {
                if (jQ.length === 1) {
                    jQ = jQ[0]
                }
                var e = this._processSinglePointArray(jQ);
                this._userPoints = e.userPoints;
                jO = e.innerPoints;
                this.hasMultipleParts = false
            } else {
                this._userPoints = [];
                for (var jP = 0; jP < jQ.length; jP++) {
                    var T = this._processSinglePointArray(jQ[jP]);
                    this._userPoints.push(T.userPoints);
                    jO.push(T.innerPoints)
                }
                this.hasMultipleParts = true
            }
            id.prototype.setPoints.call(this, jO)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = id.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cr(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        setPointAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            this._clearCache();
            this._userPoints[i] = new cr(e.lng,e.lat);
            this.points[i] = new cr(e.lng,e.lat);
            if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
                this.points[this.points.length - 1] = new cr(e.lng,e.lat)
            }
            this._calcBounds()
        },
        setPositionAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            var T = iN.convertLL2MC(e);
            this.setPointAt(i, T)
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        }
    });
    function ik(T, e) {
        if (!T || T.length === 0) {
            return
        }
        var i = this.setPath(T, true);
        gY.call(this, i, e)
    }
    ik.inherits(gY, "PolygonOut");
    eJ.extend(ik.prototype, {
        toString: function() {
            return "Polygon"
        },
        toGeoJSON: function() {
            var jP = "Polygon";
            var jQ = [];
            var jS = this.getPath();
            if (this.hasMultipleParts) {
                jP = "Multi" + jP;
                for (var jO = 0; jO < jS.length; jO++) {
                    var jR = [];
                    for (var T = 0; T < jS.length; T++) {
                        jR.push([jS[jO][T].lng, jS[jO][T].lat])
                    }
                    jQ.push(jR)
                }
            } else {
                for (var jO = 0; jO < jS.length; jO++) {
                    jQ.push([jS[jO].lng, jS[jO].lat])
                }
            }
            var e = {
                type: "Feature",
                geometry: {
                    type: jP,
                    coordinates: [jQ]
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new gg();
            var jQ = e.readFeaturesFromObject(T) || [];
            for (var jO = 0, jP = jQ.length; jO < jP; ++jO) {
                if (jQ[jO]instanceof ik) {
                    this.properties = jQ[jO].properties;
                    this.setPath(jQ[jO].getPath());
                    break
                }
            }
        },
        setPath: function(jT, T) {
            if (!jT || jT.length === 0) {
                return
            }
            var jS = [];
            if (typeof jT === "string" || jT[0]instanceof cr || jT[0]instanceof cl) {
                var e = this._processSinglePointArray(jT);
                for (var jR = 0; jR < e.innerPoints.length; jR++) {
                    jS[jR] = iN.convertLL2MC(e.innerPoints[jR])
                }
            } else {
                for (var jR = 0; jR < jT.length; jR++) {
                    var jO = this._processSinglePointArray(jT[jR]);
                    var jQ = [];
                    for (var jP = 0; jP < jO.innerPoints.length; jP++) {
                        jQ[jP] = iN.convertLL2MC(jO.innerPoints[jP])
                    }
                    jS.push(jQ)
                }
            }
            if (T) {
                return jS
            }
            this.setPathIn(jS);
            this._mouseEventPixels = null
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jQ = [];
            if (this.hasMultipleParts) {
                for (var jO = 0; jO < e.length; jO++) {
                    var jP = [];
                    for (var T = 0; T < e[jO].length; T++) {
                        jP[T] = iN.convertMC2LL(e[jO][T])
                    }
                    jQ.push(jP)
                }
            } else {
                for (var jO = 0; jO < e.length; jO++) {
                    jQ[jO] = iN.convertMC2LL(e[jO])
                }
            }
            return jQ
        }
    });
    function gF(i, e, T) {
        this.point = i;
        this.radius = Math.abs(e);
        gY.call(this, [], T)
    }
    gF.parseTolerance = {
        0: [0.01, 0.0001, 0.00001, 0.000004],
        1: [1000, 10, 1, 0.4]
    };
    gF.inherits(gY, "Circle");
    eJ.extend(gF.prototype, {
        initialize: function(e) {
            this.map = e;
            this.points = this._getPerimeterPoints(this.point, this.radius);
            this._calcBounds();
            return null
        },
        getPoint: function() {
            return this.point
        },
        setPoint: function(e) {
            if (!e) {
                return
            }
            this.point = e;
            this.latLng = iN.convertMC2LL(e)
        },
        setCenterIn: function(e) {
            var i = arguments[1];
            this.setPoint(e, i)
        },
        setRadius: function(e) {
            this.radius = Math.abs(e)
        },
        getCenterIn: function() {
            return this.point
        },
        getRadius: function() {
            return this.radius
        },
        _getPerimeterPoints: function(e, jV) {
            if (!e || !jV || !this.map) {
                return []
            }
            var T = this.map;
            var jS = e.lng;
            var jQ = e.lat;
            var j1 = iN.convertMC2LL(e);
            jS = j1.lng;
            jQ = j1.lat;
            var j2 = [];
            var jX = jV / iN.EARTHRADIUS;
            var jU = (Math.PI / 180) * jQ;
            var j0 = (Math.PI / 180) * jS;
            for (var jT = 0; jT < 360; jT += 9) {
                var jR = (Math.PI / 180) * jT;
                var jY = Math.asin(Math.sin(jU) * Math.cos(jX) + Math.cos(jU) * Math.sin(jX) * Math.cos(jR));
                var jW = Math.atan2(Math.sin(jR) * Math.sin(jX) * Math.cos(jU), Math.cos(jX) - Math.sin(jU) * Math.sin(jY));
                var jZ = ((j0 - jW + Math.PI) % (2 * Math.PI)) - Math.PI;
                var jP = new cl(jY * (180 / Math.PI),jZ * (180 / Math.PI));
                j2.push(iN.convertLL2MC(jP))
            }
            var jO = j2[0];
            j2.push(new cr(jO.lng,jO.lat));
            if (jO) {
                this._radiusMercator = Math.sqrt(Math.pow(jO.lng - this.point.lng, 2) + Math.pow(jO.lat - this.point.lat, 2))
            } else {
                this._radiusMercator = this.radius
            }
            return j2
        }
    });
    function aT(i, e, jO) {
        this.latLng = new cl(i.lat,i.lng);
        var T = iN.convertLL2MC(i);
        gF.call(this, T, e, jO)
    }
    aT.inherits(gF, "CircleOut");
    eJ.extend(aT.prototype, {
        toString: function() {
            return "Circle"
        },
        setCenter: function(e) {
            this.latLng = new cl(e.lat,e.lng);
            var i = iN.convertLL2MC(e);
            this.setCenterIn(i)
        },
        getCenter: function() {
            return this.latLng
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jO = [];
            for (var T = 0; T < e.length; T++) {
                jO[T] = iN.convertMC2LL(e[T])
            }
            return jO
        },
        toGeoJSON: function() {
            var jO = "Polygon";
            var jP = [];
            var jQ = this.getPath();
            for (var T = 0; T < jQ.length; T++) {
                jP.push([jQ[T].lng, jQ[T].lat])
            }
            var e = {
                type: "Feature",
                geometry: {
                    type: jO,
                    coordinates: [jP]
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(e) {}
    });
    function jD(jO, e, i) {
        id.call(this, i);
        i = i || {};
        if (typeof i.topFillOpacity === "number") {
            this._config.topFillOpacity = i.topFillOpacity
        } else {
            this._config.topFillOpacity = 0.6
        }
        if (typeof i.sideFillOpacity === "number") {
            this._config.sideFillOpacity = i.sideFillOpacity
        } else {
            this._config.sideFillOpacity = 0.8
        }
        b6(this._config.sideFillOpacity, 0, 1);
        if (i.topFillColor === "") {
            this._config.topFillColor = ""
        } else {
            this._config.topFillColor = i.topFillColor ? i.topFillColor : "#fff"
        }
        if (i.sideFillColor === "") {
            this._config.sideFillColor = ""
        } else {
            this._config.sideFillColor = i.sideFillColor ? i.sideFillColor : "#fff"
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(jO, i);
        this._config.altitude = e || 0;
        var T = this;
        gK.load("poly", function() {
            T._draw()
        })
    }
    jD.inherits(id, "Prism");
    eJ.extend(jD.prototype, {
        setPoints: function(jQ) {
            var jO = [];
            if (typeof jQ === "string" || jQ[0]instanceof cr || jQ[0]instanceof cl || this instanceof gF || jQ.length === 0) {
                var e = this._processSinglePointArray(jQ);
                this._userPoints = e.userPoints;
                jO = e.innerPoints;
                this.hasMultipleParts = false
            } else {
                this._userPoints = [];
                for (var jP = 0; jP < jQ.length; jP++) {
                    var T = this._processSinglePointArray(jQ[jP]);
                    this._userPoints.push(T.userPoints);
                    jO.push(T.innerPoints)
                }
                this.hasMultipleParts = true
            }
            id.prototype.setPoints.call(this, jO)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = id.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cr(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        setPointAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            this._clearCache();
            this._userPoints[i] = new cr(e.lng,e.lat);
            this.points[i] = new cr(e.lng,e.lat);
            if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
                this.points[this.points.length - 1] = new cr(e.lng,e.lat)
            }
            this._calcBounds()
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        },
        setTopFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.topFillOpacity = e;
            this._setDomAttribute("topfillopacity", e)
        },
        getTopFillOpacity: function() {
            return this._config.topFillOpacity
        },
        setSideFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.sideFillOpacity = e;
            this._setDomAttribute("sidefillopacity", e)
        },
        getSideFillOpacity: function() {
            return this._config.sideFillOpacity
        },
        setTopFillColor: function(e) {
            this._config.topFillColor = e || "";
            this._setDomAttribute("topfillcolor", e)
        },
        getTopFillColor: function() {
            return this._config.topFillColor
        },
        setSideFillColor: function(e) {
            this._config.sideFillColor = e || "";
            this._setDomAttribute("sidefillcolor", e)
        },
        getSideFillColor: function() {
            return this._config.sideFillColor
        },
        setAltitude: function(e) {
            this._config.altitude = Number(e);
            this.draw();
            var i = new fu("onlineupdate");
            i.overlay = this;
            this.dispatchEvent(i)
        },
        getAltitude: function() {
            return this._config.altitude
        }
    });
    function bq(jS, jQ, jT) {
        if (!jS || jS.length === 0) {
            return
        }
        this.userPath = jS;
        var e = [];
        if (typeof jS === "string" || jS[0]instanceof cr || jS[0]instanceof cl) {
            var jU = this._processSinglePointArray(jS);
            for (var jP = 0; jP < jU.innerPoints.length; jP++) {
                e[jP] = iN.convertLL2MC(jU.innerPoints[jP])
            }
        } else {
            for (var jP = 0; jP < jS.length; jP++) {
                var jR = this._processSinglePointArray(jS[jP]);
                var T = [];
                for (var jO = 0; jO < jR.innerPoints.length; jO++) {
                    T[jO] = iN.convertLL2MC(jR.innerPoints[jO])
                }
                e.push(T)
            }
        }
        jD.call(this, e, jQ, jT)
    }
    bq.inherits(jD, "PrismOut");
    eJ.extend(bq.prototype, {
        toString: function() {
            return "Prism"
        },
        setPath: function(jO) {
            if (!jO || jO.length === 0) {
                return
            }
            this.userPath = jO;
            var T = [];
            for (var e = 0; e < jO.length; e++) {
                T[e] = iN.convertLL2MC(jO[e])
            }
            this.setPathIn(T);
            this._mouseEventPixels = null
        },
        getPath: function() {
            return this.userPath;
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jO = [];
            for (var T = 0; T < e.length; T++) {
                jO[T] = iN.convertMC2LL(e[T])
            }
            return jO
        }
    });
    function bU(jP, i) {
        id.call(this, i);
        i = i || {};
        this._config.type = i.type || "image";
        this._config.url = i.url || "";
        this._config.opacity = typeof i.opacity === "number" ? i.opacity : 1;
        this.isReDraw = i.isReDraw || false;
        this.drawHook = (i.drawHook instanceof Function) ? i.drawHook : null;
        b6(this._config.opacity, 0, 1);
        if (i.type === "image" && i.isPixelMap) {
            this._config.isPixelMap = i.isPixelMap || false;
            var T = i.pixelMap || {};
            this._config.colors = T.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
            this._config.positions = T.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
            this._config.domain = T.domain || [0, 255];
            this._config.clamp = T.clamp || this._config.domain;
            this._config.noData = (T.noData !== undefined) ? T.noData : -99999;
            this._config.fomularC = T.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
            this._config.fomularJS = T.fomularJS || function(jQ) {
                return jQ.r
            }
            ;
            this._config.maskPng = T.maskPng || null;
            this._config.maskData = T.maskData || -1;
            this._config.maskCoord = T.maskCoord || null;
            this.fHashcode = o({
                str: this._config.fomularC
            });
            var e = this.canPixelMap();
            if (e) {
                this.isPixelMap = true;
                this.setPixelMap()
            }
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(jP, i);
        var jO = this;
        gK.load("poly", function() {
            jO._draw()
        })
    }
    bU.inherits(id, "GroundOverlay");
    eJ.extend(bU.prototype, {
        setPoints: function(i) {
            var e = id.getGraphPoints(i).slice(0);
            this.hasMultipleParts = false;
            id.prototype.setPoints.call(this, e)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        getPoints: function() {
            return this.points
        },
        getPathIn: function() {
            return this.getPoints()
        },
        canPixelMap: function() {
            if (this._config.colors && this._config.positions) {
                return true
            }
            return false
        },
        setPixelMap: function() {
            if (!this._config.isPixelMap || !this.canPixelMap()) {
                return
            }
            var i = this._config.colors;
            var e = this._config.positions;
            this.pHashcode = o({
                colors: i,
                positions: e
            });
            this.pixelColorMap = hi.generateColorRamp(i, e)
        },
        setDomain: function(e) {
            if (e instanceof Array && e.length === 2) {
                this._config.domain = e;
                this.doOnceDraw()
            }
        },
        setClamp: function(e) {
            if (e instanceof Array && e.length === 2) {
                this._config.clamp = e;
                this.doOnceDraw()
            }
        },
        setMaskPng: function(i) {
            this._config.maskPng = i;
            if (this.map) {
                var e = new fu("hide");
                e.overlay = this;
                this.dispatchEvent(e);
                var e = new fu("show");
                e.overlay = this;
                this.dispatchEvent(e)
            }
            this.doOnceDraw()
        },
        setMaskData: function(e) {
            this._config.maskData = e;
            this.doOnceDraw()
        },
        setMaskCoord: function(e) {
            this._config.maskCoord = e;
            this.maskUV = null;
            this.doOnceDraw()
        },
        setNoData: function(e) {
            this._config.noData = e;
            this.doOnceDraw()
        },
        setPositions: function(e) {
            this._config.positions = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setColors: function(e) {
            this._config.colors = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setFomular: function(e, i) {
            if (e && i) {
                this._config.fomularJS = e;
                this._config.fomularC = i;
                this.fHashcode = o({
                    str: this._config.fomularC
                });
                this.doOnceDraw()
            }
        },
        setIsPixelMap: function(e) {
            this.isPixelMap = e;
            this.doOnceDraw()
        },
        getImagePixel: function(jO) {
            if (!this._config.isPixelMap || !this.canPixelMap()) {
                return null
            }
            if (!this.getImageMaskPixel(jO)) {
                return null
            }
            if (this.imageObject) {
                var T = Math.floor((jO.lng - this.points[3].lng) / this.lngMC);
                var e = Math.floor((-jO.lat + this.points[3].lat) / this.latMC);
                var i = Math.floor((e * this.imageObject.width + T) * 4);
                if (T > this.imageObject.width || T < 0) {
                    return null
                }
                if (e > this.imageObject.height || e < 0) {
                    return null
                }
                if (i + 3 > this.imageObject.data.data.length) {
                    return null
                }
                return [this.imageObject.data.data[i], this.imageObject.data.data[i + 1], this.imageObject.data.data[i + 2], this.imageObject.data.data[i + 3], ]
            }
            return null
        },
        getValue: function(i) {
            if (this._config.isPixelMap && i && this._config.fomularJS) {
                if (!(i instanceof Array)) {
                    i = this.getImagePixel(i.point)
                }
                var e = this._config.fomularJS({
                    r: i[0],
                    g: i[1],
                    b: i[2],
                    a: i[3]
                });
                if (e >= this._config.clamp[0] && e <= this._config.clamp[1]) {
                    return e
                }
            }
            return null
        },
        setImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            this.updatePixelMc();
            i = null;
            e = null
        },
        updatePixelMc: function() {
            if (this.imageObject) {
                var e = Math.abs(this.points[2].lng - this.points[0].lng);
                var i = Math.abs(this.points[2].lat - this.points[0].lat);
                this.lngMC = e / this.imageObject.width;
                this.latMC = i / this.imageObject.height
            }
        },
        setMaskImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageMaskObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            i = null;
            e = null
        },
        getImageMaskPixel: function(e) {
            if (!this.imageMaskObject) {
                return true
            }
            var jO = this._toOverlayPixelsGL([e]);
            var jT = this.maskOverlayPixels;
            var jQ = jT[1][0] - jT[0][0];
            var jP = jT[1][1] - jT[0][1];
            var T = Math.floor((jO[0][0] - jT[0][0]) / jQ * this.imageMaskObject.width);
            var i = Math.floor((-jO[0][1] + jT[1][1]) / jP * this.imageMaskObject.height);
            var jS = Math.floor((i * this.imageMaskObject.width + T) * 4);
            if (T > this.imageMaskObject.width || T < 0) {
                return null
            }
            if (i > this.imageMaskObject.height || i < 0) {
                return null
            }
            var jR = this.imageMaskObject.data.data;
            if (jS + 3 > jR.length) {
                return false
            }
            if (jR[jS + 3] > 0) {
                if (this._config.maskData > -1 && this._config.maskData !== jR[jS]) {
                    return false
                }
                return true
            }
            return false
        },
        doOnceDraw: function() {
            var e = new fu("onlineupdate");
            e.overlay = this;
            this.dispatchEvent(e)
        }
    });
    function fJ(jP, T) {
        if (!jP) {
            return
        }
        T = T || {};
        var jR = [new cr(jP.sw.lng,jP.ne.lat), new cr(jP.ne.lng,jP.ne.lat), new cr(jP.ne.lng,jP.sw.lat), new cr(jP.sw.lng,jP.sw.lat)];
        var e = id.getGraphPoints(jR).slice(0);
        var jQ = [];
        for (var jO = 0; jO < e.length; jO++) {
            jQ[jO] = iN.convertLL2MC(e[jO])
        }
        bU.call(this, jQ, T)
    }
    fJ.inherits(bU, "GroundOverlayOut");
    eJ.extend(fJ.prototype, {
        toString: function() {
            return "GroundOverlay"
        }
    });
    var au = {};
    function hI(T, i) {
        eJ.BaseClass.call(this);
        this.content = T;
        this.map = null;
        this._config = {
            width: 0,
            height: 0,
            maxWidth: 600,
            offset: new iE(0,0),
            title: "",
            maxContent: "",
            enableMaximize: false,
            enableAutoPan: true,
            enableCloseOnClick: true,
            margin: [10, 10, 40, 10],
            collisions: [[10, 10], [10, 10], [10, 10], [10, 10]],
            ifMaxScene: false,
            onClosing: function() {
                return true
            }
        };
        this.setConfig(i);
        if (this._config.width < 50) {
            this._config.width = 50
        }
        if (this._config.width > 730) {
            this._config.width = 730
        }
        if (this._config.height != 0) {
            if (this._config.height < 50) {
                this._config.height = 50
            }
            if (this._config.height > 650) {
                this._config.height = 650
            }
        }
        if (this._config.maxWidth !== 0) {
            if (this._config.maxWidth < 50) {
                this._config.maxWidth = 50
            }
            if (this._config.maxWidth > 730) {
                this._config.maxWidth = 730
            }
        }
        this.isWinMax = false;
        this.IMG_PATH = B.imgPath;
        this.overlay = null;
        var e = this;
        gK.load("simpleInfowindow", function() {
            e._draw()
        })
    }
    hI.inherits(eJ.BaseClass, "SimpleInfoWindow");
    eJ.extend(hI.prototype, {
        setWidth: function(e) {
            e = e * 1;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.width = e
        },
        setHeight: function(e) {
            e = e * 1;
            e -= 10;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 650) {
                    e = 650
                }
            }
            this._config.height = e
        },
        setMaxWidth: function(e) {
            e = e * 1;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.maxWidth = e
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        setContent: function(e) {
            this.content = e || ""
        },
        setMaxContent: function(e) {
            this._config.maxContent = e || ""
        },
        redraw: function() {},
        enableAutoPan: function() {
            this._config.enableAutoPan = true
        },
        disableAutoPan: function() {
            this._config.enableAutoPan = false
        },
        enableCloseOnClick: function() {
            this._config.enableCloseOnClick = true
        },
        disableCloseOnClick: function() {
            this._config.enableCloseOnClick = false
        },
        enableMaximize: function() {
            this._config.enableMaximize = true
        },
        disableMaximize: function() {
            this._config.enableMaximize = false
        },
        show: function() {
            this._visible = true
        },
        hide: function() {
            this._visible = false
        },
        close: function() {
            this.hide()
        },
        dispose: function() {
            eJ.BaseClass.prototype.decontrol.call(this)
        },
        maximize: function() {
            this.isWinMax = true
        },
        restore: function() {
            this.isWinMax = false
        },
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (typeof (this._config[e]) == typeof (i[e])) {
                    this._config[e] = i[e]
                }
            }
        },
        isVisible: function() {
            return this.isOpen()
        },
        isOpen: function() {
            return false
        },
        getPoint: function() {
            if (this.overlay && this.overlay.getPoint) {
                return this.overlay.getPoint()
            }
        },
        getOffset: function() {
            return this._config.offset
        },
        dispose: function() {
            eJ.BaseClass.prototype.decontrol.call(this)
        },
        toString: function() {
            return "SimpleInfoWindow"
        }
    });
    hr.prototype.openSimpleInfoWindow = function(jO, e) {
        if (!jO || jO.toString() != "SimpleInfoWindow" || !e || e.toString() != "Point") {
            return
        }
        var i = this.temp;
        if (!i.marker) {
            var T = new i6(B.imgPath + "blank.gif",{
                width: 1,
                height: 1
            });
            i.marker = new js(e,{
                icon: T,
                width: 1,
                height: 1,
                offset: new iE(0,0),
                infoWindowOffset: new iE(0,0),
                clickable: false
            });
            i.marker._fromMap = 1
        } else {
            i.marker.setPoint(e)
        }
        this.addOverlay(i.marker);
        i.marker.show();
        i.marker.openSimpleInfoWindow(jO)
    }
    ;
    hr.prototype.closeSimpleInfoWindow = function() {
        var e = this.temp.infoWin || this.temp._infoWin;
        if (e && e.overlay) {
            e.overlay.closeSimpleInfoWindow()
        }
    }
    ;
    en.prototype.openSimpleInfoWindow = function(e) {
        if (this.map) {
            this.map.closeSimpleInfoWindow();
            e._visible = true;
            this.map.temp._infoWin = e;
            e.overlay = this;
            eJ.BaseClass.call(e, e.hashCode)
        }
    }
    ;
    en.prototype.closeSimpleInfoWindow = function() {
        if (this.map && this.map.temp._infoWin) {
            this.map.temp._infoWin._visible = false;
            this.map.temp._infoWin.decontrol();
            this.map.temp._infoWin = null
        }
    }
    ;
    function ce(T, e) {
        id.call(this, e);
        e = e || {};
        this._config.showRegion = e.showRegion || "inside";
        this._config.isBuildingMask = e.isBuildingMask && true;
        this._config.isPoiMask = e.isPoiMask && true;
        this._config.isMapMask = e.isMapMask && true;
        this._config.path = T;
        this._parseFillCacheWebGL = [];
        this.setPoints(T, e);
        var i = this;
        gK.load("poly", function() {
            i._draw()
        })
    }
    ce.inherits(id, "MapMask");
    eJ.extend(ce.prototype, {
        setPoints: function(i) {
            var e = id.getGraphPoints(i).slice(0);
            this.hasMultipleParts = false;
            id.prototype.setPoints.call(this, e)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = id.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cr(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        }
    });
    function jA(jQ, T) {
        if (!jQ || jQ.length === 0) {
            return
        }
        var jP = [];
        if (jQ[0]instanceof cr) {
            var e = this._processSinglePointArray(jQ);
            for (var jO = 0; jO < e.innerPoints.length; jO++) {
                jP[jO] = iN.convertLL2MC(e.innerPoints[jO])
            }
        }
        ce.call(this, jP, T)
    }
    jA.inherits(ce, "MapMaskOut");
    eJ.extend(jA.prototype, {
        toString: function() {
            return "MapMask"
        }
    });
    function e4(e, i) {
        e = isNaN(e) ? 0 : e;
        i = isNaN(i) ? 0 : i;
        this.x = e;
        this.y = i
    }
    e4.prototype.equals = function(e) {
        if (!e) {
            return false
        }
        return e.x === this.x && e.y === this.y
    }
    ;
    e4.prototype.clone = function() {
        return new e4(this.x,this.y)
    }
    ;
    e4.prototype.toString = function() {
        return "Pixel"
    }
    ;
    function iE(i, e) {
        if (typeof i !== "number") {
            this.width = parseFloat(i)
        } else {
            this.width = i
        }
        if (typeof e !== "number") {
            this.height = parseFloat(e)
        } else {
            this.height = e
        }
    }
    iE.prototype.equals = function(e) {
        return !!(e && this.width === e.width && this.height === e.height)
    }
    ;
    iE.prototype.toString = function() {
        return "Size"
    }
    ;
    var jG = {
        B_NORMAL_MAP: {
            tileUrls: dn(B.tileDomain, B.rasterTilePath),
            vectorTileUrls: dn(B.tileDomain, B.vectorTilePath),
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            webgl: {
                minZoom: 3,
                maxZoom: 25
            },
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "bg.png",
            bounds: new hF(new cr(-21364736,-11708041.66),new cr(23855104,12474104.17)),
            imgExtend: "png"
        },
        B_SATELLITE_MAP: {
            tileUrls: ["//maponline0.bdimg.com/starpic/?qt=satepc&", "//maponline1.bdimg.com/starpic/?qt=satepc&", "//maponline2.bdimg.com/starpic/?qt=satepc&", "//maponline3.bdimg.com/starpic/?qt=satepc&"],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "bg.png",
            bounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
            imgExtend: "png"
        },
        B_STREET_MAP: {
            tileUrls: dn(B.tileDomain, B.rasterTilePath),
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "bg.png",
            bounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
            imgExtend: "png"
        },
        BMAP_CUSTOM_LAYER: {
            tileUrls: [""],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 1,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "blank.gif",
            bounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
            imgExtend: "png"
        },
        B_EARTH_MAP: {
            tileUrls: [""],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            webgl: {
                minZoom: 3,
                maxZoom: 21
            },
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "blank.gif",
            bounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
            imgExtend: "png"
        },
        B_NONE_MAP: {
            tileUrls: "",
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: B.imgPath + "bg.png",
            bounds: new hF(new cr(-21364736,-11708041.66),new cr(23855104,12474104.17)),
            imgExtend: "png"
        }
    };
    var d6 = jG;
    function cE(jR, jS, T, e, jQ) {
        if (jQ && d6[jQ]) {
            this.mapTypeName = jQ
        } else {
            this.mapTypeName = BMAP_NORMAL_MAP
        }
        if (jR && jR instanceof Array) {
            var jP = true;
            for (var jO = 0; jO < jR.length; jO++) {
                if (jR[jO]instanceof hF) {
                    continue
                } else {
                    jP = false;
                    break
                }
            }
            jP && (this.bounds = jR)
        }
        if (typeof jS === "number" && jS >= d6[this.mapTypeName].webgl.minZoom) {
            if (d6[this.mapTypeName].webgl) {
                if (jS >= d6[this.mapTypeName].webgl.minZoom) {
                    this.minZoom = jS
                } else {
                    this.minZoom = d6[this.mapTypeName].webgl.minZoom
                }
            } else {
                if (jS >= d6[this.mapTypeName].minZoom) {
                    this.minZoom = jS
                } else {
                    this.minZoom = d6[this.mapTypeName].minZoom
                }
            }
        }
        if (typeof T === "number") {
            if (d6[this.mapTypeName].webgl) {
                if (T <= d6[this.mapTypeName].webgl.maxZoom) {
                    this.maxZoom = T
                } else {
                    this.maxZoom = d6[this.mapTypeName].webgl.maxZoom
                }
            } else {
                if (T <= d6[this.mapTypeName].maxZoom) {
                    this.maxZoom = T
                } else {
                    this.maxZoom = d6[this.mapTypeName].maxZoom
                }
            }
        }
        if (this.maxZoom < this.minZoom) {
            this.maxZoom = null
        }
        if (e && typeof e === "function") {
            this.tileUrlFunction = e
        }
    }
    eJ.extend(cE.prototype, {
        addBoundary: function(e) {
            if (e instanceof hF) {
                if (this.bounds) {
                    this.bounds.push(e)
                } else {
                    this.bounds = [e]
                }
            }
        },
        setTileUrlFunction: function(e) {
            if (e && typeof e === "function") {
                this.tileUrlFunction = e
            }
        },
        crossPoint: function(e, jO, jP) {
            if (jP < this.minZoom || jP > this.maxZoom) {
                return false
            }
            var jQ = this.containsPoint(e, jP);
            if (jQ) {
                return jQ
            }
            for (var T = 0; T < this.bounds.length; T++) {
                if (this.bounds[T].intersects(jO)) {
                    jQ = true;
                    break
                }
            }
            return jQ
        },
        containsPoint: function(e, jO) {
            if (!e || !(e instanceof cr) || !this.isValid()) {
                return false
            }
            var jP = false;
            if (jO < this.minZoom || jO > this.maxZoom) {
                return jP
            }
            for (var T = 0; T < this.bounds.length; T++) {
                if (this.bounds[T].containsPoint(e)) {
                    jP = true;
                    break
                }
            }
            return jP
        },
        isValid: function() {
            return this.bounds && this.minZoom && this.maxZoom && this.tileUrlFunction
        },
        toString: function() {
            return "PrivateRegionDataModel"
        }
    });
    function hq(jT, i, jP, T, jO) {
        this.mgr = jT;
        this.position = jP;
        this._cbks = [];
        this.name = jT.getTileName(T, jO, jT.map.config.style);
        this.info = T;
        this._transparentPng = jO.isTransparentPng();
        var jU = bT("img");
        hH(jU);
        jU.galleryImg = false;
        var jS = jU.style;
        jS.position = "absolute";
        jS.width = jT.tileSize + "px";
        jS.height = jT.tileSize + "px";
        jS.left = jP[0] + "px";
        jS.top = jP[1] + "px";
        this.img = jU;
        this.src = i;
        if (eo && jP._offsetX === 0) {
            jS.opacity = 0;
            jS.willChange = "opacity"
        }
        var jR = this;
        this.img.onload = function(j2) {
            if (!jR.mgr) {
                return
            }
            var jX = jR.mgr;
            var jV = jX.bufferTiles;
            if (jX.bufferNumber > 0) {
                jV[jR.name] = jR;
                jV.push(jR.name)
            }
            var jZ = jV.length - jX.bufferNumber;
            for (var j0 = 0; jZ > 0 && j0 < jV.length; j0++) {
                var j1 = jV[j0];
                if (!jX.mapTiles[j1]) {
                    if (jV[j1]) {
                        jV[j1].mgr = null;
                        var jY = jV[j1].img;
                        if (jY.parentNode) {
                            h2(jY);
                            jY.parentNode.removeChild(jY)
                        }
                        jY = null;
                        jV[j1].img = null;
                        jV[j1] = null;
                        delete jV[j1]
                    }
                    jV.splice(j0, 1);
                    j0--;
                    jZ--
                }
            }
            jR.loaded = true;
            jX.imgNumber++;
            if (!aR(jR.img)) {
                if (jO.tilesDiv) {
                    jO.tilesDiv.appendChild(jR.img)
                }
            }
            var j2 = new fu("onimagechange");
            j2.action = "show";
            j2.tile = jR.name;
            jX.map.dispatchEvent(j2);
            if (eo && jP._offsetX === 0) {
                var jW = new fk({
                    fps: 10,
                    duration: 300,
                    render: function(e) {
                        if (jR.img && jR.img.style) {
                            jR.img.style.opacity = e * 1
                        }
                    },
                    finish: function() {
                        if (jR.img && jR.img.style) {
                            delete jR.img.style.opacity;
                            jR.img.style.willChange = "auto"
                        }
                    }
                })
            }
            jR._callCbks()
        }
        ;
        this.img.onerror = function(jX) {
            jR.error = true;
            jR._callCbks();
            if (!jR.mgr) {
                return
            }
            var jV = jR.mgr;
            var jW = d6[jO.mapType];
            if (jW.errorUrl) {
                jR.img.src = jW.errorUrl
            }
            if (!aR(jR.img)) {
                if (jO.tilesDiv) {
                    jO.tilesDiv.appendChild(jR.img)
                }
            }
        }
        ;
        jU = null;
        var jQ = new fu("onimagebefore");
        jQ.tile = jR.name;
        jT.map.dispatchEvent(jQ)
    }
    hq.prototype._addLoadCbk = function(e) {
        this._cbks.push(e)
    }
    ;
    hq.prototype._load = function() {
        if (FeBrowser.ie <= 6 && FeBrowser.ie > 0 && this._transparentPng) {
            this.img.src = B.imgPath + "blank.gif"
        } else {
            this.img.src = this.src
        }
    }
    ;
    hq.prototype._callCbks = function() {
        var T = this;
        for (var e = 0; e < T._cbks.length; e++) {
            T._cbks[e]()
        }
        T._cbks.length = 0
    }
    ;
    var eo = (!eJ.Browser.ie || eJ.Browser.ie > 8);
    function iV(e) {
        this.tileLayers = [];
        this.map = e;
        this.bufferNumber = 300;
        this.mapTiles = [];
        this.bufferTiles = [];
        this.config = d6[this.map.mapType];
        this.errorUrl = this.config.errorUrl;
        this.tileSize = this.config.tileSize;
        this.baseUnits = this.config.baseUnits;
        this.baseZoomLevel = this.config.zoomLevelBase;
        this.tileURLs = this.config.tileUrls;
        this.imgNumber = 0;
        this.numLoading = 0;
        this.temp = {}
    }
    bw.register(function(i) {
        if (i._renderType === "webgl") {
            return
        }
        var e = i.tileMgr = new iV(i);
        i.addEventListener("mousewheel", function(T) {
            e.mouseWheel(T)
        });
        i.addEventListener("dblclick", function(T) {
            e.dblClick(T)
        });
        i.addEventListener("rightdblclick", function(T) {
            e.dblClick(T)
        });
        i.addEventListener("minuspress", function(T) {
            e.keypress(T)
        });
        i.addEventListener("pluspress", function(T) {
            e.keypress(T)
        });
        i.addEventListener("load", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.loadTiles()
        });
        i.addEventListener("zoomstartcode", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e._zoom(T)
        });
        i.addEventListener("moving", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.moveGridTiles()
        });
        i.addEventListener("resize", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.resizeMap(T)
        });
        i.addEventListener("addtilelayer", function(T) {
            e.addTileLayer(T)
        });
        i.addEventListener("removetilelayer", function(T) {
            e.removeTileLayer(T)
        })
    });
    eJ.extend(iV.prototype, {
        addTileLayer: function(jO) {
            var T = this;
            var i = jO.target;
            T.tileLayers.push(i);
            if (T.map.loaded) {
                T.moveGridTiles()
            }
        },
        removeTileLayer: function(jV) {
            var jW = this;
            var jT = jV.target;
            var jR = jT.mapType;
            var jQ = jW.mapTiles;
            var jY = jW.bufferTiles;
            for (var T in jY) {
                var jO = T.split("-")[1];
                if (jO == jR) {
                    delete jY[T]
                }
            }
            for (var T in jQ) {
                var jO = T.split("-")[1];
                if (jO == jR) {
                    delete jQ[T]
                }
            }
            if (jW.zoomsDiv && jW.zoomsDiv.parentNode) {
                jW.zoomsDiv.parentNode.removeChild(jW.zoomsDiv);
                jW.zoomsDiv.innerHTML = ""
            }
            var jP = jW.map;
            if (jP.deepZoom) {
                var jX = jP.deepZoom.preDeepZoomDiv;
                if (jX && jX.parentNode) {
                    jX.parentNode.removeChild(jX)
                }
            }
            for (var jU = 0, jS = jW.tileLayers.length; jU < jS; jU++) {
                if (jT == jW.tileLayers[jU]) {
                    jW.tileLayers.splice(jU, 1)
                }
            }
            jW.moveGridTiles()
        },
        hideDeepZoomDiv: function() {
            var i = this
              , T = i.map;
            if (T.deepZoom) {
                var e = T.deepZoom.preDeepZoomDiv;
                if (e && e.style.display != "none") {
                    e.style.display = "none"
                }
            }
        },
        getTileLayer: function(jP) {
            var jO = this;
            for (var T = 0, e = jO.tileLayers.length; T < e; T++) {
                tilelayer = jO.tileLayers[T];
                if (tilelayer.mapType == jP) {
                    return tilelayer
                }
            }
            return null
        },
        _zoom: function(T) {
            var i = this;
            if (i.zoomsDiv && i.zoomsDiv.style.display != "none") {
                i.zoomsDiv.style.display = "none"
            }
            i.hideDeepZoomDiv();
            i.moveGridTiles()
        },
        resizeMap: function(i) {
            this.loaded = false;
            this.moveGridTiles()
        },
        _checkTilesLoaded: function() {
            this.numLoading--;
            var e = this;
            if (this.numLoading == 0) {
                if (this._checkLoadedTimer) {
                    clearTimeout(this._checkLoadedTimer);
                    this._checkLoadedTimer = null
                }
                this._checkLoadedTimer = setTimeout(function() {
                    if (e.numLoading == 0) {
                        e.map.dispatchEvent(new fu("ontilesloaded"))
                    }
                    e._checkLoadedTimer = null
                }, 80)
            }
        },
        getTileName: function(e, T, i) {
            var jP = T.mapType;
            var jO = "TILE-" + jP + "-" + i + "-" + e[0] + "-" + e[1] + "-" + e[2];
            return jO
        },
        hideTile: function(jO, T) {
            var i = jO.img;
            if (aR(i)) {
                if (jO.loaded) {
                    this.imgNumber--
                }
                if (i.parentNode) {
                    h2(i);
                    i.parentNode.removeChild(i)
                }
            }
            var jP = new fu("onimagechange");
            jP.tile = this.getTileName(jO.info, T, this.map.config.style);
            jP.action = "hide";
            delete this.mapTiles[jO.name];
            if (!jO.loaded) {
                h2(i);
                jO._callCbks();
                i = null;
                jO.img = null;
                jO.mgr = null
            }
            this.map.dispatchEvent(jP)
        },
        loadTiles: function() {
            var i = this;
            if (eJ.Browser.ie) {
                try {
                    document.execCommand("BackgroundImageCache", false, true)
                } catch (T) {}
            }
            if (this.zoomsDiv && this.zoomsDiv.style.display != "none") {
                this.zoomsDiv.style.display = "none"
            }
            i.hideDeepZoomDiv();
            i.moveGridTiles()
        },
        getCell: function(jP, jO) {
            var e = this.baseUnits * Math.pow(2, (this.baseZoomLevel - jO));
            var T = parseInt(jP.lng / e);
            var i = parseInt(jP.lat / e);
            return [T, i, e * (T + 0.5), e * (i + 0.5)]
        },
        moveGridTiles: function() {
            var j2 = this.map
              , kb = j2.getMapType()
              , j9 = this.tileLayers.length;
            var j7 = j2.centerPoint;
            if (kb !== BMAP_SATELLITE_MAP) {
                j7 = eM.calcLoopCenterPoint(j7)
            }
            var jT = j2.width;
            var kn = j2.getZoomUnits();
            var j8 = kn * jT;
            var kd = j7.lng - j8 / 2;
            var jY = j7.lng + j8 / 2;
            var j1 = eM.isAddWidth(kd, jY);
            for (var kf = 0; kf < j9; kf++) {
                var jP = this.tileLayers[kf];
                if (jP.baseLayer || j9 == 1) {
                    this.tilesDiv = jP.tilesDiv
                }
                var j3 = d6[jP.mapType];
                var jO = j2.zoomLevel;
                var ki = j2.getZoomUnits(j2.zoomLevel);
                var jX = j3.baseUnits * Math.pow(2, (j3.zoomLevelBase - jO));
                var jV = Math.floor(j7.lng / jX);
                var ke = Math.floor(j7.lat / jX);
                var j0 = j3.tileSize;
                var j4 = [jV, ke, (j7.lng - jV * jX) / jX * j0, (j7.lat - ke * jX) / jX * j0];
                var jW = j1 ? j2.width / 2 * 1.5 : j2.width / 2;
                var jZ = j4[0] - Math.ceil((jW - j4[2]) / j0);
                var km = j4[1] - Math.ceil((j2.height / 2 - j4[3]) / j0);
                var kg = j4[0] + Math.ceil((jW + j4[2]) / j0);
                var j5 = j4[1] + Math.ceil((j2.height / 2 + j4[3]) / j0);
                var jU = [];
                for (var kk = jZ; kk < kg; kk++) {
                    for (var kj = km; kj < j5; kj++) {
                        jU.push([kk, kj]);
                        var ka = "id_" + kk + "_" + kj + "_" + jO;
                        jU[ka] = true
                    }
                }
                if (jP.mapType !== BMAP_SATELLITE_MAP) {
                    jU = eM.calcLoopTiles(jU, jO)
                }
                jU.sort((function(i) {
                    return function(kp, kq) {
                        return ((0.4 * Math.abs(kp[0] - i[0]) + 0.6 * Math.abs(kp[1] - i[1])) - (0.4 * Math.abs(kq[0] - i[0]) + 0.6 * Math.abs(kq[1] - i[1])))
                    }
                }
                )([j4[0], j4[1]]));
                var T = this.mapTiles;
                var e = -j7.lng / ki;
                var ko = j7.lat / ki;
                var kc = [e, ko];
                for (var j6 in T) {
                    var jR = T[j6];
                    var kl = jR.info;
                    if (!kl) {
                        continue
                    }
                    var ka = "id_" + kl[0] + "_" + kl[1] + "_" + kl[2];
                    if (!jU[ka]) {
                        this.hideTile(jR, jP)
                    }
                }
                var jQ = -j2.offsetX + j2.width / 2;
                var jS = -j2.offsetY + j2.height / 2;
                jP.tilesDiv.style.left = Math.round(e + jQ) - kc[0] + "px";
                jP.tilesDiv.style.top = Math.round(ko + jS) - kc[1] + "px";
                this.numLoading += jU.length;
                for (var kk = 0, kh = jU.length; kk < kh; kk++) {
                    this.showTile([jU[kk][0], jU[kk][1], j2.zoomLevel], kc, jP, kk, j2.config.style)
                }
            }
        },
        showTile: function(jR, jQ, jU, jZ) {
            this.centerPos = jQ;
            var jS = d6[jU.mapType];
            var jV = this.map.config.style;
            var jO = this.getTileName(jR, jU, jV);
            var jP = (jR[0] * jS.tileSize) + jQ[0];
            var T = (-1 - jR[1]) * jS.tileSize + jQ[1];
            var jY = [jP, T];
            var jT = null;
            if (jU.mapType !== BMAP_SATELLITE_MAP) {
                jT = eM.calcLoopParam(jR[0], jR[2]);
                var jX = jT.offsetX;
                jY[0] += jX;
                jY._offsetX = jX
            }
            var j2 = this;
            var j1 = this.mapTiles[jO];
            if (j1) {
                j1.img.style.left = jY[0] + "px";
                j1.img.style.top = jY[1] + "px";
                if (j1.loaded) {
                    this._checkTilesLoaded()
                } else {
                    j1._addLoadCbk(function() {
                        j2._checkTilesLoaded()
                    })
                }
                return
            }
            j1 = this.bufferTiles[jO];
            if (j1) {
                this.imgNumber++;
                jU.tilesDiv.insertBefore(j1.img, jU.tilesDiv.lastChild);
                this.mapTiles[jO] = j1;
                j1.img.style.left = jY[0] + "px";
                j1.img.style.top = jY[1] + "px";
                if (j1.loaded) {
                    this._checkTilesLoaded()
                } else {
                    j1._addLoadCbk(function() {
                        j2._checkTilesLoaded()
                    })
                }
                var j0 = new fu("onimagechange");
                j0.action = "cache";
                j0.tile = this.getTileName(jR, jU, jV);
                this.map.dispatchEvent(j0)
            } else {
                var jW = new e4(jR[0],jR[1]);
                if (jT) {
                    jW.x = jT.col
                }
                var i = jU.getTilesUrl(jW, jR[2]);
                j1 = new hq(this,i,jY,jR,jU);
                j1._addLoadCbk(function() {
                    j2._checkTilesLoaded()
                });
                j1._load();
                this.mapTiles[jO] = j1;
                gX(this.map)
            }
        },
        mouseWheel: function(jS) {
            var jR = this.map;
            if (!jR.config.enableWheelZoom) {
                return
            }
            var jT = jR.zoomLevel + (jS.trend === true ? 1 : -1);
            var jP = jR._getProperZoom(jT);
            if (jP.exceeded) {
                var T = new fu("onzoomexceeded");
                T.targetZoom = jT;
                jR.dispatchEvent(T);
                return
            }
            jR.dispatchEvent(new fu("onzoomstart"));
            jR.lastLevel = jR.zoomLevel;
            jR.zoomLevel = jP.zoom;
            var i = jS.pixel;
            var jO = jR.pixelToPointIn(i, {
                zoom: jR.lastLevel
            });
            var jQ = jR.getZoomUnits(jR.zoomLevel);
            jR.centerPoint = new cr(jO.lng + jQ * (jR.width / 2 - i.x),jO.lat - jQ * (jR.height / 2 - i.y));
            this.zoom(i)
        },
        dblClick: function(T) {
            var i = this.map;
            if (!i.config.enableDblclickZoom) {
                return
            }
            if (i.mapType === "B_EARTH_MAP") {
                return
            }
            if (i.currentOperation === dZ.dragging) {
                return
            }
            if (T.type == "onrightdblclick") {
                i.zoomOut(T.point)
            } else {
                i.zoomIn(T.point)
            }
        },
        keypress: function(T) {
            var i = this.map;
            if (i.getMapType() === BMAP_EARTH_MAP) {
                return
            }
            T.type == "onpluspress" ? i.zoomIn() : i.zoomOut()
        }
    });
    function hc(jO) {
        this.opts = jO || {};
        this.copyright = this.opts.copyright || {};
        this.transparentPng = this.opts.transparentPng || false;
        this.png8 = this.opts.png8 || false;
        this.baseLayer = this.opts.baseLayer || false;
        this.dataType = this.opts.dataType || 1;
        this.transform = this.opts.transform || 0;
        this.spanLevel = this.opts.spanLevel || 0;
        this.isFlat = !this.opts.isFlat ? false : true;
        this.showLabel = this.opts.showLabel === false ? false : true;
        var e = this.opts.tileTypeName || "web";
        this.tileType = hG.getInstance(e);
        this.clipTile = this.opts.clipTile || false;
        this._type = "tilelayer";
        var i = bS() ? 128 : 256;
        this.cacheSize = this.opts.cacheSize || i;
        var T = this;
        this.tileCache = new ay(this.cacheSize,{
            clearCallback: function(jP) {
                if (jP.label) {
                    if (jP.label.textImageBitmap) {
                        jP.label.textImageBitmap.close()
                    }
                    if (jP.label.indoorTextImageBitmap) {
                        jP.label.indoorTextImageBitmap.close()
                    }
                }
                T._removeIndoorData(jP)
            }
        });
        this.scaler = fX() >= 1.5 ? 2 : 1;
        this.normalUdt = jr("ditu", "normal").udt;
        this.numLoading = 0;
        this.useThumbData = false;
        this.useThumbData = this.opts.useThumbData || false;
        if (this.baseLayer) {
            this.useThumbData = true
        }
        if (typeof this.opts.customLayer === "boolean") {
            this.customLayer = this.opts.customLayer
        } else {
            this.customLayer = true
        }
    }
    hc.inherits(cZ, "TileLayer");
    eJ.extend(hc.prototype, {
        isTransparentPng: function() {
            return this.transparentPng
        },
        getTilesUrl: function(jV, e) {
            var T = d6[this.mapType];
            if (typeof T !== "object") {
                return null
            }
            var jO = jV.x;
            var jW = jV.y;
            if (this.mapType !== BMAP_SATELLITE_MAP) {
                var jW = eM.calcLoopParam(jW, e).col
            }
            var i = "";
            if (this.opts.tileUrlTemplate) {
                i = this.opts.tileUrlTemplate;
                i = i.replace(/\{X\}/, jW);
                i = i.replace(/\{Y\}/, jO);
                i = i.replace(/\{Z\}/, e)
            } else {
                if (this.mapType === BMAPGL_NORMAL_MAP) {
                    var jU = this.isCanvasMap ? 0 : 1;
                    var jQ = T.tileUrls[Math.abs(jW + jO) % T.tileUrls.length];
                    if (window.offLineIPAddress) {
                        jQ = window.offLineIPAddress + "tile5/"
                    }
                    var jP = this.map.config.style;
                    i = jQ + "?qt=vtile&x=" + jO + "&y=" + jW + "&z=" + e + (jP === "default" ? "" : ("&styleId=1")) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&showtext=" + jU;
                    i = i.replace(/-(\d+)/gi, "M$1")
                }
                if (this.mapType === BMAP_SATELLITE_MAP) {
                    var jR = jr("ditu", "satellite");
                    var jT = jR.ver;
                    var jS = jR.udt;
                    i = T.tileUrls[Math.abs(jW + jO) % T.tileUrls.length] + "u=x=" + jO + ";y=" + jW + ";z=" + e + ";v=" + jT + ";type=sate&fm=46&udt=" + jS;
                    i = i.replace(/-(\d+)/gi, "M$1")
                }
            }
            return i
        },
        initialize: function(jR) {
            this.map = jR;
            if (jR._renderType === "webgl") {
                var jQ = null;
                if (this.customLayer !== false) {
                    jQ = this.getTilesUrl
                }
                eJ.extend(this, e0);
                this.labelProcessor = new iP(this);
                this.callbackDataQueue = [];
                if (jQ) {
                    this.getTilesUrl = jQ
                }
                var T = this;
                jR.on("indoor_data_refresh", function(jS) {
                    if (!T.baseLayer) {
                        return
                    }
                    T._refreshIndoorData(jS.uid, jS.floor)
                });
                jR.on("custom_labels_ready", function(jS) {
                    if (!T.baseLayer && jS.model === "custom") {
                        return
                    }
                    if ((jS.model === "custom" && T.drawIndex === 0) || jS.model === "mvt_" + T.drawIndex) {
                        T._doWorkAfterLabelImageLoad(jS.virtualTile, jS.labelCanvas, null, jS.imgKey)
                    }
                });
                jR.on("glmoduleloaded", function() {
                    if (!T.baseLayer) {
                        return
                    }
                    T.updateAllIconsTextureCoords()
                });
                jR.on("layer_update", function(jT) {
                    if (T.dataType === 2 && jR.customLoaded) {
                        T.clearCache();
                        var jS = new fu("onlayer_clear");
                        jR.fire(jS)
                    }
                });
                if (this.ontology && this.ontology._initEvent) {
                    this.ontology._initEvent(jR)
                }
            }
            if (!jR.temp.layerZIndex) {
                jR.temp.layerZIndex = 0
            }
            this.zIndex = this.zIndex || 0;
            if (jR.getRenderType() === "dom") {
                this.zIndex = jR.tileMgr.tileLayers.length
            } else {
                if (this.baseLayer) {
                    this.zIndex = 0
                } else {
                    if (this.zIndex > 0) {
                        this.adjustZIndex()
                    } else {
                        var e = jR._featureMgr.result.bkData;
                        this.zIndex = e.length || 1
                    }
                }
            }
            if (!jR.temp.layid) {
                jR.temp.layid = 0
            }
            if (!this.opts.mapType) {
                this.mapType = "BMAP_CUSTOM_LAYER_" + jR.temp.layid;
                jR.temp.layid++
            } else {
                this.mapType = this.opts.mapType
            }
            var jO = d6[this.mapType];
            if (!jO) {
                d6[this.mapType] = {
                    tileUrls: [],
                    tileSize: 256,
                    baseUnits: 256,
                    zoomLevelMin: 1,
                    zoomLevelMax: 19,
                    minZoom: 3,
                    maxZoom: 19,
                    minDataZoom: 3,
                    maxDataZoom: 19,
                    zoomLevelBase: 18,
                    errorUrl: B.imgPath + "/blank.gif",
                    bounds: new hF(new cr(-21364736,-10616832),new cr(23855104,15859712)),
                    imgExtend: "png"
                }
            }
            if (jR._renderType !== "webgl") {
                var jP = bI(jR.platform, '<div style="position:absolute;z-index:' + this.zIndex + '"></div>');
                jP.style.display = "";
                jP.style.left = Math.ceil(-jR.offsetX + jR.width / 2) + "px";
                jP.style.top = Math.ceil(-jR.offsetY + jR.height / 2) + "px";
                this.tilesDiv = jP
            }
            this.isCanvasMap = jR.isCanvasMap();
            this.lastZoom = jR.getZoom();
            var i = this;
            this.addEventListener("initDrawData", function(jS) {
                if (i.opts.boundary) {
                    i.addBoundary(i.opts.boundary)
                }
            })
        },
        clearCache: function() {
            this.tileCache.clear();
            this.map._featureMgr.clearData(this.drawIndex);
            this.map._featureMgr.setLabelData([], this.drawIndex);
            this.map._featureMgr.clearLabelOverlayData(this.drawIndex);
            this.labelProcessor.iconCache.clear()
        },
        remove: function() {
            if (this.tilesDiv && this.tilesDiv.parentNode) {
                this.tilesDiv.innerHTML = "";
                this.tilesDiv.parentNode.removeChild(this.tilesDiv)
            }
            delete this.tilesDiv
        },
        getCopyright: function() {
            return this.copyright
        },
        getMapType: function() {
            return this.mapType
        },
        adjustZIndex: function() {
            if (this.map && this.map._featureMgr) {
                var e = this.map._featureMgr.result.bkData;
                while (e[this.zIndex]) {
                    this.zIndex += 1
                }
            }
        },
        _getAdjoinZIndex: function(jP) {
            var T = this.zIndex;
            if (this.map && this.map._featureMgr) {
                var e = this.map._featureMgr.result.bkData;
                if (jP === "up") {
                    for (var jO = this.zIndex + 1; jO < e.length; jO++) {
                        if (e[jO]) {
                            T = jO + 1;
                            break
                        }
                    }
                } else {
                    for (var jO = this.zIndex - 1; jO > 0; jO--) {
                        if (e[jO]) {
                            T = jO;
                            break
                        }
                    }
                }
            }
            return T
        },
        setZIndex: function(e) {
            this.setTargetZIndex(e)
        },
        setTargetZIndex: function(e) {
            this.removeLabel && this.removeLabel(this.zIndex);
            this.zIndex = e;
            this.drawIndex = e;
            if (this.tilesDiv) {
                this.tilesDiv.style.zIndex = e
            }
        },
        calcLoopParam: function(e, i) {
            return eM.calcLoopParam(e, i)
        },
        addBoundary: function(jQ) {
            if (!jQ || !this.map) {
                return
            }
            if (typeof jQ === "string") {
                jQ = [jQ]
            }
            for (var jO = 0; jO < jQ.length; jO++) {
                var T = new BMapGL.Polygon(jQ[jO]);
                if (T && bP(T._i)) {
                    var jP = new fu("onbeforeaddoverlay",T);
                    jP.overlay = T;
                    jP.isLayerMask = true;
                    this.map.dispatchEvent(jP);
                    T._i(this.map);
                    if (this.boundary) {
                        this.boundary.push(T)
                    } else {
                        this.boundary = [T]
                    }
                }
            }
            this.updateBoundary()
        },
        clearBoundary: function() {
            this.boundary = false;
            this.updateBoundary()
        },
        updateBoundary: function() {
            if (this.boundary === undefined || !this.map) {
                return
            }
            var i = this.map._featureMgr.result.bkData;
            if (i[this.zIndex]) {
                i[this.zIndex].boundary = this.boundary;
                this.map.dispatchEvent(new fu("onrefresh"));
                if (this.boundary === false) {
                    var T = new fu("onremoveLayerMask");
                    T.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
                    this.map.dispatchEvent(T)
                }
            }
        }
    });
    function m(i, e, T) {
        this.bounds = i;
        this.content = e;
        this.mapType = T
    }
    m.inherits(cZ, "Copyright");
    var ec = {
        get: function(e) {
            if (!ec.singleton) {
                ec.singleton = new fO(e)
            }
            return ec.singleton
        }
    };
    function fO(i) {
        this._map = i;
        this._tileMgr = i.tileMgr;
        this._animationDiv = null;
        this._preAnimationDiv = null;
        this._animation = null;
        this._baseLayerDiv = null;
        this._transformStyleName = cX.ifSupportCSS3("transform", true);
        this._transformOriginStyleName = cX.ifSupportCSS3("transformOrigin", true);
        this._preZoomTimes = 1;
        this._preRenderTick = 1;
        this._enableCanvas2dMap = !!(i.getRenderType() === "canvas");
        this._isIE9 = !!(eJ.Browser.ie === 9);
        var e = this;
        i.addEventListener("maptypechange", function() {
            e.hide()
        });
        i.addEventListener("load", function() {
            e.hide()
        })
    }
    eJ.extend(fO.prototype, {
        prepareLayer: function() {
            var jO = this._map;
            var e = this._tileMgr;
            this._canvas2dMapMgr = jO.canvas2dMapMgr;
            var T = this._baseLayerDiv = e.tilesDiv;
            if (!this._animationDiv) {
                var i = this._preAnimationDiv;
                if (i) {
                    i.parentNode && i.parentNode.removeChild(i);
                    this._preAnimationDiv = null
                }
                this._preAnimationDiv = this._animationDiv = T.cloneNode(true);
                jO.platform.insertBefore(this._animationDiv, jO.platform.firstChild)
            }
            this.show()
        },
        prepareAniParam: function() {
            var jO = this._animationDiv;
            if (!jO) {
                return
            }
            var e = jO.children.length;
            var T;
            this._zoomAniInfo = [];
            for (var jP = e - 1; jP > -1; jP--) {
                var jQ = {};
                T = jO.children[jP].style;
                jQ.top = parseInt(T.top, 10);
                jQ.left = parseInt(T.left, 10);
                this._zoomAniInfo[jP] = jQ
            }
        },
        prepareLabelLayer: function() {
            var jP = this._map;
            if (this._enableCanvas2dMap && jP.canvas2dMapMgr) {
                if (this.touchZoomLabelCanvas) {
                    this.touchZoomLabelCanvas.parentNode.removeChild(this.touchZoomLabelCanvas)
                }
                var i = jP.canvas2dMapMgr._labelCanvas;
                this.touchZoomLabelCanvas = i.cloneNode(false);
                var e = this.touchZoomLabelCanvas.getContext("2d");
                e.drawImage(i, 0, 0);
                jP.platform.insertBefore(this.touchZoomLabelCanvas, jP.platform.firstChild);
                var jO = parseInt(i.style.left, 10);
                var T = parseInt(i.style.top, 10);
                this.touchZoomLabelCanvas.style.zIndex = 9;
                this.touchZoomLabelCanvas.style[this._transformOriginStyleName] = (this._fixPosition.x - (jP.offsetX + jO)) + "px " + (this._fixPosition.y - (jP.offsetY + T)) + "px";
                i.style.visibility = "hidden"
            }
        },
        show: function() {
            if (this._animationDiv) {
                this._animationDiv.style.visibility = ""
            }
        },
        showLabel: function() {
            var i = this._map;
            if (this._enableCanvas2dMap && i.canvas2dMapMgr) {
                var e = i.canvas2dMapMgr._labelCanvas;
                if (e) {
                    e.style.visibility = ""
                }
                if (this.touchZoomLabelCanvas) {
                    this.touchZoomLabelCanvas.style.zIndex = -2;
                    this.touchZoomLabelCanvas.style.visibility = "hidden"
                }
            }
        },
        hide: function() {
            if (this._animationDiv) {
                this._animationDiv.style.visibility = "hidden"
            }
            if (this._preAnimationDiv) {
                this._preAnimationDiv.style.visibility = "hidden"
            }
        },
        hideNonAnimationLayers: function() {
            var jO = this._map;
            if (jO.getRenderType() === "dom") {
                if (jO.overlayDiv) {
                    jO.overlayDiv.style.visibility = "hidden"
                }
                if (jO.overlayDivEx) {
                    jO.overlayDivEx.style.visibility = "hidden"
                }
            }
            var jQ = jO.tileMgr.tileLayers;
            var jP;
            for (var T = 0, e = jQ.length; T < e; T++) {
                jP = jQ[T];
                jP.tilesDiv.style.visibility = "hidden"
            }
        },
        showNonAnimationLayers: function() {
            var jO = this._map;
            if (jO.getRenderType() === "dom") {
                if (jO.overlayDiv) {
                    jO.overlayDiv.style.visibility = ""
                }
                if (jO.overlayDivEx) {
                    jO.overlayDivEx.style.visibility = ""
                }
            }
            var jQ = jO.tileMgr.tileLayers;
            var jP;
            for (var T = 0, e = jQ.length; T < e; T++) {
                jP = jQ[T];
                jP.tilesDiv.style.visibility = ""
            }
        },
        setFixPosition: function(e) {
            this._fixPosition = e
        },
        setZoom: function(e, jU) {
            var jR = this._fixPosition;
            var j0 = this._map;
            var j1 = this._baseLayerDiv;
            var jS = {
                x: jR.x - parseInt(j1.style.left, 10) - j0.offsetX,
                y: jR.y - parseInt(j1.style.top, 10) - j0.offsetY
            };
            var jO = this._animationDiv;
            if (!jO) {
                return
            }
            var jY = jO.children.length;
            var jW;
            var jZ = this._transformStyleName;
            var jQ = this._transformOriginStyleName;
            var j2 = this;
            var j4;
            var jT;
            for (var jX = jY - 1; jX > -1; jX--) {
                var jV = this._zoomAniInfo[jX];
                jW = jO.children[jX].style;
                var jP = jV.left - jS.x;
                var T = jV.top - jS.y;
                jV.dx = jP * e - jP;
                jV.dy = T * e - T;
                jV.preDx = jP - jP;
                jV.preDy = T - T;
                j4 = jV.preDx + (jV.dx - jV.preDx);
                jT = jV.preDy + (jV.dy - jV.preDy) + jU;
                jW.left = jV.left + j4 + "px";
                jW.top = jV.top + jT + "px";
                jW.width = jW.height = 256 * e + "px"
            }
            if (this._enableCanvas2dMap) {
                var j3 = !j2._isIE9 ? "translate3d(0px, " + jU + "px, 0) scale(" + e + ")" : "translate(0px, " + jU + "px) scale(" + e + ")";
                this.touchZoomLabelCanvas.style[jZ] = j3
            }
        },
        setZoomFinish: function() {
            this._animationDiv = null
        },
        startAnimation: function(jR) {
            this.prepareLayer();
            this.hideNonAnimationLayers();
            var ka = this._map;
            if (this.touchZoomLabelCanvas) {
                this.touchZoomLabelCanvas.style.display = "none"
            }
            jR = jR || {};
            var j8 = jR.zoomCount || 0;
            var jW = jR.fixPosition;
            var j6 = jR.fixMCPosition;
            var jU = jR.pixOffset;
            this._zoomCount = j8;
            var jO = ka.getZoom();
            var j9 = jO + j8;
            var e = ka.config.enableContinuousZoom;
            var j0 = 0.5;
            var jV = 5;
            var T = Math.pow(2, j8);
            var kc = this._baseLayerDiv;
            var jX = {
                x: jW.x - parseInt(kc.style.left, 10) - ka.offsetX,
                y: jW.y - parseInt(kc.style.top, 10) - ka.offsetY
            };
            var jS = this._animationDiv;
            var j4 = jS.children.length;
            var ke = this._preZoomTimes;
            var j7 = [];
            var j5 = this._transformStyleName;
            var jT = this._transformOriginStyleName;
            for (var j3 = j4 - 1; j3 > -1; j3--) {
                var j1 = {};
                var j2 = jS.children[j3].style;
                j1.top = parseInt(j2.top, 10);
                j1.left = parseInt(j2.left, 10);
                var jQ = j1.left - jX.x;
                var jP = j1.top - jX.y;
                j1.dx = jQ * T - jQ;
                j1.dy = jP * T - jP;
                j1.preDx = jQ * ke - jQ;
                j1.preDy = jP * ke - jP;
                j7[j3] = j1
            }
            var kb = this;
            var jZ;
            var kd;
            var jY;
            this._zoomAni = new fk({
                fps: 60,
                duration: e ? 500 : 1,
                transition: function(i) {
                    i = i * jV / (2 * j0);
                    return jV * i - j0 * i * i
                },
                render: function(kn) {
                    kn = kn * (4 * j0) / (jV * jV);
                    jZ = ke + kn * (T - ke);
                    var kg = jO + p(jZ);
                    var kl = null;
                    var kk = 0;
                    var ko = 0;
                    if (jR.onAnimationBeforeLooping) {
                        var kp = jR.onAnimationBeforeLooping(kn, kg);
                        kl = kp.loopingCenter;
                        kk = kp.yDiff;
                        ko = kp.totalYDiff
                    }
                    for (var kh = j7.length - 1; kh > -1; kh--) {
                        var ki = j7[kh];
                        if (jS.children[kh]) {
                            var km = jS.children[kh].style;
                            kd = ki.preDx + (ki.dx - ki.preDx) * kn - jU.width * kn;
                            jY = ki.preDy + (ki.dy - ki.preDy) * kn - jU.height * kn + kk;
                            km.left = ki.left + kd + "px";
                            km.top = ki.top + jY + "px";
                            km.height = km.width = 256 * jZ + "px"
                        }
                    }
                    var kf = jU.width * kn;
                    var kj = jU.height * kn;
                    if (ka.isRestrict) {
                        kb._enableCanvas2dMap && kb._canvas2dMapMgr.clearLabel()
                    } else {
                        kb._enableCanvas2dMap && kb._canvas2dMapMgr.drawLabel(jZ, jW, jO, j9, j8, kn, kf, kj, ko, kk)
                    }
                    kb._preZoomTimes = jZ;
                    kb._preRenderTick = kn;
                    jR.onAnimationLooping && jR.onAnimationLooping(kn, kg, kl)
                },
                finish: function() {
                    kb._preZoomTimes = 1;
                    kb._zoomAni = null;
                    kb._animationDiv = null;
                    jR.onAnimationFinish && jR.onAnimationFinish();
                    kb.showNonAnimationLayers()
                }
            });
            return this._zoomAni
        },
        stopAnimation: function() {
            if (this._zoomAni) {
                this._zoomAni.stop();
                this._zoomAni = null
            }
        }
    });
    function jL(e) {
        this._initVars(e);
        this._initColorCanvas();
        this._bindEvent(e)
    }
    eJ.extend(jL.prototype, {
        _initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this._labelCtx = e._labelCtx;
            this.ratio = this._map.config.ratio;
            this.sizeRatio = this.ratio > 1 ? 2 : 1;
            this.RANK1 = 1000000;
            this.RANK2 = 2000000;
            this.RANK3 = 3000000;
            this.RANK4 = 4000000;
            this.RANK5 = 5000000
        },
        _initColorCanvas: function() {
            var i = 256
              , T = bT("canvas")
              , e = T.style;
            e.width = i + "px";
            e.height = i + "px";
            T.width = i;
            T.height = i;
            this._colorCvsSize = i;
            this._colorCvs = T;
            this._colorCtx = T.getContext("2d")
        },
        getLabelImageData: function(j1) {
            var j0 = j1.textImg;
            var T = j1.textPos;
            var jY = this.ratio;
            var jW = this.sizeRatio / jY;
            var jP = this._colorCtx;
            var jT = this._colorCvsSize;
            jP.clearRect(0, 0, jT, jT);
            var jV = 0;
            var e = 0;
            var jS = 0;
            for (var jU = 0; jU < T.length; jU++) {
                if (T[jU].width > jV) {
                    jV = T[jU].width;
                    e = jU;
                    jS = T[jU].drawX
                }
            }
            jV /= jW;
            var jX = 0;
            for (var jU = 0, jR = T.length; jU < jR; jU++) {
                var jZ = T[jU];
                var j2;
                if (jU === e) {
                    j2 = 0
                } else {
                    j2 = jZ.drawX - jS
                }
                jP.drawImage(j0, jZ.srcX, jZ.srcY, jZ.width, jZ.height, j2, jX, jZ.width / jW, jZ.height / jW);
                if (jZ.width / jW > jV) {
                    jV = jZ.width / jW
                }
                jX += jZ.height / jW + 2 * jY
            }
            var jO = jP.getImageData(0, 0, jV, jX);
            var jQ = jP.getImageData(0, 0, jV, jX);
            return [jO, jQ]
        },
        _bindEvent: function(i) {
            var e = this
              , T = i._map;
            T.addEventListener("onspotmouseover", function(jR) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jR.spots.length > 0) {
                    var jQ = jR.spots[0].userdata.uid;
                    var jP = jR.spots[0].userdata.name;
                    var jO = e.findLabelByUid(jQ, jP);
                    jO && e._toHighLightColor(jO)
                }
            });
            T.addEventListener("onspotmouseout", function(jR) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jR.spots.length > 0) {
                    var jQ = jR.spots[0].userdata.uid;
                    var jP = jR.spots[0].userdata.name;
                    var jO = e.findLabelByUid(jQ, jP);
                    jO && e._toDefaultColor(jO)
                }
            });
            T.addEventListener("onspotclick", function(jR) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jR.spots && jR.spots.length > 0) {
                    var jQ = jR.spots[0].userdata.uid;
                    var jP = jR.spots[0].userdata.name;
                    var jO = e.findLabelByUid(jQ, jP);
                    jO && e._changeBaseMapState(jO)
                } else {
                    e._recoverNormalState()
                }
            });
            T.on("spot_status_reset", function() {
                e._recoverNormalState()
            });
            T.on("spot_highlight", function(jP) {
                var jO = e.findLabelByUid(jP.uid);
                jO && e._changeBaseMapState(jO)
            })
        },
        _getTextBound: function(jZ) {
            if (!jZ.textPos) {
                return null
            }
            var jX = this.ratio;
            var jV = this.sizeRatio / jX;
            var T = jZ.textPos;
            var jY = jZ.baseDrawX;
            var jW = jZ.baseDrawY;
            var jT = jY * jX + (T[0].drawX - jY) / jV;
            var jR = jW * jX + (T[0].drawY - jW) / jV;
            var jP = jT + T[0].width / jV;
            var e = jR + T[0].height / jV;
            for (var jU = 0, jS = T.length; jU < jS; jU++) {
                var j0 = T[jU];
                var jQ = jY * jX + (j0.drawX - jY) / jV;
                if (jQ < jT) {
                    jT = jQ
                }
                var jO = jW * jX + (j0.drawY - jW) / jV;
                if (jO < jR) {
                    jR = jO
                }
                if (jQ + j0.width > jP) {
                    jP = jQ + j0.width
                }
                if (jO + j0.height > e) {
                    e = jO + j0.height
                }
            }
            return [jT, jR, jP, e]
        },
        _toHighLightColor: function(T) {
            if (T._tempRank && T._tempRank == this.RANK5) {
                return
            }
            var jS = this._getTextBound(T);
            if (!jS) {
                return
            }
            var jO = Math.round(jS[0]);
            var i = Math.round(jS[1]);
            var e = this.getLabelImageData(T);
            var jQ = e[0];
            var jP = e[1];
            var jR = this._canvas2dMapMgr.getFilterImageData(jQ, this.RANK5);
            T._oldImgData = jP;
            this._labelCtx.putImageData(jR, jO, i)
        },
        _toDefaultColor: function(e) {
            if (e._tempRank && e._tempRank == this.RANK5) {
                return
            }
            if (e._oldImgData) {
                var i = this.sizeRatio;
                var T = this._getTextBound(e);
                if (!T) {
                    return
                }
                this._labelCtx.putImageData(e._oldImgData, Math.round(T[0]), Math.round(T[1]));
                e._oldImgData = null
            }
        },
        _changeBaseMapState: function(jO) {
            var T = this._canvas2dMapMgr;
            var i = jO.guid;
            var e = jO.guidExt;
            var jP = {
                guid: i,
                name: jO.name,
                guidExt: e
            };
            T._labelStrategy.setStrategyInfo(jP);
            T._loadData()
        },
        _recoverNormalState: function() {
            var e = this._canvas2dMapMgr;
            e._labelStrategy.setStrategyInfo(null);
            e._loadData()
        },
        findLabelByUid: function(jQ, jO) {
            var jS = this._canvas2dMapMgr
              , e = jS._computedLabel;
            for (var jP = 0, T = e.length; jP < T; jP++) {
                var jR = e[jP];
                if (!jS.isClickableLabel(jR)) {
                    continue
                }
                if (jQ && jR.guid === jQ) {
                    return jR
                }
                if (jO && jR.name === jO) {
                    return jR
                }
            }
            return null
        }
    });
    function E(e) {
        this._initVars(e)
    }
    eJ.extend(E.prototype, {
        _initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this.ratio = this._map.config.ratio;
            this._strategyInfo = null;
            this.RANK1 = 1000000;
            this.RANK2 = 2000000;
            this.RANK3 = 3000000;
            this.RANK4 = 4000000;
            this.RANK5 = 5000000
        },
        setStrategyInfo: function(e) {
            this._strategyInfo = e
        },
        preComputeLabel: function(jU, kL, ku, j6, kF, kZ) {
            var ko = []
              , j2 = jU._centerX
              , j0 = jU._centerY
              , k0 = j6 * kF;
            var kA = this.ratio;
            var jT = this._map.getZoom();
            var kj = 0;
            if (jT === 5) {
                kj = 4
            }
            if (jT === 8) {
                kj = -6
            }
            jU.sort(function(k1, i) {
                if (k1.x * k1.y < i.x * i.y) {
                    return -1
                } else {
                    return 1
                }
            });
            for (var kl = 0, kh = jU.length; kl < kh; kl++) {
                var kQ = jU[kl]
                  , kc = kQ.x
                  , j9 = kQ.y
                  , j7 = kQ.z;
                var ke = eM.calcLoopParam(kc, j7).offsetX;
                var ky = kc * k0
                  , kx = (j9 + 1) * k0
                  , jO = (ky - j2) / j6 + kL / 2 + ke
                  , T = (j0 - kx) / j6 + ku / 2;
                for (var ki = 0, kU = kQ.length; ki < kU; ki++) {
                    var jW = kQ[ki]
                      , j3 = undefined
                      , j1 = undefined
                      , kS = undefined
                      , kR = undefined;
                    var kH = jW.baseDrawX = jO + jW.baseX;
                    var kG = jW.baseDrawY = T + jW.baseY;
                    if (jW.type == "fixed") {
                        var ks = jW.iconPos
                          , j5 = jW.textPos
                          , kW = jW.textImg;
                        if (ks) {
                            ks.drawX = jO + ks.destX;
                            ks.drawY = T + ks.destY;
                            j3 = ks.drawX;
                            j1 = ks.drawY;
                            kS = ks.drawX + ks.width;
                            kR = ks.drawY + ks.height
                        }
                        if (j5 && kW) {
                            for (var kI = 0; kI < j5.length; kI++) {
                                var kV = j5[kI];
                                kV.drawX = jO + kV.destX;
                                kV.drawY = T + kV.destY;
                                if (!j3) {
                                    j3 = kV.drawX;
                                    j1 = kV.drawY;
                                    kS = kV.drawX + kV.width;
                                    kR = kV.drawY + kV.height
                                } else {
                                    if (kV.drawX < j3) {
                                        j3 = kV.drawX
                                    }
                                    if (kV.drawY < j1) {
                                        j1 = kV.drawY
                                    }
                                    if (kV.drawX + kV.width > kS) {
                                        kS = kV.drawX + kV.width
                                    }
                                    if (kV.drawY + kV.height > kR) {
                                        kR = kV.drawY + kV.height
                                    }
                                }
                            }
                        }
                    } else {
                        jW.tileX = jO;
                        jW.tileY = T;
                        j3 = jO + jW.minXOriginal;
                        j1 = T + jW.minYOriginal;
                        kS = jO + jW.maxXOriginal;
                        kR = T + jW.maxYOriginal
                    }
                    if (j3 != undefined) {
                        var kK = kH + (j3 - kH) / kA;
                        var kJ = kG + (j1 - kG) / kA;
                        var km = kH + (kS - kH) / kA;
                        var kk = kG + (kR - kG) / kA;
                        jW.minX = kK;
                        jW.minY = kJ;
                        jW.maxX = km;
                        jW.maxY = kk;
                        var kO = (kK + km) / 2
                          , kN = (kJ + kk) / 2
                          , kv = j2 + (kO - kL / 2) * j6
                          , kt = j0 + (ku / 2 - kN) * j6;
                        jW.geoX = kv;
                        jW.geoY = kt;
                        ko.push(jW)
                    }
                }
            }
            if (kZ) {
                for (var kl = 0, kh = kZ.length; kl < kh; kl++) {
                    var kg = kZ[kl];
                    var kD = kg[0];
                    var jX = kg[1];
                    var ks = kD.iconPos;
                    var jR = ks.geoX;
                    var jP = ks.geoY;
                    var kH = (jR - j2) / j6 + kL / 2;
                    var kG = (j0 - jP) / j6 + ku / 2;
                    var j3 = kH + ks.destX;
                    var j1 = kG + ks.destY;
                    var kS = j3 + ks.width;
                    var kR = j1 + ks.height;
                    kD.textPos = kD.textPos || kD._textPos;
                    var j5 = kD.textPos;
                    var kM = j5[0];
                    var kb = kH + kM.destX;
                    var jZ = kG + kM.destY;
                    if (jZ < j1) {
                        j1 = jZ
                    }
                    if (kb + kM.width > kS) {
                        kS = kb + kM.width
                    }
                    if (jZ + kM.height > kR) {
                        kR = jZ + kM.height
                    }
                    if (j5.length === 2) {
                        var ka = j5[1];
                        var j8 = kH + ka.destX;
                        var jY = kG + ka.destY;
                        if (jY < j1) {
                            j1 = jY
                        }
                        if (j8 + ka.width > kS) {
                            kS = j8 + ka.width
                        }
                        if (jY + ka.height > kR) {
                            kR = jY + ka.height
                        }
                    }
                    kD._tempBounds = [j3, j1, kS, kR];
                    var ks = jX.iconPos;
                    var jR = ks.geoX;
                    var jP = ks.geoY;
                    var kH = (jR - j2) / j6 + kL / 2;
                    var kG = (j0 - jP) / j6 + ku / 2;
                    var j3 = kH + ks.destX;
                    var j1 = kG + ks.destY;
                    var kS = j3 + ks.width;
                    var kR = j1 + ks.height;
                    jX.textPos = jX.textPos || jX._textPos;
                    var j5 = jX.textPos;
                    var kM = j5[0];
                    var kb = kH + kM.destX;
                    var jZ = kG + kM.destY;
                    if (kb < j3) {
                        j3 = kb
                    }
                    if (jZ < j1) {
                        j1 = jZ
                    }
                    if (jZ + kM.height > kR) {
                        kR = jZ + kM.height
                    }
                    if (j5.length === 2) {
                        var ka = j5[1];
                        var j8 = kH + ka.destX;
                        var jY = kG + ka.destY;
                        if (j8 < j3) {
                            j3 = j8
                        }
                        if (jY < j1) {
                            j1 = jY
                        }
                        if (jY + ka.height > kR) {
                            kR = jY + ka.height
                        }
                    }
                    jX._tempBounds = [j3, j1, kS, kR]
                }
                for (var kl = 0, kh = kZ.length; kl < kh; kl++) {
                    var kg = kZ[kl];
                    var kD = kg[0];
                    var jX = kg[1];
                    if (kl === 0 && jX.textPos) {
                        jX._textPos = jX.textPos;
                        delete jX.textPos
                    }
                    var kP = kD;
                    if (!kD.textPos && jX.textPos) {
                        kP = jX
                    }
                    var kT = kP._tempBounds;
                    for (ki = kl + 1; ki < kh; ki++) {
                        var kf = kZ[ki];
                        var kp = kf[0];
                        var kY = kf[1];
                        var j4 = 0;
                        var kX = kp._tempBounds;
                        if (!(kT[2] < kX[0] || kT[0] > kX[2] || kT[3] < kX[1] || kT[1] > kX[3])) {
                            j4++;
                            if (kp.textPos) {
                                kp._textPos = kp.textPos;
                                delete kp.textPos
                            }
                        }
                        var kX = kY._tempBounds;
                        if (!(kT[2] < kX[0] || kT[0] > kX[2] || kT[3] < kX[1] || kT[1] > kX[3])) {
                            j4++;
                            if (kY.textPos) {
                                kY._textPos = kY.textPos;
                                delete kY.textPos
                            }
                        }
                        if (j4 >= 2) {
                            if (kP.textPos) {
                                kP._textPos = kP.textPos;
                                delete kP.textPos
                            }
                        }
                    }
                }
                for (var kl = 0, kh = kZ.length; kl < kh; kl++) {
                    var kg = kZ[kl];
                    var kD = kg[0];
                    var jX = kg[1];
                    var kq = kD;
                    if (!kD.textPos && jX.textPos) {
                        kq = jX
                    }
                    var ks = kq.iconPos;
                    var jR = ks.geoX;
                    var jP = ks.geoY;
                    var kH = kq.baseDrawX = (jR - j2) / j6 + kL / 2;
                    var kG = kq.baseDrawY = (j0 - jP) / j6 + ku / 2;
                    ks.drawX = kH + ks.destX;
                    ks.drawY = kG + ks.destY;
                    var j3 = ks.drawX;
                    var j1 = ks.drawY;
                    var kS = ks.drawX + ks.width;
                    var kR = ks.drawY + ks.height;
                    var j5 = kq.textPos;
                    if (j5) {
                        var kM = j5[0];
                        kM.drawX = kH + kM.destX;
                        kM.drawY = kG + kM.destY;
                        if (kM.drawX < j3) {
                            j3 = kM.drawX
                        }
                        if (kM.drawY < j1) {
                            j1 = kM.drawY
                        }
                        if (kM.drawX + kM.width > kS) {
                            kS = kM.drawX + kM.width
                        }
                        if (kM.drawY + kM.height > kR) {
                            kR = kM.drawY + kM.height
                        }
                        if (j5.length === 2) {
                            var ka = j5[1];
                            ka.drawX = kH + ka.destX;
                            ka.drawY = kG + ka.destY;
                            if (ka.drawX < j3) {
                                j3 = ka.drawX
                            }
                            if (ka.drawY < j1) {
                                j1 = ka.drawY
                            }
                            if (ka.drawX + ka.width > kS) {
                                kS = ka.drawX + ka.width
                            }
                            if (ka.drawY + ka.height > kR) {
                                kR = ka.drawY + ka.height
                            }
                        }
                    }
                    var kK = kH + (j3 - kH) / kA;
                    var kJ = kG + (j1 - kG) / kA;
                    var km = kH + (kS - kH) / kA;
                    var kk = kG + (kR - kG) / kA;
                    kq.minX = kK;
                    kq.minY = kJ;
                    kq.maxX = km;
                    kq.maxY = kk;
                    var kC = (kK + km) / 2;
                    var kB = (kJ + kk) / 2;
                    var jS = j2 + (kC - kL / 2) * j6;
                    var jQ = j0 + (ku / 2 - kB) * j6;
                    kq.geoX = jS;
                    kq.geoY = jQ;
                    ko.push(kq)
                }
            }
            var kE = this._strategyInfo;
            if (kE) {
                var kn = kE.guid;
                var kw = kE.name;
                var kd = kE.guidExt;
                for (var kl = 0, kh = ko.length; kl < kh; kl++) {
                    var jV = ko[kl];
                    delete jV._tempRank;
                    if (!this._canvas2dMapMgr.isClickableLabel(jV) || (kd === 1 && !jV.guidExt)) {
                        continue
                    }
                    if ((kn && kn === jV.guid) || (kw && kw === jV.name)) {
                        jV._tempRank = this.RANK5
                    }
                }
            } else {
                for (var kl = 0, kh = ko.length; kl < kh; kl++) {
                    var jV = ko[kl];
                    if (jV.type == "line" || !jV.iconPos) {
                        continue
                    }
                    delete jV._tempRank
                }
            }
            ko.sort(function(k2, k1) {
                var k3 = k2._tempRank ? k2._tempRank : k2.rank
                  , i = k1._tempRank ? k1._tempRank : k1.rank;
                if (k3 === i) {
                    return k2.baseX - k1.baseX
                }
                return i - k3
            });
            for (var kl = 0, kh = ko.length; kl < kh; kl++) {
                var kP = ko[kl];
                kP.isDel = false;
                kP.isFadeout = false;
                kP._schedule = 0;
                kP._isIgnore = false;
                kP.arrIntersectIndex = [];
                for (ki = kl + 1; ki < kh; ki++) {
                    var kr = ko[ki];
                    if (!(kP.maxX - kj < kr.minX || kP.minX > kr.maxX - kj || kP.maxY - kj < kr.minY || kP.minY > kr.maxY - kj)) {
                        kP.arrIntersectIndex.push(ki)
                    }
                }
            }
            for (var kl = 0, kh = ko.length; kl < kh; kl++) {
                var jV = ko[kl];
                if (jV.isDel == false) {
                    var e = jV.arrIntersectIndex;
                    for (var ki = 0, kU = e.length; ki < kU; ki++) {
                        var kz = ko[e[ki]];
                        kz.isDel = true;
                        if (kz.guidExt === 1) {
                            kz.isDel = false
                        }
                    }
                }
            }
            return ko
        }
    });
    function X(e) {
        this._map = e;
        this._initCanvas();
        this._initVars();
        this._bindEvent();
        this._tileType = hG.getInstance("na")
    }
    bw.register(function(i) {
        if (i.getRenderType() === "canvas") {
            var e = i.config.style;
            if (bw["FeatureStyle" + e]) {
                i.canvas2dMapMgr = new X(i)
            } else {
                i.loadMapStyleFiles(function() {
                    i.canvas2dMapMgr = new X(i);
                    i.canvas2dMapMgr._loadData()
                })
            }
        }
    });
    eJ.extend(X.prototype, {
        _initCanvas: function() {
            var jR = this._map
              , jP = jR.getSize()
              , jO = jP.width
              , i = jP.height
              , e = jR.platform
              , jS = bT("canvas")
              , jQ = jS.style;
            var T = this.ratio = jR.config.ratio;
            this._width = jO;
            this._height = i;
            jQ.cssText = "position: absolute;left:0;top:0;width:" + jO + "px;height:" + i + "px;z-index:100;";
            jS.width = jO * T;
            jS.height = i * T;
            this._labelCanvas = jS;
            this._labelCtx = jS.getContext("2d");
            e.appendChild(jS)
        },
        _initVars: function() {
            var e = jr("ditu", "normal");
            this._udt = e.udt;
            this._version = e.ver;
            this._labelDataUrls = d6.B_NORMAL_MAP.vectorTileUrls;
            this._style = bw["FeatureStyle" + this._map.config.style];
            this._labelCount = 0;
            this._vectorDrawLib = new gJ(this);
            this._cache = {
                maxNum: 500,
                delNum: 50,
                arrCache: []
            };
            this._computedLabel = null;
            this._spotData = null;
            this._labelStrategy = new E(this);
            this._labelClick = new jL(this);
            this._biz = new ee(this);
            this._map.temp.isPermitSpotOver = true;
            this.labelStyleParam = "pl";
            if (this._map.getMapType() === BMAP_SATELLITE_MAP) {
                this.labelStyleParam = "sl"
            }
            this.statRequestCount = 0;
            this.statResponseCount = 0
        },
        _resizeHandler: function(jQ) {
            var jS = this
              , i = jS._map
              , jP = i.getSize()
              , T = jP.width
              , jU = jP.height;
            var jR = this.ratio;
            var jV = this._labelCanvas
              , jO = jV.style;
            jO.width = T + "px";
            jO.height = jU + "px";
            jV.width = T * jR;
            jV.height = jU * jR;
            jS._width = T;
            jS._height = jU;
            var jT = true;
            jS._loadData(jT)
        },
        _bindEvent: function() {
            var e = this
              , i = e._map;
            i.addEventListener("load", function(T) {
                e.clearLabel();
                e._loadData()
            });
            i.addEventListener("zoomend", function(T) {
                if (!T.notClearLabel) {
                    e.clearLabel()
                }
                e._loadData()
            });
            i.addEventListener("moveend", function(T) {
                e._loadData()
            });
            i.addEventListener("resize", function(T) {
                e._resizeHandler(T)
            });
            i.addEventListener("maptypechange", function(T) {
                if (T.mapType === BMAP_EARTH_MAP) {
                    e.hideLabelCanvas()
                } else {
                    e.showLabelCanvas();
                    if (T.mapType === BMAPGL_NORMAL_MAP) {
                        e.labelStyleParam = "pl"
                    } else {
                        if (T.mapType === BMAP_SATELLITE_MAP) {
                            e.labelStyleParam = "sl"
                        }
                    }
                    e._loadData()
                }
            });
            i.addEventListener("streetlayer_show", function(T) {
                if (this.isCanvasMap()) {
                    e.showLabelCanvas()
                }
            });
            i.addEventListener("streetlayer_hide", function(T) {
                if (this.isCanvasMap()) {
                    e.hideLabelCanvas()
                }
            });
            i.addEventListener("loadbizdata", function(jO) {
                var T = jO.data;
                e._biz.proecessBizData(T, function() {
                    e.updateLabel()
                })
            });
            i.addEventListener("unloadbizdata", function(T) {
                e._biz.clearBizData();
                e.updateLabel()
            });
            e.isDrawText = false;
            setTimeout(function() {
                if (!e.isDrawText) {
                    i.dispatchEvent(new fu("onmapwhitescreen"))
                }
            }, 10000)
        },
        getStyle: function() {
            return this._style
        },
        _getZoomUnits: function(e) {
            return Math.pow(2, 18 - e)
        },
        _createCacheForm: function(T, jS, jR, i) {
            var jQ = this;
            var e = jQ._cache;
            var jO = e.arrCache;
            var jT = this._getLabelId(T, jS, jR, i);
            var jP = {
                id: jT,
                updateLabelCounter: 0
            };
            jO.push(jP);
            jO[jT] = jP;
            return jP
        },
        _getLabelId: function(i, jO, T, e) {
            return "_" + i + "_" + jO + "_" + T + "_" + e + "_" + this.labelStyleParam
        },
        _getCache: function(i, jO, T, e) {
            return this._cache.arrCache[this._getLabelId(i, jO, T, e)]
        },
        _setCacheValue: function(jP, j2, j0, jO, jV) {
            var jX = this;
            var e = jX._cache;
            var jR = e.arrCache;
            var jT = e.maxNum;
            var jQ = e.delNum;
            var j1 = this._getLabelId(jP, j2, j0, jO);
            var jW = jR[j1];
            if (jV) {
                jW.lb = jV
            }
            if (jR.length > jT) {
                var T = jR.splice(0, jQ);
                for (var jU = 0, jS = T.length; jU < jS; jU++) {
                    var jY = T[jU]
                      , jZ = jY.id;
                    if (jR[jZ].lb) {
                        jR[jZ].lb = null
                    }
                    jR[jZ] = null;
                    delete jR[jZ]
                }
                T = null
            }
        },
        _loadData: function(j0) {
            var kj = this._map;
            if (!kj.isCanvasMap()) {
                return
            }
            var jT = kj.getCenterIn();
            var ki = eM.calcLoopCenterPoint(jT);
            var jS = this._tileType;
            var jV = this._width / 2;
            var j7 = this._height;
            var j8 = kj.getZoom();
            var j4 = jS.getDataZoom(j8);
            var jX = kj.getZoomUnits(j8);
            var j3 = jX * jV;
            var kh = ki.lng - j3;
            var kg = ki.lng + j3;
            var j1 = eM.isAddWidth(kh, kg);
            jV = j1 ? jV * 1.5 : jV;
            var j2 = jS.getTileSize(j8);
            var jP = jS.getMercatorSize(j8, j4);
            var jW = Math.floor(ki.lng / jP);
            var jY = Math.floor(ki.lat / jP);
            var jQ = [jW, jY, (ki.lng - jW * jP) / jP * j2, (ki.lat - jY * jP) / jP * j2];
            var ka = jQ[0] - Math.ceil((jV - jQ[2]) / j2);
            var ke = jQ[1] - Math.ceil((j7 / 2 - jQ[3]) / j2);
            var j6 = jQ[0] + Math.ceil((jV + jQ[2]) / j2);
            var kb = jQ[1] + Math.ceil((j7 / 2 + jQ[3]) / j2);
            kj.temp.isPermitSpotOver = false;
            var e = [];
            for (var kd = ka; kd < j6; kd++) {
                for (var kc = ke; kc < kb; kc++) {
                    e.push([kd, kc, j4]);
                    var j5 = "id_" + kd + "_" + kc + "_" + j8;
                    e[j5] = true
                }
            }
            e._zoom = j4;
            e = eM.calcLoopTiles(e, j8);
            e.sort((function(i) {
                return function(kl, km) {
                    return ((0.4 * Math.abs(kl[0] - i[0]) + 0.6 * Math.abs(kl[1] - i[1])) - (0.4 * Math.abs(km[0] - i[0]) + 0.6 * Math.abs(km[1] - i[1])))
                }
            }
            )([jQ[0], jQ[1]]));
            var jZ = this._cache.arrCache;
            this._curViewLabels = [];
            var jO = "viewKey_" + Math.floor(jT.lng) + "_" + Math.floor(jT.lat) + "_" + j8;
            this.statRequestCount = 0;
            this.statResponseCount = 0;
            this._labelCount += e.length;
            var jU = j8;
            for (var kd = 0, j9 = e.length; kd < j9; kd++) {
                var jW = e[kd][0];
                var jY = e[kd][1];
                var T = e[kd][2];
                var jR = this._getLabelId(jW, jY, T, jU);
                var kf = jZ[jR];
                if (!kf) {
                    kf = this._createCacheForm(jW, jY, T, jU)
                }
                if (typeof kf.lb === "undefined") {
                    kf.lb = null;
                    this._loadLabelData(jW, jY, T, jU, j2, jO);
                    this.statRequestCount++
                } else {
                    if (kf.lb) {
                        this._curViewLabels.push(kf.lb);
                        this._labelCount--
                    } else {
                        if (j0) {
                            this._loadLabelData(jW, jY, T, jU, j2, jO)
                        }
                        kf.updateLabelCounter++
                    }
                }
            }
            if (this._labelCount === 0) {
                this.updateLabel()
            }
            var kk = this;
            if (kk.errorTimer) {
                clearTimeout(kk.errorTimer)
            }
            kk.errorTimer = setTimeout(function() {
                if (kk._labelCount !== 0) {
                    kk._labelCount = 0;
                    kk.updateLabel()
                }
                var km = new fu("onloaddatatimeout");
                var kn = 0;
                var kl = 0;
                var ko = 0;
                var i = 0;
                if (kk.statRequestCount === kk.statResponseCount) {
                    kn = 1
                } else {
                    kl = 1
                }
                if (kl === 1) {
                    i = kk.statRequestCount - kk.statResponseCount;
                    ko = kk.statResponseCount
                }
                km.noTimeoutCount = kn;
                km.timeoutCount = kl;
                km.timeoutNoLoaded = i;
                km.timeoutLoaded = ko;
                kk._map.dispatchEvent(km)
            }, 500)
        },
        clearLabel: function() {
            var e = this._width;
            var T = this._height;
            var i = this.ratio;
            this._labelCtx.clearRect(0, 0, e * i, T * i)
        },
        updateLabel: function() {
            var i = this._map;
            var e = i.getCenterIn();
            var jO = this._width;
            var jR = this._height;
            var jU = i.getZoom();
            var jT = this._tileType.getTileSize(jU);
            var jS = this._getZoomUnits(jU);
            var T = this._labelCtx;
            this._labelCanvas.style.left = -i.offsetX + "px";
            this._labelCanvas.style.top = -i.offsetY + "px";
            var jQ = this._curViewLabels;
            jQ._centerX = e.lng;
            jQ._centerY = e.lat;
            var jP = this._biz.bizLabels;
            this._computedLabel = this._labelStrategy.preComputeLabel(jQ, jO, jR, jS, jT, jP);
            this._computedLabel._zoom = jU;
            this.clearLabel();
            this._vectorDrawLib.drawIconAndText(T, this._computedLabel, jU);
            this._addSpotData();
            i.temp.isPermitSpotOver = true;
            if (jQ.length > 0) {
                this.isDrawText = true
            }
        },
        _loadLabelData: function(jX, jW, jV, T, jY, e) {
            var jQ = jX.toString();
            var jO = jW.toString();
            var jS = "cbk_" + jQ.replace("-", "_") + "_" + jO.replace("-", "__") + "_" + Math.floor(jV);
            var j2 = fe + "." + jS;
            var j1 = this._labelDataUrls;
            var jU = Math.abs(jX + jW) % j1.length;
            var j7 = j1[jU];
            if (window.offLineIPAddress) {
                j7 = window.offLineIPAddress + "pvd/"
            }
            var i = this.labelStyleParam;
            var j0 = "?qt=vtile";
            var j3 = "";
            if (this._map.config.style !== "default") {
                j3 = "&styleId=1"
            }
            var jZ = "x={x}&y={y}&z={z}&udt={udt}&v={v}&styles={styles}" + j3 + "&textonly=1&textimg=1&scaler={scaler}&fn=" + encodeURIComponent(j2);
            var j4 = eM.calcLoopParam(jX, jV).col;
            var jT = this.ratio > 1 ? 2 : 1;
            var jR = jZ.replace(/{x}/, j4).replace(/{y}/, jW).replace(/{z}/, Math.floor(jV)).replace(/{styles}/, i).replace(/{udt}/, this._udt).replace(/{v}/, this._version).replace(/{scaler}/, jT);
            var jP = j7 + j0 + "&param=" + window.encodeURIComponent(eF(jR));
            var j6 = this;
            var j5 = j6._map;
            bw[jS] = function(j8) {
                j6._vectorDrawLib.parseLabelData(j8, jX, jW, jV, T, jY, function(kd) {
                    var ka = j5.getCenterIn();
                    var ke = j5.getZoom();
                    var kg = "viewKey_" + Math.floor(ka.lng) + "_" + Math.floor(ka.lat) + "_" + ke;
                    j6._labelCount--;
                    var kh = j6._getCache(jX, jW, jV, T).updateLabelCounter;
                    j6._labelCount -= kh;
                    var kb = j6._curViewLabels;
                    if (kg === e || (j6._labelCount < 0 && ke === jV)) {
                        kb.push(kd)
                    }
                    if (kg === e) {
                        j6.statResponseCount++
                    }
                    if (j6._labelCount <= 0) {
                        var j9 = (new Date()).getTime();
                        j6.updateLabel();
                        var kc = (new Date()).getTime();
                        var kf = new fu("oncanvasmaploaded");
                        kf.drawTime = kc - j9;
                        if (j6.statResponseCount === j6.statRequestCount) {
                            kf.isAllLoadedDrawing = true
                        }
                        j5.dispatchEvent(kf)
                    }
                    j6._setCacheValue(jX, jW, jV, T, kd);
                    delete bw[jS]
                })
            }
            ;
            gw.load(jP)
        },
        drawLabel: function(T, jO, jV, i, jT, jP, e, jQ, jU, jR) {
            var jS = this;
            if (!jS._computedLabel) {
                return
            }
            if (jS._computedLabel._zoom !== jV) {
                jS.clearLabel();
                return
            }
            jS._map.temp.isPermitSpotOver = false;
            jS.clearLabel();
            jS._vectorDrawLib.zoomingIconAndText(this._labelCtx, jS._computedLabel, T, jO, i, jT, jP, e, jQ, jU, jR)
        },
        _addSpotData: function() {
            this._spotData = [];
            var jV = this._map.getZoom();
            for (var jQ = 0, jP = this._computedLabel.length; jQ < jP; jQ++) {
                var jS = this._computedLabel[jQ];
                if (!this.isClickableLabel(jS) || (jS.guidExt === 1 && jS.startScale > jV)) {
                    continue
                }
                var jR = [];
                jR[0] = (jS.minX - jS.maxX) / 2;
                jR[1] = (jS.minY - jS.maxY) / 2;
                jR[2] = (jS.maxX - jS.minX) / 2;
                jR[3] = (jS.maxY - jS.minY) / 2;
                var jO = null;
                if (jS.iconPos) {
                    jO = new cr(jS.iconPos.geoX,jS.iconPos.geoY)
                }
                var T = jS.name ? jS.name.replace("\\\\", "<br>") : "";
                if (jS.iconPos && jS.iconPos.iconType.indexOf("ditie") > -1 && this._map.getZoom() > 14) {
                    T = ""
                }
                var jU = {
                    n: T,
                    pt: new cr(jS.geoX,jS.geoY),
                    userdata: {
                        iconPoint: jO,
                        uid: jS.guid,
                        name: T,
                        type: jS.iconPos ? jS.iconPos.iconType : "",
                        iconImg: jS.iconImg,
                        mapPoi: true,
                        adver_log: jS.adver_log || ""
                    },
                    bd: jR,
                    tag: "MAP_SPOT_INFO"
                };
                this._spotData.push(jU)
            }
            var jT = new fu("onspotsdataready");
            jT.spots = this._spotData;
            this._map._spotDataOnCanvas = this._spotData;
            this._map.dispatchEvent(jT)
        },
        isClickableLabel: function(e) {
            if (e.isDel || (!e.guid && !e.name)) {
                return false
            }
            return true
        },
        getFilterImageData: function(T, jR) {
            var jS = T.data
              , jQ = this._labelStrategy
              , jR = parseInt(jR);
            for (var jT = 0, jP = jS.length; jT < jP; jT += 4) {
                var e = jS[jT]
                  , jU = jS[jT + 1]
                  , jV = jS[jT + 2]
                  , jW = jS[jT + 3];
                if (jW === 0) {
                    continue
                }
                var jO = Math.round((e + jU + jV) / 3);
                var jX = jO - 90;
                jX = jX < 0 ? 0 : jX;
                if (jR === jQ.RANK5) {
                    jS[jT] = 51 + jX * 1.3;
                    jS[jT + 1] = 133 + jX * 0.8;
                    jS[jT + 2] = 255
                }
            }
            return T
        },
        showLabelCanvas: function() {
            this._labelCanvas.style.visibility = ""
        },
        hideLabelCanvas: function() {
            this._labelCanvas.style.visibility = "hidden"
        }
    });
    var aS = 5;
    var iJ = 4;
    var gi = 3;
    var M = 2;
    var ed = 1;
    var hb = 0;
    var jM = 3;
    var h3 = 5;
    var e3 = {
        3: {
            start: 3,
            base: 3
        },
        4: {
            start: 4,
            base: 5
        },
        5: {
            start: 4,
            base: 5
        },
        6: {
            start: 6,
            base: 7
        },
        7: {
            start: 6,
            base: 7
        },
        8: {
            start: 8,
            base: 9
        },
        9: {
            start: 8,
            base: 9
        },
        10: {
            start: 10,
            base: 10
        },
        11: {
            start: 11,
            base: 12
        },
        12: {
            start: 11,
            base: 12
        },
        13: {
            start: 11,
            base: 12
        },
        14: {
            start: 14,
            base: 15
        },
        15: {
            start: 14,
            base: 15
        },
        16: {
            start: 16,
            base: 17
        },
        17: {
            start: 16,
            base: 17
        },
        18: {
            start: 18,
            base: 19
        },
        19: {
            start: 18,
            base: 19
        },
        20: {
            start: 18,
            base: 19
        },
        21: {
            start: 18,
            base: 19
        }
    };
    function gJ(jO) {
        this._canvas2dMapMgr = jO;
        var i = this.ratio = jO._map.config.ratio;
        this._featureStyle = null;
        this._map = jO._map;
        var T = bx();
        var e = "udt=" + T.udt + "&v=" + T.ver;
        this.sizeRatio = this.ratio > 1 ? 2 : 1;
        this._binaryCache = {};
        this._iconCache = {};
        this._initColorCanvas()
    }
    eJ.extend(gJ.prototype, {
        _initColorCanvas: function() {
            var i = 256
              , T = bT("canvas")
              , e = T.style;
            e.width = i + "px";
            e.height = i + "px";
            T.width = i;
            T.height = i;
            this._colorCvs = T;
            this._colorCtx = T.getContext("2d")
        },
        parseLabelData: function(i, jQ, jP, jO, e, jT, jS) {
            if (!this._featureStyle) {
                this._featureStyle = this._canvas2dMapMgr.getStyle()
            }
            if (!i || !i[0]) {
                jS([]);
                return
            }
            var jR = this._map.getZoomUnits();
            var T = this;
            this.loadTextPng(i, jT, jQ, jP, jO, e, jR, jS)
        },
        loadTextPng: function(j5, jW, jU, jT, jR, i, jP, jO) {
            var j4 = this;
            var e = j5[5];
            var j3 = this._map;
            var j0 = j3.getZoom();
            var T = j3.getSize();
            var j1 = T.width;
            var jZ = T.height;
            var j2 = j3.getCenterIn();
            var jS = j2.lng;
            var jQ = j2.lat;
            var jY = jU * jW * jP;
            var jX = (jT + 1) * jW * jP;
            if (e) {
                var jV = new Image();
                jV.onload = function() {
                    j4.calcIconAndTextInfo(j5, jV, jW, jU, jT, jR, i, jP, jY, jX, jO);
                    delete this.onload
                }
                ;
                jV.src = e
            } else {
                setTimeout(function() {
                    j4.calcIconAndTextInfo(j5, null, jW, jU, jT, jR, i, jP, jY, jX, jO)
                }, 1)
            }
        },
        calcIconAndTextInfo: function(j7, jY, jZ, jX, jU, jS, jO, jQ, j1, j0, jP) {
            var j6 = this;
            var j5 = j6._featureStyle;
            var jV = [];
            jV.x = jX;
            jV.y = jU;
            jV.z = jS;
            var jW = j6._canvas2dMapMgr
              , T = jX * jQ * jZ
              , j4 = (jU + 1) * jQ * jZ
              , jR = {
                tileLeft: T,
                tileTop: j4,
                zoomUnits: jQ
            };
            var e = [];
            if (j7[0]) {
                for (var j2 = 0; j2 < j7[0].length; j2++) {
                    if (j7[0][j2][0] === jM) {
                        e.push(j7[0][j2])
                    }
                }
            }
            var jT = j7[2] || [];
            for (var j2 = 0; j2 < e.length; j2++) {
                this._getFixedLabelInfo(e[j2], jY, jO, jQ, jZ, j1, j0, jV)
            }
            var j3 = Math.pow(2, jO - jS);
            for (j2 = 0; j2 < jT.length; j2++) {
                this._getLineLabelInfo(jT[j2], jY, jS, jO, jQ, jZ, j1, j0, j3, jV)
            }
            jP(jV)
        },
        _getFixedLabelInfo: function(jY, j2, jP, jT, j3, j6, j5, j8) {
            var jX = jY[1];
            if (!jX) {
                return
            }
            var ka = this._map.getZoom();
            var ki = this._map.config.style;
            var kj = this._featureStyle;
            var jU = jP;
            if (jU === 9) {
                jU = 8
            }
            for (var kf = 0; kf < jX.length; kf++) {
                var kk = jX[kf];
                var e = kk[0];
                var jO = aW.getStyleFromCache(ki, e, "point", jU, kj);
                var ke = aW.getStyleFromCache(ki, e, "pointText", jU, kj);
                if ((!ke || ke.length === 0) && (!jO || jO.length === 0)) {
                    if (jU === 5) {
                        var jS = kk[1];
                        if (!jS) {
                            continue
                        }
                        for (var kb = 0; kb < jS.length; kb++) {
                            var j9 = jS[kb][4];
                            if (j9 && j9[7] === "北京") {
                                jO = aW.getStyleFromCache(ki, e, "point", 6, kj);
                                ke = aW.getStyleFromCache(ki, e, "pointText", 6, kj);
                                break
                            } else {
                                continue
                            }
                        }
                    } else {
                        continue
                    }
                }
                var jS = kk[1];
                if (!jS) {
                    continue
                }
                var kg = null;
                var jV = 1;
                var T = 0;
                var j1 = 0;
                if (jO && jO[0]) {
                    jO = jO[0];
                    kg = jO.icon;
                    jV = jO.zoom ? jO.zoom / 100 : 1
                } else {
                    jO = null
                }
                for (var kb = 0; kb < jS.length; kb++) {
                    var j9 = jS[kb][4];
                    if (!j9) {
                        continue
                    }
                    var kd = j9[2];
                    if (!this._isVisible(kd, ka)) {
                        continue
                    }
                    var jW = j9[12];
                    if (ke && ke.length > 0 && !jW) {
                        continue
                    }
                    var j0 = Math.round(j9[0] / 100);
                    var jZ = Math.round(j9[1] / 100);
                    var kc = {
                        lng: j6 + j0,
                        lat: j5 - (j3 * jT - jZ)
                    };
                    var jR = j0 / jT;
                    var jQ = j3 - jZ / jT;
                    var j4 = j9[7] || "";
                    var kh = j9[5];
                    var j7 = {
                        type: "fixed",
                        name: j4,
                        textImg: j2,
                        rank: j9[4],
                        baseX: jR,
                        baseY: jQ,
                        iconPos: null,
                        textPos: null,
                        guid: j9[3] || "",
                        tracer: kd,
                        direction: kh,
                        startScale: 3
                    };
                    if ((kh !== iJ && jW || !jW) && kg !== null) {
                        j7.iconPos = this._getIconPosition(kg, jV, jR, jQ, kc);
                        if (j7.iconPos) {
                            T = j7.iconPos.width;
                            j1 = j7.iconPos.height
                        }
                    }
                    if (T === 0) {
                        j7.direction = iJ
                    }
                    if (jW) {
                        j7.textPos = this._getTextDrawData(j9, jR, jQ, T, j1)
                    }
                    if (j7.textPos || j7.iconPos) {
                        j8.push(j7)
                    }
                }
            }
        },
        _isVisible: function(e, i) {
            var jO;
            if (!this._binaryCache[e]) {
                jO = e.toString(2);
                if (jO.length < 8) {
                    jO = new Array(8 - jO.length + 1).join("0") + jO
                }
                this._binaryCache[e] = jO
            }
            jO = this._binaryCache[e];
            var T = e3[i].start;
            return jO[i - T] === "1"
        },
        _getIconPosition: function(jS, jQ, T, i, e) {
            var jO = this._map.config.style;
            var jT = bw["iconSetInfo" + jO][jS];
            if (!jT) {
                if (jS.charCodeAt(0) >= 48 && jS.charCodeAt(0) <= 57) {
                    jT = bw["iconSetInfo" + jO]["_" + jS]
                }
            }
            if (!jT) {
                return null
            }
            var jP = jT[0];
            var jR = jT[1];
            jP = jP * jQ;
            jR = jR * jQ;
            return {
                srcX: 0,
                srcY: 0,
                destX: T - jP / 2,
                destY: i - jR / 2,
                width: jP,
                height: jR,
                geoX: e.lng,
                geoY: e.lat,
                mcPt: e,
                iconType: jS
            }
        },
        _getTextDrawData: function(jZ, jY, jX, jO, jV) {
            var j4 = jZ[5];
            if (typeof j4 !== "number") {
                j4 = 0
            }
            var jT = this.ratio;
            var jS = jT / 2;
            jO *= jS;
            jV *= jS;
            var jU = jZ[12];
            var jP = jU.length;
            var j7 = 0;
            var j6 = 0;
            var j3 = [];
            var j2 = 0;
            var j5 = 0;
            for (var j1 = 0; j1 < jP; j1++) {
                j5 += Math.round(jU[j1][3])
            }
            for (var j1 = 0; j1 < jP; j1++) {
                var jR = jU[j1];
                var jQ = jR[0];
                var i = jR[1];
                var T = jR[2];
                var e = jR[3];
                var j8 = 2 * jT;
                var j0 = 0;
                if (jO !== 0) {
                    j0 = 2 * jT
                }
                if (jO === 0) {
                    j4 = iJ
                }
                switch (j4) {
                case gi:
                    var jW = jX - j5 / 2 - j8 * (jP - 1) / 2;
                    j7 = jY - T - jO / 2 - j0;
                    j6 = jW + j2 + j8 * j1;
                    break;
                case ed:
                    var jW = jX - j5 / 2 - j8 * (jP - 1) / 2;
                    j7 = jY + jO / 2 + j0;
                    j6 = jW + j2 + j8 * j1;
                    break;
                case M:
                    var jW = jX - jV / 2 - j5 - j8 * (jP - 1) - j8;
                    j7 = jY - T / 2;
                    j6 = jW + j2 + j8 * j1;
                    break;
                case hb:
                    var jW = jX + jV / 2 + j8 / 2;
                    j7 = jY - T / 2;
                    j6 = jW + j2 + j8 * j1;
                    break;
                case iJ:
                    var jW = jX - e / 2 - j8 * (jP - 1) / 2;
                    j7 = jY - T / 2;
                    j6 = jW + j2 + j8 * j1;
                    break
                }
                j2 += e;
                if (T > 0 && e > 0) {
                    j3.push({
                        srcX: jQ,
                        srcY: i,
                        destX: j7,
                        destY: j6,
                        width: T,
                        height: e
                    })
                }
            }
            if (j3.length > 0) {
                return j3
            }
            return null
        },
        _getLineLabelInfo: function(jW, jO, jP, kb, ko, j3, j9, j8, ka, j2) {
            if (jW.length !== 10) {
                return
            }
            var kd = this.ratio;
            var T = this.ratio;
            var kk = jW[7].length;
            var j4 = jW[1];
            var km = jW[3];
            var ks = jW[8];
            var jS = jW[4];
            var e = 2;
            var jQ = jS.slice(0, e);
            for (var kp = e; kp < jS.length; kp += e) {
                jQ[kp] = jQ[kp - e] + jS[kp];
                jQ[kp + 1] = jQ[kp - (e - 1)] + jS[kp + 1]
            }
            for (var kp = e; kp < jS.length; kp += e) {
                if (kp % (km * e) === 0 || kp % (km * e) === 1) {
                    continue
                }
                jQ[kp] = jQ[kp - e] + jS[kp] / ka;
                jQ[kp + 1] = jQ[kp - (e - 1)] + jS[kp + 1] / ka
            }
            for (var kr = 0; kr < kk; kr++) {
                var kn = jW[7][kr];
                if (!this._isVisible(kn, kb)) {
                    continue
                }
                var kf = jW[6][kr];
                var j1 = kr * km * e;
                jS = jQ.slice(j1, j1 + km * e);
                var j5 = [];
                var ke = undefined;
                var kc = undefined;
                var j0 = undefined;
                var jZ = undefined;
                var ks = jW[9].slice(0);
                if (kf) {
                    ks.reverse()
                }
                var ki;
                var kg;
                for (var kq = 0; kq < km; kq++) {
                    var jY = jW[5][km * kr + kq];
                    var kj = jS[kq * e] / 100;
                    var kh = jS[kq * e + 1] / 100;
                    var jX = ks[kq];
                    var jT = jX[0];
                    var jV = jX[1];
                    var jR = jX[2];
                    var jU = jX[3];
                    var j7;
                    var j6;
                    var ku;
                    var kt;
                    if (kq === 0) {
                        ki = ku = kj / ko;
                        kg = j3 - kh / ko;
                        kt = kh / ko
                    } else {
                        ku = kj / ko;
                        kt = kh / ko
                    }
                    var kw = ki + (ku - ki) * T - jR / 2;
                    var kv = kg + (j3 - kt - kg) * T - jU / 2;
                    if (ke === undefined) {
                        ke = ki - jR / 2;
                        kc = kg - jU / 2;
                        j0 = ke + jR;
                        jZ = kc + jU
                    } else {
                        if (kw < ke) {
                            ke = kw
                        }
                        if (kv < kc) {
                            kc = kv
                        }
                        if (kw + jR > j0) {
                            j0 = kw + jR
                        }
                        if (kv + jU > jZ) {
                            jZ = kv + jU
                        }
                    }
                    j5.push({
                        angle: jY,
                        srcX: jT,
                        srcY: jV,
                        destX: kw,
                        destY: kv,
                        width: jR,
                        height: jU
                    })
                }
                var kl = {
                    type: "line",
                    textImg: jO,
                    rank: j4,
                    baseX: ki,
                    baseY: kg,
                    arrWordPos: j5,
                    minXOriginal: ke,
                    minYOriginal: kc,
                    maxXOriginal: j0,
                    maxYOriginal: jZ,
                    text: ""
                };
                j2.push(kl)
            }
        },
        alterColor: function(jR, e, jQ) {
            var T = this._colorCtx
              , i = this._canvas2dMapMgr;
            T.clearRect(0, 0, jR.width, jR.height);
            T.drawImage(e, jR.srcX, jR.srcY, jR.width, jR.height, 0, 0, jR.width, jR.height);
            var jP = T.getImageData(0, 0, jR.width, jR.height)
              , jO = i.getFilterImageData(jP, jQ);
            T.putImageData(jO, 0, 0)
        },
        drawIconAndText: function(j3, j2, e) {
            var jU = this.ratio;
            var jS = this.sizeRatio / jU;
            var jW = 2 / jU;
            var ke = this;
            for (var j6 = 0, j4 = j2.length; j6 < j4; j6++) {
                var jV = j2[j6];
                if (jV.isDel == false) {
                    var jP = jV.baseDrawX;
                    var jO = jV.baseDrawY;
                    if (jV.type == "fixed") {
                        var jR = jV.iconPos
                          , j7 = jV.textPos
                          , j0 = jV.textImg
                          , ka = jV.startScale;
                        if (jR && ka <= e) {
                            var T = this._iconCache[jR.iconType];
                            if (T) {
                                if (T.img) {
                                    j3.drawImage(T.img, 0, 0, T.img.width, T.img.height, Math.round(jP * jU + (jR.drawX - jP) / jW), Math.round(jO * jU + (jR.drawY - jO) / jW), jR.width / jW, jR.height / jW)
                                } else {
                                    T.drawLabels.push(jV)
                                }
                            } else {
                                if (!T) {
                                    this._iconCache[jR.iconType] = {
                                        img: null,
                                        drawLabels: [jV]
                                    };
                                    var kg = new Image();
                                    kg._iconName = jR.iconType;
                                    kg.onload = function() {
                                        var km = ke._iconCache[this._iconName];
                                        km.img = this;
                                        this.onload = null;
                                        for (var ki = 0; ki < km.drawLabels.length; ki++) {
                                            var kk = km.drawLabels[ki];
                                            var kj = kk.baseDrawX;
                                            var kh = kk.baseDrawY;
                                            var kl = kk.iconPos;
                                            j3.drawImage(this, 0, 0, this.width, this.height, Math.round(kj * jU + (kl.drawX - kj) / jW), Math.round(kh * jU + (kl.drawY - kh) / jW), kl.width / jW, kl.height / jW)
                                        }
                                        km.drawPos = []
                                    }
                                    ;
                                    kg.src = B.getIconSetPath(ke._map.config.style) + jR.iconType + ".png"
                                }
                            }
                        }
                        if (j7 && j0 && ka <= e) {
                            for (var jT = 0; jT < j7.length; jT++) {
                                var j1 = j7[jT];
                                if (!jV._tempRank) {
                                    j3.drawImage(j0, j1.srcX, j1.srcY, j1.width, j1.height, Math.round(jP * jU + (j1.drawX - jP) / jS), Math.round(jO * jU + (j1.drawY - jO) / jS), j1.width / jS, j1.height / jS)
                                } else {
                                    this.alterColor(j1, j0, jV._tempRank);
                                    j3.drawImage(this._colorCvs, 0, 0, j1.width, j1.height, Math.round(jP * jU + (j1.drawX - jP) / jS), Math.round(jO * jU + (j1.drawY - jO) / jS), j1.width / jS, j1.height / jS)
                                }
                            }
                        }
                    } else {
                        var jQ = jV.arrWordPos
                          , j0 = jV.textImg
                          , jZ = jV.tileX
                          , jX = jV.tileY;
                        for (var j5 = 0, jY = jQ.length; j5 < jY; j5++) {
                            var j8 = jQ[j5];
                            var kf = Math.round(jZ + j8.destX);
                            var kd = Math.round(jX + j8.destY);
                            var j9 = j8.angle;
                            kf = jP * jU + kf - jP;
                            kd = jO * jU + kd - jO;
                            if (j9 > 10 && j9 < 350) {
                                j3.save();
                                var kc = Math.round(kf + j8.width / 2);
                                var kb = Math.round(kd + j8.height / 2);
                                j3.translate(kc, kb);
                                j3.rotate(-j9 / 180 * Math.PI);
                                j3.drawImage(j0, j8.srcX, j8.srcY, j8.width, j8.height, -Math.round(j8.width / 2), -Math.round(j8.height / 2), j8.width / jS, j8.height / jS);
                                j3.restore()
                            } else {
                                j3.drawImage(j0, j8.srcX, j8.srcY, j8.width, j8.height, kf, kd, j8.width / jS, j8.height / jS)
                            }
                        }
                    }
                }
            }
        },
        isCollide: function(jQ, jZ, jY, e, jS, T, jU) {
            for (var jP = 0, jO = T.length; jP < jO; jP++) {
                var jT = T[jP]
                  , jR = 1 / Math.pow(2, jU + 1)
                  , jX = jR * jT[3] / 2
                  , jW = jR * jT[4] / 2
                  , jV = jT[0];
                if (jV != jQ) {
                    if (!(jZ + e < jT[1] - jX || jZ > jT[1] + jT[3] + jX || jY + jS < jT[2] - jW || jY > jT[2] + jT[4] + jW)) {
                        return true
                    }
                }
            }
            return false
        },
        zoomingIconAndText: function(ke, j8, jO, kc, kd, kF, kl, jW, kr, kk, j5) {
            var kG = this.ratio;
            var jX = this.sizeRatio / kG;
            var kH = 2 / kG;
            var kR = kG / 2;
            var kB = kc.x;
            var kA = kc.y;
            var kf = 2 * kG;
            if (j5 !== 0) {
                kA += kk
            }
            var j0 = undefined
              , jT = undefined
              , jQ = undefined
              , jV = undefined
              , j4 = undefined;
            var kq = kF > 0 ? true : false;
            if (!kq) {
                j0 = [];
                var ku = 1 - kl
            }
            for (var kN = 0, kL = j8.length; kN < kL; kN++) {
                var kI = j8[kN];
                if (kI.isDel == false) {
                    var kS = kI.baseDrawX;
                    var kP = kI.baseDrawY;
                    ke.save();
                    ke.translate(-jW * kG, -kr * kG);
                    if (kI.isFadeout) {
                        if (!kq && kI._schedule <= kl && !kI._isIgnore) {
                            ke.globalAlpha = ku;
                            kI._schedule = kl
                        } else {
                            kI._isIgnore = true;
                            continue
                        }
                    }
                    if (kI.type == "fixed") {
                        var kg = kI.iconPos
                          , kn = kI.textPos
                          , jR = kI.textImg
                          , kh = kI.startScale;
                        var T;
                        var ky = 0;
                        if (kg) {
                            ky = kf
                        }
                        if (kg && !kI.iconImg && this._iconCache[kg.iconType]) {
                            T = this._iconCache[kg.iconType].img
                        }
                        if (kg && kh <= kd && T) {
                            jV = kg.width;
                            j4 = kg.height;
                            jT = (kB + (kS - kB) * jO) * kG - jV / 2 / kH;
                            jQ = (kA + (kP - kA) * jO) * kG - j4 / 2 / kH + j5;
                            if (!kq && this.isCollide(kN, jT, jQ, jV, j4, j0, kF)) {
                                kI.isFadeout = true
                            }
                            ke.drawImage(T, kg.srcX, kg.srcY, T.width, T.height, Math.round(jT), Math.round(jQ), jV / kH, j4 / kH);
                            !kq && j0.push([kN, jT, jQ, jV, j4])
                        }
                        if (kn && jR && kh <= kd) {
                            var km;
                            var ko;
                            var j7 = 0;
                            var kj = 0;
                            if (kg) {
                                j7 = kg.width;
                                kj = kg.height
                            }
                            var kz = kn.length;
                            var jZ = 0;
                            var kp = 0;
                            for (var j9 = 0; j9 < kz; j9++) {
                                var kK = kn[j9];
                                kp += kK.height;
                                if (jZ < kK.width) {
                                    jZ = kK.width
                                }
                            }
                            kp += (j9 - 1) * kf;
                            if (!kq && this.isCollide(kN, jT, jQ, jZ, kp, j0, kF)) {
                                kI.isFadeout = true
                            }
                            var kJ = 0;
                            for (var j9 = 0; j9 < kz; j9++) {
                                var kK = kn[j9];
                                switch (kI.direction) {
                                case gi:
                                    km = -(j7 / 2 / kH + kK.width + ky);
                                    ko = -kp / 2 + kJ + kf * j9;
                                    break;
                                case ed:
                                    km = j7 / 2 / kH + ky;
                                    ko = -kp / 2 + kJ + kf * j9;
                                    break;
                                case M:
                                    km = -kK.width / 2;
                                    ko = -kj / 2 / kH - kp + kJ - kf * (j9 + 1);
                                    break;
                                case hb:
                                    km = -kK.width / 2;
                                    ko = kj / 2 / kH + kJ + kf * (j9 + 1);
                                    break;
                                case iJ:
                                    km = -kK.width / 2;
                                    ko = -kp / 2 + kJ + kf * j9;
                                    break
                                }
                                kJ += kK.height;
                                jT = (kB + (kS - kB) * jO) * kG + km / jX;
                                jQ = (kA + (kP - kA) * jO) * kG + ko / jX;
                                +j5;
                                jV = kK.width;
                                j4 = kK.height;
                                if (!kI._tempRank) {
                                    ke.drawImage(jR, kK.srcX, kK.srcY, jV, j4, Math.round(jT), Math.round(jQ), jV / jX, j4 / jX)
                                } else {
                                    this.alterColor(kK, jR, kI._tempRank);
                                    ke.drawImage(this._colorCvs, 0, 0, jV, j4, Math.round(jT), Math.round(jQ), jV / jX, j4 / jX)
                                }
                                !kq && j0.push([kN, jT, jQ, jV, j4])
                            }
                        }
                    } else {
                        var j6 = kI.arrWordPos
                          , jR = kI.textImg
                          , kQ = kI.tileX
                          , kO = kI.tileY;
                        var jY = j6[0];
                        var jU = Math.round(kQ + jY.destX);
                        var jS = Math.round(kO + jY.destY);
                        for (var kM = 0, kx = j6.length; kM < kx; kM++) {
                            var kE = j6[kM];
                            var kU = Math.round(kQ + kE.destX);
                            var kT = Math.round(kO + kE.destY);
                            var kb = kE.angle;
                            var kw = Math.round((kB + (kS - kB) * jO) * kG - jY.width / 2 + kU - jU);
                            var kv = Math.round((kA + (kP - kA) * jO) * kG - jY.height / 2 + kT - jS);
                            jT = kw;
                            jQ = kv;
                            jV = kE.width;
                            j4 = kE.height;
                            if (!kq && this.isCollide(kN, jT, jQ, jV, j4, j0, kF)) {
                                kI.isFadeout = true
                            }
                            if (kb > 10 && kb < 350) {
                                var kD = kw + kE.width / 2;
                                var kC = kv + kE.height / 2;
                                var jP = kb / 180 * Math.PI;
                                var ki = Math.cos(jP);
                                var j1 = Math.sin(jP);
                                var kt = ki;
                                var j2 = ki;
                                var ks = j1;
                                var j3 = -j1;
                                var ka = kD - kD * ki - kC * j1;
                                var e = kC + kD * j1 - kC * ki;
                                ke.save();
                                ke.transform(kt, j3, ks, j2, ka, e);
                                ke.drawImage(jR, kE.srcX, kE.srcY, jV, j4, jT, jQ, jV / jX, j4 / jX);
                                ke.restore()
                            } else {
                                ke.drawImage(jR, kE.srcX, kE.srcY, jV, j4, jT, jQ, jV / jX, j4 / jX)
                            }
                            !kq && j0.push([kN, jT, jQ, jV, j4])
                        }
                    }
                    ke.restore()
                }
            }
        }
    });
    function ee(e) {
        this.initVars(e)
    }
    eJ.extend(ee.prototype, {
        initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this.base64Prefix = "data:image/png;base64,";
            this.bizData = null;
            this.objTextsPng = null;
            this.arrIconsPng = null;
            this.bizLabels = null
        },
        proecessBizData: function(jQ, jU) {
            var jS = this;
            this.bizData = jQ;
            this.objTextsPng = null;
            this.arrIconsPng = null;
            var T = jQ.textsPng;
            var jW = jQ.iconsPng;
            if (!T || !jW) {
                return
            }
            var jT = new Image();
            jT.onload = function() {
                jS.objTextsPng = this;
                jS.calcIconAndTextInfo(jU);
                this.onload = null
            }
            ;
            jT.src = this.base64Prefix + T;
            var jV = jW.length;
            var e = [];
            for (var jP = 0; jP < jV; jP++) {
                var jR = jW[jP];
                var jO = new Image();
                (function(i) {
                    jO.onload = function() {
                        jV--;
                        e[i] = this;
                        if (jV === 0) {
                            jS.arrIconsPng = e;
                            jS.calcIconAndTextInfo(jU)
                        }
                        this.onload = null
                    }
                }
                )(jP);
                jO.src = this.base64Prefix + jR
            }
        },
        calcIconAndTextInfo: function(jX) {
            if (this.objTextsPng && this.arrIconsPng) {
                var jT = this.bizData;
                var jR = jT.pois;
                var e = [];
                for (var jU = 0, jQ = jR.length; jU < jQ; jU++) {
                    var jO = jR[jU];
                    var jS = this.arrIconsPng[jO.iconPng];
                    var jP = jS.height / 2;
                    var jW = {
                        type: "fixed",
                        name: "",
                        textImg: this.objTextsPng,
                        iconImg: jS,
                        rank: jO.rank,
                        iconPos: {
                            srcX: 0,
                            srcY: 0,
                            destX: -jS.width / 2,
                            destY: -jP / 2,
                            width: jS.width,
                            height: jP,
                            geoX: jO.x,
                            geoY: jO.y,
                            iconType: "vectorCustom"
                        },
                        textPos: this.calcTextPos(jO.pos, jS),
                        startScale: jO.from < 12 ? 12 : jO.from,
                        guid: jO.guid,
                        guidExt: 1,
                        adver_log: jO.adver_log || ""
                    };
                    var T = {
                        type: "fixed",
                        textDirLeft: "left",
                        name: "",
                        textImg: this.objTextsPng,
                        iconImg: jS,
                        rank: jO.rank,
                        iconPos: {
                            srcX: 0,
                            srcY: 0,
                            destX: -jS.width / 2,
                            destY: -jP / 2,
                            width: jS.width,
                            height: jP,
                            geoX: jO.x,
                            geoY: jO.y,
                            iconType: "vectorCustom"
                        },
                        textPos: this.calcTextPosLeft(jO.pos, jS),
                        startScale: jO.from < 12 ? 12 : jO.from,
                        guid: jO.guid,
                        guidExt: 1,
                        adver_log: jO.adver_log || ""
                    };
                    var jV = [jW, T];
                    e.push(jV)
                }
                this.bizLabels = e;
                jX && jX()
            }
        },
        calcTextPos: function(jR, T) {
            var i = [];
            var jQ = jR.length / 4;
            var jP = T.width / 2;
            if (jQ === 1) {
                var jO = {
                    srcX: jR[0],
                    srcY: jR[1],
                    destX: jP,
                    destY: -jR[3] / 2,
                    width: jR[2],
                    height: jR[3]
                };
                i.push(jO)
            } else {
                var jO = {
                    srcX: jR[0],
                    srcY: jR[1],
                    destX: jP,
                    destY: -jR[3],
                    width: jR[2],
                    height: jR[3]
                };
                var e = {
                    srcX: jR[4],
                    srcY: jR[5],
                    destX: jP,
                    destY: 0,
                    width: jR[6],
                    height: jR[7]
                };
                i.push(jO);
                i.push(e)
            }
            return i
        },
        calcTextPosLeft: function(jR, T) {
            var i = [];
            var jQ = jR.length / 4;
            var jP = T.width / 2;
            if (jQ === 1) {
                var jO = {
                    srcX: jR[0],
                    srcY: jR[1],
                    destX: -jP - jR[2],
                    destY: -jR[3] / 2,
                    width: jR[2],
                    height: jR[3]
                };
                i.push(jO)
            } else {
                var jO = {
                    srcX: jR[0],
                    srcY: jR[1],
                    destX: -jP - jR[2],
                    destY: -jR[3],
                    width: jR[2],
                    height: jR[3]
                };
                var e = {
                    srcX: jR[4],
                    srcY: jR[5],
                    destX: -jP - jR[2],
                    destY: 0,
                    width: jR[6],
                    height: jR[7]
                };
                i.push(jO);
                i.push(e)
            }
            return i
        },
        clearBizData: function() {
            this.bizData = null;
            this.bizLabels = null
        }
    });
    function C() {}
    eJ.extend(C.prototype, {
        centerAndZoomIn: function(T, jU, jV) {
            jV = jV || {};
            if (!this.loaded) {
                this.firstTileLoad = false
            }
            jU = this._getProperZoom(jU).zoom;
            if (jV.noAnimation !== true && this.loaded) {
                var jQ = this._ifUseAnimation(T, jU);
                if (jQ) {
                    this.flyToIn(T, jU, jV);
                    return
                }
            }
            var jS = this;
            if (!T && !jU) {
                return
            }
            this._stopAllAnimations();
            if (T && !T.equals(this.centerPoint)) {
                this.fire(new fu("oncenter_changed"))
            }
            if (jU && jU !== this.zoomLevel) {
                this.fire(new fu("onzoom_changed"))
            }
            T = T || this.centerPoint;
            jU = jU || this.zoomLevel;
            jU = this._getProperZoom(jU).zoom;
            if (this.mapType === BMAP_EARTH_MAP) {
                if (!this._earth) {
                    this.mapType = BMAPGL_NORMAL_MAP;
                    this.temp.originMapType = BMAP_EARTH_MAP;
                    function jT() {
                        jS._earth = new bw.Earth(jS,{
                            showRealSunlight: jS.config.showRealSunlight,
                            showMilkyway: jS.config.showMilkyway,
                            earthBackground: jS.config.earthBackground
                        });
                        jS._proxyEarthEvents();
                        jS._changeEarthMapType(BMAP_EARTH_MAP);
                        eJ.extend(jS, bw.EarthView.prototype);
                        delete jS.temp.originMapType
                    }
                    gK.load("earth", function() {
                        if (bw["FeatureStyle" + jS.config.style]) {
                            jT()
                        } else {
                            jS.loadMapStyleFiles(function() {
                                jT()
                            })
                        }
                    })
                }
            }
            this.lastLevel = this.zoomLevel || jU;
            this.zoomLevel = jU;
            var jR = new fu("onload");
            jR.point = T;
            jR.zoom = jU;
            this.centerPoint = new cr(T.lng,T.lat);
            this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
            this.defaultCenter = this.defaultCenter || this.centerPoint;
            if (this.mapType !== BMAP_EARTH_MAP) {
                this.centerPoint = this.restrictCenter(this.centerPoint)
            }
            if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
                var i = this.config.defaultMaxBounds;
                var jP = new m(i,"baidu",this.mapType);
                if (this.mapType !== BMAP_NONE_MAP) {
                    var jO = new hc({
                        mapType: this.mapType,
                        copyright: jP,
                        dataType: this.mapType === BMAP_SATELLITE_MAP ? gp : hp,
                        customLayer: this.mapType === BMAP_SATELLITE_MAP,
                        baseLayer: true,
                        transparentPng: false,
                        tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
                    });
                    jO._isInnerLayer = true;
                    this.addTileLayer(jO);
                    this.baseLayerAdded = true
                }
                if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
                    this._addHybirdMap()
                }
                this.on("zoom_changed", function() {
                    if (this._heading === 0) {
                        return
                    }
                    if (this.getZoom() < 7 && this.config.restrictCenter === true) {
                        jS.resetHeading()
                    }
                })
            }
            this.loaded = true;
            this.dispatchEvent(jR);
            jV.callback && jV.callback()
        },
        _ifUseAnimation: function(jO, jT) {
            var jS = this.getSize();
            var T = {
                zoom: this.zoomLevel
            };
            var jV = {
                zoom: jT
            };
            var jU = this.pointToPixelIn(this.centerPoint);
            var jP = this.pointToPixelIn(jO, T);
            var jR = this.pointToPixelIn(this.centerPoint, jV);
            var jX = this.pointToPixelIn(jO, jV);
            var jQ = Math.abs(jU.x - jP.x);
            var i = Math.abs(jU.y - jP.y);
            var e = Math.abs(jR.x - jX.x);
            var jW = Math.abs(jR.y - jX.y);
            if ((jQ > jS.width || i > jS.height) && (e > jS.width || jW > jS.height)) {
                return false
            }
            return true
        },
        _setPlatformPosition: function(jV, jU, jX) {
            jX = jX || {};
            if (jV === 0 && jU === 0 && !jX.point) {
                return
            }
            if (isNaN(jX.initMapOffsetX)) {
                jX.initMapOffsetX = this.offsetX
            }
            if (isNaN(jX.initMapOffsetY)) {
                jX.initMapOffsetY = this.offsetY
            }
            var jR = ie(this._heading);
            if (this._tilt > 0) {
                jU = jU / Math.cos(ie(this._tilt))
            }
            var jW = jV * Math.cos(jR) + jU * Math.sin(jR);
            var jT = -jV * Math.sin(jR) + jU * Math.cos(jR);
            jW = jW + jX.initMapOffsetX;
            jT = jT + jX.initMapOffsetY;
            if (jX.point) {
                var i = this.restrictCenter(jX.point);
                if (!i.equals(this.centerPoint)) {
                    this.centerPoint = i.clone();
                    this.fire(new fu("oncenter_changed"))
                }
            } else {
                var jO = this.offsetX - jW;
                var e = this.offsetY - jT;
                var jS = this.centerPoint.lng;
                var jQ = this.centerPoint.lat;
                var jP = new cr(jS,jQ);
                var T = this.getZoomUnits();
                this.centerPoint = this.restrictCenter(new cr(jP.lng + jO * T,jP.lat - e * T), T);
                this.fire(new fu("oncenter_changed"))
            }
            this.offsetX = jW;
            this.offsetY = jT;
            this.dispatchEvent(new fu("onmoving"))
        },
        restrictCenter: function(jW, e) {
            if (this.config.restrictCenter === false) {
                return jW
            }
            e = e || this.getZoomUnits();
            var jU = this.pixelToPointIn(new e4(this.width,0), {
                center: jW
            });
            var jR = this.pixelToPointIn(new e4(0,this.height), {
                center: jW
            });
            var jX = jW.lng;
            var j2 = jW.lat;
            if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
                var j1 = this.config.restrictBounds;
                var T = j1.getSouthWest();
                var jZ = j1.getNorthEast();
                var jV = iN.convertLL2MC(T);
                var jP = iN.convertLL2MC(jZ);
                var jS = this.calcNewZoomByRestriction(jX, j2, jR, jU, jV.lng, jP.lng, jV.lat, jP.lat);
                if (jS > this.zoomLevel) {
                    this.zoomLevel = jS;
                    return jW
                }
                jW.lng = this.calcNewLngByBounds(jX, jR, jU, jV.lng, jP.lng, e);
                jW.lat = this.calcNewLatByBounds(j2, jR, jU, jV.lat, jP.lat, e);
                return jW
            }
            var jT = this.pixelToPointIn(new e4(0,0), {
                center: jW
            });
            var jO = this.pixelToPointIn(new e4(0,this.height), {
                center: jW
            });
            if (this.zoomLevel < 5) {
                if (jT.lat > hr.MAX_LAT && jO.lat < hr.MIN_LAT) {
                    var i = hr.MAX_LAT - jW.lat;
                    var jQ = jW.lat - hr.MIN_LAT;
                    var j0;
                    if (i < jQ) {
                        j0 = i / (this.height / 2)
                    } else {
                        j0 = jQ / (this.height / 2)
                    }
                    var jY = 18 - p(j0);
                    this.zoomLevel = jY;
                    return jW
                }
            }
            if (jT.lat > hr.MAX_LAT) {
                jW.lat = hr.MAX_LAT - this.height / 2 * e
            } else {
                if (jO.lat < hr.MIN_LAT) {
                    jW.lat = hr.MIN_LAT + this.height / 2 * e
                }
            }
            return jW
        },
        calcNewZoomByRestriction: function(jV, jU, e, jT, jP, jR, jO, jQ) {
            var jY = 0;
            var jZ = 0;
            if (typeof jO === "number" && typeof jQ === "number" && jT.lat > jQ && e.lat < jO) {
                var T = jQ - jU;
                var i = jU - jO;
                var jS;
                if (T < i) {
                    jS = T / (this.height / 2)
                } else {
                    jS = i / (this.height / 2)
                }
                jY = 18 - p(jS)
            }
            if (typeof jP === "number" && typeof jR === "number" && jT.lng > jR && e.lng < jP) {
                var jX = jR - jV;
                var jW = jV - jP;
                var jS;
                if (jX < jW) {
                    jS = jX / (this.width / 2)
                } else {
                    jS = jW / (this.width / 2)
                }
                jZ = 18 - p(jS)
            }
            return Math.max(jY, jZ) || this.zoomLevel
        },
        calcNewLatByBounds: function(i, jO, T, jR, jQ, e) {
            var jP = i;
            if (T.lat > jQ) {
                jP = jQ - this.height / 2 * e
            } else {
                if (jO.lat < jR) {
                    jP = jR + this.height / 2 * e
                }
            }
            return jP
        },
        calcNewLngByBounds: function(jR, jQ, jO, jP, T, e) {
            var i = jR;
            if (jO.lng > T) {
                i = T - this.width / 2 * e
            } else {
                if (jQ.lng < jP) {
                    i = jP + this.width / 2 * e
                }
            }
            return i
        },
        zoomTo: function(e, jZ, j0) {
            var jV = d6[this.mapType];
            if (!jV) {
                return
            }
            var jU = this._getProperZoom(e);
            e = jU.zoom;
            if (this.zoomLevel === e) {
                j0 && j0.callback && j0.callback();
                return
            }
            var jQ = e;
            this.lastLevel = this.zoomLevel;
            j0 = j0 || {};
            if (this.zoomEventStatus === "idle") {
                this.fire(new fu("onzoomstart"));
                this.zoomEventStatus = "zooming"
            }
            if (!jZ && (this.getInfoWindow() && this.temp.infoWin && this.temp.infoWin.isOpen())) {
                jZ = iN.convertLL2MC(this.getInfoWindow().getPoint())
            }
            var T = null;
            if (j0.fixPixel) {
                T = j0.fixPixel
            } else {
                if (jZ) {
                    T = this.pointToPixelIn(jZ, {
                        useRound: false
                    })
                }
            }
            var jR = this.pixelToPointIn(T);
            var jS = this.centerPoint.clone();
            this.fixPoint = jZ;
            this.fixPixel = T;
            this.fixCenter = jS;
            this.mousePosMCPoint = jR;
            if (j0.noAnimation) {
                e = jU.zoom;
                this.zoomLevel = e;
                this.fire(new fu("onzoom_changed"));
                var jP = this.getCurrentMaxTilt();
                if (this._tilt > jP) {
                    this._tilt = jP
                }
                if (jZ) {
                    if (this._heading % 360 !== 0 || this._tilt > 0) {
                        var i = this._webglMapCamera.fromScreenPixelToMC(T.x, T.y, {
                            center: jS,
                            zoom: this.zoomLevel
                        });
                        if (i) {
                            var jW = i.sub(jR);
                            var jO = jS.sub(jW);
                            this.centerPoint = this.restrictCenter(jO)
                        }
                    } else {
                        var jT = this.getZoomUnits();
                        var jO = new cr(jZ.lng - jT * (T.x - this.width / 2),jZ.lat + jT * (T.y - this.height / 2));
                        this.centerPoint = this.restrictCenter(jO, jT)
                    }
                    this.fire(new fu("oncenter_changed"))
                }
                this._checkFireZoomend();
                j0.callback && j0.callback();
                return
            }
            this._animationInfo.zoom = {
                current: this.zoomLevel,
                diff: e - this.zoomLevel,
                target: e
            };
            var jX = this;
            jX._checkFireZoomend();
            var jY = this._tilt;
            if (this.fixPoint || jY > hr.MAX_DRAG_TILT_L2) {
                j0.renderCallback = function() {
                    var j4 = jX.getCurrentMaxTilt();
                    if (jX._tilt > j4) {
                        jX._tilt = j4
                    }
                    var j5 = jX.fixPixel;
                    if (!jX.fixPixel || !jX.fixPoint) {
                        return
                    }
                    var j1 = jX.fixPixel;
                    var kb = jX.fixPoint;
                    var j8 = jX.fixCenter;
                    var j6 = jX.mousePosMCPoint;
                    if (jX._heading % 360 !== 0 || jX._tilt > 0) {
                        var j2 = jX._webglMapCamera.fromScreenPixelToMC(j1.x, j1.y, {
                            center: j8,
                            zoom: jX.zoomLevel,
                            tilt: jX._tilt
                        });
                        if (j2) {
                            var ka = j2.sub(j6);
                            var j3 = j8.sub(ka);
                            jX.centerPoint = jX.restrictCenter(j3)
                        }
                    } else {
                        var j7 = j1;
                        var j9 = jX.getZoomUnits();
                        var j3 = new cr(kb.lng - j9 * (j7.x - jX.width / 2),kb.lat + j9 * (j7.y - jX.height / 2));
                        jX.centerPoint = jX.restrictCenter(j3, j9)
                    }
                    jX.fire(new fu("oncenter_changed"))
                }
            }
            if (j0.fromMouseWheel === true) {
                this._startInfiniteZoomAnimation(j0);
                j0.callback && j0.callback();
                return
            }
            this._startAnimation(j0)
        },
        _checkFireZoomend: function() {
            var e = this;
            if (e.fireZoomendTimer) {
                clearTimeout(e.fireZoomendTimer)
            }
            e.fireZoomendTimer = setTimeout(function() {
                if (e.zoomEventStatus === "zooming") {
                    e.fire(new fu("onzoomend"));
                    e.zoomEventStatus = "idle"
                }
                e.fireZoomendTimer = null
            }, 150)
        },
        deepZoomMedia: function(e) {
            var i = this;
            if (!i.temp.isStdCtrlBusy) {
                i.temp.isStdCtrlBusy = true;
                i.deepZoomTo(i.zoomLevel + e);
                setTimeout(function() {
                    i.temp.isStdCtrlBusy = false
                }, 400)
            }
        },
        deepZoomTo: function(e) {
            this.zoomTo(e)
        },
        flyToIn: function(T, ki, j3) {
            j3 = j3 || {};
            var jP = this._getProperZoom(ki);
            ki = jP.zoom;
            if (this.centerPoint.equals(T) && this.zoomLevel === ki && typeof j3.heading !== "number" && typeof j3.tilt !== "number") {
                return
            }
            var e = this.getHeading() % 360;
            var jV = this.getTilt();
            var j1 = 0;
            var j5 = 0;
            var jY = this.getBounds().containsPoint(T);
            if (typeof j3.heading === "number") {
                j1 = j3.heading
            } else {
                if (jY) {
                    j1 = e
                }
            }
            if (typeof j3.tilt === "number") {
                j5 = j3.tilt
            } else {
                if (jY) {
                    j5 = jV
                }
            }
            this._heading = e;
            var kf = j1 - e;
            var kb = j5 - jV;
            var jZ = this;
            var jR = this.zoomLevel;
            var jS = 1.42;
            var j7 = this.zoomScale(ki - jR);
            var kk = this.getZoomUnits();
            var jX = this.centerPoint.div(kk);
            var kl = T.div(kk);
            var ke = this.worldSize();
            var ka = jS;
            var j9 = Math.max(this.width, this.height);
            var j8 = j9 / j7;
            var jW = kl.sub(jX).mag();
            var i = ka * ka;
            function kh(kn) {
                var km = (j8 * j8 - j9 * j9 + (kn ? -1 : 1) * i * i * jW * jW) / (2 * (kn ? j8 : j9) * i * jW);
                return Math.log(Math.sqrt(km * km + 1) - km)
            }
            function jO(km) {
                return (Math.exp(km) - Math.exp(-km)) / 2
            }
            function jT(km) {
                return (Math.exp(km) + Math.exp(-km)) / 2
            }
            function j2(km) {
                return jO(km) / jT(km)
            }
            var jU = kh(0);
            var kc = function(km) {
                return (jT(jU) / jT(jU + ka * km))
            };
            var kd = function(km) {
                return j9 * ((jT(jU) * j2(jU + ka * km) - jO(jU)) / i) / jW
            };
            var jQ = (kh(1) - jU) / ka;
            if (Math.abs(jW) < 0.000001 || jQ === Infinity || isNaN(jQ)) {
                if (Math.abs(j9 - j8) < 0.000001) {
                    this._animationInfo.zoom = {
                        current: this.zoomLevel,
                        diff: ki - this.zoomLevel
                    };
                    this._animationInfo.center = {
                        current: this.centerPoint,
                        diff: T.sub(this.centerPoint)
                    };
                    this._animationInfo.heading = {
                        current: e,
                        diff: j1 - e
                    };
                    this._animationInfo.tilt = {
                        current: jV,
                        diff: j5 - jV
                    };
                    this.setLock(true);
                    this._startAnimation({
                        callback: function(km) {
                            jZ.setLock(false);
                            if (j3.callback) {
                                j3.callback(km)
                            }
                        },
                        duration: j3.duration
                    });
                    return
                }
                var kj = j8 < j9 ? -1 : 1;
                jQ = Math.abs(Math.log(j8 / j9)) / ka;
                kd = function() {
                    return 0
                }
                ;
                kc = function(km) {
                    return Math.exp(kj * ka * km)
                }
            }
            var kg = 1.7;
            if (jQ < 0.3) {
                kg = 0.8
            } else {
                if (jQ > 5) {
                    kg = (jQ - 5) / 2 + kg
                }
            }
            var j4 = j3.duration || 1000 * jQ / kg;
            if (isNaN(j4)) {
                var j6 = {};
                for (var j0 in j3) {
                    j6[j0] = j3[j0];
                    j6.noAnimation = true
                }
                this.centerAndZoomIn(T, ki, j6);
                return
            }
            this.fire(new fu("onmovestart"));
            this.fire(new fu("onzoomstart"));
            this.setLock(true);
            this._startAnimation({
                duration: j4,
                renderCallback: function(km, kn) {
                    var ko = km * jQ;
                    var kr = kd(ko);
                    var kq = jR + jZ.scaleZoom(1 / kc(ko));
                    if (kq < jZ.getMinZoom()) {
                        kq = jZ.getMinZoom()
                    }
                    if (kq > jZ.getMaxZoom()) {
                        kq = jZ.getMaxZoom()
                    }
                    if (kq !== jZ.zoomLevel) {
                        jZ.zoomLevel = kq;
                        jZ.fire(new fu("onzoom_changed"))
                    }
                    jZ.centerPoint = jX.add(kl.sub(jX).mult(kr)).mult(kk);
                    jZ.fire(new fu("oncenter_changed"));
                    if (typeof j1 === "number") {
                        var kp = km / 0.7;
                        if (kp > 1) {
                            kp = 1
                        }
                        jZ.setHeading(e + kf * km, {
                            noAnimation: true
                        })
                    }
                    if (typeof j5 === "number") {
                        jZ.setTilt(jV + kb * km, {
                            noAnimation: true
                        })
                    }
                },
                callback: function(km, kn) {
                    jZ.setLock(false);
                    if (kn && kn.stop === true) {
                        jZ.fire(new fu("onmoveend"));
                        jZ.fire(new fu("onzoomend"));
                        j3.callback && j3.callback(km);
                        return
                    }
                    if (ki !== jZ.zoomLevel) {
                        jZ.zoomLevel = ki;
                        jZ.fire(new fu("onzoom_changed"))
                    }
                    jZ.fire(new fu("onmoveend"));
                    jZ.fire(new fu("onzoomend"));
                    j3.callback && j3.callback(km)
                }
            })
        },
        zoomScale: function(e) {
            return Math.pow(2, e)
        },
        scaleZoom: function(e) {
            return Math.log(e) / Math.LN2
        },
        panToIn: function(i, T) {
            T = T || {};
            if (!i || i.equals(this.centerPoint)) {
                T.callback && T.callback();
                return
            }
            var jO = this.pointToPixelIn(i);
            var e = Math.round(this.width / 2);
            var jQ = Math.round(this.height / 2);
            var jP = this._ifUseAnimation(i, this.zoomLevel);
            if (T.noAnimation === true || jP === false) {
                this._stopAllAnimations();
                this._panToIn(e - jO.x, jQ - jO.y, i);
                T.callback && T.callback();
                return
            }
            this.flyToIn(i, this.zoomLevel, T)
        },
        _panToIn: function(i, e, jO) {
            var T = this.temp;
            if (T.operating === true) {
                return
            }
            if (T.dragAni) {
                T.dragAni.stop(false, {
                    readyToMove: true
                });
                T.dragAni = null
            }
            this.dispatchEvent(new fu("onmovestart"));
            this._setPlatformPosition(i, e, {
                point: jO
            });
            this.dispatchEvent(new fu("onmoveend"))
        },
        _stopAllAnimations: function(e) {
            e = e || {};
            if (this._ani) {
                this._ani.stop(!!e.goToEnd, {
                    stopCurrentAnimation: e.stopCurrentAnimation
                });
                this._ani = null
            }
            if (this._infiniteAni) {
                this._infiniteAni.stop();
                this._infiniteAni = null
            }
        },
        panBy: function(i, e, T) {
            i = Math.round(i) || 0;
            e = Math.round(e) || 0;
            T = T || {};
            if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
                this._panBy(i, e, T)
            } else {
                this._panToIn(i, e, T.point);
                T.callback && T.callback()
            }
        },
        _panBy: function(i, e, jP) {
            if (this.temp.operating === true) {
                return
            }
            jP = jP || {};
            this.dispatchEvent(new fu("onmovestart"));
            var jO = this;
            var T = jO.temp;
            T.pl = jO.offsetX;
            T.pt = jO.offsetY;
            if (T.tlPan) {
                T.tlPan.cancel()
            }
            if (T.dragAni) {
                T.dragAni.stop(false, {
                    readyToMove: true
                });
                T.dragAni = null
            }
            T.tlPan = new fk({
                fps: jP.fps || jO.config.fps,
                duration: jP.duration || jO.config.actionDuration,
                transition: jP.transition || gk.easeInOutQuad,
                render: function(jQ) {
                    this.terminative = jO.temp.operating;
                    if (jO.temp.operating) {
                        return
                    }
                    jO._setPlatformPosition(i * jQ, e * jQ, {
                        initMapOffsetX: T.pl,
                        initMapOffsetY: T.pt
                    })
                },
                finish: function(jQ) {
                    jO.dispatchEvent(new fu("onmoveend"));
                    jO.temp.tlPan = false;
                    if (jO.temp.stopArrow === true) {
                        jO.temp.stopArrow = false;
                        if (jO.temp.arrow !== 0) {
                            jO._arrow()
                        }
                    }
                }
            })
        },
        _startAnimation: function(i) {
            var jP = this._animationInfo;
            var T = this;
            i = i || {};
            if (T._ani) {
                T._ani.stop(!!i.goToEnd, {
                    stopCurrentAnimation: i.stopCurrentAnimation
                })
            }
            if (T._infiniteAni) {
                T._infiniteAni.stop();
                T._infiniteAni = null
            }
            var jQ = i.duration || 500;
            var jR = i.transition || gk.ease;
            var e = new fu("onanimation_start");
            this.fire(e);
            if (i.unstopable) {
                jP = this._animationInfoUnstopable
            }
            var jO = new fk({
                duration: jQ,
                transition: jR,
                render: function(jU, jT) {
                    for (var jS in jP) {
                        if (!jP.hasOwnProperty(jS)) {
                            continue
                        }
                        var jW = jP[jS].current;
                        var jV = jP[jS].diff;
                        T._setValueTick(jS, jW, jV, jU)
                    }
                    if (i.renderCallback) {
                        i.renderCallback(jU, jT)
                    }
                },
                finish: function(jS) {
                    T.fire(new fu("onanimation_end"));
                    if (i.unstopable) {
                        T._animationInfoUnstopable = {};
                        T._unstopableAni = null
                    } else {
                        T._ani = null;
                        T._animationInfo = {}
                    }
                    if (i.mapNeedCbk) {
                        i.mapNeedCbk()
                    }
                    if (i.callback) {
                        i.callback(jS)
                    }
                },
                onStop: function(jS) {
                    jS = jS || {};
                    T.fire(new fu("onanimation_end"));
                    if (jS.stopCurrentAnimation) {
                        T._animationInfo = {}
                    }
                    T._ani = null;
                    if (i.mapNeedCbk) {
                        i.mapNeedCbk()
                    }
                    if (i.callback) {
                        i.callback(null, {
                            stop: true
                        })
                    }
                }
            });
            if (i.unstopable) {
                T._unstopableAni = jO
            } else {
                T._ani = jO
            }
        },
        _startInfiniteZoomAnimation: function(e) {
            var i = this;
            if (i._ani) {
                i._ani.stop(!!e.goToEnd, {
                    stopCurrentAnimation: e.stopCurrentAnimation
                })
            }
            if (i._infiniteAni) {
                return
            }
            this.fire(new fu("onanimation_start"));
            i._infiniteAni = new fk({
                duration: 10000,
                transition: gk.linear,
                render: function() {
                    var T = i._animationInfo.zoom;
                    if (Math.abs(T.current - T.target) < 0.001) {
                        i._setValue("zoom", T.target);
                        i._infiniteAni && i._infiniteAni.stop();
                        return
                    }
                    T.current += (T.target - T.current) * 0.35;
                    i._setValue("zoom", T.current);
                    if (e.renderCallback) {
                        e.renderCallback()
                    }
                },
                finish: function() {
                    i._infiniteAni = null;
                    i._animationInfo = {};
                    i.fire(new fu("onanimation_end"));
                    if (e.callback) {
                        e.callback()
                    }
                },
                onStop: function() {
                    i._infiniteAni = null;
                    i._animationInfo = {};
                    i.fire(new fu("onanimation_end"));
                    if (e.callback) {
                        e.callback()
                    }
                }
            })
        },
        _setValue: function(e, T) {
            if (e === "zoom") {
                this._preZoomLevel = this.zoomLevel;
                var i = this._getProperZoom(T);
                T = i.zoom;
                if (T !== this.zoomLevel) {
                    this.zoomLevel = T;
                    if (T < 5) {
                        this.restrictCenter(this.centerPoint)
                    }
                    this.fire(new fu("on" + e + "_changed"))
                }
                return
            } else {
                if (e === "center") {
                    this.centerPoint = T
                }
            }
            this["_" + e] = T;
            this.fire(new fu("on" + e + "_changed"))
        },
        _setValueTick: function(e, jP, jO, i) {
            if (e === "center") {
                var T = new cr(jP.lng + jO.lng * i,jP.lat + jO.lat * i);
                this._setValue(e, T);
                return
            }
            if (e === "zoom") {
                this._setValue(e, Math.pow(jP, 1 - i) * Math.pow(jP + jO, i));
                return
            }
            this._setValue(e, jP + jO * i)
        },
        setHeading: function(jO, i) {
            i = i || {};
            if (jO === this._heading) {
                i.callback && i.callback();
                return
            }
            var T = d0(this._heading, 360);
            var e = d0(jO, 360);
            if (e === T) {
                this._heading = jO;
                i.callback && i.callback();
                return
            }
            if (i.noAnimation) {
                this._setValue("heading", jO);
                i.callback && i.callback();
                return
            }
            if (i.unstopable) {
                this._animationInfoUnstopable.heading = {
                    current: this._heading,
                    diff: jO - this._heading
                }
            } else {
                this._animationInfo.heading = {
                    current: this._heading,
                    diff: jO - this._heading
                }
            }
            this._startAnimation(i)
        },
        resetHeading: function(e) {
            var i = this._heading;
            while (i < 0) {
                i += 360
            }
            i = i % 360;
            if (i > 180) {
                i -= 360
            }
            this._heading = i;
            e = e || {};
            e.unstopable = true;
            this.setHeading(0, e)
        },
        getHeading: function() {
            return this._heading
        },
        setTilt: function(e, i) {
            i = i || {};
            if (e === this._tilt) {
                i.callback && i.callback();
                return
            }
            if (e > hr.MAX_TILT) {
                e = hr.MAX_TILT
            }
            if (e < hr.MIN_TILT) {
                e = hr.MIN_TILT
            }
            if (i && i.noAnimation) {
                this._setValue("tilt", e);
                i.callback && i.callback();
                return
            }
            this._animationInfo.tilt = {
                current: this._tilt,
                diff: e - this._tilt
            };
            this._startAnimation(i)
        },
        getTilt: function() {
            return this._tilt
        },
        getCenterIn: function() {
            return this.centerPoint
        },
        getZoom: function() {
            return this.zoomLevel
        },
        getCameraPosition: function(T) {
            T = T || {};
            var e = T.center || this.centerPoint;
            var jO = T.zoom || this.zoomLevel;
            var jR = typeof T.heading === "number" ? T.heading : this._heading;
            var i = typeof T.tilt === "number" ? T.tilt : this._tilt;
            var jQ = this._webglMapCamera.generateMVMatrix(e, jO, jR, i);
            var jP = mat4.create(Float32Array);
            mat4.invert(jP, jQ);
            return this._webglMapCamera.getPosition(jP)
        }
    });
    function bi(i) {
        this._jobQueue = [];
        this._idleOnlyJobQueue = [];
        var e = this;
        this.isIdle = true;
        i.on("updateframe", function(jO) {
            var T = 12 - jO.frameTime;
            T = T < 1 ? 1 : T;
            e.isIdle = false;
            if (e.idleWorkTimer) {
                clearInterval(e.idleWorkTimer);
                e.idleWorkTimer = null
            }
            e.runJobs(T)
        });
        this._idleWorkerTicker = (function(T) {
            return function() {
                if (T.isIdle) {
                    T.runJobs();
                    T.runIdleOnlyJobs()
                }
            }
        }
        )(this);
        i.on("mapglidle", function() {
            e.isIdle = true;
            e.runJobs();
            e.runIdleOnlyJobs();
            e.idleWorkTimer = setInterval(e._idleWorkerTicker, bi.MAX_IDLE_TIME)
        })
    }
    bi.MAX_IDLE_TIME = 50;
    bi.MAX_FRAME_TIME = 6;
    bi.prototype.runJobs = function(i) {
        if (this._jobQueue.length === 0) {
            return
        }
        var jO = hR();
        var e = 0;
        i = i || bi.MAX_FRAME_TIME;
        while (this._jobQueue.length && e < i) {
            var T = this._jobQueue.shift();
            if (T.state !== "invalid") {
                T.call()
            }
            e = hR() - jO
        }
    }
    ;
    bi.prototype.runIdleOnlyJobs = function() {
        if (this._idleOnlyJobQueue.length === 0) {
            return
        }
        var T = hR();
        var e = 0;
        while (this._idleOnlyJobQueue.length && e < bi.MAX_IDLE_TIME) {
            var i = this._idleOnlyJobQueue.shift();
            if (i.state !== "invalid") {
                i.call()
            }
            e = hR() - T
        }
    }
    ;
    bi.prototype.checkIdleRunning = function() {
        if (this.isIdle && !this.idleWorkTimer) {
            this.runJobs();
            this.runIdleOnlyJobs();
            this.idleWorkTimer = setInterval(this._idleWorkerTicker, 50)
        }
    }
    ;
    bi.prototype.addJob = function(e) {
        this._jobQueue.push(e);
        this.checkIdleRunning()
    }
    ;
    bi.prototype.clearJobs = function() {
        this._jobQueue.length = 0;
        this._idleOnlyJobQueue.length = 0
    }
    ;
    bi.prototype.addIdleOnlyJob = function(e) {
        this._idleOnlyJobQueue.push(e);
        this.checkIdleRunning()
    }
    ;
    var dH = {};
    (function(jR) {
        if (!jV) {
            var jV = 0.000001
        }
        if (!i) {
            var i = (typeof Float32Array !== "undefined") ? Float32Array : Array
        }
        if (!jP) {
            var jP = Math.random
        }
        var T = {};
        var jQ = Math.PI / 180;
        T.toRadian = function(jW) {
            return jW * jQ
        }
        ;
        var jU = {};
        jU.create = function(jX) {
            jX = jX || i;
            var jW = new jX(2);
            jW[0] = 0;
            jW[1] = 0;
            return jW
        }
        ;
        jU.clone = function(jW, jY) {
            jY = jY || i;
            var jX = new jY(2);
            jX[0] = jW[0];
            jX[1] = jW[1];
            return jX
        }
        ;
        jU.fromValues = function(jW, jZ, jY) {
            jY = jY || i;
            var jX = new jY(2);
            jX[0] = jW;
            jX[1] = jZ;
            return jX
        }
        ;
        jU.copy = function(jX, jW) {
            jX[0] = jW[0];
            jX[1] = jW[1];
            return jX
        }
        ;
        jU.set = function(jX, jW, jY) {
            jX[0] = jW;
            jX[1] = jY;
            return jX
        }
        ;
        jU.add = function(jY, jX, jW) {
            jY[0] = jX[0] + jW[0];
            jY[1] = jX[1] + jW[1];
            return jY
        }
        ;
        jU.subtract = function(jY, jX, jW) {
            jY[0] = jX[0] - jW[0];
            jY[1] = jX[1] - jW[1];
            return jY
        }
        ;
        jU.sub = jU.subtract;
        jU.multiply = function(jY, jX, jW) {
            jY[0] = jX[0] * jW[0];
            jY[1] = jX[1] * jW[1];
            return jY
        }
        ;
        jU.mul = jU.multiply;
        jU.divide = function(jY, jX, jW) {
            jY[0] = jX[0] / jW[0];
            jY[1] = jX[1] / jW[1];
            return jY
        }
        ;
        jU.div = jU.divide;
        jU.min = function(jY, jX, jW) {
            jY[0] = Math.min(jX[0], jW[0]);
            jY[1] = Math.min(jX[1], jW[1]);
            return jY
        }
        ;
        jU.max = function(jY, jX, jW) {
            jY[0] = Math.max(jX[0], jW[0]);
            jY[1] = Math.max(jX[1], jW[1]);
            return jY
        }
        ;
        jU.scale = function(jY, jX, jW) {
            jY[0] = jX[0] * jW;
            jY[1] = jX[1] * jW;
            return jY
        }
        ;
        jU.scaleAndAdd = function(jY, jX, jW, jZ) {
            jY[0] = jX[0] + (jW[0] * jZ);
            jY[1] = jX[1] + (jW[1] * jZ);
            return jY
        }
        ;
        jU.distance = function(jY, jX) {
            var jW = jX[0] - jY[0]
              , jZ = jX[1] - jY[1];
            return Math.sqrt(jW * jW + jZ * jZ)
        }
        ;
        jU.dist = jU.distance;
        jU.squaredDistance = function(jY, jX) {
            var jW = jX[0] - jY[0]
              , jZ = jX[1] - jY[1];
            return jW * jW + jZ * jZ
        }
        ;
        jU.sqrDist = jU.squaredDistance;
        jU.length = function(jX) {
            var jW = jX[0]
              , jY = jX[1];
            return Math.sqrt(jW * jW + jY * jY)
        }
        ;
        jU.len = jU.length;
        jU.squaredLength = function(jX) {
            var jW = jX[0]
              , jY = jX[1];
            return jW * jW + jY * jY
        }
        ;
        jU.sqrLen = jU.squaredLength;
        jU.negate = function(jX, jW) {
            jX[0] = -jW[0];
            jX[1] = -jW[1];
            return jX
        }
        ;
        jU.normalize = function(jZ, jY) {
            var jX = jY[0]
              , j0 = jY[1];
            var jW = jX * jX + j0 * j0;
            if (jW > 0) {
                jW = 1 / Math.sqrt(jW);
                jZ[0] = jY[0] * jW;
                jZ[1] = jY[1] * jW
            }
            return jZ
        }
        ;
        jU.dot = function(jX, jW) {
            return jX[0] * jW[0] + jX[1] * jW[1]
        }
        ;
        jU.cross = function(jY, jX, jW) {
            var jZ = jX[0] * jW[1] - jX[1] * jW[0];
            jY[0] = jY[1] = 0;
            jY[2] = jZ;
            return jY
        }
        ;
        jU.lerp = function(jY, jX, jW, jZ) {
            var j1 = jX[0]
              , j0 = jX[1];
            jY[0] = j1 + jZ * (jW[0] - j1);
            jY[1] = j0 + jZ * (jW[1] - j0);
            return jY
        }
        ;
        jU.random = function(jW, jY) {
            jY = jY || 1;
            var jX = jP() * 2 * Math.PI;
            jW[0] = Math.cos(jX) * jY;
            jW[1] = Math.sin(jX) * jY;
            return jW
        }
        ;
        jU.transformMat2 = function(jZ, jY, jX) {
            var jW = jY[0]
              , j0 = jY[1];
            jZ[0] = jX[0] * jW + jX[2] * j0;
            jZ[1] = jX[1] * jW + jX[3] * j0;
            return jZ
        }
        ;
        jU.transformMat2d = function(jZ, jY, jX) {
            var jW = jY[0]
              , j0 = jY[1];
            jZ[0] = jX[0] * jW + jX[2] * j0 + jX[4];
            jZ[1] = jX[1] * jW + jX[3] * j0 + jX[5];
            return jZ
        }
        ;
        jU.transformMat3 = function(jZ, jY, jX) {
            var jW = jY[0]
              , j0 = jY[1];
            jZ[0] = jX[0] * jW + jX[3] * j0 + jX[6];
            jZ[1] = jX[1] * jW + jX[4] * j0 + jX[7];
            return jZ
        }
        ;
        jU.transformMat4 = function(jZ, jY, jX) {
            var jW = jY[0]
              , j0 = jY[1];
            jZ[0] = jX[0] * jW + jX[4] * j0 + jX[12];
            jZ[1] = jX[1] * jW + jX[5] * j0 + jX[13];
            return jZ
        }
        ;
        jU.rotate = function(jZ, jX, jW, j3) {
            var j2 = jX[0] - jW[0];
            var j1 = jX[1] - jW[1];
            var jY = Math.sin(j3);
            var j0 = Math.cos(j3);
            jZ[0] = j2 * j0 - j1 * jY + jW[0];
            jZ[1] = j2 * jY + j1 * j0 + jW[1];
            return jZ
        }
        ;
        jU.forEach = (function() {
            var jW = jU.create();
            return function(jZ, j3, j4, j2, j1, jX) {
                var j0, jY;
                if (!j3) {
                    j3 = 2
                }
                if (!j4) {
                    j4 = 0
                }
                if (j2) {
                    jY = Math.min((j2 * j3) + j4, jZ.length)
                } else {
                    jY = jZ.length
                }
                for (j0 = j4; j0 < jY; j0 += j3) {
                    jW[0] = jZ[j0];
                    jW[1] = jZ[j0 + 1];
                    j1(jW, jW, jX);
                    jZ[j0] = jW[0];
                    jZ[j0 + 1] = jW[1]
                }
                return jZ
            }
        }
        )();
        jU.str = function(jW) {
            return "vec2(" + jW[0] + ", " + jW[1] + ")"
        }
        ;
        jR.vec2 = jU;
        var jT = {};
        jT.create = function(jX) {
            jX = jX || i;
            var jW = new jX(3);
            jW[0] = 0;
            jW[1] = 0;
            jW[2] = 0;
            return jW
        }
        ;
        jT.clone = function(jW, jY) {
            jY = jY || i;
            var jX = new jY(3);
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            return jX
        }
        ;
        jT.fromValues = function(jW, j0, jY, jZ) {
            jZ = jZ || i;
            var jX = new jZ(3);
            jX[0] = jW;
            jX[1] = j0;
            jX[2] = jY;
            return jX
        }
        ;
        jT.copy = function(jX, jW) {
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            return jX
        }
        ;
        jT.set = function(jX, jW, jZ, jY) {
            jX[0] = jW;
            jX[1] = jZ;
            jX[2] = jY;
            return jX
        }
        ;
        jT.add = function(jY, jX, jW) {
            jY[0] = jX[0] + jW[0];
            jY[1] = jX[1] + jW[1];
            jY[2] = jX[2] + jW[2];
            return jY
        }
        ;
        jT.subtract = function(jY, jX, jW) {
            jY[0] = jX[0] - jW[0];
            jY[1] = jX[1] - jW[1];
            jY[2] = jX[2] - jW[2];
            return jY
        }
        ;
        jT.sub = jT.subtract;
        jT.multiply = function(jY, jX, jW) {
            jY[0] = jX[0] * jW[0];
            jY[1] = jX[1] * jW[1];
            jY[2] = jX[2] * jW[2];
            return jY
        }
        ;
        jT.mul = jT.multiply;
        jT.divide = function(jY, jX, jW) {
            jY[0] = jX[0] / jW[0];
            jY[1] = jX[1] / jW[1];
            jY[2] = jX[2] / jW[2];
            return jY
        }
        ;
        jT.div = jT.divide;
        jT.min = function(jY, jX, jW) {
            jY[0] = Math.min(jX[0], jW[0]);
            jY[1] = Math.min(jX[1], jW[1]);
            jY[2] = Math.min(jX[2], jW[2]);
            return jY
        }
        ;
        jT.max = function(jY, jX, jW) {
            jY[0] = Math.max(jX[0], jW[0]);
            jY[1] = Math.max(jX[1], jW[1]);
            jY[2] = Math.max(jX[2], jW[2]);
            return jY
        }
        ;
        jT.scale = function(jY, jX, jW) {
            jY[0] = jX[0] * jW;
            jY[1] = jX[1] * jW;
            jY[2] = jX[2] * jW;
            return jY
        }
        ;
        jT.scaleAndAdd = function(jY, jX, jW, jZ) {
            jY[0] = jX[0] + (jW[0] * jZ);
            jY[1] = jX[1] + (jW[1] * jZ);
            jY[2] = jX[2] + (jW[2] * jZ);
            return jY
        }
        ;
        jT.distance = function(jY, jX) {
            var jW = jX[0] - jY[0]
              , j0 = jX[1] - jY[1]
              , jZ = jX[2] - jY[2];
            return Math.sqrt(jW * jW + j0 * j0 + jZ * jZ)
        }
        ;
        jT.dist = jT.distance;
        jT.squaredDistance = function(jY, jX) {
            var jW = jX[0] - jY[0]
              , j0 = jX[1] - jY[1]
              , jZ = jX[2] - jY[2];
            return jW * jW + j0 * j0 + jZ * jZ
        }
        ;
        jT.sqrDist = jT.squaredDistance;
        jT.length = function(jX) {
            var jW = jX[0]
              , jZ = jX[1]
              , jY = jX[2];
            return Math.sqrt(jW * jW + jZ * jZ + jY * jY)
        }
        ;
        jT.len = jT.length;
        jT.squaredLength = function(jX) {
            var jW = jX[0]
              , jZ = jX[1]
              , jY = jX[2];
            return jW * jW + jZ * jZ + jY * jY
        }
        ;
        jT.sqrLen = jT.squaredLength;
        jT.negate = function(jX, jW) {
            jX[0] = -jW[0];
            jX[1] = -jW[1];
            jX[2] = -jW[2];
            return jX
        }
        ;
        jT.normalize = function(jZ, jY) {
            var jX = jY[0]
              , j1 = jY[1]
              , j0 = jY[2];
            var jW = jX * jX + j1 * j1 + j0 * j0;
            if (jW > 0) {
                jW = 1 / Math.sqrt(jW);
                jZ[0] = jY[0] * jW;
                jZ[1] = jY[1] * jW;
                jZ[2] = jY[2] * jW
            }
            return jZ
        }
        ;
        jT.dot = function(jX, jW) {
            return jX[0] * jW[0] + jX[1] * jW[1] + jX[2] * jW[2]
        }
        ;
        jT.cross = function(jX, j2, j1) {
            var jW = j2[0]
              , j4 = j2[1]
              , j3 = j2[2]
              , j0 = j1[0]
              , jZ = j1[1]
              , jY = j1[2];
            jX[0] = j4 * jY - j3 * jZ;
            jX[1] = j3 * j0 - jW * jY;
            jX[2] = jW * jZ - j4 * j0;
            return jX
        }
        ;
        jT.lerp = function(jY, jX, jW, jZ) {
            var j2 = jX[0]
              , j1 = jX[1]
              , j0 = jX[2];
            jY[0] = j2 + jZ * (jW[0] - j2);
            jY[1] = j1 + jZ * (jW[1] - j1);
            jY[2] = j0 + jZ * (jW[2] - j0);
            return jY
        }
        ;
        jT.random = function(jW, j0) {
            j0 = j0 || 1;
            var jY = jP() * 2 * Math.PI;
            var jZ = (jP() * 2) - 1;
            var jX = Math.sqrt(1 - jZ * jZ) * j0;
            jW[0] = Math.cos(jY) * jX;
            jW[1] = Math.sin(jY) * jX;
            jW[2] = jZ * j0;
            return jW
        }
        ;
        jT.transformMat4 = function(jZ, jY, jX) {
            var jW = jY[0]
              , j1 = jY[1]
              , j0 = jY[2];
            jZ[0] = jX[0] * jW + jX[4] * j1 + jX[8] * j0 + jX[12];
            jZ[1] = jX[1] * jW + jX[5] * j1 + jX[9] * j0 + jX[13];
            jZ[2] = jX[2] * jW + jX[6] * j1 + jX[10] * j0 + jX[14];
            return jZ
        }
        ;
        jT.transformMat3 = function(jZ, jY, jX) {
            var jW = jY[0]
              , j1 = jY[1]
              , j0 = jY[2];
            jZ[0] = jW * jX[0] + j1 * jX[3] + j0 * jX[6];
            jZ[1] = jW * jX[1] + j1 * jX[4] + j0 * jX[7];
            jZ[2] = jW * jX[2] + j1 * jX[5] + j0 * jX[8];
            return jZ
        }
        ;
        jT.transformQuat = function(j2, j8, jW) {
            var j9 = j8[0]
              , j7 = j8[1]
              , j6 = j8[2]
              , j4 = jW[0]
              , j3 = jW[1]
              , j1 = jW[2]
              , j5 = jW[3]
              , jZ = j5 * j9 + j3 * j6 - j1 * j7
              , jY = j5 * j7 + j1 * j9 - j4 * j6
              , jX = j5 * j6 + j4 * j7 - j3 * j9
              , j0 = -j4 * j9 - j3 * j7 - j1 * j6;
            j2[0] = jZ * j5 + j0 * -j4 + jY * -j1 - jX * -j3;
            j2[1] = jY * j5 + j0 * -j3 + jX * -j4 - jZ * -j1;
            j2[2] = jX * j5 + j0 * -j1 + jZ * -j3 - jY * -j4;
            return j2
        }
        ;
        jT.rotateX = function(jY, jX, jW, j1) {
            var j0 = []
              , jZ = [];
            j0[0] = jX[0] - jW[0];
            j0[1] = jX[1] - jW[1];
            j0[2] = jX[2] - jW[2];
            jZ[0] = j0[0];
            jZ[1] = j0[1] * Math.cos(j1) - j0[2] * Math.sin(j1);
            jZ[2] = j0[1] * Math.sin(j1) + j0[2] * Math.cos(j1);
            jY[0] = jZ[0] + jW[0];
            jY[1] = jZ[1] + jW[1];
            jY[2] = jZ[2] + jW[2];
            return jY
        }
        ;
        jT.rotateY = function(jY, jX, jW, j1) {
            var j0 = []
              , jZ = [];
            j0[0] = jX[0] - jW[0];
            j0[1] = jX[1] - jW[1];
            j0[2] = jX[2] - jW[2];
            jZ[0] = j0[2] * Math.sin(j1) + j0[0] * Math.cos(j1);
            jZ[1] = j0[1];
            jZ[2] = j0[2] * Math.cos(j1) - j0[0] * Math.sin(j1);
            jY[0] = jZ[0] + jW[0];
            jY[1] = jZ[1] + jW[1];
            jY[2] = jZ[2] + jW[2];
            return jY
        }
        ;
        jT.rotateZ = function(jY, jX, jW, j1) {
            var j0 = []
              , jZ = [];
            j0[0] = jX[0] - jW[0];
            j0[1] = jX[1] - jW[1];
            j0[2] = jX[2] - jW[2];
            jZ[0] = j0[0] * Math.cos(j1) - j0[1] * Math.sin(j1);
            jZ[1] = j0[0] * Math.sin(j1) + j0[1] * Math.cos(j1);
            jZ[2] = j0[2];
            jY[0] = jZ[0] + jW[0];
            jY[1] = jZ[1] + jW[1];
            jY[2] = jZ[2] + jW[2];
            return jY
        }
        ;
        jT.forEach = (function() {
            var jW = jT.create();
            return function(jZ, j3, j4, j2, j1, jX) {
                var j0, jY;
                if (!j3) {
                    j3 = 3
                }
                if (!j4) {
                    j4 = 0
                }
                if (j2) {
                    jY = Math.min((j2 * j3) + j4, jZ.length)
                } else {
                    jY = jZ.length
                }
                for (j0 = j4; j0 < jY; j0 += j3) {
                    jW[0] = jZ[j0];
                    jW[1] = jZ[j0 + 1];
                    jW[2] = jZ[j0 + 2];
                    j1(jW, jW, jX);
                    jZ[j0] = jW[0];
                    jZ[j0 + 1] = jW[1];
                    jZ[j0 + 2] = jW[2]
                }
                return jZ
            }
        }
        )();
        jT.str = function(jW) {
            return "vec3(" + jW[0] + ", " + jW[1] + ", " + jW[2] + ")"
        }
        ;
        jR.vec3 = jT;
        var jS = {};
        jS.create = function(jX) {
            jX = jX || i;
            var jW = new jX(4);
            jW[0] = 0;
            jW[1] = 0;
            jW[2] = 0;
            jW[3] = 0;
            return jW
        }
        ;
        jS.clone = function(jW, jY) {
            jY = jY || i;
            var jX = new jY(4);
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            return jX
        }
        ;
        jS.fromValues = function(jW, j1, jZ, jX, j0) {
            j0 = j0 || i;
            var jY = new j0(4);
            jY[0] = jW;
            jY[1] = j1;
            jY[2] = jZ;
            jY[3] = jX;
            return jY
        }
        ;
        jS.copy = function(jX, jW) {
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            return jX
        }
        ;
        jS.set = function(jY, jW, j0, jZ, jX) {
            jY[0] = jW;
            jY[1] = j0;
            jY[2] = jZ;
            jY[3] = jX;
            return jY
        }
        ;
        jS.add = function(jY, jX, jW) {
            jY[0] = jX[0] + jW[0];
            jY[1] = jX[1] + jW[1];
            jY[2] = jX[2] + jW[2];
            jY[3] = jX[3] + jW[3];
            return jY
        }
        ;
        jS.subtract = function(jY, jX, jW) {
            jY[0] = jX[0] - jW[0];
            jY[1] = jX[1] - jW[1];
            jY[2] = jX[2] - jW[2];
            jY[3] = jX[3] - jW[3];
            return jY
        }
        ;
        jS.sub = jS.subtract;
        jS.multiply = function(jY, jX, jW) {
            jY[0] = jX[0] * jW[0];
            jY[1] = jX[1] * jW[1];
            jY[2] = jX[2] * jW[2];
            jY[3] = jX[3] * jW[3];
            return jY
        }
        ;
        jS.mul = jS.multiply;
        jS.divide = function(jY, jX, jW) {
            jY[0] = jX[0] / jW[0];
            jY[1] = jX[1] / jW[1];
            jY[2] = jX[2] / jW[2];
            jY[3] = jX[3] / jW[3];
            return jY
        }
        ;
        jS.div = jS.divide;
        jS.min = function(jY, jX, jW) {
            jY[0] = Math.min(jX[0], jW[0]);
            jY[1] = Math.min(jX[1], jW[1]);
            jY[2] = Math.min(jX[2], jW[2]);
            jY[3] = Math.min(jX[3], jW[3]);
            return jY
        }
        ;
        jS.max = function(jY, jX, jW) {
            jY[0] = Math.max(jX[0], jW[0]);
            jY[1] = Math.max(jX[1], jW[1]);
            jY[2] = Math.max(jX[2], jW[2]);
            jY[3] = Math.max(jX[3], jW[3]);
            return jY
        }
        ;
        jS.scale = function(jY, jX, jW) {
            jY[0] = jX[0] * jW;
            jY[1] = jX[1] * jW;
            jY[2] = jX[2] * jW;
            jY[3] = jX[3] * jW;
            return jY
        }
        ;
        jS.scaleAndAdd = function(jY, jX, jW, jZ) {
            jY[0] = jX[0] + (jW[0] * jZ);
            jY[1] = jX[1] + (jW[1] * jZ);
            jY[2] = jX[2] + (jW[2] * jZ);
            jY[3] = jX[3] + (jW[3] * jZ);
            return jY
        }
        ;
        jS.distance = function(jZ, jX) {
            var jW = jX[0] - jZ[0]
              , j1 = jX[1] - jZ[1]
              , j0 = jX[2] - jZ[2]
              , jY = jX[3] - jZ[3];
            return Math.sqrt(jW * jW + j1 * j1 + j0 * j0 + jY * jY)
        }
        ;
        jS.dist = jS.distance;
        jS.squaredDistance = function(jZ, jX) {
            var jW = jX[0] - jZ[0]
              , j1 = jX[1] - jZ[1]
              , j0 = jX[2] - jZ[2]
              , jY = jX[3] - jZ[3];
            return jW * jW + j1 * j1 + j0 * j0 + jY * jY
        }
        ;
        jS.sqrDist = jS.squaredDistance;
        jS.length = function(jY) {
            var jW = jY[0]
              , j0 = jY[1]
              , jZ = jY[2]
              , jX = jY[3];
            return Math.sqrt(jW * jW + j0 * j0 + jZ * jZ + jX * jX)
        }
        ;
        jS.len = jS.length;
        jS.squaredLength = function(jY) {
            var jW = jY[0]
              , j0 = jY[1]
              , jZ = jY[2]
              , jX = jY[3];
            return jW * jW + j0 * j0 + jZ * jZ + jX * jX
        }
        ;
        jS.sqrLen = jS.squaredLength;
        jS.negate = function(jX, jW) {
            jX[0] = -jW[0];
            jX[1] = -jW[1];
            jX[2] = -jW[2];
            jX[3] = -jW[3];
            return jX
        }
        ;
        jS.normalize = function(j0, jZ) {
            var jX = jZ[0]
              , j2 = jZ[1]
              , j1 = jZ[2]
              , jY = jZ[3];
            var jW = jX * jX + j2 * j2 + j1 * j1 + jY * jY;
            if (jW > 0) {
                jW = 1 / Math.sqrt(jW);
                j0[0] = jZ[0] * jW;
                j0[1] = jZ[1] * jW;
                j0[2] = jZ[2] * jW;
                j0[3] = jZ[3] * jW
            }
            return j0
        }
        ;
        jS.dot = function(jX, jW) {
            return jX[0] * jW[0] + jX[1] * jW[1] + jX[2] * jW[2] + jX[3] * jW[3]
        }
        ;
        jS.lerp = function(jY, jX, jW, jZ) {
            var j2 = jX[0]
              , j1 = jX[1]
              , j0 = jX[2]
              , j3 = jX[3];
            jY[0] = j2 + jZ * (jW[0] - j2);
            jY[1] = j1 + jZ * (jW[1] - j1);
            jY[2] = j0 + jZ * (jW[2] - j0);
            jY[3] = j3 + jZ * (jW[3] - j3);
            return jY
        }
        ;
        jS.random = function(jW, jX) {
            jX = jX || 1;
            jW[0] = jP();
            jW[1] = jP();
            jW[2] = jP();
            jW[3] = jP();
            jS.normalize(jW, jW);
            jS.scale(jW, jW, jX);
            return jW
        }
        ;
        jS.transformMat4 = function(j0, jZ, jX) {
            var jW = jZ[0]
              , j2 = jZ[1]
              , j1 = jZ[2]
              , jY = jZ[3];
            j0[0] = jX[0] * jW + jX[4] * j2 + jX[8] * j1 + jX[12] * jY;
            j0[1] = jX[1] * jW + jX[5] * j2 + jX[9] * j1 + jX[13] * jY;
            j0[2] = jX[2] * jW + jX[6] * j2 + jX[10] * j1 + jX[14] * jY;
            j0[3] = jX[3] * jW + jX[7] * j2 + jX[11] * j1 + jX[15] * jY;
            return j0
        }
        ;
        jS.transformQuat = function(j2, j8, jW) {
            var j9 = j8[0]
              , j7 = j8[1]
              , j6 = j8[2]
              , j4 = jW[0]
              , j3 = jW[1]
              , j1 = jW[2]
              , j5 = jW[3]
              , jZ = j5 * j9 + j3 * j6 - j1 * j7
              , jY = j5 * j7 + j1 * j9 - j4 * j6
              , jX = j5 * j6 + j4 * j7 - j3 * j9
              , j0 = -j4 * j9 - j3 * j7 - j1 * j6;
            j2[0] = jZ * j5 + j0 * -j4 + jY * -j1 - jX * -j3;
            j2[1] = jY * j5 + j0 * -j3 + jX * -j4 - jZ * -j1;
            j2[2] = jX * j5 + j0 * -j1 + jZ * -j3 - jY * -j4;
            return j2
        }
        ;
        jS.forEach = (function() {
            var jW = jS.create();
            return function(jZ, j3, j4, j2, j1, jX) {
                var j0, jY;
                if (!j3) {
                    j3 = 4
                }
                if (!j4) {
                    j4 = 0
                }
                if (j2) {
                    jY = Math.min((j2 * j3) + j4, jZ.length)
                } else {
                    jY = jZ.length
                }
                for (j0 = j4; j0 < jY; j0 += j3) {
                    jW[0] = jZ[j0];
                    jW[1] = jZ[j0 + 1];
                    jW[2] = jZ[j0 + 2];
                    jW[3] = jZ[j0 + 3];
                    j1(jW, jW, jX);
                    jZ[j0] = jW[0];
                    jZ[j0 + 1] = jW[1];
                    jZ[j0 + 2] = jW[2];
                    jZ[j0 + 3] = jW[3]
                }
                return jZ
            }
        }
        )();
        jS.str = function(jW) {
            return "vec4(" + jW[0] + ", " + jW[1] + ", " + jW[2] + ", " + jW[3] + ")"
        }
        ;
        jR.vec4 = jS;
        var jO = {};
        jO.create = function(jX) {
            jX = jX || i;
            var jW = new jX(4);
            jW[0] = 1;
            jW[1] = 0;
            jW[2] = 0;
            jW[3] = 1;
            return jW
        }
        ;
        jO.clone = function(jW, jY) {
            jY = jY || i;
            var jX = new jY(4);
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            return jX
        }
        ;
        jO.copy = function(jX, jW) {
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            return jX
        }
        ;
        jO.identity = function(jW) {
            jW[0] = 1;
            jW[1] = 0;
            jW[2] = 0;
            jW[3] = 1;
            return jW
        }
        ;
        jO.transpose = function(jY, jX) {
            if (jY === jX) {
                var jW = jX[1];
                jY[1] = jX[2];
                jY[2] = jW
            } else {
                jY[0] = jX[0];
                jY[1] = jX[2];
                jY[2] = jX[1];
                jY[3] = jX[3]
            }
            return jY
        }
        ;
        jO.invert = function(j0, jY) {
            var jZ = jY[0]
              , jX = jY[1]
              , jW = jY[2]
              , j2 = jY[3]
              , j1 = jZ * j2 - jW * jX;
            if (!j1) {
                return null
            }
            j1 = 1 / j1;
            j0[0] = j2 * j1;
            j0[1] = -jX * j1;
            j0[2] = -jW * j1;
            j0[3] = jZ * j1;
            return j0
        }
        ;
        jO.adjoint = function(jY, jW) {
            var jX = jW[0];
            jY[0] = jW[3];
            jY[1] = -jW[1];
            jY[2] = -jW[2];
            jY[3] = jX;
            return jY
        }
        ;
        jO.determinant = function(jW) {
            return jW[0] * jW[3] - jW[2] * jW[1]
        }
        ;
        jO.multiply = function(j0, j5, j3) {
            var jZ = j5[0]
              , jY = j5[1]
              , jX = j5[2]
              , jW = j5[3];
            var j6 = j3[0]
              , j4 = j3[1]
              , j2 = j3[2]
              , j1 = j3[3];
            j0[0] = jZ * j6 + jX * j4;
            j0[1] = jY * j6 + jW * j4;
            j0[2] = jZ * j2 + jX * j1;
            j0[3] = jY * j2 + jW * j1;
            return j0
        }
        ;
        jO.mul = jO.multiply;
        jO.rotate = function(j0, j3, j2) {
            var jZ = j3[0]
              , jY = j3[1]
              , jX = j3[2]
              , jW = j3[3]
              , j4 = Math.sin(j2)
              , j1 = Math.cos(j2);
            j0[0] = jZ * j1 + jX * j4;
            j0[1] = jY * j1 + jW * j4;
            j0[2] = jZ * -j4 + jX * j1;
            j0[3] = jY * -j4 + jW * j1;
            return j0
        }
        ;
        jO.scale = function(j0, j1, j3) {
            var jZ = j1[0]
              , jY = j1[1]
              , jX = j1[2]
              , jW = j1[3]
              , j4 = j3[0]
              , j2 = j3[1];
            j0[0] = jZ * j4;
            j0[1] = jY * j4;
            j0[2] = jX * j2;
            j0[3] = jW * j2;
            return j0
        }
        ;
        jO.str = function(jW) {
            return "mat2(" + jW[0] + ", " + jW[1] + ", " + jW[2] + ", " + jW[3] + ")"
        }
        ;
        jO.frob = function(jW) {
            return (Math.sqrt(Math.pow(jW[0], 2) + Math.pow(jW[1], 2) + Math.pow(jW[2], 2) + Math.pow(jW[3], 2)))
        }
        ;
        jO.LDU = function(jW, jZ, jY, jX) {
            jW[2] = jX[2] / jX[0];
            jY[0] = jX[0];
            jY[1] = jX[1];
            jY[3] = jX[3] - jW[2] * jY[1];
            return [jW, jZ, jY]
        }
        ;
        jR.mat2 = jO;
        var e = {};
        e.create = function(jX) {
            jX = jX || i;
            var jW = new jX(16);
            jW[0] = 1;
            jW[1] = 0;
            jW[2] = 0;
            jW[3] = 0;
            jW[4] = 0;
            jW[5] = 1;
            jW[6] = 0;
            jW[7] = 0;
            jW[8] = 0;
            jW[9] = 0;
            jW[10] = 1;
            jW[11] = 0;
            jW[12] = 0;
            jW[13] = 0;
            jW[14] = 0;
            jW[15] = 1;
            return jW
        }
        ;
        e.clone = function(jW) {
            var jX = new i(16);
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            jX[4] = jW[4];
            jX[5] = jW[5];
            jX[6] = jW[6];
            jX[7] = jW[7];
            jX[8] = jW[8];
            jX[9] = jW[9];
            jX[10] = jW[10];
            jX[11] = jW[11];
            jX[12] = jW[12];
            jX[13] = jW[13];
            jX[14] = jW[14];
            jX[15] = jW[15];
            return jX
        }
        ;
        e.copy = function(jX, jW) {
            jX[0] = jW[0];
            jX[1] = jW[1];
            jX[2] = jW[2];
            jX[3] = jW[3];
            jX[4] = jW[4];
            jX[5] = jW[5];
            jX[6] = jW[6];
            jX[7] = jW[7];
            jX[8] = jW[8];
            jX[9] = jW[9];
            jX[10] = jW[10];
            jX[11] = jW[11];
            jX[12] = jW[12];
            jX[13] = jW[13];
            jX[14] = jW[14];
            jX[15] = jW[15];
            return jX
        }
        ;
        e.identity = function(jW) {
            jW[0] = 1;
            jW[1] = 0;
            jW[2] = 0;
            jW[3] = 0;
            jW[4] = 0;
            jW[5] = 1;
            jW[6] = 0;
            jW[7] = 0;
            jW[8] = 0;
            jW[9] = 0;
            jW[10] = 1;
            jW[11] = 0;
            jW[12] = 0;
            jW[13] = 0;
            jW[14] = 0;
            jW[15] = 1;
            return jW
        }
        ;
        e.transpose = function(jZ, jY) {
            if (jZ === jY) {
                var j3 = jY[1]
                  , j1 = jY[2]
                  , j0 = jY[3]
                  , jW = jY[6]
                  , j2 = jY[7]
                  , jX = jY[11];
                jZ[1] = jY[4];
                jZ[2] = jY[8];
                jZ[3] = jY[12];
                jZ[4] = j3;
                jZ[6] = jY[9];
                jZ[7] = jY[13];
                jZ[8] = j1;
                jZ[9] = jW;
                jZ[11] = jY[14];
                jZ[12] = j0;
                jZ[13] = j2;
                jZ[14] = jX
            } else {
                jZ[0] = jY[0];
                jZ[1] = jY[4];
                jZ[2] = jY[8];
                jZ[3] = jY[12];
                jZ[4] = jY[1];
                jZ[5] = jY[5];
                jZ[6] = jY[9];
                jZ[7] = jY[13];
                jZ[8] = jY[2];
                jZ[9] = jY[6];
                jZ[10] = jY[10];
                jZ[11] = jY[14];
                jZ[12] = jY[3];
                jZ[13] = jY[7];
                jZ[14] = jY[11];
                jZ[15] = jY[15]
            }
            return jZ
        }
        ;
        e.invert = function(kf, kk) {
            var ko = kk[0]
              , km = kk[1]
              , kl = kk[2]
              , ki = kk[3]
              , j0 = kk[4]
              , jZ = kk[5]
              , jY = kk[6]
              , jX = kk[7]
              , ke = kk[8]
              , kd = kk[9]
              , kc = kk[10]
              , kb = kk[11]
              , kq = kk[12]
              , kp = kk[13]
              , kn = kk[14]
              , kj = kk[15]
              , ka = ko * jZ - km * j0
              , j9 = ko * jY - kl * j0
              , j8 = ko * jX - ki * j0
              , j7 = km * jY - kl * jZ
              , j6 = km * jX - ki * jZ
              , j5 = kl * jX - ki * jY
              , j4 = ke * kp - kd * kq
              , j3 = ke * kn - kc * kq
              , j2 = ke * kj - kb * kq
              , j1 = kd * kn - kc * kp
              , kh = kd * kj - kb * kp
              , kg = kc * kj - kb * kn
              , jW = ka * kg - j9 * kh + j8 * j1 + j7 * j2 - j6 * j3 + j5 * j4;
            if (!jW) {
                return null
            }
            jW = 1 / jW;
            kf[0] = (jZ * kg - jY * kh + jX * j1) * jW;
            kf[1] = (kl * kh - km * kg - ki * j1) * jW;
            kf[2] = (kp * j5 - kn * j6 + kj * j7) * jW;
            kf[3] = (kc * j6 - kd * j5 - kb * j7) * jW;
            kf[4] = (jY * j2 - j0 * kg - jX * j3) * jW;
            kf[5] = (ko * kg - kl * j2 + ki * j3) * jW;
            kf[6] = (kn * j8 - kq * j5 - kj * j9) * jW;
            kf[7] = (ke * j5 - kc * j8 + kb * j9) * jW;
            kf[8] = (j0 * kh - jZ * j2 + jX * j4) * jW;
            kf[9] = (km * j2 - ko * kh - ki * j4) * jW;
            kf[10] = (kq * j6 - kp * j8 + kj * ka) * jW;
            kf[11] = (kd * j8 - ke * j6 - kb * ka) * jW;
            kf[12] = (jZ * j3 - j0 * j1 - jY * j4) * jW;
            kf[13] = (ko * j1 - km * j3 + kl * j4) * jW;
            kf[14] = (kp * j9 - kq * j7 - kn * ka) * jW;
            kf[15] = (ke * j7 - kd * j9 + kc * ka) * jW;
            return kf
        }
        ;
        e.adjoint = function(j4, j7) {
            var kb = j7[0]
              , j9 = j7[1]
              , j8 = j7[2]
              , j5 = j7[3]
              , jZ = j7[4]
              , jY = j7[5]
              , jX = j7[6]
              , jW = j7[7]
              , j3 = j7[8]
              , j2 = j7[9]
              , j1 = j7[10]
              , j0 = j7[11]
              , kd = j7[12]
              , kc = j7[13]
              , ka = j7[14]
              , j6 = j7[15];
            j4[0] = (jY * (j1 * j6 - j0 * ka) - j2 * (jX * j6 - jW * ka) + kc * (jX * j0 - jW * j1));
            j4[1] = -(j9 * (j1 * j6 - j0 * ka) - j2 * (j8 * j6 - j5 * ka) + kc * (j8 * j0 - j5 * j1));
            j4[2] = (j9 * (jX * j6 - jW * ka) - jY * (j8 * j6 - j5 * ka) + kc * (j8 * jW - j5 * jX));
            j4[3] = -(j9 * (jX * j0 - jW * j1) - jY * (j8 * j0 - j5 * j1) + j2 * (j8 * jW - j5 * jX));
            j4[4] = -(jZ * (j1 * j6 - j0 * ka) - j3 * (jX * j6 - jW * ka) + kd * (jX * j0 - jW * j1));
            j4[5] = (kb * (j1 * j6 - j0 * ka) - j3 * (j8 * j6 - j5 * ka) + kd * (j8 * j0 - j5 * j1));
            j4[6] = -(kb * (jX * j6 - jW * ka) - jZ * (j8 * j6 - j5 * ka) + kd * (j8 * jW - j5 * jX));
            j4[7] = (kb * (jX * j0 - jW * j1) - jZ * (j8 * j0 - j5 * j1) + j3 * (j8 * jW - j5 * jX));
            j4[8] = (jZ * (j2 * j6 - j0 * kc) - j3 * (jY * j6 - jW * kc) + kd * (jY * j0 - jW * j2));
            j4[9] = -(kb * (j2 * j6 - j0 * kc) - j3 * (j9 * j6 - j5 * kc) + kd * (j9 * j0 - j5 * j2));
            j4[10] = (kb * (jY * j6 - jW * kc) - jZ * (j9 * j6 - j5 * kc) + kd * (j9 * jW - j5 * jY));
            j4[11] = -(kb * (jY * j0 - jW * j2) - jZ * (j9 * j0 - j5 * j2) + j3 * (j9 * jW - j5 * jY));
            j4[12] = -(jZ * (j2 * ka - j1 * kc) - j3 * (jY * ka - jX * kc) + kd * (jY * j1 - jX * j2));
            j4[13] = (kb * (j2 * ka - j1 * kc) - j3 * (j9 * ka - j8 * kc) + kd * (j9 * j1 - j8 * j2));
            j4[14] = -(kb * (jY * ka - jX * kc) - jZ * (j9 * ka - j8 * kc) + kd * (j9 * jX - j8 * jY));
            j4[15] = (kb * (jY * j1 - jX * j2) - jZ * (j9 * j1 - j8 * j2) + j3 * (j9 * jX - j8 * jY));
            return j4
        }
        ;
        e.determinant = function(kh) {
            var km = kh[0]
              , kk = kh[1]
              , ki = kh[2]
              , kg = kh[3]
              , jZ = kh[4]
              , jY = kh[5]
              , jX = kh[6]
              , jW = kh[7]
              , kd = kh[8]
              , kc = kh[9]
              , kb = kh[10]
              , ka = kh[11]
              , ko = kh[12]
              , kn = kh[13]
              , kl = kh[14]
              , kj = kh[15]
              , j9 = km * jY - kk * jZ
              , j8 = km * jX - ki * jZ
              , j7 = km * jW - kg * jZ
              , j6 = kk * jX - ki * jY
              , j5 = kk * jW - kg * jY
              , j4 = ki * jW - kg * jX
              , j3 = kd * kn - kc * ko
              , j2 = kd * kl - kb * ko
              , j1 = kd * kj - ka * ko
              , j0 = kc * kl - kb * kn
              , kf = kc * kj - ka * kn
              , ke = kb * kj - ka * kl;
            return j9 * ke - j8 * kf + j7 * j0 + j6 * j1 - j5 * j2 + j4 * j3
        }
        ;
        e.multiply = function(j8, kc, j9) {
            var kg = kc[0]
              , kf = kc[1]
              , kd = kc[2]
              , ka = kc[3]
              , j2 = kc[4]
              , j0 = kc[5]
              , jY = kc[6]
              , jW = kc[7]
              , j7 = kc[8]
              , j6 = kc[9]
              , j5 = kc[10]
              , j4 = kc[11]
              , ki = kc[12]
              , kh = kc[13]
              , ke = kc[14]
              , kb = kc[15];
            var j3 = j9[0]
              , j1 = j9[1]
              , jZ = j9[2]
              , jX = j9[3];
            j8[0] = j3 * kg + j1 * j2 + jZ * j7 + jX * ki;
            j8[1] = j3 * kf + j1 * j0 + jZ * j6 + jX * kh;
            j8[2] = j3 * kd + j1 * jY + jZ * j5 + jX * ke;
            j8[3] = j3 * ka + j1 * jW + jZ * j4 + jX * kb;
            j3 = j9[4];
            j1 = j9[5];
            jZ = j9[6];
            jX = j9[7];
            j8[4] = j3 * kg + j1 * j2 + jZ * j7 + jX * ki;
            j8[5] = j3 * kf + j1 * j0 + jZ * j6 + jX * kh;
            j8[6] = j3 * kd + j1 * jY + jZ * j5 + jX * ke;
            j8[7] = j3 * ka + j1 * jW + jZ * j4 + jX * kb;
            j3 = j9[8];
            j1 = j9[9];
            jZ = j9[10];
            jX = j9[11];
            j8[8] = j3 * kg + j1 * j2 + jZ * j7 + jX * ki;
            j8[9] = j3 * kf + j1 * j0 + jZ * j6 + jX * kh;
            j8[10] = j3 * kd + j1 * jY + jZ * j5 + jX * ke;
            j8[11] = j3 * ka + j1 * jW + jZ * j4 + jX * kb;
            j3 = j9[12];
            j1 = j9[13];
            jZ = j9[14];
            jX = j9[15];
            j8[12] = j3 * kg + j1 * j2 + jZ * j7 + jX * ki;
            j8[13] = j3 * kf + j1 * j0 + jZ * j6 + jX * kh;
            j8[14] = j3 * kd + j1 * jY + jZ * j5 + jX * ke;
            j8[15] = j3 * ka + j1 * jW + jZ * j4 + jX * kb;
            return j8
        }
        ;
        e.mul = e.multiply;
        e.translate = function(j8, ka, j3) {
            var j2 = j3[0], j1 = j3[1], j0 = j3[2], kd, kc, kb, j9, jZ, jY, jX, jW, j7, j6, j5, j4;
            if (ka === j8) {
                j8[12] = ka[0] * j2 + ka[4] * j1 + ka[8] * j0 + ka[12];
                j8[13] = ka[1] * j2 + ka[5] * j1 + ka[9] * j0 + ka[13];
                j8[14] = ka[2] * j2 + ka[6] * j1 + ka[10] * j0 + ka[14];
                j8[15] = ka[3] * j2 + ka[7] * j1 + ka[11] * j0 + ka[15]
            } else {
                kd = ka[0];
                kc = ka[1];
                kb = ka[2];
                j9 = ka[3];
                jZ = ka[4];
                jY = ka[5];
                jX = ka[6];
                jW = ka[7];
                j7 = ka[8];
                j6 = ka[9];
                j5 = ka[10];
                j4 = ka[11];
                j8[0] = kd;
                j8[1] = kc;
                j8[2] = kb;
                j8[3] = j9;
                j8[4] = jZ;
                j8[5] = jY;
                j8[6] = jX;
                j8[7] = jW;
                j8[8] = j7;
                j8[9] = j6;
                j8[10] = j5;
                j8[11] = j4;
                j8[12] = kd * j2 + jZ * j1 + j7 * j0 + ka[12];
                j8[13] = kc * j2 + jY * j1 + j6 * j0 + ka[13];
                j8[14] = kb * j2 + jX * j1 + j5 * j0 + ka[14];
                j8[15] = j9 * j2 + jW * j1 + j4 * j0 + ka[15]
            }
            return j8
        }
        ;
        e.scale = function(jZ, jX, jY) {
            var jW = jY[0]
              , j1 = jY[1]
              , j0 = jY[2];
            jZ[0] = jX[0] * jW;
            jZ[1] = jX[1] * jW;
            jZ[2] = jX[2] * jW;
            jZ[3] = jX[3] * jW;
            jZ[4] = jX[4] * j1;
            jZ[5] = jX[5] * j1;
            jZ[6] = jX[6] * j1;
            jZ[7] = jX[7] * j1;
            jZ[8] = jX[8] * j0;
            jZ[9] = jX[9] * j0;
            jZ[10] = jX[10] * j0;
            jZ[11] = jX[11] * j0;
            jZ[12] = jX[12];
            jZ[13] = jX[13];
            jZ[14] = jX[14];
            jZ[15] = jX[15];
            return jZ
        }
        ;
        e.rotate = function(kg, kn, kp, jW) {
            var j6 = jW[0], j5 = jW[1], j4 = jW[2], kh = Math.sqrt(j6 * j6 + j5 * j5 + j4 * j4), kb, kl, ka, kr, kq, ko, km, j3, j2, j1, j0, kf, ke, kd, kc, j9, j8, j7, kk, kj, ki, jZ, jY, jX;
            if (Math.abs(kh) < jV) {
                return null
            }
            kh = 1 / kh;
            j6 *= kh;
            j5 *= kh;
            j4 *= kh;
            kb = Math.sin(kp);
            kl = Math.cos(kp);
            ka = 1 - kl;
            kr = kn[0];
            kq = kn[1];
            ko = kn[2];
            km = kn[3];
            j3 = kn[4];
            j2 = kn[5];
            j1 = kn[6];
            j0 = kn[7];
            kf = kn[8];
            ke = kn[9];
            kd = kn[10];
            kc = kn[11];
            j9 = j6 * j6 * ka + kl;
            j8 = j5 * j6 * ka + j4 * kb;
            j7 = j4 * j6 * ka - j5 * kb;
            kk = j6 * j5 * ka - j4 * kb;
            kj = j5 * j5 * ka + kl;
            ki = j4 * j5 * ka + j6 * kb;
            jZ = j6 * j4 * ka + j5 * kb;
            jY = j5 * j4 * ka - j6 * kb;
            jX = j4 * j4 * ka + kl;
            kg[0] = kr * j9 + j3 * j8 + kf * j7;
            kg[1] = kq * j9 + j2 * j8 + ke * j7;
            kg[2] = ko * j9 + j1 * j8 + kd * j7;
            kg[3] = km * j9 + j0 * j8 + kc * j7;
            kg[4] = kr * kk + j3 * kj + kf * ki;
            kg[5] = kq * kk + j2 * kj + ke * ki;
            kg[6] = ko * kk + j1 * kj + kd * ki;
            kg[7] = km * kk + j0 * kj + kc * ki;
            kg[8] = kr * jZ + j3 * jY + kf * jX;
            kg[9] = kq * jZ + j2 * jY + ke * jX;
            kg[10] = ko * jZ + j1 * jY + kd * jX;
            kg[11] = km * jZ + j0 * jY + kc * jX;
            if (kn !== kg) {
                kg[12] = kn[12];
                kg[13] = kn[13];
                kg[14] = kn[14];
                kg[15] = kn[15]
            }
            return kg
        }
        ;
        e.rotateX = function(jW, j3, j2) {
            var j8 = Math.sin(j2)
              , j1 = Math.cos(j2)
              , j7 = j3[4]
              , j6 = j3[5]
              , j5 = j3[6]
              , j4 = j3[7]
              , j0 = j3[8]
              , jZ = j3[9]
              , jY = j3[10]
              , jX = j3[11];
            if (j3 !== jW) {
                jW[0] = j3[0];
                jW[1] = j3[1];
                jW[2] = j3[2];
                jW[3] = j3[3];
                jW[12] = j3[12];
                jW[13] = j3[13];
                jW[14] = j3[14];
                jW[15] = j3[15]
            }
            jW[4] = j7 * j1 + j0 * j8;
            jW[5] = j6 * j1 + jZ * j8;
            jW[6] = j5 * j1 + jY * j8;
            jW[7] = j4 * j1 + jX * j8;
            jW[8] = j0 * j1 - j7 * j8;
            jW[9] = jZ * j1 - j6 * j8;
            jW[10] = jY * j1 - j5 * j8;
            jW[11] = jX * j1 - j4 * j8;
            return jW
        }
        ;
        e.rotateY = function(j0, j7, j6) {
            var j8 = Math.sin(j6)
              , j5 = Math.cos(j6)
              , jZ = j7[0]
              , jY = j7[1]
              , jX = j7[2]
              , jW = j7[3]
              , j4 = j7[8]
              , j3 = j7[9]
              , j2 = j7[10]
              , j1 = j7[11];
            if (j7 !== j0) {
                j0[4] = j7[4];
                j0[5] = j7[5];
                j0[6] = j7[6];
                j0[7] = j7[7];
                j0[12] = j7[12];
                j0[13] = j7[13];
                j0[14] = j7[14];
                j0[15] = j7[15]
            }
            j0[0] = jZ * j5 - j4 * j8;
            j0[1] = jY * j5 - j3 * j8;
            j0[2] = jX * j5 - j2 * j8;
            j0[3] = jW * j5 - j1 * j8;
            j0[8] = jZ * j8 + j4 * j5;
            j0[9] = jY * j8 + j3 * j5;
            j0[10] = jX * j8 + j2 * j5;
            j0[11] = jW * j8 + j1 * j5;
            return j0
        }
        ;
        e.rotateZ = function(j0, j3, j2) {
            var j8 = Math.sin(j2)
              , j1 = Math.cos(j2)
              , jZ = j3[0]
              , jY = j3[1]
              , jX = j3[2]
              , jW = j3[3]
              , j7 = j3[4]
              , j6 = j3[5]
              , j5 = j3[6]
              , j4 = j3[7];
            if (j3 !== j0) {
                j0[8] = j3[8];
                j0[9] = j3[9];
                j0[10] = j3[10];
                j0[11] = j3[11];
                j0[12] = j3[12];
                j0[13] = j3[13];
                j0[14] = j3[14];
                j0[15] = j3[15]
            }
            j0[0] = jZ * j1 + j7 * j8;
            j0[1] = jY * j1 + j6 * j8;
            j0[2] = jX * j1 + j5 * j8;
            j0[3] = jW * j1 + j4 * j8;
            j0[4] = j7 * j1 - jZ * j8;
            j0[5] = j6 * j1 - jY * j8;
            j0[6] = j5 * j1 - jX * j8;
            j0[7] = j4 * j1 - jW * j8;
            return j0
        }
        ;
        e.fromRotationTranslation = function(j9, j7, j5) {
            var j2 = j7[0]
              , j1 = j7[1]
              , j0 = j7[2]
              , j3 = j7[3]
              , ka = j2 + j2
              , jW = j1 + j1
              , j4 = j0 + j0
              , jZ = j2 * ka
              , jY = j2 * jW
              , jX = j2 * j4
              , j8 = j1 * jW
              , j6 = j1 * j4
              , kd = j0 * j4
              , ke = j3 * ka
              , kc = j3 * jW
              , kb = j3 * j4;
            j9[0] = 1 - (j8 + kd);
            j9[1] = jY + kb;
            j9[2] = jX - kc;
            j9[3] = 0;
            j9[4] = jY - kb;
            j9[5] = 1 - (jZ + kd);
            j9[6] = j6 + ke;
            j9[7] = 0;
            j9[8] = jX + kc;
            j9[9] = j6 - ke;
            j9[10] = 1 - (jZ + j8);
            j9[11] = 0;
            j9[12] = j5[0];
            j9[13] = j5[1];
            j9[14] = j5[2];
            j9[15] = 1;
            return j9
        }
        ;
        e.fromQuat = function(j6, j3) {
            var j0 = j3[0]
              , jZ = j3[1]
              , jY = j3[2]
              , j1 = j3[3]
              , j7 = j0 + j0
              , jW = jZ + jZ
              , j2 = jY + jY
              , jX = j0 * j7
              , j5 = jZ * j7
              , j4 = jZ * jW
              , kd = jY * j7
              , kc = jY * jW
              , ka = jY * j2
              , kb = j1 * j7
              , j9 = j1 * jW
              , j8 = j1 * j2;
            j6[0] = 1 - j4 - ka;
            j6[1] = j5 + j8;
            j6[2] = kd - j9;
            j6[3] = 0;
            j6[4] = j5 - j8;
            j6[5] = 1 - jX - ka;
            j6[6] = kc + kb;
            j6[7] = 0;
            j6[8] = kd + j9;
            j6[9] = kc - kb;
            j6[10] = 1 - jX - j4;
            j6[11] = 0;
            j6[12] = 0;
            j6[13] = 0;
            j6[14] = 0;
            j6[15] = 1;
            return j6
        }
        ;
        e.frustum = function(j0, jX, j5, jW, j4, j2, j1) {
            var j3 = 1 / (j5 - jX)
              , jZ = 1 / (j4 - jW)
              , jY = 1 / (j2 - j1);
            j0[0] = (j2 * 2) * j3;
            j0[1] = 0;
            j0[2] = 0;
            j0[3] = 0;
            j0[4] = 0;
            j0[5] = (j2 * 2) * jZ;
            j0[6] = 0;
            j0[7] = 0;
            j0[8] = (j5 + jX) * j3;
            j0[9] = (j4 + jW) * jZ;
            j0[10] = (j1 + j2) * jY;
            j0[11] = -1;
            j0[12] = 0;
            j0[13] = 0;
            j0[14] = (j1 * j2 * 2) * jY;
            j0[15] = 0;
            return j0
        }
        ;
        e.perspective = function(jZ, jY, jX, j0, jW) {
            var j2 = 1 / Math.tan(jY / 2)
              , j1 = 1 / (j0 - jW);
            jZ[0] = j2 / jX;
            jZ[1] = 0;
            jZ[2] = 0;
            jZ[3] = 0;
            jZ[4] = 0;
            jZ[5] = j2;
            jZ[6] = 0;
            jZ[7] = 0;
            jZ[8] = 0;
            jZ[9] = 0;
            jZ[10] = (jW + j0) * j1;
            jZ[11] = -1;
            jZ[12] = 0;
            jZ[13] = 0;
            jZ[14] = (2 * jW * j0) * j1;
            jZ[15] = 0;
            return jZ
        }
        ;
        e.ortho = function(jZ, jX, j5, jW, j3, j2, j1) {
            var j0 = 1 / (jX - j5)
              , j4 = 1 / (jW - j3)
              , jY = 1 / (j2 - j1);
            jZ[0] = -2 * j0;
            jZ[1] = 0;
            jZ[2] = 0;
            jZ[3] = 0;
            jZ[4] = 0;
            jZ[5] = -2 * j4;
            jZ[6] = 0;
            jZ[7] = 0;
            jZ[8] = 0;
            jZ[9] = 0;
            jZ[10] = 2 * jY;
            jZ[11] = 0;
            jZ[12] = (jX + j5) * j0;
            jZ[13] = (j3 + jW) * j4;
            jZ[14] = (j1 + j2) * jY;
            jZ[15] = 1;
            return jZ
        }
        ;
        e.lookAt = function(ka, kh, ki, j2) {
            var kg, kf, kd, jY, jX, jW, j5, j4, j3, kb, ke = kh[0], kc = kh[1], j9 = kh[2], j1 = j2[0], j0 = j2[1], jZ = j2[2], j8 = ki[0], j7 = ki[1], j6 = ki[2];
            if (Math.abs(ke - j8) < jV && Math.abs(kc - j7) < jV && Math.abs(j9 - j6) < jV) {
                return e.identity(ka)
            }
            j5 = ke - j8;
            j4 = kc - j7;
            j3 = j9 - j6;
            kb = 1 / Math.sqrt(j5 * j5 + j4 * j4 + j3 * j3);
            j5 *= kb;
            j4 *= kb;
            j3 *= kb;
            kg = j0 * j3 - jZ * j4;
            kf = jZ * j5 - j1 * j3;
            kd = j1 * j4 - j0 * j5;
            kb = Math.sqrt(kg * kg + kf * kf + kd * kd);
            if (!kb) {
                kg = 0;
                kf = 0;
                kd = 0
            } else {
                kb = 1 / kb;
                kg *= kb;
                kf *= kb;
                kd *= kb
            }
            jY = j4 * kd - j3 * kf;
            jX = j3 * kg - j5 * kd;
            jW = j5 * kf - j4 * kg;
            kb = Math.sqrt(jY * jY + jX * jX + jW * jW);
            if (!kb) {
                jY = 0;
                jX = 0;
                jW = 0
            } else {
                kb = 1 / kb;
                jY *= kb;
                jX *= kb;
                jW *= kb
            }
            ka[0] = kg;
            ka[1] = jY;
            ka[2] = j5;
            ka[3] = 0;
            ka[4] = kf;
            ka[5] = jX;
            ka[6] = j4;
            ka[7] = 0;
            ka[8] = kd;
            ka[9] = jW;
            ka[10] = j3;
            ka[11] = 0;
            ka[12] = -(kg * ke + kf * kc + kd * j9);
            ka[13] = -(jY * ke + jX * kc + jW * j9);
            ka[14] = -(j5 * ke + j4 * kc + j3 * j9);
            ka[15] = 1;
            return ka
        }
        ;
        e.str = function(jW) {
            return "mat4(" + jW[0] + ", " + jW[1] + ", " + jW[2] + ", " + jW[3] + ", " + jW[4] + ", " + jW[5] + ", " + jW[6] + ", " + jW[7] + ", " + jW[8] + ", " + jW[9] + ", " + jW[10] + ", " + jW[11] + ", " + jW[12] + ", " + jW[13] + ", " + jW[14] + ", " + jW[15] + ")"
        }
        ;
        e.frob = function(jW) {
            return (Math.sqrt(Math.pow(jW[0], 2) + Math.pow(jW[1], 2) + Math.pow(jW[2], 2) + Math.pow(jW[3], 2) + Math.pow(jW[4], 2) + Math.pow(jW[5], 2) + Math.pow(jW[6], 2) + Math.pow(jW[6], 2) + Math.pow(jW[7], 2) + Math.pow(jW[8], 2) + Math.pow(jW[9], 2) + Math.pow(jW[10], 2) + Math.pow(jW[11], 2) + Math.pow(jW[12], 2) + Math.pow(jW[13], 2) + Math.pow(jW[14], 2) + Math.pow(jW[15], 2)))
        }
        ;
        jR.mat4 = e
    }
    )(window);
    function b8() {
        this.result = {
            bkData: [],
            eleData: [[], [], [], [], [], [], [], [], [], []],
            tileLabels: []
        }
    }
    eJ.extend(b8.prototype, {
        createLayer: function(T, i) {
            var e = this.result.bkData;
            i = i || {};
            if (!e[T]) {
                e[T] = [[], [], []]
            }
            e[T].tileTypeName = i.tileTypeName || "na";
            e[T].dataType = i.dataType || 2;
            e[T].png8 = i.png8 || false;
            e[T].clipTile = i.clipTile || false;
            e[T].boundary = i.boundary || false;
            if (i.ontology) {
                e[T].ontology = i.ontology
            }
        },
        removeLayer: function(i) {
            var e = this.result.bkData;
            e[i] = null
        },
        hasLayerBoundary: function() {
            var e = this.result.bkData;
            var T = false;
            for (var jO = 0; jO < e.length; jO++) {
                if (e[jO] && e[jO].boundary) {
                    T = true;
                    break
                }
            }
            return T
        },
        getResult: function() {
            return this.result
        },
        setData: function(jQ, jP, jR) {
            var e = this.result.bkData;
            var T = e[jP] ? e[jP][jR] : null;
            if (!T) {
                return
            }
            for (var jO = 0; jO < T.length; jO++) {
                if (T[jO].key && T[jO].key === jQ.key) {
                    T[jO] = jQ;
                    return
                }
            }
            T.push(jQ)
        },
        setLabelData: function(T, i) {
            var e = this.result.tileLabels;
            e[i || 0] = T
        },
        getLabelData: function(i) {
            var e = this.result.tileLabels;
            if (i === undefined) {
                return e
            }
            return e[i] || []
        },
        clearLabelData: function(i) {
            var e = this.result.tileLabels;
            if (i === undefined) {
                e = [];
                return
            }
            e[i] = []
        },
        setOverlayData: function(T, e, i) {
            if (!this.result.eleData[e]) {
                return
            }
            if (e >= 2 && e <= 4) {
                this.result.eleData[e][i || 0] = T;
                return
            } else {
                if (e === 0 || e === 5 || e === 6) {
                    T.sort(function(jP, jO) {
                        return jP.overlay.zIndex - jO.overlay.zIndex
                    })
                }
            }
            this.result.eleData[e] = T
        },
        clearLabelOverlayData: function(e) {
            if (e === undefined) {
                this.result.eleData[2] = [];
                this.result.eleData[3] = [];
                this.result.eleData[4] = []
            }
            this.result.eleData[2][e] = [];
            this.result.eleData[3][e] = [];
            this.result.eleData[4][e] = []
        },
        clearData: function(jO) {
            var e = this.result.bkData;
            if (typeof jO === "number") {
                if (e[jO]) {
                    e[jO][0] = [];
                    e[jO][1] = [];
                    e[jO][2] = []
                }
                return
            }
            for (var T = 0; T < e.length; T++) {
                if (!e[T]) {
                    continue
                }
                e[T][0] = [];
                e[T][1] = [];
                e[T][2] = []
            }
        },
        sortThumbData: function(i) {
            var e = this.result.bkData;
            var T = e[i];
            if (!T) {
                return
            }
            if (T[0] && T[0].length > 0) {
                T[0].sort(function(jP, jO) {
                    return jP.tileInfo.useZoom - jO.tileInfo.useZoom
                })
            }
        }
    });
    var f6 = (function() {
        var jY = new Int8Array(4);
        var T = new Int32Array(jY.buffer,0,1);
        var jT = new Float32Array(jY.buffer,0,1);
        function j0(j7) {
            T[0] = j7;
            return jT[0]
        }
        function i(j7) {
            jT[0] = j7;
            return T[0]
        }
        function jU(j7) {
            var j9 = (j7[3] << 24 | j7[2] << 16 | j7[1] << 8 | j7[0]);
            var j8 = j0(j9 & 4278190079);
            return j8
        }
        var jP = 0;
        var jS = 1;
        var jW = 2;
        var j4 = 0;
        var j1 = 1;
        var jZ = 2;
        var jQ = 9;
        function jX(j7, j8) {
            var j9;
            if (j8 % 2 === 0) {
                j9 = [-j7[1], j7[0]]
            } else {
                j9 = [j7[1], -j7[0]]
            }
            return j9
        }
        function e(j7, j8, j9) {
            var ka = jX(j7, j8);
            var kb;
            if (j9 === jS) {
                return ka
            } else {
                if (j8 === 4 || j8 === 5) {
                    kb = [ka[0] - j7[0], ka[1] - j7[1]]
                } else {
                    kb = [ka[0] + j7[0], ka[1] + j7[1]]
                }
                if (j9 === jP) {
                    vec2.normalize(kb, kb)
                }
                return kb
            }
        }
        function j3(j8, j7) {
            return Math.sqrt(Math.pow(j8[0] - j7[0], 2) + Math.pow(j8[1] - j7[1], 2))
        }
        function jO(kb, ka, j9, j7) {
            var j8 = vec2.dot(kb, ka);
            if (j9 === jZ || j9 === j1) {
                if ((j7 === 0 || j7 === 1) && j8 > 0) {
                    return true
                } else {
                    if ((j7 === 2 || j7 === 3) && j8 < 0) {
                        return true
                    }
                }
            }
            if ((j7 === 0 || j7 === 1) && j8 < 0) {
                return true
            } else {
                if ((j7 === 2 || j7 === 3) && j8 > 0) {
                    return true
                }
            }
            return false
        }
        function jV(j8, kd, kf) {
            var ke = jX(j8, kd);
            var ka;
            var kc = j8;
            var kb = kf;
            var kh = [];
            vec2.normalize(kh, [kc[0] + kb[0], kc[1] + kb[1]]);
            var kg = vec2.dot(ke, [-kh[1], kh[0]]);
            if (Math.abs(kg) < 0.1) {
                kg = 1
            }
            var j9 = 1 / kg;
            ka = [-kh[1] * j9, kh[0] * j9];
            var j7 = vec2.dot(j8, ka);
            if (j7 < 0) {
                vec2.negate(ka, ka)
            }
            return {
                cos2: j7,
                offset: ka
            }
        }
        function j6(j8, kd, kf, j7) {
            var ke = jX(j8, kd);
            var kc;
            var kb;
            var ka;
            if (kd === 0 || kd === 1) {
                kc = kf;
                kb = j8
            } else {
                kc = j8;
                kb = kf
            }
            if (!kc || !kb) {
                return ke
            }
            var kh = [kc[0] + kb[0], kc[1] + kb[1]];
            if (kh[0] === 0 && kh[1] === 0) {
                vec2.normalize(kh, kb)
            } else {
                vec2.normalize(kh, kh)
            }
            var ki = jO(kh, ke, j7, kd);
            if (ki) {
                return ke
            }
            var kg = vec2.dot(ke, [-kh[1], kh[0]]);
            if (Math.abs(kg) < 0.1) {
                kg = 1
            }
            var j9 = 1 / kg;
            ka = [-kh[1] * j9, kh[0] * j9];
            return ka
        }
        function j5(ki, kj, kc, kb, kk, kh, ka, kd, j9, kg) {
            var kf;
            var j8 = 0;
            var j7 = false;
            kf = kh.length / jQ - 1;
            jR(kj[0], ki[0], kc[0], kk, kb, 4, kd, j9, undefined, kh, kg);
            kf++;
            j8++;
            jR(kj[0], ki[0], kc[0], kk, kb, 5, kd, j9, undefined, kh, kg);
            kf++;
            j8++;
            for (var ke = 0; ke < ki.length; ke++) {
                jR(kj[ke], ki[ke], kc[ke], kk, kb, 0, kd, j9, ki[ke - 1], kh, kg);
                j2(ka, ++kf, ++j8, j7);
                jR(kj[ke], ki[ke], kc[ke], kk, kb, 1, kd, j9, ki[ke - 1], kh, kg);
                j2(ka, ++kf, ++j8, j7);
                jR(kj[ke + 1], ki[ke], kc[ke + 1], kk, kb, 2, kd, j9, ki[ke + 1], kh, kg);
                j2(ka, ++kf, ++j8, j7);
                jR(kj[ke + 1], ki[ke], kc[ke + 1], kk, kb, 3, kd, j9, ki[ke + 1], kh, kg);
                j2(ka, ++kf, ++j8, j7);
                if (kb === j1 && ke !== ki.length - 1) {
                    jR(kj[ke + 1], ki[ke], kc[ke + 1], kk, kb, 8, kd, j9, ki[ke + 1], kh, kg);
                    j2(ka, ++kf, ++j8, j7);
                    j7 = j7 ? false : true
                }
            }
            jR(kj[kj.length - 1], ki[ki.length - 1], kc[kj.length - 1], kk, kb, 6, kd, j9, undefined, kh, kg);
            j2(ka, ++kf, ++j8, j7);
            jR(kj[kj.length - 1], ki[ki.length - 1], kc[kj.length - 1], kk, kb, 7, kd, j9, undefined, kh, kg);
            j2(ka, ++kf, ++j8, j7)
        }
        function jR(kk, ka, ke, kl, j9, kf, kc, j8, ki, kh, kg) {
            var kj = kf % 2 === 0 ? 1 : -1;
            var kd;
            if (kf === 4 || kf === 5 || kf === 6 || kf === 7) {
                kd = e(ka, kf, kl)
            } else {
                if (kf === 0 || kf === 1 || kf === 2 || kf === 3) {
                    kd = j6(ka, kf, ki, j9)
                } else {
                    if (kf === 8) {
                        var kb = jV(ka, kf, ki);
                        kd = kb.offset;
                        vec2.normalize(kd, kd);
                        var j7 = kb.cos2;
                        if (j7 < 0) {
                            kj = -kj
                        }
                    }
                }
            }
            kh[kh.length] = kk[0] * 10;
            kh[kh.length] = kk[1] * 10;
            kh[kh.length] = kd[0] * j8 * 10;
            kh[kh.length] = kd[1] * j8 * 10;
            kh[kh.length] = kc;
            kh[kh.length] = kj;
            kh[kh.length] = 0;
            kh[kh.length] = kg || 0;
            kh[kh.length] = ke
        }
        function j2(kb, j9, j7, ka) {
            var j8;
            if (j7 % 2 === 0) {
                if (ka) {
                    kb[kb.length] = j9 - 2;
                    kb[kb.length] = j9 - 1;
                    kb[kb.length] = j9
                } else {
                    kb[kb.length] = j9 - 1;
                    kb[kb.length] = j9 - 2;
                    kb[kb.length] = j9
                }
            } else {
                if (ka) {
                    kb[kb.length] = j9 - 1;
                    kb[kb.length] = j9 - 2;
                    kb[kb.length] = j9
                } else {
                    kb[kb.length] = j9 - 2;
                    kb[kb.length] = j9 - 1;
                    kb[kb.length] = j9
                }
            }
        }
        return {
            getVertexCount: function(j8, j7) {
                if (j7 === j1) {
                    return j8 * 5 - 2
                } else {
                    return j8 * 4
                }
            },
            buildData: function(ki, j9, kj, kf, j7, kc, j8, kg) {
                var kh = [];
                var ke = 0;
                var kb = [0];
                for (var kd = 0; kd < ki.length; kd++) {
                    if (kd > 0) {
                        ke += j3(ki[kd], ki[kd - 1]);
                        kb.push(ke * 10)
                    }
                    if (kd !== ki.length - 1) {
                        var ka = [ki[kd + 1][0] - ki[kd][0], ki[kd + 1][1] - ki[kd][1]];
                        var kk = [];
                        if (ka[0] === 0 && ka[1] === 0) {
                            kk = [0, 0]
                        } else {
                            vec2.normalize(kk, ka)
                        }
                        kh[kh.length] = [kk[0], kk[1]]
                    }
                }
                return j5(kh, ki, kb, j9, kj, kf, j7, jU(kc), j8, kg)
            },
            toTileSolidLineVertices: function(kb, j8) {
                var j9 = new Float32Array(kb.length / jQ * 5);
                var j7 = new Int16Array(j9.buffer);
                var kd = 0;
                var ka = 0;
                for (var kc = 0; kc < kb.length; kc += jQ) {
                    j7[kd] = ~~kb[kc];
                    j7[kd + 1] = ~~kb[kc + 1];
                    j7[kd + 2] = ~~kb[kc + 2];
                    j7[kd + 3] = ~~kb[kc + 3];
                    j9[ka + 2] = kb[kc + 4];
                    j7[kd + 6] = kb[kc + 5];
                    j7[kd + 7] = j8 ? j8 : 0;
                    j7[kd + 8] = kb[kc + 7];
                    j7[kd + 9] = 0;
                    kd += 10;
                    ka += 5
                }
                return j9
            }
        }
    }
    )();
    var gp = 1;
    var hp = 2;
    var e0 = {
        drawIndex: 0,
        devicePixelRatio: fX(),
        zoomState: 1,
        curViewTilesInfo: null,
        iconSetImg: null,
        LAST_CALC_ZOOM: -1,
        LAST_LOAD_VECTOR_ZOOM_CHANGE: false,
        lastCollisionTestTime: 0,
        remove: function() {
            this.tileCache.clear();
            this.removeLabel(this.drawIndex)
        },
        removeLabel: function(i) {
            if (this.dataType === 2) {
                this.map._featureMgr.clearData(i);
                this.map._featureMgr.clearLabelOverlayData(i);
                this.map._featureMgr.clearLabelData(i);
                var T = new fu("onspotsdataremove");
                T.index = i;
                this.map.dispatchEvent(T);
                if (this.ontology && this.ontology instanceof dU) {
                    this.clearCache();
                    return
                }
                var e = new fu("onlayer_update");
                e.name = "na";
                this.map.fire(e)
            }
        },
        initDrawData: function() {
            this.drawIndex = this.zIndex;
            var e = {
                tileTypeName: this.tileType.getName(),
                dataType: this.dataType,
                png8: this.png8,
                clipTile: this.clipTile,
                boundary: this.boundary
            };
            if (this.ontology) {
                e.ontology = this.ontology
            }
            this.map._featureMgr.createLayer(this.drawIndex, e);
            this.dispatchEvent(new fu("oninitDrawData"))
        },
        destroyDrawData: function() {
            this.map._featureMgr.removeLayer(this.drawIndex);
            var i = new fu("onremoveLayerMask");
            i.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
            this.map.dispatchEvent(i)
        },
        setZIndex: function(jS) {
            jS = Math.abs(Math.floor(jS)) || 1;
            if (!jS || jS === this.zIndex) {
                return
            }
            var jP = this.map._featureMgr.result.bkData;
            var jO = this.map.tileMgr.tileLayers;
            function jU(jX) {
                var jW = null;
                for (var jV = 0; jV < jO.length; jV++) {
                    if (jO[jV].zIndex === jX) {
                        jW = jO[jV];
                        break
                    }
                }
                return jW
            }
            var T = [];
            var jR = [];
            var jT = this.zIndex;
            var i = jU(jS);
            if (jP[jS] && i) {
                T.push(i);
                jR.push(jP[jS]);
                this.setTargetZIndex(jS);
                jP[jS] = jP[jT];
                jP[jT] = null
            } else {
                this.setTargetZIndex(jS);
                jP[jS] = jP[jT];
                jP[jT] = null;
                this.map.dispatchEvent(new fu("onupdate"));
                return
            }
            var jQ = jS + 1;
            while (jQ) {
                var e = jU(jQ);
                if (jP[jQ] && e) {
                    T.push(e);
                    jR.push(jP[jQ]);
                    T.shift().setTargetZIndex(jQ);
                    jP[jQ] = jR.shift();
                    jQ += 1
                } else {
                    T.shift().setTargetZIndex(jQ);
                    jP[jQ] = jR.shift();
                    jQ = 0
                }
            }
            this.map.dispatchEvent(new fu("onupdate"))
        },
        setZIndexTop: function() {
            var e = this.map._featureMgr.result.bkData;
            e[e.length] = e[this.zIndex];
            e[this.zIndex] = null;
            this.setTargetZIndex(e.length - 1);
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        setUpLevel: function() {
            var e = this._getAdjoinZIndex("up");
            if (this.zIndex !== e) {
                this.setZIndex(e)
            }
        },
        setDownLevel: function() {
            var e = this._getAdjoinZIndex("down");
            if (this.zIndex !== e) {
                this.setZIndex(e)
            }
        },
        getTileKey: function(e, jO) {
            jO = jO || {};
            var i = typeof jO.useZoom === "number" ? jO.useZoom : e.useZoom;
            var T = e.style || this.mapStyleId || "default";
            return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        getTileRenderDataKey: function(i) {
            var T = i.col;
            var jO = i.zoom;
            var e = i.baseTileSize;
            T = eM.calcLoopParam(T, jO, e).col;
            return this.mapType + "_" + T + "_" + i.row + "_" + jO + "_" + i.useZoom
        },
        getTileUnits: function(e) {
            var jO = this.map;
            var T = d6[jO.getMapType()];
            var i = T.baseUnits * Math.pow(2, T.zoomLevelBase - e);
            return i
        },
        getTilesUrl: function(jP, jY, jZ) {
            var i = jP.x;
            var j0 = jP.y;
            var jV = jr("ditu", "normal");
            var jR = jV.ver;
            var jS = jV.udt;
            i = eM.calcLoopParam(i, jY, jZ).col;
            var jX = d6.B_NORMAL_MAP.vectorTileUrls;
            var jQ = Math.abs(i + j0) % jX.length;
            var jW = jX[jQ];
            if (window.offLineIPAddress) {
                jX = [window.offLineIPAddress + "pvd/"];
                jW = jX[0]
            }
            var T = "x=" + i + "&y=" + j0 + "&z=" + Math.floor(jY);
            var jU = this.devicePixelRatio > 1 ? "&scaler=2" : "";
            var jT = "&textimg=1";
            if (this.map.config.textRenderType === "canvas") {
                jT = "&textimg=0"
            }
            var jO = this.map.config.style;
            if (typeof jO === "string" && jO !== "default") {
                T += "&styleId=" + B.mapStyleNameIdPair[jO]
            }
            T += "&styles=pl" + jT + jU + "&v=" + jR + "&udt=" + jS + "&json=0";
            var e = jW + "?qt=vtile&param=" + window.encodeURIComponent(eF(T));
            return e
        },
        getRasterTilesUrl: function(T, jQ, jO) {
            var jP = d6[this.map.mapType];
            var i = this.map.config.style;
            var e = jP.tileUrls[Math.abs(jQ + T) % jP.tileUrls.length] + "?qt=tile&x=" + T + "&y=" + jQ + "&z=" + jO + ((i === "default" || typeof i !== "string") ? "" : ("&styleId=" + B.mapStyleNameIdPair[i])) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&p=1";
            e = e.replace(/-(\d+)/gi, "M$1");
            return e
        },
        getZoomState: function() {
            var T = this.map;
            var i = T.getZoom();
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState
        },
        releaseOutViewTileData: function(e) {
            var jP = this.map._workerMgr.releasePendingData(e);
            for (var jO = 0, T = jP.length; jO < T; jO++) {
                var jQ = this.getTileKey(jP[jO]);
                this.tileCache.removeData(jQ)
            }
        },
        loadLayerData: function(e, jO, i) {
            this.hasZoomChange = i;
            this.curViewTilesInfo = e;
            if (this.ontology instanceof dU) {
                this.loadTileData && this.loadTileData(e, jO);
                return
            }
            this.mapStyleId = this.map.getMapStyleId();
            this.releaseOutViewTileData(e);
            var T = this.getZoomState();
            if (this.dataType === hp) {
                if (jO) {
                    this.getVectorLayerDataFromCache(e, T)
                } else {
                    this.loadVectorLayerData(e)
                }
            } else {
                this.loadRasterLayerData(e, jO)
            }
        },
        getVectorLayerDataFromCache: function(jT, j3) {
            this.map.temp.isPermitSpotOver = false;
            this.tileLabels = [];
            var j5 = this.map._displayOptions;
            if (this.baseLayer === true) {
                var jX = this.map._customLabelMgr.virtualTiles.custom;
                if (jX && jX.label) {
                    this.tileLabels.push(jX.label)
                }
            }
            this.thumbCache = {};
            var j4 = -1;
            for (var j1 = 0, jY = jT.length; j1 < jY; j1++) {
                var j2 = jT[j1];
                var jP = j2.col;
                var jQ = j2.row;
                var T = j2.zoom;
                var jZ = this._getTileTexImgKey(j2);
                var jO = j2.useZoom;
                j4 = T;
                var jR = this.getTileKey(j2);
                var j7 = this.tileCache.getData(jR);
                if (j7 && j7.status === "ready") {
                    var j8 = j7;
                    this.map._featureMgr.setData(j7, this.drawIndex, 2);
                    if (j5.poi && j7.label) {
                        if (j7.label.status === "ready") {
                            j7.label.tileInfo = j7.tileInfo;
                            this.tileLabels.push(j7.label);
                            if (j7.label.textureSources && j7.label.textureSources[jO] && this.map._webglMapScene) {
                                var j6 = this.map._webglMapScene._painter;
                                if (!j6._labelTextureAtlasOffset[jZ]) {
                                    j6._addToAsyncJob(j7.label.textureSources[jO])
                                }
                            }
                        } else {
                            if (j7.label.status !== "processing") {
                                this.processLabelData(j7)
                            }
                        }
                    }
                } else {
                    var j0 = {
                        tileInfo: j2,
                        dataType: hp,
                        key: jR
                    };
                    this.map._featureMgr.setData(j0, this.drawIndex, 2);
                    if (this.useThumbData) {
                        this.setThumbData(jP, jQ, T, jO, j3)
                    }
                }
            }
            this.tileLabels.labelZoom = j4;
            this.updateLabels(j3);
            var jU = this.map.getZoom();
            var jS = Math.floor(jU);
            var jW = jU - jS;
            var jV = Math.floor(this.LAST_CALC_ZOOM);
            var e = this.LAST_CALC_ZOOM - jV;
            var j9 = false;
            if (this.hasZoomChange) {
                if (Math.abs(jU - this.LAST_CALC_ZOOM) >= 0.5) {
                    j9 = true
                } else {
                    if (jW < 0.5 && e >= 0.5) {
                        j9 = true
                    } else {
                        if (jW >= 0.5 && e < 0.5) {
                            j9 = true
                        }
                    }
                }
                if (j9) {
                    this.cacheDataCollideLabels(0)
                }
                this.LAST_CALC_ZOOM = jU
            } else {
                if (this.tileLabels.length > 0) {
                    this.cacheDataCollideLabels(eJ.Browser.ie ? 50 : 30)
                }
            }
        },
        loadVectorLayerData: function(jU) {
            this.map.temp.isPermitSpotOver = false;
            var jT = this;
            function jS(i, jV) {
                var jX = jT.tileCache.getData(jV);
                if (!jX) {
                    return
                }
                if (!i || i.error) {
                    i.event && bw.fetchDebug && bw.fetchDebug.sendError({
                        title: i.event.title,
                        msg: i.event.msg,
                        category: bw.fetchDebug.category.AJAX,
                        level: bw.fetchDebug.levels.ERROR,
                        url: i.event.title
                    });
                    var jW = new fu("ontileloaderror");
                    i = i || {};
                    jW.error = i.error || "";
                    jW.message = i.message || "";
                    jT.map.fire(jW);
                    jX.status = "init";
                    jX.reloadTimer = setTimeout(function() {
                        if (jX.retry < 3) {
                            jX.retry++;
                            jX.status = "loading";
                            jT.loadVectorTileData(i.tileInfo, jS)
                        } else {
                            jT.tileCache.removeData(jV)
                        }
                    }, 4000);
                    jT.map._featureMgr.clearData(jT.drawIndex);
                    jT._checkTilesLoaded();
                    jT.getVectorLayerDataFromCache(jT.curViewTilesInfo, jT.getZoomState());
                    return
                }
                if (jX.reloadTimer) {
                    clearTimeout(jX.reloadTimer);
                    jX.reloadTimer = null
                }
                jT.callbackDataQueue.push([i, jV]);
                if (jT.processDataTimer) {
                    return
                }
                jT.processDataTimer = setTimeout(function() {
                    while (jT.callbackDataQueue.length > 0) {
                        var jZ = jT.callbackDataQueue.shift();
                        jT.vectorTileDataCbk(jZ[0], jZ[1]);
                        jT._checkTilesLoaded()
                    }
                    jT.map._featureMgr.clearData(jT.drawIndex);
                    jT.getVectorLayerDataFromCache(jT.curViewTilesInfo, jT.getZoomState());
                    var jY = new fu("onrefresh");
                    jY.source = "webgllayer";
                    jT.map.dispatchEvent(jY);
                    jT.processDataTimer = null
                }, 200)
            }
            for (var jR = 0, jP = jU.length; jR < jP; jR++) {
                var T = jU[jR];
                var jQ = this.getTileKey(T);
                var e = this.tileCache.getData(jQ);
                if (!e) {
                    e = {
                        status: "init",
                        tileInfo: T,
                        dataType: hp,
                        key: jQ,
                        retry: 0
                    }
                }
                if (e.status !== "ready" && e.status !== "loading") {
                    this.numLoading++;
                    e.status = "loading";
                    this.tileCache.setData(jQ, e);
                    var jO = this.getProcessedLabelZoom(T);
                    if (jO) {
                        T.processedLabelZooms = jO
                    }
                    this.loadVectorTileData(T, jS)
                }
            }
        },
        setThumbData: function(i, jP, jO, e, T) {
            if (T === 1) {
                if (this._findParentZoomTile(i, jP, jO, e, 8) === false) {
                    this._findChildZoomTile(i, jP, jO, e, 3)
                }
            } else {
                if (T === -1) {
                    if (this._findChildZoomTile(i, jP, jO, e, 3) === false) {
                        this._findParentZoomTile(i, jP, jO, e, 8)
                    }
                }
            }
            this.map._featureMgr.sortThumbData(this.drawIndex)
        },
        _findParentZoomTile: function(jR, j0, jZ, jP, jU) {
            var jQ = d6[this.getMapType()];
            var T = jQ.minDataZoom;
            var e = jR;
            var jX = j0;
            var jV = jZ;
            var jW = jP;
            for (var jT = 1; jT <= jU; jT++) {
                var jO = this.tileType.getParentTile(e, jX, jV, jW, T);
                if (jO === null) {
                    continue
                }
                var jY = this.getTileKey(jO);
                var jS = this.tileCache.getData(jY);
                if (jS && jS.status === "ready") {
                    if (this.thumbCache[jY]) {
                        continue
                    }
                    this.map._featureMgr.setData(jS, this.drawIndex, 0);
                    this.thumbCache[jY] = true;
                    return true
                }
                e = jO.col;
                jX = jO.row;
                jV = jO.zoom;
                jW = jO.useZoom
            }
            return false
        },
        _findChildZoomTile: function(jS, jU, e, jP, j3) {
            var j1 = d6[this.getMapType()];
            var jX = j1.maxDataZoom;
            var jR = jS;
            var jT = jU;
            var jV = e;
            var jO = jP;
            var jQ = true;
            for (var j0 = 1; j0 <= j3; j0++) {
                var jY = false;
                var T = this.tileType.getChildTiles(jR, jT, jV, jO, jX, j0);
                if (!T) {
                    continue
                }
                for (var jZ = 0; jZ < T.length; jZ++) {
                    var jW = this.getTileKey(T[jZ]);
                    var j2 = this.tileCache.getData(jW);
                    if (j2 && j2.status === "ready") {
                        if (!this.thumbCache[jW]) {
                            this.map._featureMgr.setData(j2, this.drawIndex, 1);
                            this.thumbCache[jW] = true
                        }
                        jY = true
                    } else {
                        jQ = false
                    }
                }
                if (jY) {
                    break
                }
            }
            return jQ
        },
        loadVectorTileData: function(j1, j2) {
            var jP = j1.col;
            var jQ = j1.row;
            var e = j1.zoom;
            var jZ = j1.baseTileSize;
            var jO = this.getTilesUrl(new e4(jP,jQ), e, jZ);
            var jR = this.map.getPrivateRegions();
            if (!this.processData && this.map.getPrivateStatus() && jR) {
                var jX = j1.useZoom;
                var jW = this.tileType.getMercatorSize(jX);
                var jV = jP * jW;
                var jU = jQ * jW;
                var jY = new cr(jV + jW / 2,jU + jW / 2);
                var jT = new hF(new cr(jV,jU),new cr(jV + jW,jU + jW));
                var jS = fX() >= 1.5 ? 2 : 1;
                for (var j0 = 0; j0 < jR.length; j0++) {
                    if (jR[j0]instanceof cE) {
                        if (jR[j0].crossPoint(jY, jT, jX)) {
                            var j3 = {
                                x: jP,
                                y: jQ,
                                z: e,
                                mapZoom: jX,
                                scalerRadio: jS,
                                textimg: this.map.config.textRenderType === "canvas" ? 0 : 1
                            };
                            var T = jR[j0].tileUrlFunction(jO, j3);
                            if (T && T.url) {
                                jO = T.url;
                                T.header && (j1.header = T.header)
                            }
                            break
                        }
                    }
                }
            }
            if (!jO) {
                return
            }
            var j5 = this.getTileKey(j1);
            gX(this.map);
            if (!this.processData) {
                this.map._workerMgr.loadTileData(jO, j1, j5, j2);
                return
            }
            var j2 = "cbk" + j5.replace(/-/g, "_");
            var j4 = this;
            bw[j2] = function(i) {
                var j6 = (function(j7) {
                    return function() {
                        j7.tileInfo = j1;
                        var kd = j4.processData(j7);
                        if (!kd.road) {
                            return
                        }
                        var ka = {
                            tileInfo: j1,
                            renderData: {
                                base: []
                            },
                            status: "ready",
                            key: j5,
                            mapType: j4.mapType
                        };
                        var kg = [];
                        var kj = [];
                        for (var kc = 0; kc < kd.road.length; kc++) {
                            var kf = kd.road[kc];
                            var ke = -1;
                            for (var kb = 0; kb < kf.length; kb++) {
                                var kh = kf[kb];
                                var ki = [];
                                if (kg.length / 7 + kh[0].length / 2 > 65536) {
                                    ka.renderData.base.push({
                                        type: "line",
                                        data: [f6.toTileSolidLineVertices(kg, 4000), new Uint16Array(kj)]
                                    });
                                    kg = [];
                                    kj = []
                                }
                                for (var j9 = 0; j9 < kh[0].length; j9 += 2) {
                                    ki[ki.length] = [kh[0][j9], kh[0][j9 + 1]]
                                }
                                var j8 = kh[3];
                                f6.buildData(ki, kh[1], kh[2], kg, kj, j8, kh[4], kc + 20, false)
                            }
                            ka.renderData.base.push({
                                type: "line",
                                data: [f6.toTileSolidLineVertices(kg, 4000), new Uint16Array(kj)]
                            })
                        }
                        j4.tileCache.setData(j5, ka);
                        j4.map._featureMgr.clearData(j4.drawIndex);
                        j4.getVectorLayerDataFromCache(j4.curViewTilesInfo, j4.getZoomState());
                        j4.map.dispatchEvent(new fu("onrefresh"))
                    }
                }
                )(i);
                j4.map.jobScheduler.addJob(j6);
                delete bw[j2]
            }
            ;
            jO += "&fn=" + encodeURIComponent(fe + "." + j2);
            gw.load(jO)
        },
        vectorTileDataCbk: function(jO, jP) {
            var jT = new fu("ontileloaded");
            jT.perfStat = jO.perfStat || [];
            var e = this.map;
            e.fire(jT);
            var i = jO.tileInfo;
            var T = i.col;
            var jY = i.row;
            var jX = i.zoom;
            var jW = i.baseTileSize;
            var jR = this.tileCache.getData(jP);
            if (!jR) {
                return
            }
            if (!this.showLabel) {
                jO.label = null
            }
            jR.renderData = jO;
            jR.tileInfo = i;
            var jQ = eM.calcLoopParam(T, jX, jW);
            var jU = jQ.geoOffsetX;
            jR.tileInfo.loopOffsetX = jU;
            jR.status = "ready";
            jR.mapType = this.mapType;
            this.tileCache.setData(jP, jR);
            jR.label = jO.label;
            jO.label = null;
            if (jO.indoorData && e._indoorMgr) {
                e._indoorMgr.setData(jO.indoorData)
            }
            var jS = "id_" + T + "_" + jY + "_" + jX;
            if (!this.curViewTilesInfo[jS]) {
                e.fire(new fu("ontilenotinview"));
                return
            }
            var jV = e._displayOptions;
            if (jV.poi) {
                this.processLabelData(jR)
            }
            if (jO.indoorData && e._indoorMgr && e._indoorMgr.currentUid) {
                this._refreshIndoorData(e._indoorMgr.currentUid, e._indoorMgr.currentFloor)
            }
        },
        _refreshIndoorData: function(jW, jV) {
            var jY = this.map._indoorMgr.getIndoorData(jW);
            var j1 = jY.tileKeys;
            var jZ = Math.floor(this.map.getZoom());
            for (var jT = 0; jT < j1.length; jT++) {
                var jQ = j1[jT];
                var jS = this.tileCache.getData(jQ);
                if (!jS) {
                    continue
                }
                var j0 = jS.renderData;
                j0.indoorBase = [];
                j0.indoorBaseContour = [];
                j0.indoorBorder3D = [];
                j0.indoorArea3D = [];
                jS.label.indoorLabel = [];
                this.labelProcessor.clearCollisionCache(jS.label);
                for (var jU in j0.indoorData) {
                    if (jU === "tileInfo") {
                        continue
                    }
                    var e = j0.indoorData[jU];
                    var jP = e.defaultFloor;
                    if (jU === jW) {
                        jP = jV;
                        e.currentFloor = jV
                    }
                    if (e.floors[jP]) {
                        if (e.floors[jP].base) {
                            for (var jR = 0; jR < e.floors[jP].base.length; jR++) {
                                j0.indoorBase.push(e.floors[jP].base[jR])
                            }
                        }
                        if (e.floors[jP].contour) {
                            for (var jR = 0; jR < e.floors[jP].contour.length; jR++) {
                                j0.indoorBaseContour.push(e.floors[jP].contour[jR])
                            }
                        }
                        if (e.floors[jP].indoorBorder3D) {
                            j0.indoorBorder3D.push(e.floors[jP].indoorBorder3D)
                        }
                        if (e.floors[jP].area3D) {
                            j0.indoorArea3D.push(e.floors[jP].area3D)
                        }
                        if (e.floors[jP].pois) {
                            jS.label.indoorLabel = jS.label.indoorLabel.concat(e.floors[jP].pois)
                        }
                    }
                }
                this.updateAllIconsTextureCoords(jS);
                var jX = this;
                this.labelProcessor.loadIconImages(jS, function(i) {
                    jX.updateAllIconsTextureCoords(i)
                }, "indoor");
                var jO = jQ.split("_");
                var T = parseInt(jO[jO.length - 1], 10);
                if (T !== jZ) {
                    continue
                }
                jX.map._featureMgr.setData(jS, this.drawIndex, 2)
            }
            this.dataBackCollideLabels();
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        _removeIndoorData: function(i) {
            if (!i.indoorData) {
                return
            }
            for (var e in i.indoorData) {
                if (e === "tileInfo") {
                    continue
                }
                this.map._indoorMgr.removeData(e, i.key)
            }
        },
        getProcessedLabelZoom: function(jO) {
            var jP = jJ.baseZoomInfo[jO.zoom];
            if (!jP) {
                return false
            }
            var T = [];
            for (var jQ = 0; jQ < jP.length; jQ++) {
                var jR = this.getTileKey(jO, {
                    useZoom: jP[jQ]
                });
                var e = this.tileCache.getData(jR);
                if (e && e.status === "ready" && e.label && e.label.status === "ready") {
                    T.push(jP[jQ])
                }
            }
            if (T.length) {
                return T
            } else {
                return false
            }
        },
        getSameZoomDataFromCache: function(T) {
            var jO = jJ.baseZoomInfo[T.zoom];
            for (var jP = 0; jP < jO.length; jP++) {
                var jQ = this.getTileKey(T, {
                    useZoom: jO[jP]
                });
                if (T.useZoom === jO[jP]) {
                    continue
                }
                var e = this.tileCache.getData(jQ);
                if (e && e.status === "ready" && e.label && e.label.status === "ready") {
                    return e
                }
            }
            return false
        },
        hasSameLabelData: function(jO, T) {
            for (var e = 0; e < T.length; e++) {
                if (T[e].key === jO) {
                    return true
                }
            }
            return false
        },
        getDataByFloorName: function(T, jO) {
            for (var e = 0; e < T.length; e++) {
                if (T[e].floorName === jO) {
                    return T[e]
                }
            }
            return null
        },
        mergeIndoorLabelData: function(jT, e) {
            for (var jR in jT) {
                if (jR === "tileInfo") {
                    continue
                }
                if (e[jR]) {
                    var T = jT[jR].floors;
                    var jU = e[jR].floors;
                    for (var jP = 0; jP < T.length; jP++) {
                        var jO = T[jP];
                        var jS = jO.floorName;
                        var jQ = this.getDataByFloorName(jU, jS);
                        if (jQ) {
                            if (jQ.pois) {
                                jQ.pois = jQ.pois.concat(jO.pois);
                                jO.pois = jQ.pois
                            } else {
                                jQ.pois = jO.pois
                            }
                        }
                    }
                }
            }
        },
        mergeSameZoomLabelData: function(jR) {
            var jP = jR.label;
            if (!jP) {
                return
            }
            var e = jR.tileInfo;
            var jQ = this.getSameZoomDataFromCache(e);
            if (!jQ) {
                return
            }
            var jO = jQ.label;
            if (!jO) {
                return
            }
            for (var T = 0; T < jP.fixedLabel.length; T++) {
                if (!this.hasSameLabelData(jP.fixedLabel[T].key, jO.fixedLabel)) {
                    jO.hasNewData = true;
                    jO.fixedLabel.push(jP.fixedLabel[T])
                }
            }
            for (var T = 0; T < jP.lineLabel.length; T++) {
                if (!this.hasSameLabelData(jP.lineLabel[T].key, jO.lineLabel)) {
                    jO.hasNewData = true;
                    jO.lineLabel.push(jP.lineLabel[T])
                }
            }
            for (var T = 0; T < jP.indoorLabel.length; T++) {
                if (!this.hasSameLabelData(jP.indoorLabel[T].key, jO.indoorLabel)) {
                    jO.hasNewData = true;
                    jO.indoorLabel.push(jP.indoorLabel[T])
                }
            }
            jR.label = jO;
            if (jQ.renderData.indoorData && jR.renderData.indoorData) {
                this.mergeIndoorLabelData(jR.renderData.indoorData, jQ.renderData.indoorData)
            }
        },
        processLabelData: function(jQ) {
            if (!jQ.label) {
                return
            }
            if (jQ.label.status === "processing") {
                return
            }
            jQ.label.status = "processing";
            var jO = this;
            jO.updateAllIconsTextureCoords(jQ);
            this.labelProcessor.loadIconImages(jQ, function(jR) {
                jO.updateAllIconsTextureCoords(jR)
            });
            if (this.map.config.textRenderType === "canvas") {
                var e = this.labelProcessor.drawLabelsOnCanvas(jQ, function(jT, jV) {
                    var jS = jQ.tileInfo;
                    var jU = jO.map.config.mapStyleId;
                    if (!bw["customStyleInfo_" + jU]) {
                        jO.mergeSameZoomLabelData(jQ)
                    }
                    if (jT) {
                        if (!jQ.label.textureHeights) {
                            jQ.label.textureHeights = []
                        }
                        jQ.label.textureHeights[jS.useZoom] = jT.height
                    }
                    if (jV) {
                        if (!jQ.label.indoorTextureHeights) {
                            jQ.label.indoorTextureHeights = []
                        }
                        jQ.label.indoorTextureHeights[jS.useZoom] = jV.height
                    }
                    var jR = jO._getTileTexImgKey(jS);
                    jO._doWorkAfterLabelImageLoad(jQ, jT, jV, jR)
                });
                return
            }
            var T = jQ.label.textImageBitmap || jQ.label.textImgStr;
            var jP = jQ.label.indoorTextImageBitmap || jQ.label.indoorTextImgStr;
            this.labelProcessor.loadImgByStr(T, jP, function i(jW, jU) {
                var jT = jQ.label.textureHeight;
                var jX = jQ.label.indoorTextureHeight;
                jQ.label.textureHeight = undefined;
                jQ.label.indoorTextureHeight = undefined;
                var jS = jQ.tileInfo;
                jO.mergeSameZoomLabelData(jQ);
                var jV = jQ.label;
                jV.textImgStr = "";
                jV.indoorTextImgStr && (jV.indoorTextImgStr = "");
                if (!jV.textureHeights) {
                    jV.textureHeights = []
                }
                jV.textureHeights[jS.useZoom] = jT;
                if (!jV.indoorTextureHeights) {
                    jV.indoorTextureHeights = []
                }
                jV.indoorTextureHeights[jS.useZoom] = jX;
                var jR = jO._getTileTexImgKey(jS);
                jO._doWorkAfterLabelImageLoad(jQ, jW, jU, jR)
            })
        },
        _getTileTexImgKey: function(i) {
            var T = i.style || this.mapStyleId || "default";
            var e = T + "_" + i.col + "_" + i.row + "_" + i.zoom;
            if (this.map.config.textRenderType === "canvas") {
                e += "_" + i.useZoom
            }
            return e
        },
        _doWorkAfterLabelImageLoad: function(jS, jQ, jO, i) {
            var jR = this;
            var jP = jS.label;
            jP.tileInfo = jS.tileInfo;
            jP.status = "ready";
            if (jQ || jO) {
                var e = jP.tileInfo;
                if (jQ) {
                    jQ.id = i;
                    if (!jP.textureSources) {
                        jP.textureSources = []
                    }
                    jP.textureSources[e.useZoom] = jQ
                }
                if (jO) {
                    jO.id = i + "_indoor";
                    if (!jP.indoorTextureSources) {
                        jP.indoorTextureSources = []
                    }
                    jP.indoorTextureSources[e.useZoom] = jO
                }
                if (jR.map._webglMapScene) {
                    var T = jR.map._webglMapScene._painter;
                    if (jQ) {
                        T._addToAsyncJob(jP.textureSources[e.useZoom])
                    }
                }
            }
            if (jS.custom !== true) {
                jR.tileLabels.push(jP)
            } else {
                jR.updateAllIconsTextureCoords(jS);
                this.labelProcessor.loadIconImages(jS, function(jT) {
                    jR.updateAllIconsTextureCoords(jS)
                }, true)
            }
            if (jR.collisionTimer) {
                return
            }
            jR.collisionTimer = setTimeout(function() {
                jR.dataBackCollideLabels();
                jR.collisionTimer = null
            }, 300)
        },
        _updateIconTextureCoords: function(jS, T) {
            if (!jS) {
                return
            }
            var jR = this.map;
            for (var jO = 0; jO < jS.length; jO++) {
                var jQ = jS[jO];
                if (!jQ.iconPos) {
                    continue
                }
                if (jR._webglMapScene) {
                    var e = jR._webglMapScene._painter;
                    var jP = T + "_" + jQ.iconPos.iconType;
                    jQ.iconPos.texcoord = e._iconTextureAtlasCoords[jP] || null
                }
            }
        },
        updateAllIconsTextureCoords: function(jP) {
            if (this.map.viewAnimationTime) {
                return
            }
            if (jP) {
                if (jP.label) {
                    var i = jP.tileInfo.style;
                    this._updateIconTextureCoords(jP.label.fixedLabel, i);
                    this._updateIconTextureCoords(jP.label.indoorLabel, i)
                }
            } else {
                var jO = this.tileCache.getAllData();
                for (var T in jO) {
                    var e = jO[T].data;
                    if (e.status === "ready" && e.label) {
                        var i = e.tileInfo.style;
                        this._updateIconTextureCoords(e.label.fixedLabel, i);
                        this._updateIconTextureCoords(e.label.indoorLabel, i)
                    }
                }
            }
            this.updateLabels();
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        cacheDataCollideLabels: function(T) {
            var jP = this;
            var i = this.map._featureMgr;
            function jO() {
                if (jP && !jP.map.tileMgr.isExitTileLayer(jP)) {
                    return
                }
                jP.cacheLabelTimer = null;
                var jQ;
                var jR = jP.map.getTilt();
                var jT = jP.map.getHeading() % 360;
                if (jP.tileLabels.length === 0 || (jP.tileLabels.length === 1 && jP.tileLabels[0].tileInfo.zoom === 0)) {
                    jQ = i.getLabelData(jP.drawIndex);
                    if (jQ.length > 0) {
                        jQ = jP.labelProcessor.collisionTest(jQ, -1)
                    }
                } else {
                    if (jR || jT) {
                        if (this._collisionTimer) {
                            if (!jR) {
                                clearTimeout(this._collisionTimer)
                            } else {
                                if (Date.now() - jP.lastCollisionTestTime > 500) {
                                    jP.lastCollisionTestTime = Date.now()
                                } else {
                                    clearTimeout(this._collisionTimer)
                                }
                            }
                        }
                        this._collisionTimer = setTimeout(function() {
                            if (jP && !jP.map.tileMgr.isExitTileLayer(jP)) {
                                jP._collisionTimer = null;
                                return
                            }
                            jQ = jP.labelProcessor.collisionTest(jP.tileLabels);
                            if (jQ) {
                                if (jP._isInnerLayer && jP.map.stencil && jP.map.stencil.isPoiMask) {
                                    var jU = jP.isPoiInPolygon(jQ);
                                    i.setLabelData(jU, jP.drawIndex)
                                } else {
                                    i.setLabelData(jQ, jP.drawIndex)
                                }
                            }
                            jP.updateLabels();
                            jP.map.dispatchEvent(new fu("onrefresh"));
                            jP._collisionTimer = null
                        }, 60);
                        return
                    } else {
                        jQ = jP.labelProcessor.getCachedLabels(jP.tileLabels)
                    }
                }
                if (jQ) {
                    if (jP._isInnerLayer && jP.map.stencil && jP.map.stencil.isPoiMask) {
                        var jS = jP.isPoiInPolygon(jQ);
                        i.setLabelData(jS, jP.drawIndex)
                    } else {
                        i.setLabelData(jQ, jP.drawIndex)
                    }
                }
                jP.updateLabels();
                jP.map.dispatchEvent(new fu("onrefresh"))
            }
            if (!T) {
                clearTimeout(jP.cacheLabelTimer);
                jO()
            } else {
                if (jP.cacheLabelTimer) {
                    return
                }
                jP.cacheLabelTimer = setTimeout(function e() {
                    jO()
                }, T)
            }
        },
        isPoiInPolygon: function(T) {
            var j7 = this;
            var jX = j7.map.stencil;
            var jP = j7.map._featureMgr.result.eleData[9];
            var jO = [];
            for (var j2 = 0; j2 < jP.length; j2++) {
                var jY = jP[j2].overlay.points;
                jO = jO.concat(jY)
            }
            for (var j5 = 0; j5 < T.length; j5++) {
                var jR = [];
                var jQ = [];
                for (var j3 = 0; j3 < T[j5].fixedLabel.length; j3++) {
                    var jW = T[j5].fixedLabel[j3];
                    var j0 = jW.pt;
                    if (jW.pt && ar(j0, jO)) {
                        jR.push(jW)
                    } else {
                        jQ.push(jW)
                    }
                }
                if (jX.showRegion === "inside") {
                    T[j5].fixedLabel = jR
                } else {
                    if (jX.showRegion === "outside") {
                        T[j5].fixedLabel = jQ
                    }
                }
                var j1 = [];
                var jT = [];
                for (var j2 = 0; j2 < T[j5].lineLabel.length; j2++) {
                    var j4 = T[j5].lineLabel[j2];
                    var e = j4.pt;
                    if (e && ar(e, jO)) {
                        j1.push(j4)
                    } else {
                        jT.push(j4)
                    }
                }
                if (jX.showRegion === "inside") {
                    T[j5].lineLabel = j1
                } else {
                    if (jX.showRegion === "outside") {
                        T[j5].lineLabel = jT
                    }
                }
                var jZ = [];
                var jV = [];
                for (var jU = 0; jU < T[j5].indoorLabel.length; jU++) {
                    var j6 = T[j5].indoorLabel[jU];
                    var jS = j6.pt;
                    if (jS && ar(jS, jO)) {
                        jZ.push(j6)
                    } else {
                        jV.push(j6)
                    }
                }
                if (jX.showRegion === "inside") {
                    T[j5].indoorLabel = jZ
                } else {
                    if (jX.showRegion === "outside") {
                        T[j5].indoorLabel = jV
                    }
                }
            }
            return T
        },
        dataBackCollideLabels: function() {
            var T = this;
            if (T && !T.map.tileMgr.isExitTileLayer(T)) {
                return
            }
            if (!T.tileLabels || (T.tileLabels && T.tileLabels.length === 0)) {
                return
            }
            var e;
            T.labelProcessor.calcLabelsCollision(T.tileLabels);
            e = T.labelProcessor.getCachedLabels(T.tileLabels);
            if (e) {
                if (T._isInnerLayer && T.map.stencil && T.map.stencil.isPoiMask) {
                    var i = T.isPoiInPolygon(e);
                    T.map._featureMgr.setLabelData(i, T.drawIndex)
                } else {
                    T.map._featureMgr.setLabelData(e, T.drawIndex)
                }
            }
            T.updateLabels();
            T.map.dispatchEvent(new fu("onupdate"));
            if (bS()) {
                this.labelProcessor._refreshSpotData()
            }
        },
        updateLabels: function(jP) {
            var jQ = this.map;
            var i = jQ._featureMgr;
            var T = i.getLabelData(this.drawIndex);
            if (T.length > 0) {
                var jO = jQ.getZoom();
                if (T.labelZoom - jO < 3) {
                    this.labelProcessor.updateLabels(T);
                    var e = this.labelProcessor.fixDataFormat(T);
                    i.setOverlayData(e[0], 2, this.drawIndex);
                    i.setOverlayData(e[1], 3, this.drawIndex);
                    i.setOverlayData(e[2], 4, this.drawIndex)
                } else {
                    i.clearLabelOverlayData(this.drawIndex)
                }
                jQ.temp.isPermitSpotOver = false;
                this.labelProcessor.curSpotAdded = false
            }
        },
        loadRasterLayerData: function(jT, jO) {
            this.thumbCache = {};
            var jU = this.getZoomState();
            if (jO) {
                for (var jR = 0, jP = jT.length; jR < jP; jR++) {
                    var T = jT[jR];
                    var jQ = this.getTileKey(T);
                    var e = this.tileCache.getData(jQ);
                    if (e && e.status === "ready") {
                        if (T.tileTypeName === "xyz") {
                            e.tileInfo = T
                        }
                        this.map._featureMgr.setData(e, this.drawIndex, 2)
                    } else {
                        if (this.useThumbData) {
                            this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jU)
                        }
                    }
                }
                return
            }
            for (var jR = 0, jP = jT.length; jR < jP; jR++) {
                var T = jT[jR];
                var jQ = this.getTileKey(T);
                var e = this.tileCache.getData(jQ);
                if (!e) {
                    this.tileCache.setData(jQ, {});
                    var jS = this;
                    this.loadRasterTileData(T, function(i, jV) {
                        jS.rasterTileDataCbk(i, jV)
                    })
                }
            }
        },
        loadRasterTileData: function(i, e) {
            var T = new Image();
            var jP = i.col;
            var jS = i.row;
            var jQ = i.zoom;
            var jO = this.getTilesUrl(new e4(jP,jS), jQ, i);
            if (!jO) {
                return
            }
            var jR = this.getTileKey(i);
            if (i.combine) {
                T = jO;
                T.tileInfo = i;
                if (T) {
                    e && e(T, jR)
                } else {
                    e && e(null, jR)
                }
            } else {
                T = this.loadTileImage(jO, jR, e)
            }
            T.tileInfo = i
        },
        loadTileImage: function(jO, T, e) {
            var i = new Image();
            i.crossOrigin = "anonymous";
            i.onload = function() {
                e && e(this, T)
            }
            ;
            i.onerror = function() {
                bw.fetchDebug && bw.fetchDebug.sendError({
                    title: jO,
                    msg: jO,
                    category: bw.fetchDebug.category.RESOURCE,
                    level: bw.fetchDebug.levels.ERROR,
                    url: jO
                });
                e && e(null, T)
            }
            ;
            i.src = jO;
            return i
        },
        rasterTileDataCbk: function(jQ, jO) {
            if (!jQ || typeof jQ === "string") {
                this.tileCache.removeData(jO);
                return
            }
            var i = jQ.tileInfo;
            var T = i.col;
            var jW = i.row;
            var jV = i.zoom;
            var e = this.tileCache.getData(jO);
            if (!e) {
                return
            }
            var jR = "id_" + T + "_" + jW + "_" + jV;
            var jU = this;
            e.dataType = gp;
            e.tileInfo = i;
            if (i.tileTypeName === "xyz") {
                var jT = i.tileSize;
                e.textureSource = jQ;
                e.renderData = {
                    vertexAll: [0, 0, 0, 0, 0, jT, 0, 0, 1, 0, jT, jT, 0, 1, 1, 0, 0, 0, 0, 0, jT, jT, 0, 1, 1, 0, jT, 0, 0, 1]
                };
                jU.setRasterTileData(jO, e, jR)
            } else {
                e.textureSource = jQ;
                var jP = eM.calcLoopParam(T, jV);
                var jS = jP.geoOffsetX;
                jQ.tileInfo.loopOffsetX = jS;
                e.renderData = {
                    vertexAll: [0, 0, 0, 0, 0, 256, 0, 0, 1, 0, 256, 256, 0, 1, 1, 0, 0, 0, 0, 0, 256, 256, 0, 1, 1, 0, 256, 0, 0, 1]
                };
                this.setRasterTileData(jO, e, jR)
            }
        },
        setRasterTileData: function(jP, e, jO) {
            e.status = "ready";
            this.tileCache.setData(jP, e);
            var T = false;
            if (this.curViewTilesInfo[jO]) {
                e.dataType = gp;
                e.png8 = this.png8 || false;
                this.map._featureMgr.setData(e, this.drawIndex, 2);
                T = true
            }
            if (T) {
                var i = new fu("onrefresh");
                i.source = "webgllayer";
                this.map.dispatchEvent(i)
            }
        },
        _checkTilesLoaded: function() {
            this.numLoading--;
            if (this.map.firstTileLoad === false) {
                this.map.dispatchEvent(new fu("onfirsttilesloaded"));
                this.map.firstTileLoad = true
            }
            var e = this;
            if (this.numLoading === 0) {
                if (this._checkLoadedTimer) {
                    clearTimeout(this._checkLoadedTimer);
                    this._checkLoadedTimer = null
                }
                this._checkLoadedTimer = setTimeout(function() {
                    if (e.numLoading === 0) {
                        e.map.dispatchEvent(new fu("ontilesloaded"))
                    }
                    e._checkLoadedTimer = null
                }, 60)
            }
        },
        isClickableLabel: function(e) {
            if (e.isDel) {
                return false
            }
            if (e.zoom > 9 && !e.guid) {
                return false
            }
            if (e.zoom <= 9 && !e.name && !e.guid) {
                return false
            }
            return true
        }
    };
    var aS = 5;
    var iJ = 4;
    var gi = 3;
    var M = 2;
    var ed = 1;
    var hb = 0;
    function av(e) {
        this._ratio = fX();
        this._iconCache = {};
        this._map = e;
        this._drawingCanvasPool = [];
        this._drawingCanvasHeight = 4096;
        this._bufferSpan = [5, 5]
    }
    eJ.extend(av.prototype, {
        _loadIcons: function(T, jU, jQ) {
            var jO = 0;
            var jR = this;
            var jP = this._map.config.style;
            for (var jS in T) {
                jO++;
                var jT = new Image();
                jT.id = jS;
                jT.crossOrigin = "anonymous";
                jT.onload = function() {
                    jR._iconCache[this.id].loaded = true;
                    jO--;
                    if (jO === 0) {
                        jU()
                    }
                    this.onload = null
                }
                ;
                jT.onerror = function() {
                    jR._iconCache[this.id] = null;
                    jO--;
                    if (jO === 0) {
                        jU()
                    }
                    this.onerror = null
                }
                ;
                if (!jQ) {
                    var e = B.getIconSetPath(jP) + jS + ".png";
                    var i = bx();
                    if (i && i.udt) {
                        e += "?udt=" + i.udt
                    }
                } else {
                    var e = jS
                }
                jT.src = e;
                this._iconCache[jS] = {
                    loaded: false,
                    image: jT
                }
            }
        },
        _getEmptyDrawingCanvas: function() {
            for (var T = 0; T < this._drawingCanvasPool.length; T++) {
                if (this._drawingCanvasPool[T]._free === true) {
                    this._drawingCanvasPool[T]._free = false;
                    return this._drawingCanvasPool[T]
                }
            }
            var e = this._createNewDrawingCanvas();
            this._drawingCanvasPool.push(e);
            e._free = false;
            return e
        },
        _createNewDrawingCanvas: function() {
            var e = bT("canvas");
            e.width = 512;
            e.height = this._drawingCanvasHeight;
            e._free = true;
            e._id = bw.getGUID();
            var i = e.getContext("2d");
            i.textBaseline = "bottom";
            i.lineJoin = "round";
            return e
        },
        drawLabelsOnCanvas: function(j6, jO) {
            var jW = j6.label.fixedLabel.slice(0);
            var j2 = j6.label.lineLabel.slice(0);
            var T = j6.label.indoorLabel.slice(0);
            if (jW.length === 0 && j2.length === 0 && T.length === 0) {
                jO();
                return
            }
            var jR = function(kb, i) {
                return kb.styleId - i.styleId
            };
            jW.sort(jR);
            j2.sort(jR);
            T.sort(jR);
            var j5 = {};
            var e = this._getEmptyDrawingCanvas();
            var j1 = e.getContext("2d");
            j1.clearRect(0, 0, e.width, e.height);
            var j9 = 0;
            var jX = null;
            var jQ = 0;
            if (jW.length > 0) {
                while (jQ < jW.length && !jW[jQ].styleText[0]) {
                    jQ++
                }
                if (jW[jQ] && jW[jQ].styleText[0]) {
                    jX = jW[jQ].styleText[0].fontSize + jW[jQ].styleText[0].haloSize * 2
                }
            }
            if (jX === null && T.length > 0) {
                jQ = 0;
                while (jQ < T.length && !T[jQ].styleText[0]) {
                    jQ++
                }
                if (T[jQ] && T[jQ].styleText[0]) {
                    jX = T[jQ].styleText[0].fontSize + T[jQ].styleText[0].haloSize * 2
                }
            }
            if (jX === null && j2.length > 0) {
                jQ = 0;
                while (jQ < j2.length && !j2[jQ].styleText[0]) {
                    jQ++
                }
                if (j2[jQ] && j2[jQ].styleText[0]) {
                    jX = j2[jQ].styleText[0].fontSize + j2[jQ].styleText[0].haloSize * 2
                }
            }
            if (jX === null || isNaN(jX)) {
                jO();
                return
            }
            var jT = 0;
            var jS = jX;
            jS += this._bufferSpan[1];
            var jZ = {};
            var ka = 0;
            var j0 = [];
            for (var j4 = 0; j4 < jW.length; j4++) {
                var jV = jW[j4];
                var jY = jV.name;
                var j3 = jV.styleText;
                if (!jY || j3.length === 0) {
                    continue
                }
                var jP = jV.icon;
                if (jV.textOnIcon && (!this._iconCache[jP] || this._iconCache[jP].loaded === false)) {
                    j0.push(jV);
                    ka++;
                    if (!jZ[jP]) {
                        jZ[jP] = true
                    }
                    continue
                }
                var j7 = this._drawEachText(j1, jV, j9, jT, jS, jX, j5);
                if (!j7) {
                    continue
                }
                jT = j7.curX;
                jS = j7.curY;
                jX = j7.curLineHeight;
                j9 = j7.styleId
            }
            var j7 = this._drawEachTypeOfLabels(j1, T, j9, jT, jS, jX, j5);
            j9 = j7.curStyleId;
            jT = j7.curX;
            jS = j7.curY;
            jX = j7.curLineHeight;
            var j7 = this._drawEachTypeOfLabels(j1, j2, j9, jT, jS, jX, j5);
            j9 = j7.curStyleId;
            jT = j7.curX;
            jS = j7.curY;
            jX = j7.curLineHeight;
            if (ka > 0) {
                var j8 = this;
                this._loadIcons(jZ, function() {
                    j7 = j8._drawEachTypeOfLabels(j1, j0, j9, jT, jS, jX, j5);
                    j9 = j7.curStyleId;
                    jT = j7.curX;
                    jS = j7.curY;
                    jX = j7.curLineHeight;
                    var i = j8._generateEachLabelCanvas(e, jS, jW, j2, T, j6);
                    jO(i[0], i[1])
                });
                return
            }
            var jU = this._generateEachLabelCanvas(e, jS, jW, j2, T, j6);
            jO(jU[0], jU[1])
        },
        drawCustomLabelsOnCanvas: function(jR, jY) {
            if (jR.length === 0) {
                jY();
                return
            }
            var T = 0 + this._bufferSpan[0];
            var e = (jR[0].style.fontSize + (jR[0].style.haloSize || 0) * 2) + this._bufferSpan[1] || 0;
            var jO = e - this._bufferSpan[1];
            var jT = this._getEmptyDrawingCanvas();
            var j0 = jT.getContext("2d");
            j0.clearRect(0, 0, jT.width, jT.height);
            var jU = {};
            var jW = -1;
            var jP = {};
            var jX = false;
            for (var jQ = 0; jQ < jR.length; jQ++) {
                var jS = null;
                if (jR[jQ].textOnIcon && jR[jQ].icon) {
                    jS = jR[jQ].icon
                }
                if (jS && !jP[jS] && (!this._iconCache[jS] || this._iconCache[jS].loaded === false)) {
                    jP[jS] = true;
                    jX = true
                }
            }
            var jZ = this;
            if (jX) {
                this._loadIcons(jP, function() {
                    jV()
                }, true)
            } else {
                jV()
            }
            function jV() {
                for (var j3 = 0; j3 < jR.length; j3++) {
                    if (!jR[j3].name) {
                        continue
                    }
                    var j4 = jZ._drawEachText(j0, jR[j3], jW, T, e, jO, jU);
                    if (!j4) {
                        continue
                    }
                    T = j4.curX + jZ._bufferSpan[0];
                    e = j4.curY;
                    jO = j4.curLineHeight;
                    jW = j4.styleId
                }
                var j2 = e;
                var j1 = jZ._copyToNewCanvas(jT, j2 + jZ._bufferSpan[0]);
                for (var j3 = 0; j3 < jR.length; j3++) {
                    if (!jR[j3].name && jR[j3].style.iconSize) {
                        jZ._addFixedLabelBounds(jR[j3]);
                        continue
                    }
                    if (!jR[j3].textSize) {
                        continue
                    }
                    jZ._updateFixedLabelCoords(jR[j3], j2 + jZ._bufferSpan[0]);
                    jZ._addFixedLabelBounds(jR[j3])
                }
                jY(j1)
            }
        },
        _drawEachTypeOfLabels: function(jX, jR, jV, jO, T, jP, jT) {
            for (var jQ = 0; jQ < jR.length; jQ++) {
                var jS = jR[jQ];
                var jW = jS.name;
                var e = jS.styleText;
                if (!jW || e.length === 0) {
                    continue
                }
                var jU = this._drawEachText(jX, jS, jV, jO, T, jP, jT);
                if (!jU) {
                    continue
                }
                jO = jU.curX + this._bufferSpan[0];
                T = jU.curY;
                jP = jU.curLineHeight;
                jV = jU.styleId;
                if (jU.curY > this._drawingCanvasHeight) {
                    return {
                        curX: jO,
                        curY: T,
                        curLineHeight: jP,
                        curStyleId: jV
                    }
                }
            }
            return {
                curX: jO,
                curY: T,
                curLineHeight: jP,
                curStyleId: jV
            }
        },
        _drawIndoorTextLabelOnCanvas: function(jP) {
            var e = this._getEmptyDrawingCanvas();
            var jW = e.getContext("2d");
            jW.clearRect(0, 0, e.width, e.height);
            var j4 = 0;
            var jV = null;
            var jU = 0;
            var jS;
            var j1 = {};
            var j0 = [];
            for (var jQ in jP) {
                if (jQ === "tileInfo") {
                    continue
                }
                var jO = jP[jQ];
                var jZ = jO.defaultFloor;
                var jT = jO.floors;
                for (var jY = 0; jY < jT.length; jY++) {
                    if (jY === jZ) {
                        continue
                    }
                    var j2 = jT[jY];
                    if (!j2.pois) {
                        continue
                    }
                    var jR = j2.pois;
                    for (var jX = 0; jX < jR.length; jX++) {
                        if (jV === null && jR[jX].styleText[0]) {
                            jV = jR[jX].styleText[0].fontSize + jR[jX].styleText[0].haloSize * 2;
                            jS = jV
                        }
                        j0.push(jR[jX])
                    }
                }
            }
            if (jV === null) {
                return null
            }
            j0.sort(function(j5, i) {
                return i.rank - j5.rank || j5.styleId - i.styleId
            });
            var j3 = this._drawEachTypeOfLabels(jW, j0, j4, jU, jS, jV, j1);
            j4 = j3.curStyleId;
            jU = j3.curX;
            jS = j3.curY;
            jV = j3.curLineHeight;
            var T = this._copyToNewCanvas(e, jS);
            return T
        },
        _updateIndoorLabelsCoords: function(jV, jW) {
            for (var jU in jV) {
                if (jU === "tileInfo") {
                    continue
                }
                var e = jV[jU];
                var jQ = e.defaultFloor;
                var jR = e.floors;
                for (var jS = 0; jS < jR.length; jS++) {
                    if (jS === jQ) {
                        continue
                    }
                    var T = jR[jS];
                    if (!T.pois) {
                        continue
                    }
                    var jP = T.pois;
                    for (var jO = 0; jO < jP.length; jO++) {
                        var jT = jP[jO];
                        if (jT.name && (!jT.textSize || jT.textSize.length === 0)) {
                            jP.splice(jO, 1);
                            jO--;
                            continue
                        }
                        this._updateFixedLabelCoords(jT, jW);
                        this._addFixedLabelBounds(jT)
                    }
                }
            }
        },
        _generateEachLabelCanvas: function(jR, jQ, jS, e, jU, T) {
            jQ = Math.min(jQ, this._drawingCanvasHeight);
            var jT = this._copyToNewCanvas(jR, jQ);
            var jO = null;
            if (T.renderData.indoorData) {
                jO = this._drawIndoorTextLabelOnCanvas(T.renderData.indoorData);
                if (jO) {
                    this._updateIndoorLabelsCoords(T.renderData.indoorData, jO.height)
                }
            }
            for (var jP = 0; jP < jS.length; jP++) {
                if (!jS[jP].textSize) {
                    continue
                }
                this._updateFixedLabelCoords(jS[jP], jQ);
                this._addFixedLabelBounds(jS[jP])
            }
            for (var jP = 0; jP < jU.length; jP++) {
                if (!jU[jP].textSize) {
                    continue
                }
                this._updateFixedLabelCoords(jU[jP], jQ);
                this._addFixedLabelBounds(jU[jP])
            }
            for (var jP = 0; jP < e.length; jP++) {
                this._updateLineLabelCoords(e[jP], jQ)
            }
            return [jT, jO]
        },
        _copyToNewCanvas: function(T, i) {
            if (i === 0) {
                return null
            }
            var jO = bT("canvas");
            jO.width = T.width;
            jO.height = i;
            var e = jO.getContext("2d");
            e.drawImage(T, 0, 0, 512, i, 0, 0, 512, i);
            jO._id = T._id;
            T._free = true;
            return jO
        },
        _drawEachText: function(j6, jS, T, j8, j7, kf, jP) {
            var ke = jS.name;
            var jX = jS.styleText ? jS.styleText[0] : jS.style;
            if (!jX) {
                return null
            }
            var j0 = jX.fontSize;
            var kj = jX.fontWeight;
            var kw = jX.haloSize || 0;
            if (!j1) {}
            if (jX.fontRgba) {
                var kC = jX.fontRgba[3] / 255;
                var jW = [];
                jW[3] = kC;
                for (var kB = 0; kB < 3; kB++) {
                    jW[kB] = jX.fontRgba[kB]
                }
            }
            if (jX.haloRgba) {
                var kC = jX.haloRgba[3] / 255;
                var j3 = [];
                j3[3] = kC;
                for (var kB = 0; kB < 3; kB++) {
                    j3[kB] = jX.haloRgba[kB]
                }
            }
            var kq = jW ? "rgba(" + jW.join(",") + ")" : jX.color;
            var jR = j3 ? "rgba(" + j3.join(",") + ")" : jX.strokeColor;
            var ky = jS.styleId || 0;
            if (kw > 4) {
                kw = 4
            }
            var kg = [];
            var j5 = [];
            var kc = 0;
            if (jP && !jP[ky]) {
                jP[ky] = {}
            }
            var jZ = j0 + kw * 2;
            var kh = jZ;
            if (jS.containDescendings) {
                kh += 4
            }
            if (kw === 0) {
                kh += 2
            }
            if (jS.textOnIcon) {
                kh = Math.max(kh, jS.iconSize[1])
            }
            if (ky !== T || kh > kf) {
                T = ky;
                if (kj >= 10 && kj % 10 === 0) {
                    j6.font = kj * 10 + " " + j0 + "px sans-serif"
                } else {
                    j6.font = j0 + "px sans-serif"
                }
                if (kh > kf) {
                    var kd = kh - kf;
                    kf += kd;
                    j7 += kd
                }
                if (kw > 0) {
                    j6.lineWidth = kw * 2;
                    j6.strokeStyle = jR
                }
                j6.fillStyle = kq
            }
            if (jS.type === "line") {
                var jU = ke.split("");
                for (var kz = 0; kz < jU.length; kz++) {
                    var ks = jU[kz];
                    var j9;
                    var kk;
                    if (jP[ky][ks]) {
                        var j1 = jP[ky][ks];
                        j9 = j1.displaySize;
                        kk = j1.curWordPosition
                    } else {
                        var jO = Math.ceil(j6.measureText(ks).width);
                        if (j8 + jO > 512) {
                            j8 = 0 + this._bufferSpan[0];
                            j7 += kh;
                            j7 += this._bufferSpan[1];
                            kf = kh
                        }
                        if (j7 > this._drawingCanvasHeight) {
                            return {
                                curX: j8,
                                curY: j7,
                                curLineHeight: kf,
                                styleId: ky
                            }
                        }
                        var kt = j8;
                        if (kw > 0) {
                            jO += kw;
                            kt -= Math.round(kw / 2);
                            j6.strokeText(ks, j8, j7)
                        }
                        j6.fillText(ks, j8, j7);
                        var kp = [jO, kh];
                        j9 = [Math.round(kp[0] / 2), Math.round(kp[1] / 2)];
                        kk = [kt, j7 - kh];
                        jP[ky][ks] = {
                            displaySize: j9,
                            curWordPosition: kk,
                            totalHeight: kc
                        };
                        j8 += jO + 2
                    }
                    kg.push(j9);
                    j5.push(kk)
                }
                kc = Math.round(kg[0][1])
            } else {
                if (jP[ky][ke]) {
                    var j1 = jP[ky][ke];
                    kg = j1.textSize;
                    j5 = j1.labelImagePosition;
                    kc = j1.totalHeight
                } else {
                    var j2 = ke.split("\\");
                    if (j2.length > 1 && jS.textOnIcon) {
                        var kA = 0;
                        var kx = 0;
                        var kD = [];
                        var ka = 8;
                        for (var kz = 0; kz < j2.length; kz++) {
                            var ke = j2[kz];
                            var jY = Math.ceil(j6.measureText(ke).width);
                            if (jY > kA) {
                                kA = jY
                            }
                            kD.push(Math.round(jY / 2));
                            kx += kh
                        }
                        var jV = kA + 2 * ka;
                        var kv = kx + 2 * ka;
                        if (j8 + jV > 512) {
                            j8 = 0 + this._bufferSpan[0];
                            j7 += kf;
                            j7 += this._bufferSpan[1]
                        }
                        j7 += kx - kh + 2 * ka;
                        var ko = j8;
                        var kb = j7 - kv;
                        var e = Math.round(jV / 2);
                        var j4 = this._iconCache[jS.icon].image;
                        this.drawStretchedIcon(j6, j4, [ko, kb], ka, kA, kx);
                        for (var kz = 0; kz < j2.length; kz++) {
                            var ke = j2[kz];
                            var ku = ko + (e - kD[kz]);
                            var kr = kb + 4 + (kz + 1) * kh;
                            j6.fillText(ke, ku, kr)
                        }
                        kg.push([Math.round(jV / 2), Math.round(kv / 2)]);
                        j5.push([ko, kb]);
                        j8 += jV;
                        kf = kv;
                        kc = Math.round(kv / 2)
                    } else {
                        for (var kz = 0; kz < j2.length; kz++) {
                            var ke = j2[kz];
                            var jY = Math.ceil(j6.measureText(ke).width);
                            var jV = jY;
                            var jQ = 0;
                            if (jS.textOnIcon) {
                                jQ = 10;
                                jV += jQ * 2;
                                if (jS.styleId === 519) {
                                    jV = jS.iconSize[0];
                                    jQ = Math.round((jV - jY) / 2)
                                }
                            }
                            if (j8 + jV > 512) {
                                j8 = 0 + this._bufferSpan[0];
                                j7 += kh;
                                j7 += this._bufferSpan[1];
                                kf = kh
                            }
                            if (j7 > this._drawingCanvasHeight) {
                                return {
                                    curX: j8,
                                    curY: j7,
                                    curLineHeight: kf,
                                    styleId: ky
                                }
                            }
                            var ko = j8;
                            var kb = j7 - kh;
                            var kn = j8;
                            var km = j7;
                            if (jS.containDescendings) {
                                km -= 4
                            }
                            if (jS.textOnIcon) {
                                var ki = false;
                                var j4 = this._iconCache[jS.icon].image;
                                var kl = jS.iconSize.concat([]);
                                if (jZ >= kl[1]) {
                                    kl[1] = jZ;
                                    ki = true;
                                    kh += jQ * 2;
                                    var kd = kh - kf;
                                    if (kd > 0) {
                                        j7 += kd;
                                        kf = kh;
                                        km += (kd - jQ);
                                        kb += (kd - jQ * 2)
                                    } else {
                                        km -= jQ;
                                        kb -= jQ * 2
                                    }
                                }
                                if (jY >= kl[0]) {
                                    kl[0] = jY
                                }
                                if (jS.styleId === 519) {
                                    j6.drawImage(j4, 0, 0, kl[0], kl[1], ko, kb, kl[0], kl[1])
                                } else {
                                    if (ki) {
                                        this.drawStretchedIcon(j6, j4, [ko, kb], jQ, jY, kl[1])
                                    } else {
                                        this.draw3StretchedIcon(j6, j4, [ko, kb], jQ, jY, kl[1])
                                    }
                                }
                                kn += jQ;
                                if (jS.iconSize[1] > jZ) {
                                    km -= (jS.iconSize[1] - jZ) / 2 - 1
                                }
                                jV += 1
                            }
                            if (kw > 0) {
                                if (ky === 71028) {
                                    kh -= 2
                                }
                                if (ky === 32) {
                                    kh -= 2
                                }
                                j6.strokeText(ke, kn, km)
                            }
                            j6.fillText(ke, kn, km);
                            var jT = [jV, kh];
                            var j9 = [Math.round(jT[0] / 2), Math.round(jT[1] / 2)];
                            kg.push(j9);
                            j5.push([ko, kb]);
                            kc += Math.round(j9[1]);
                            j8 += jV
                        }
                    }
                    jP[ky][ke] = {
                        textSize: kg,
                        labelImagePosition: j5,
                        totalHeight: kc
                    }
                }
            }
            jS.textSize = kg;
            jS.labelImagePosition = j5;
            jS.totalHeight = kc;
            return {
                curX: j8,
                curY: j7,
                curLineHeight: kf,
                styleId: ky
            }
        },
        drawStretchedIcon: function(e, T, jO, jR, jS, i) {
            var jQ = jO[0];
            var jP = jO[1];
            e.drawImage(T, 0, 0, jR, jR, jQ, jP, jR, jR);
            e.drawImage(T, jR, 0, 1, jR, jQ + jR, jP, jS, jR);
            e.drawImage(T, T.width - jR, 0, jR, jR, jQ + jS + jR, jP, jR, jR);
            e.drawImage(T, 0, jR, jR, 1, jQ, jP + jR, jR, i);
            e.drawImage(T, jR, jR, 1, 1, jQ + jR, jP + jR, jS, i);
            e.drawImage(T, T.width - jR, jR, jR, 1, jQ + jS + jR, jP + jR, jR, i);
            e.drawImage(T, 0, T.height - jR, jR, jR, jQ, jP + i + jR, jR, jR);
            e.drawImage(T, jR, T.height - jR, 1, jR, jQ + jR, jP + i + jR, jS, jR);
            e.drawImage(T, T.width - jR, T.height - jR, jR, jR, jQ + jS + jR, jP + i + jR, jR, jR)
        },
        draw3StretchedIcon: function(e, i, T, jQ, jS, jR) {
            var jP = T[0];
            var jO = T[1];
            e.drawImage(i, 0, 0, jQ, i.height, jP, jO, jQ, i.height);
            e.drawImage(i, jQ, 0, 1, i.height, jP + jQ, jO, jS, i.height);
            e.drawImage(i, i.width - jQ, 0, jQ, i.height, jP + jQ + jS, jO, jQ, i.height)
        },
        _updateFixedLabelCoords: function(jP, j4) {
            if (j4 === 0) {
                return
            }
            var jZ = [];
            var kb = [];
            var kc = 0;
            var j2 = jP.totalHeight;
            var kk = jP.textSize.length;
            var jQ = jP.direction;
            if (typeof jQ !== "number") {
                jQ = 0
            }
            for (var kd = 0; kd < kk; kd++) {
                var j5 = jP.labelImagePosition[kd];
                var j3 = jP.textSize[kd];
                var j1 = j5[0];
                var jO = j5[1];
                var jR = j3[0];
                var jW = j3[1];
                var jY = 0;
                var ka = 0;
                if (typeof jP.textMargin === "number") {
                    ka = jP.textMargin
                }
                var jX;
                var e;
                var jT = 0;
                var j0 = 0;
                if (!jP.iconPos) {
                    if (!jP.custom) {
                        jQ = iJ
                    }
                } else {
                    jT = jP.iconPos.width;
                    j0 = jP.iconPos.height
                }
                switch (jQ) {
                case gi:
                    var T = j2 / 2 - jW + jY * (kk - 1) / 2;
                    jX = Math.round(-jT / 2 - jR - ka);
                    e = Math.round(T - kc - jY * kd);
                    break;
                case ed:
                    var T = j2 / 2 - jW + jY * (kk - 1) / 2;
                    jX = Math.round(jT / 2 + ka);
                    e = Math.round(T - kc - jY * kd);
                    break;
                case M:
                    var T = j0 / 2 + j2 - jW + jY * kk;
                    jX = Math.round(-jR / 2);
                    e = Math.round(T - kc - jY * kd);
                    break;
                case hb:
                    var T = -j0 / 2 - jY - jW;
                    jX = Math.round(-jR / 2);
                    e = Math.round(T - kc - jY * kd);
                    break;
                case iJ:
                    var T = -j2 / 2 - jY * (kk - 1) / 2;
                    jX = Math.round(-jR / 2);
                    e = Math.round(T - kc - jY * kd);
                    break
                }
                kc += jW;
                var jV = jX + jR;
                var kl = e;
                var jU = jV;
                var kj = kl + jW;
                var jS = jX;
                var ki = kj;
                jZ.push(jX, e, jV, kl, jU, kj, jX, e, jU, kj, jS, ki);
                var kh = j1 / 512;
                var j9 = (j4 - jO - jW * 2) / j4;
                var kg = (j1 + jR * 2) / 512;
                var j8 = j9;
                var kf = kg;
                var j7 = (j4 - jO) / j4;
                var ke = kh;
                var j6 = j7;
                kb.push(kh, j9, kg, j8, kf, j7, kh, j9, kf, j7, ke, j6)
            }
            if (!jP.textPos) {
                jP.textPos = {}
            }
            jP.textPos.vertex = jZ;
            jP.textPos.texcoord = kb
        },
        _addFixedLabelBounds: function(jU) {
            var jQ = 1000;
            var jO = 1000;
            var T = -1000;
            var e = -1000;
            if (jU.iconPos) {
                var jS = jU.iconPos["vertex"];
                for (var jT = 0, jP = jS.length; jT < jP; jT += 2) {
                    var jY = jS[jT];
                    var jW = jS[jT + 1];
                    if (jY < jQ) {
                        jQ = jY
                    }
                    if (jY > T) {
                        T = jY
                    }
                    if (jW < jO) {
                        jO = jW
                    }
                    if (jW > e) {
                        e = jW
                    }
                }
            }
            if (jU.custom && jU.style.iconSize && !jU.name) {
                var jV = jU.style.iconSize;
                var jX = jU.direction;
                switch (jX) {
                case iJ:
                    jQ = -Math.round(jV[0] / 2);
                    jO = -Math.round(jV[1] / 2);
                    T = Math.round(jV[0] / 2);
                    e = Math.round(jV[1] / 2);
                    break;
                case M:
                    jQ = -Math.round(jV[0] / 2);
                    jO = 0;
                    T = Math.round(jV[0] / 2);
                    e = jV[1];
                    break
                }
            }
            if (jU.textPos) {
                var jR = jU.textPos["vertex"];
                for (var jT = 0, jP = jR.length; jT < jP; jT += 2) {
                    var jY = jR[jT];
                    var jW = jR[jT + 1];
                    if (jY < jQ) {
                        jQ = jY
                    }
                    if (jY > T) {
                        T = jY
                    }
                    if (jW < jO) {
                        jO = jW
                    }
                    if (jW > e) {
                        e = jW
                    }
                }
            }
            jU.bds = [jQ, jO, T, e]
        },
        _updateLineLabelCoords: function(j5, jV) {
            if (jV === 0) {
                return
            }
            var jO = j5.wordsInfo;
            var j2 = j5.wordCount;
            if (!j5.labelImagePosition) {
                return
            }
            var jX = j5.labelImagePosition.slice(0);
            if (j5.reverse) {
                jX.reverse()
            }
            var ke = 1000;
            var kb = 1000;
            var kc = -1000;
            var ka = -1000;
            for (var j6 = 0; j6 < j2; j6++) {
                var kf = jX[j6];
                var kd = kf[0];
                var j3 = kf[1];
                var j1 = j5.textSize[j6];
                var jU = j1[0];
                var e = j1[1];
                var jT = kd / 512;
                var j0 = (jV - j3 - e * 2) / jV;
                var jR = (kd + jU * 2) / 512;
                var jZ = j0;
                var jP = jR;
                var jY = (jV - j3) / jV;
                var T = jT;
                var jW = jY;
                jO[j6].size = [jU, e];
                jO[j6].texcoord = [jT, j0, jR, jZ, jP, jY, jT, j0, jP, jY, T, jW];
                var j9 = jO[j6].offset[0];
                var j8 = jO[j6].offset[1];
                var j7 = j9 - jU / 2;
                var jS = j8 + e / 2;
                var jQ = j8 - e / 2;
                var j4 = j9 + jU / 2;
                if (j7 < ke) {
                    ke = j7
                }
                if (j4 > kc) {
                    kc = j4
                }
                if (jQ < kb) {
                    kb = jQ
                }
                if (jS > ka) {
                    ka = jS
                }
            }
            j5.bds = [ke, kb, kc, ka]
        }
    });
    var fL = {
        0: "00000000",
        16: "00010000",
        32: "00100000",
        48: "00110000",
        64: "01000000",
        96: "01100000"
    };
    function d4(T, jO, jP) {
        var e = T.bds;
        if (!e) {
            return false
        }
        var i = T.tracer;
        var jS;
        if (i) {
            if (!fL[i]) {
                jS = i.toString(2);
                if (jS.length < 8) {
                    jS = new Array(8 - jS.length + 1).join("0") + jS
                }
                fL[i] = jS
            }
            jS = fL[i];
            var jR = jJ.mapZoomStartZoomMapping[jO];
            return jS[jO - jR] === "1"
        }
        var jQ = T.displayRange;
        if (jP >= jQ[0] && jP <= jQ[1]) {
            return true
        }
        return false
    }
    function iP(i, e) {
        this.map = i.map;
        this.layer = i;
        e = e || [];
        this.allLabels = [];
        this._spotData = [];
        this._strategyInfo = null;
        this.RANK1 = 1000000;
        this.RANK2 = 2000000;
        this.RANK3 = 3000000;
        this.RANK4 = 4000000;
        this.RANK5 = 5000000;
        this._ratio = fX();
        this._useRound = true;
        this._sharpenRender = false;
        if (this._ratio > hr.HIGH_RES_MIN_RATIO) {
            this._useRound = false;
            this._sharpenRender = true
        }
        this._mapIsMoving = false;
        this._onMapIdleCallback = e.onMapIdleCallback;
        this.map.temp.isPermitSpotOver = true;
        this.currentSelectedLabel = null;
        this.map._labelProcessor = this;
        this.iconCache = new ay((bS() || eJ.Browser.ie) ? 64 : 128,{
            clearCallback: function(T) {}
        });
        this.fixedLabelData = [];
        this.lineLabelData = [];
        this.highlightLabelData = [];
        this._iconLoadTimer = null;
        this._labelTextCanvas = null;
        if (this.map.config.textRenderType === "canvas") {
            this._labelTextCanvas = this.map.tileMgr.getLabelTextCanvas()
        }
        this.bind()
    }
    eJ.extend(iP.prototype, {
        bind: function() {
            var T = this.map;
            var i = this;
            T.addEventListener("mapstatusbusy_inner", function(jO) {
                i._mapIsMoving = true;
                if (i._ratio > hr.HIGH_RES_MIN_RATIO) {
                    i._sharpenRender = false
                } else {
                    i._useRound = false
                }
            });
            T.addEventListener("mapstatusidle_inner", function(jO) {
                if (i._ratio > hr.HIGH_RES_MIN_RATIO) {
                    i._sharpenRender = true
                } else {
                    i._useRound = true
                }
                i._mapIsMoving = false
            });
            T.addEventListener("onspotmouseover", function(jQ) {
                if (!this.temp.isPermitSpotOver) {
                    return
                }
                if (jQ.spots.length > 0) {
                    var jP = jQ.spots[0].userdata.uid;
                    var jR = jQ.spots[0].userdata.tilePosStr;
                    var jO = i.getLabelByUid(jP, jR);
                    jO && jO.formatedData && i._toHighlightColor(jO.formatedData)
                }
            });
            T.addEventListener("onspotmouseout", function(jQ) {
                if (!this.temp.isPermitSpotOver) {
                    return
                }
                if (jQ.spots.length > 0) {
                    var jP = jQ.spots[0].userdata.uid;
                    var jR = jQ.spots[0].userdata.tilePosStr;
                    var jO = i.getLabelByUid(jP, jR);
                    jO && jO.formatedData && i._toDefaultColor(jO.formatedData)
                }
            });
            T.addEventListener("spotclick", function(jQ) {
                if (jQ.spots && jQ.spots.length > 0) {
                    if (jQ.spots[0].userdata.zoom < 10) {
                        return
                    }
                    var jP = jQ.spots[0].userdata.uid;
                    var jR = jQ.spots[0].userdata.tilePosStr;
                    if (i.currentSelectedLabel && (i.currentSelectedLabel.uid !== jP || i.currentSelectedLabel.tilePosStr !== jR)) {
                        i._recoverNormalState()
                    }
                    var jO = i.getLabelByUid(jP, jR);
                    jO && i._changeBaseMapState(jO)
                } else {
                    i._recoverNormalState()
                }
            });
            T.on("spot_status_reset", function() {
                i._recoverNormalState()
            });
            T.on("spot_highlight", function(jP) {
                var jO = i.getLabelByUid(jP.uid, jP.tilePosStr);
                jO && jO.formatedData && i._toHighlightColor(jO.formatedData)
            });
            T.addEventListener("mousemove", function(jO) {
                if (i.curSpotAdded) {
                    return
                }
                if (this.currentOperation !== dZ.idle || i._mapIsMoving === true) {
                    return
                }
                i._refreshSpotData();
                this.temp.isPermitSpotOver = true;
                i.curSpotAdded = true
            });
            if (bS()) {
                function e() {
                    i._refreshSpotData()
                }
                T.addEventListener("mapstatusidle_inner", e)
            }
            T.on("style_loaded", function() {
                if (i.map.config.textRenderType === "canvas" && !i._labelTextCanvas) {
                    i._labelTextCanvas = i.map.tileMgr.getLabelTextCanvas()
                }
            })
        },
        getLabelByUid: function(jS, jT) {
            var e = this.map._featureMgr.getResult().tileLabels[this.layer.drawIndex] || [];
            for (var jR = 0; jR < e.length; jR++) {
                var jO = e[jR].fixedLabel;
                for (var jQ = 0; jQ < jO.length; jQ++) {
                    if (e[jR].fixedLabel[jQ].guid === jS && e[jR].fixedLabel[jQ].tilePosStr === jT) {
                        return e[jR].fixedLabel[jQ]
                    }
                }
                var jP = e[jR].indoorLabel;
                for (var T = 0; T < jP.length; T++) {
                    if (e[jR].indoorLabel[T].guid === jS && e[jR].indoorLabel[T].tilePosStr === jT) {
                        return e[jR].indoorLabel[T]
                    }
                }
            }
            return null
        },
        getTileByLabelUid: function(jS) {
            var e = this.map._featureMgr.getResult().tileLabels[this.layer.drawIndex] || [];
            for (var jR = 0; jR < e.length; jR++) {
                var jO = e[jR].fixedLabel;
                for (var jQ = 0; jQ < jO.length; jQ++) {
                    if (e[jR].fixedLabel[jQ].guid === jS) {
                        return e[jR]
                    }
                }
                var jP = e[jR].indoorLabel;
                for (var T = 0; T < jP.length; T++) {
                    if (e[jR].indoorLabel[T].guid === jS) {
                        return e[jR]
                    }
                }
            }
            return null
        },
        _toHighlightColor: function(T) {
            if (T.tempRank && T.tempRank === this.RANK5) {
                return
            }
            var e = this.map._featureMgr.getResult().eleData[4][this.layer.drawIndex] || [];
            var jP = false;
            for (var jO = 0; jO < e.length; jO++) {
                if (e[jO] === T || (e[jO].guid === T.guid && e[jO].tilePosStr === T.tilePosStr && e[jO].zoom === T.zoom)) {
                    jP = true;
                    break
                }
            }
            if (jP) {
                return
            }
            e.push(T);
            this.map._featureMgr.setOverlayData(e, 4, this.layer.drawIndex);
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        _toDefaultColor: function(T) {
            if (T.tempRank && T.tempRank === this.RANK5) {
                return
            }
            var e = this.map._featureMgr.getResult().eleData[4][this.layer.drawIndex] || [];
            for (var jO = 0; jO < e.length; jO++) {
                if (T === e[jO] || (T.guid === e[jO].guid && T.tilePosStr === e[jO].tilePosStr && T.zoom === e[jO].zoom)) {
                    e.splice(jO, 1);
                    break
                }
            }
            this.map._featureMgr.setOverlayData(e, 4, this.layer.drawIndex);
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        _changeBaseMapState: function(i) {
            var jP = i.guid;
            var jT = i.formatedData.guidExt;
            var jU = {
                guid: jP,
                tilePosStr: i.tilePosStr,
                guidExt: jT
            };
            this._strategyInfo = jU;
            this.currentSelectedLabel = i;
            var jO = this.map._featureMgr;
            var e = jO.getLabelData(this.layer.drawIndex);
            e = this.collisionTest(e);
            this.updateLabels(e);
            var jV = this.fixDataFormat(e);
            jO.setOverlayData(jV[0], 2, this.layer.drawIndex);
            jO.setOverlayData(jV[1], 3, this.layer.drawIndex);
            jO.setOverlayData(jV[2], 4, this.layer.drawIndex);
            var T = this.getTileByLabelUid(jP);
            this.currentSelectedLabel.tileInfo = T.tileInfo;
            var jS = this.layer.tileCache.getAllData();
            for (var jR in jS) {
                var jQ = jS[jR].data;
                if (!jQ.label) {
                    continue
                }
                this.clearCollisionCache(jQ.label)
            }
            this.map.dispatchEvent(new fu("onrefresh"))
        },
        _recoverNormalState: function() {
            this._strategyInfo = null;
            var jS = false;
            var jQ = this.map._featureMgr.getLabelData(this.layer.drawIndex);
            if (this.currentSelectedLabel) {
                var T = this.currentSelectedLabel.guid;
                this.clearCollisionCache(this.getTileByLabelUid(T));
                var jP = this.layer.tileCache.getAllData();
                for (var jO in jP) {
                    if (Object.prototype.hasOwnProperty.call(jP, jO)) {
                        var jR = jP[jO].data;
                        if (!jR.label) {
                            continue
                        }
                        this.clearCollisionCache(jR.label)
                    }
                }
                this.currentSelectedLabel.tempRank = null;
                this.currentSelectedLabel = null;
                jS = true
            }
            jQ = this.collisionTest(jQ);
            this.updateLabels(jQ);
            var e = this.fixDataFormat(jQ);
            var i = this.map._featureMgr;
            i.setOverlayData(e[0], 2, this.layer.drawIndex);
            i.setOverlayData(e[1], 3, this.layer.drawIndex);
            i.setOverlayData([], 4, this.layer.drawIndex);
            this.map.dispatchEvent(new fu("onrefresh"));
            if (jS) {
                this.curSpotAdded = false;
                this._refreshSpotData()
            }
        },
        loadIconImages: function(j1, jR, T) {
            var j0 = j1.label;
            var j3 = j1.tileInfo.style;
            var jP = j0.fixedLabel;
            if (T === "indoor") {
                jP = []
            }
            var jZ = j0.indoorLabel;
            var jY = jP.length + jZ.length;
            var j4 = this;
            var j2 = 0;
            var jW = 200;
            for (var jX = 0; jX < jY; jX++) {
                var jU;
                if (jX < jP.length) {
                    jU = jP[jX]
                } else {
                    jU = jZ[jX - jP.length]
                }
                if (!jU.iconPos) {
                    var jT = this.loadSVGSymbol(jU, j3);
                    if (!jT) {
                        continue
                    } else {
                        if (jT !== true) {
                            var jS = jU.iconPos.iconType;
                            var e = j3 + "_" + jS;
                            this.iconCache.setData(e, {
                                loaded: false,
                                image: jT
                            });
                            jU.iconPos.img = jT
                        }
                    }
                }
                var jS = jU.iconPos.iconType;
                var e = j3 + "_" + jS;
                j2++;
                if (this.iconCache.getData(e)) {
                    if (this.iconCache.getData(e).loaded) {
                        jR(j1)
                    } else {
                        if (jU.iconPos.img) {
                            jU.iconPos.img.id = e;
                            jU.iconPos.img.iconUrl = jS;
                            this.iconCache.setData(e, {
                                loaded: true,
                                image: jU.iconPos.img
                            });
                            this._addToIconTexture(jU.iconPos.img);
                            jR(j1)
                        } else {
                            if (jU.iconPos.img) {
                                jU.iconPos.img.id = e;
                                jU.iconPos.img.iconUrl = jS;
                                this.iconCache.setData(e, {
                                    loaded: true,
                                    image: jU.iconPos.img
                                });
                                this._addToIconTexture(jU.iconPos.img);
                                jR(j1)
                            }
                        }
                    }
                    continue
                }
                if (!T || T === "indoor") {
                    var jQ = B.getIconSetPath(this.map.config.style) + jS + ".png";
                    var jV = bx();
                    if (jV && jV.udt) {
                        jQ += "?udt=" + jV.udt
                    }
                } else {
                    var jQ = jS
                }
                var jO = new Image();
                jO.id = e;
                jO.iconUrl = jQ;
                jO.crossOrigin = "anonymous";
                jO.onload = function() {
                    if (j4.iconCache.getData(this.id)) {
                        j4.iconCache.getData(this.id).loaded = true;
                        j4._addToIconTexture(this)
                    }
                    if (j4._iconLoadTimer === null) {
                        j4._iconLoadTimer = setTimeout(function() {
                            jR();
                            j4._iconLoadTimer = null
                        }, jW)
                    }
                    this.onload = null
                }
                ;
                jO.onerror = function() {
                    if (!j4._iconLoadTimer) {
                        j4._iconLoadTimer = setTimeout(function() {
                            jR();
                            j4._iconLoadTimer = null
                        }, jW)
                    }
                    j4.iconCache.removeData(this.id);
                    this.onerror = null;
                    bw.fetchDebug && bw.fetchDebug.sendError({
                        title: this.iconUrl,
                        msg: this.iconUrl,
                        category: bw.fetchDebug.category.RESOURCE,
                        level: bw.fetchDebug.levels.ERROR,
                        url: this.iconUrl
                    })
                }
                ;
                jO.src = jQ;
                this.iconCache.setData(e, {
                    loaded: false,
                    image: jO
                })
            }
            return j2
        },
        _addToIconTexture: function(jQ) {
            if (!this.map._webglMapScene) {
                return
            }
            var jS = this.map._webglMapScene._painter;
            var e = jS._iconTextureAtlas.addTexture(jQ);
            jS._iconTextureAtlasOffset[jQ.id] = e;
            var jV = 0 * jQ.width / 1024 + e.width;
            var jP = 0 * jQ.height / 1024 + e.height;
            var jU = jQ.width / 1024 + e.width;
            var jO = jP;
            var jT = jU;
            var T = jQ.height / 1024 + e.height;
            var jR = jV;
            var i = T;
            jS._iconTextureAtlasCoords[jQ.id] = [jV, jP, jU, jO, jT, T, jV, jP, jT, T, jR, i]
        },
        loadSVGSymbol: function(jO, T) {
            var i = jO.symbol || {};
            var jR = dz.generateKey(i.path, i);
            if (!jR) {
                return null
            }
            var jQ = this.iconCache.getData(T + "_" + jR);
            if (jQ && jQ.loaded) {
                jO.iconPos = this.createVertex(jQ.image.width / 2, jQ.image.height / 2, jR);
                return true
            }
            var jP = new dz(i.path,i);
            jP.add();
            var e = jP.render();
            if (!e) {
                return null
            }
            jO.iconPos = this.createVertex(jP.size.width, jP.size.height, jR);
            return jP.data
        },
        createVertex: function(jQ, jU, T) {
            var jP = Math.round(-jQ / 2);
            var jW = Math.round(-jU / 2);
            var jO = jP + jQ;
            var jV = jW;
            var i = jO;
            var jT = jV + jU;
            var e = jP;
            var jS = jT;
            var jR = {
                vertex: [jP, jW, jO, jV, i, jT, jP, jW, i, jT, e, jS],
                texcoord: null,
                width: jQ,
                height: jU,
                iconType: T
            };
            return jR
        },
        loadImgByStr: function(jO, jP, jQ) {
            if (!jO && !jP) {
                jQ && jQ(null, null);
                return
            }
            if (typeof jO === "object" && typeof jP === "object") {
                jQ(jO, jP);
                return
            }
            var i = 0;
            var T = null;
            var e = null;
            if (jO) {
                i++;
                T = new Image();
                T.onload = function() {
                    i--;
                    if (i === 0) {
                        jQ && jQ(this, e)
                    }
                    this.onload = null
                }
                ;
                T.src = jO
            }
            if (jP) {
                i++;
                e = new Image();
                e.onload = function() {
                    i--;
                    if (i === 0) {
                        jQ && jQ(T, this)
                    }
                    this.onload = null
                }
                ;
                e.src = jP
            }
        },
        collisionTest: function(kH, jZ, j8) {
            if (this.map.viewAnimationTime) {
                return []
            }
            if (!kH) {
                return []
            }
            if (this.layer.ontology && this.layer.ontology.noCollision) {
                for (var kj = 0; kj < kH.length; kj++) {
                    var kV = kH[kj].fixedLabel;
                    for (var kh = 0; kh < kV.length; kh++) {
                        var jR = kV[kh];
                        var kX = this.layer.ontology.getLayerVisible(jR.layerName);
                        jR.isDel = !kX
                    }
                }
                return kH
            }
            var j4 = this.map;
            var kL = j4.getHeading();
            kL = this.calcLoopHeading(kL);
            var ku = j4.height;
            var km = this.allLabels;
            km.length = 0;
            kH.sort(function(j1, i) {
                var kY = j1.tileInfo;
                var j2 = i.tileInfo;
                if (kY.col * kY.row < j2.col * j2.row) {
                    return -1
                } else {
                    return 1
                }
            });
            var j5 = j4.getTilt();
            var kM = j4.getZoom();
            if (this.layer.ontology) {
                kM += (this.layer.spanLevel || 0)
            }
            var kf;
            if (j8) {
                kf = j8
            } else {
                kf = this.getZoomStep()
            }
            for (var kj = 0, kd = kH.length; kj < kd; kj++) {
                var T = kH[kj];
                var kn = T.tileInfo;
                var kg = kn.zoom;
                var kv = kn.loopOffsetX / Math.pow(2, 18 - kg);
                if (!kL && !j5) {
                    if (T.unnecessaryCollisionTest && T.unnecessaryCollisionTest[j8]) {
                        continue
                    }
                }
                var kV = T.fixedLabel || [];
                for (var kh = 0, kS = kV.length; kh < kS; kh++) {
                    var jR = kV[kh];
                    jR.zoom = kg;
                    if (jZ === -1 && jR.isDel) {
                        continue
                    }
                    if (this.layer.ontology) {
                        var kX = this.layer.ontology.getLayerVisible(jR.layerName);
                        if (!kX) {
                            continue
                        }
                    }
                    if (!d4(jR, kn.useZoom, kM)) {
                        jR.isDel = true;
                        continue
                    }
                    this.calcCollisionBounds(jR, kf, kv, ku);
                    km.push(jR)
                }
                var ki = T.indoorLabel || [];
                for (var ke = 0, kq = ki.length; ke < kq; ke++) {
                    var kp = ki[ke];
                    kp.zoom = kg;
                    if (jZ === -1 && kp.isDel) {
                        continue
                    }
                    if (!d4(kp, kn.useZoom)) {
                        kp.isDel = true;
                        continue
                    }
                    this.calcCollisionBounds(kp, kf, kv, ku);
                    km.push(kp)
                }
                var kR = T.lineLabel || [];
                for (var kl = 0, j6 = kR.length; kl < j6; kl++) {
                    var kD = kR[kl];
                    if (jZ === -1 && kD.isDel) {
                        continue
                    }
                    if (!d4(kD, kn.useZoom)) {
                        kD.isDel = true;
                        continue
                    }
                    var jS = kD.pt;
                    var kC = j4.pointToPixelIn(jS, {
                        zoom: kf,
                        useRound: this._useRound
                    });
                    var kU = kC.x + kv;
                    var kT = ku - kC.y;
                    var jP = kD.bds;
                    var kF = jP[0];
                    var kE = jP[1];
                    var ka = jP[2];
                    var j9 = jP[3];
                    var j3 = kF;
                    var j0 = kE;
                    var kQ = ka;
                    var kP = j9;
                    if ((kL >= 0 && kL < 45) || (kL >= 315 && kL < 360)) {
                        j3 = kF;
                        j0 = kE;
                        kQ = ka;
                        kP = j9
                    } else {
                        if (kL >= 45 && kL < 135) {
                            j3 = kE;
                            j0 = -ka;
                            kQ = j9;
                            kP = -kF
                        } else {
                            if (kL >= 135 && kL < 225) {
                                j3 = -ka;
                                j0 = -j9;
                                kQ = -kF;
                                kP = -kE
                            } else {
                                if (kL >= 225 && kL < 315) {
                                    j3 = -j9;
                                    j0 = kF;
                                    kQ = -kE;
                                    kP = ka
                                }
                            }
                        }
                    }
                    kD._tempBds = [kU + j3, kT + j0, kU + kQ, kT + kP];
                    var kJ = j4.pixelToPointIn(new e4(kD._tempBds[0],kC.y + j0), {
                        zoom: kf
                    });
                    var kB = j4.pixelToPointIn(new e4(kD._tempBds[2],kC.y + kP), {
                        zoom: kf
                    });
                    kD._mcBds = [kJ, kB];
                    km.push(kD)
                }
            }
            var kA = this._strategyInfo;
            if (kA) {
                var kk = kA.guid;
                var kb = kA.guidExt;
                var ky = false;
                for (var kc = 0, jY = km.length; kc < jY; kc++) {
                    var jQ = km[kc];
                    delete jQ.tempRank;
                    if (!this.layer.isClickableLabel(jQ) || (kb === 1 && !jQ.guidExt)) {
                        continue
                    }
                    if (kk === jQ.guid && kA.tilePosStr === jQ.tilePosStr) {
                        jQ.tempRank = this.RANK5;
                        ky = true
                    }
                }
                if (!ky && this.currentSelectedLabel) {
                    this.currentSelectedLabel.tempRank = this.RANK5;
                    var ko = this.currentSelectedLabel.tileInfo;
                    if (ko) {
                        var j7 = ko.zoom;
                        var kK = ko.loopOffsetX / Math.pow(2, 18 - j7);
                        this.calcCollisionBounds(this.currentSelectedLabel, kf, kK, ku);
                        km.push(this.currentSelectedLabel)
                    }
                }
            } else {
                for (var jO = 0, jX = km.length; jO < jX; jO++) {
                    var jU = km[jO];
                    if (jU.type === "line" || !jU.iconPos) {
                        continue
                    }
                    delete jU.tempRank
                }
            }
            km.sort(function(j2, j1) {
                var kY = j2.tempRank ? j2.tempRank : j2.rank;
                var i = j1.tempRank ? j1.tempRank : j1.rank;
                return i - kY || j2.startZoom - j1.startZoom || j1.pt.lng - j2.pt.lng || j1.pt.lat - j2.pt.lat
            });
            var kO = 0;
            if (j5 > 0) {
                kO = 6
            }
            kM = j4.getZoom();
            if (kM >= 8 && kM < 9) {
                kM < 8.5 ? (kO = 6) : (kO = 3)
            }
            if (j4._displayOptions.labelMargin > 0) {
                kO = j4._displayOptions.labelMargin
            }
            var kw = 2;
            if (kM < 6 && kM >= 5) {
                kw = -1
            }
            for (var kz = 0, jW = km.length; kz < jW; kz++) {
                var kN = km[kz];
                var kG = kN._tempBds;
                kN.isDel = false;
                kN._intersectIdx = [];
                for (var ks = kz + 1; ks < jW; ks++) {
                    var kt = km[ks];
                    var kW = kt._tempBds;
                    if (!(kG[2] + kO + kw < kW[0] - kO || kG[0] - kO > kW[2] + kO + kw || kG[3] + kO + kw < kW[1] - kO || kG[1] - kO > kW[3] + kO + kw)) {
                        kN._intersectIdx.push(ks)
                    }
                }
            }
            for (var kx = 0, jV = km.length; kx < jV; kx++) {
                var jT = km[kx];
                if (jT.isDel === false) {
                    var e = jT._intersectIdx;
                    for (var kr = 0, kI = e.length; kr < kI; kr++) {
                        km[e[kr]].isDel = true
                    }
                }
            }
            return kH
        },
        calcCollisionBounds: function(jU, jS, i, jT) {
            var jQ = jU.ptFix || jU.pt;
            var jO = this.map;
            var jP = jO.pointToPixelIn(jQ, {
                zoom: jS,
                useRound: this._useRound
            });
            var T = jP.x + i;
            var jW = jT - jP.y;
            var e = jU.bds;
            jU._tempBds = [T + e[0], jW + e[1], T + e[2], jW + e[3]];
            var jR = jO.pixelToPointIn(new e4(jU._tempBds[0],jP.y + e[1]), {
                zoom: jS
            });
            var jV = jO.pixelToPointIn(new e4(jU._tempBds[2],jP.y + e[3]), {
                zoom: jS
            });
            jU._mcBds = [jR, jV]
        },
        getZoomStep: function() {
            var T = this.map.getZoom();
            var e = Math.floor(T);
            var i = T - e >= 0.5 ? e + 0.5 : e;
            return i
        },
        clearCollisionCache: function(e) {
            if (!e) {
                return
            }
            e.cacheState = null;
            e.unnecessaryCollisionTest = null
        },
        getCachedLabels: function(e) {
            e = e || [];
            var T = this.getZoomStep();
            var jQ = false;
            for (var jO = 0; jO < e.length; jO++) {
                var jP = e[jO];
                if (!jP.cacheState || !jP.cacheState[T]) {
                    jQ = true;
                    break
                }
                if (jP.hasNewData) {
                    jQ = true;
                    break
                }
            }
            if (jQ) {
                this.calcLabelsCollision(e)
            }
            return e
        },
        calcLabelsCollision: function(T) {
            var jP = this.getZoomStep();
            var jQ = {};
            var jX;
            var jO;
            var jZ;
            var j1;
            var j0;
            var jY;
            T = this.collisionTest(T, undefined, jP);
            aV.addLabelIntoAreaSpots(T);
            for (var jU = 0; jU < T.length; jU++) {
                jX = T[jU];
                jO = jX.tileInfo;
                j1 = jO.col + "," + jO.row;
                jQ[j1] = 1
            }
            var e = {};
            for (var jS = 0; jS < T.length; jS++) {
                jX = T[jS];
                if (!jX.cacheState) {
                    jX.cacheState = {}
                }
                jO = jX.tileInfo;
                j0 = jO.col;
                jY = jO.row;
                j1 = j0 + "," + jY;
                if (jX.cacheState[jP] === "stable") {
                    e[j1] = 1;
                    if (!jX.hasNewData) {
                        continue
                    }
                }
                for (var jT = 0; jT < jX.fixedLabel.length; jT++) {
                    jZ = jX.fixedLabel[jT];
                    if (!jZ.cachedIsDel) {
                        jZ.cachedIsDel = {}
                    }
                    jZ.cachedIsDel[jP] = jZ.isDel
                }
                for (var jW = 0; jW < jX.indoorLabel.length; jW++) {
                    jZ = jX.indoorLabel[jW];
                    if (!jZ.cachedIsDel) {
                        jZ.cachedIsDel = {}
                    }
                    jZ.cachedIsDel[jP] = jZ.isDel
                }
                for (var jV = 0; jV < jX.lineLabel.length; jV++) {
                    jZ = jX.lineLabel[jV];
                    if (!jZ.cachedIsDel) {
                        jZ.cachedIsDel = {}
                    }
                    jZ.cachedIsDel[jP] = jZ.isDel
                }
                if (jQ[(j0 - 1) + "," + (jY - 1)] && jQ[(j0 - 1) + "," + jY] && jQ[(j0 - 1) + "," + (jY + 1)] && jQ[j0 + "," + (jY - 1)] && jQ[j0 + "," + (jY + 1)] && jQ[(j0 + 1) + "," + (jY - 1)] && jQ[(j0 + 1) + "," + jY] && jQ[(j0 + 1) + "," + (jY + 1)]) {
                    jX.cacheState[jP] = "stable";
                    e[j1] = 1
                } else {
                    if (!jX.cacheState[jP]) {
                        jX.cacheState[jP] = "unstable"
                    }
                }
            }
            for (var jR = 0; jR < T.length; jR++) {
                jX = T[jR];
                jO = jX.tileInfo;
                j1 = jO.col + "," + jO.row;
                j0 = +jO.col;
                jY = +jO.row;
                if (e[(j0 - 1) + "," + (jY - 1)] && e[(j0 - 1) + "," + jY] && e[(j0 - 1) + "," + (jY + 1)] && e[j0 + "," + (jY - 1)] && e[j0 + "," + (jY + 1)] && e[(j0 + 1) + "," + (jY - 1)] && e[(j0 + 1) + "," + jY] && e[(j0 + 1) + "," + (jY + 1)]) {
                    if (!jX.unnecessaryCollisionTest) {
                        jX.unnecessaryCollisionTest = {}
                    }
                    jX.unnecessaryCollisionTest[jP] = 1
                }
            }
            T.hasNewData = false
        },
        updateLabels: function(jP) {
            var T = this.map;
            var jV = T.getZoom();
            var jX = T.getHeading();
            jX = this.calcLoopHeading(jX);
            var jW = T.getTilt();
            var jQ = this.getZoomStep();
            for (var jU = 0, jR = jP.length; jU < jR; jU++) {
                var jT = jP[jU];
                var jO = jT.tileInfo;
                var jS = jO.loopOffsetX || 0;
                var e = {
                    zoom: jV,
                    mcOffsetX: jS
                };
                this.updateFixedLabel(jT.fixedLabel, jW, jX, jT, jQ, e);
                e = {
                    zoom: jV,
                    mcOffsetX: 0
                };
                this.updateFixedLabel(jT.indoorLabel, jW, jX, jT, jQ, e);
                this.updateLineLabel(jT.lineLabel, jW, jX, jT, jQ)
            }
        },
        updateFixedLabel: function(jT, jW, i, jZ, jP, jU) {
            if (jT.length === 1) {}
            var e = jU.zoom;
            var jO = jU.mcOffsetX;
            var j4;
            for (var j0 = 0, jR = jT.length; j0 < jR; j0++) {
                var jV = jT[j0];
                if (!jV.cachedIsDel) {
                    continue
                }
                if (!jW && !i && jZ.cacheState && jZ.cacheState[jP]) {
                    jV.isDel = jV.cachedIsDel[jP];
                    if (typeof jV.isDel === "undefined") {
                        jV.isDel = jV.cachedIsDel[jP] = true
                    }
                }
                if (jV.startScale > e) {
                    jV.isDel = true
                }
                if (jV.isDel) {
                    continue
                }
                var j2 = jV.pt;
                var T = jV.iconPos;
                if (T && T.texcoord) {
                    if (!T.rtVertex) {
                        T.rtVertex = [];
                        j4 = T.vertex;
                        var jS = im(j2.lng);
                        var j1 = im(j2.lat);
                        T.rtVertex = [jS[0], j1[0], jS[1], j1[1], 0, j4[0], j4[1], 0, 0, T.texcoord[0], T.texcoord[1], jS[0], j1[0], jS[1], j1[1], 0, j4[2], j4[3], 0, 0, T.texcoord[2], T.texcoord[3], jS[0], j1[0], jS[1], j1[1], 0, j4[4], j4[5], 0, 0, T.texcoord[4], T.texcoord[5], jS[0], j1[0], jS[1], j1[1], 0, j4[6], j4[7], 0, 0, T.texcoord[6], T.texcoord[7], jS[0], j1[0], jS[1], j1[1], 0, j4[8], j4[9], 0, 0, T.texcoord[8], T.texcoord[9], jS[0], j1[0], jS[1], j1[1], 0, j4[10], j4[11], 0, 0, T.texcoord[10], T.texcoord[11]]
                    }
                }
                var j3 = jV.textPos;
                if (j3) {
                    if (!j3.rtVertex) {
                        j3.rtVertex = [];
                        j4 = j3.vertex;
                        var jQ = j3.rtVertex;
                        var jY = im(j2.lng);
                        var j7 = im(j2.lat);
                        var j6 = im(jO);
                        for (var jX = 0, j5 = j4.length; jX < j5; jX += 12) {
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX], j4[jX + 1], j6[0], j6[1], j3.texcoord[0], j3.texcoord[1]);
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX + 2], j4[jX + 3], j6[0], j6[1], j3.texcoord[2], j3.texcoord[3]);
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX + 4], j4[jX + 5], j6[0], j6[1], j3.texcoord[4], j3.texcoord[5]);
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX + 6], j4[jX + 7], j6[0], j6[1], j3.texcoord[6], j3.texcoord[7]);
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX + 8], j4[jX + 9], j6[0], j6[1], j3.texcoord[8], j3.texcoord[9]);
                            jQ.push(jY[0], j7[0], jY[1], j7[1], 0, j4[jX + 10], j4[jX + 11], j6[0], j6[1], j3.texcoord[10], j3.texcoord[11])
                        }
                    }
                }
            }
        },
        updateLineLabel: function(jT, km, kc, j7, j8) {
            jT = jT || [];
            var j2 = this.map;
            var jW = j2.getZoomUnits();
            for (var kl = 0, kj = jT.length; kl < kj; kl++) {
                var jS = jT[kl];
                if (!jS.cachedIsDel) {
                    continue
                }
                if (!km && !kc && j7.cacheState && j7.cacheState[j8]) {
                    jS.isDel = jS.cachedIsDel[j8];
                    if (typeof jS.isDel === "undefined") {
                        jS.isDel = jS.cachedIsDel[j8] = true
                    }
                }
                if (jS.isDel) {
                    continue
                }
                if (!jS.styleText || jS.styleText.length === 0) {
                    continue
                }
                var jU = jS.mcInTile;
                var kf = jU.x;
                var kd = jU.y;
                var j6 = jS.wordsInfo;
                var j4 = jS.labelAngle;
                var j0 = false;
                var ke = 0;
                if (kc !== 0) {
                    var j1 = j6[0].angle;
                    var ki = this.calcLoopHeading(j1 - kc);
                    if (ki > 45 && ki < 315) {
                        if (ki > 45 && ki <= 135) {
                            ke = 270
                        } else {
                            if (ki > 135 && ki <= 225) {
                                ke = 180
                            } else {
                                if (ki > 225 && ki < 315) {
                                    ke = 90
                                }
                            }
                        }
                        if (j4 > 225 && j4 <= 315 && ke <= 180) {
                            j0 = true
                        } else {
                            if ((j4 >= 0 && j4 <= 45 || j4 >= 315 && j4 < 360) && ke >= 180) {
                                j0 = true
                            }
                        }
                    }
                }
                for (var kk = 0, jX = j6.length; kk < jX; kk++) {
                    var kh = j6[kk];
                    var jZ = kh.calcInfo;
                    var kb = kh.offset[0];
                    var j9 = kh.offset[1];
                    if (!kh.size) {
                        continue
                    }
                    var e = kh.size[0];
                    var T = kh.size[1];
                    var jY = kh.angle;
                    if (!jZ) {
                        jZ = {}
                    }
                    if (kc !== jZ.mapHeading || jW !== jZ.zoomUnits) {
                        jZ.mapHeading = kc;
                        jZ.zoomUnits = jW;
                        if (j0) {
                            var j3 = j6[jX - 1 - kk];
                            kb = j3.offset[0];
                            j9 = j3.offset[1];
                            jY = j3.angle
                        }
                        var jP = kf + kb * jW;
                        var jO = kd + j9 * jW;
                        jZ.rotationCenter = {
                            lng: jP,
                            lat: jO
                        };
                        jZ.calcHeading = ke;
                        jZ.angle = jY;
                        jZ.offsetX = kb;
                        jZ.offsetY = j9;
                        kh.calcInfo = jZ
                    }
                    if (!kh.rtVertex) {
                        kh.rtVertex = []
                    }
                    kh.rtVertex.length = 0;
                    var j5 = jZ.calcHeading + jZ.angle;
                    var jQ = jZ.rotationCenter;
                    kb = jZ.offsetX;
                    j9 = jZ.offsetY;
                    var jR = Math.round(kb - e / 2);
                    var kg = Math.round(kb + e / 2);
                    var ka = Math.round(j9 + T / 2);
                    var jV = Math.round(j9 - T / 2);
                    kh.rtVertex.push(kf, kd, kh.z, jR, jV, jQ.lng, jQ.lat, j5, kh.texcoord[0], kh.texcoord[1], kf, kd, kh.z, kg, jV, jQ.lng, jQ.lat, j5, kh.texcoord[2], kh.texcoord[3], kf, kd, kh.z, kg, ka, jQ.lng, jQ.lat, j5, kh.texcoord[4], kh.texcoord[5], kf, kd, kh.z, jR, jV, jQ.lng, jQ.lat, j5, kh.texcoord[6], kh.texcoord[7], kf, kd, kh.z, kg, ka, jQ.lng, jQ.lat, j5, kh.texcoord[8], kh.texcoord[9], kf, kd, kh.z, jR, ka, jQ.lng, jQ.lat, j5, kh.texcoord[10], kh.texcoord[11])
                }
            }
        },
        calcLoopHeading: function(e) {
            while (e >= 360) {
                e -= 360
            }
            while (e < 0) {
                e += 360
            }
            return e
        },
        fixDataFormat: function(jW) {
            var jO = this.fixedLabelData;
            var e = this.lineLabelData;
            var T = this.highlightLabelData;
            var j4 = 0;
            var jS = 0;
            var j1 = 0;
            var j2;
            if (this.currentSelectedLabel) {
                var jR = this.getLabelByUid(this.currentSelectedLabel.guid, this.currentSelectedLabel.tilePosStr);
                if (!jR || jR.isDel) {
                    jO[j4] = this.currentSelectedLabel.formatedData;
                    j4++;
                    T[j1] = this.currentSelectedLabel.formatedData;
                    j1++
                }
            }
            for (var j0 = 0; j0 < jW.length; j0++) {
                var jU = jW[j0];
                var jT = jU.fixedLabel;
                var jP = jU.indoorLabel;
                var jZ = jU.lineLabel;
                var j3 = {
                    highlightLabelData: T,
                    highlightLabelDataLen: j1
                };
                j2 = this.fixFixedLabelDataFormat(jT, jU, jO, j4, j3);
                j4 = j2[0];
                j1 = j2[1];
                j2 = this.fixFixedLabelDataFormat(jP, jU, jO, j4, j3, true);
                j4 = j2[0];
                j1 = j2[1];
                e[jS] = {
                    tileInfo: jU.tileInfo,
                    lineLabels: []
                };
                for (var jY = 0; jY < jZ.length; jY++) {
                    if (jZ[jY].isDel) {
                        continue
                    }
                    var jV = jZ[jY].wordsInfo;
                    if (jV) {
                        for (var jX = 0; jX < jV.length; jX++) {
                            if (!jV[jX].rtVertex) {
                                continue
                            }
                            var jQ = jV[jX].formatedData;
                            if (!jQ) {
                                jQ = {
                                    textureSource: jU.textureSources[jZ[jY].processedInZoom],
                                    textureHeight: jU.textureHeights[jZ[jY].processedInZoom],
                                    renderData: {
                                        vertex: jV[jX].rtVertex,
                                        textureCoord: jV[jX].texcoord
                                    }
                                };
                                jV[jX].formatedData = jQ
                            }
                            e[jS].lineLabels.push(jQ)
                        }
                    }
                }
                jS++
            }
            jO.length = j4;
            e.length = jS;
            T.length = j1;
            return [e, jO, T]
        },
        fixFixedLabelDataFormat: function(jS, jV, jW, jT, T, jU) {
            var jQ = T.highlightLabelData;
            var e = T.highlightLabelDataLen;
            for (var i = 0; i < jS.length; i++) {
                if (jS[i].isDel) {
                    continue
                }
                var jR = jS[i].textPos;
                var jP = jS[i].iconPos;
                var jO = null;
                if (jR && jR.rtVertex) {
                    if (!jS[i].formatedData) {
                        jO = {
                            guid: jS[i].guid,
                            guidExt: jS[i].guidExt,
                            tilePosStr: jS[i].tilePosStr,
                            zoom: jS[i].zoom,
                            tempRank: jS[i].tempRank,
                            textureSource: jV.textureSources[jS[i].processedInZoom],
                            textureHeight: jV.textureHeights[jS[i].processedInZoom],
                            renderData: {
                                vertex: jR.rtVertex,
                                textureCoord: jR.texcoord
                            }
                        };
                        if (jU && jS[i].onDefaultFloor === false) {
                            jO.textureSource = jV.indoorTextureSources[jS[i].processedInZoom];
                            jO.textureHeight = jV.indoorTextureHeights[jS[i].processedInZoom]
                        }
                        jS[i].formatedData = jO
                    } else {
                        jO = jS[i].formatedData;
                        jO.tempRank = jS[i].tempRank
                    }
                    if (this.currentSelectedLabel && jO.guid === this.currentSelectedLabel.guid && jO.tilePosStr === this.currentSelectedLabel.tilePosStr) {
                        jQ[e] = jO;
                        e++
                    }
                }
                if (jP && jP.rtVertex) {
                    if (jO) {
                        if (!jO.iconRenderData) {
                            jO.iconRenderData = {
                                vertex: jP.rtVertex,
                                textureCoord: jP.texcoord
                            }
                        }
                    } else {
                        jO = {
                            guid: jS[i].guid,
                            guidExt: jS[i].guidExt,
                            zoom: jS[i].zoom,
                            tempRank: jS[i].tempRank,
                            iconRenderData: {
                                vertex: jP.rtVertex,
                                textureCoord: jP.texcoord
                            }
                        };
                        jS[i].formatedData = jO
                    }
                }
                jW[jT] = jO;
                jT++
            }
            return [jT, e]
        },
        _refreshSpotData: function() {
            this._spotData.length = 0;
            var jT = this.map;
            var jR = Math.floor(jT.getZoom());
            var T = this.map._featureMgr.getLabelData(this.layer.drawIndex);
            if (this.layer.drawIndex !== 0) {
                return
            }
            if (T) {
                for (var jP = 0, jO = T.length; jP < jO; jP++) {
                    this._addFixedSpotData(T[jP].fixedLabel, jR);
                    this._addFixedSpotData(T[jP].indoorLabel, jR)
                }
            }
            var jU = this.currentSelectedLabel;
            if (jU && !this.getTileByLabelUid(jU.guid, jU.tilePosStr)) {
                var jQ = this._getSpotDataFromLabel(this.currentSelectedLabel);
                if (jQ) {
                    this._spotData.push(jQ)
                }
            }
            var jS = new fu("onspotsdataready");
            jS.spots = this._spotData;
            jS.index = this.layer.drawIndex;
            jT._spotDataOnCanvas = this._spotData;
            jT.dispatchEvent(jS)
        },
        _addFixedSpotData: function(jP, jO) {
            for (var e = 0; e < jP.length; e++) {
                var T = jP[e];
                if (!this.layer.isClickableLabel(T) || (T.guidExt === 1 && T.startScale > jO)) {
                    continue
                }
                var i = jP[e].spot || this._getSpotDataFromLabel(jP[e]);
                if (i) {
                    this._spotData.push(i)
                }
            }
        },
        _getSpotDataFromLabel: function(T) {
            var jQ = this.map;
            if (!T.bds) {
                return null
            }
            var e = T.bds.slice(0);
            var jO = null;
            if (T.iconPos) {
                jO = new cr(T.pt.lng,T.pt.lat)
            }
            var i = T.name ? T.name.replace("\\\\", "<br>") : "";
            if (T.iconPos && T.iconPos.iconType.indexOf("ditie") > -1 && jQ.getZoom() > 14) {
                i = ""
            }
            var jP = {
                n: i,
                pt: new cr(T.pt.lng,T.pt.lat),
                userdata: {
                    iconPoint: jO,
                    uid: T.guid,
                    name: i,
                    mapPoi: true,
                    type: T.iconPos ? T.iconPos.iconType : "",
                    rank: T.rank,
                    zoom: T.zoom,
                    tilePosStr: T.tilePosStr
                },
                bd: e,
                tag: "MAP_SPOT_INFO"
            };
            T.spot = jP;
            return jP
        },
        drawLabelsOnCanvas: function(i, e) {
            if (this._labelTextCanvas) {
                this._labelTextCanvas.drawLabelsOnCanvas(i, e)
            }
        }
    });
    function iI(e) {
        this._map = e;
        this.virtualTiles = {};
        this.virtualTile = {
            custom: true,
            label: {
                fixedLabel: [],
                indoorLabel: [],
                lineLabel: [],
                textureHeights: [],
                status: "ready"
            },
            tileInfo: {
                col: 0,
                row: 0,
                zoom: 0,
                useZoom: 0,
                loopOffsetX: 0
            },
            status: "ready"
        };
        this.init()
    }
    iI.prototype.init = function() {
        var T = this._map;
        var i = this;
        function e(jO) {
            i.updateLabels(jO)
        }
        T.addEventListener("add_tile_labels", e);
        T.addEventListener("onremove_tile_labels", e);
        T.addEventListener("onclear_labels", e)
    }
    ;
    iI.prototype.updateLabels = function(jR) {
        var jU = this._map.tileMgr.getLabelTextCanvas();
        var T = this._map;
        var jS = this;
        if (jR.model === "mvt") {
            var jW = jR.data;
            var jV = "mvt_" + jR.index
        } else {
            var jW = T._customTileLabels;
            var jV = "custom"
        }
        var jQ = JSON.parse(JSON.stringify(jW));
        for (var jP = 0; jP < jQ.length; jP++) {
            var jT = jQ[jP];
            jT.guid = jT.guid || jT.uid;
            jT.iconPos = this.getIconVertexData(jT.style, 1);
            var jO = {
                textMargin: jT.textMargin,
                textOnIcon: jT.textOnIcon,
                iconSize: jT.iconSize,
                style: {
                    color: jT.style.color,
                    strokeColor: jT.style.strokeColor,
                    fontSize: jT.style.fontSize,
                    haloSize: jT.style.haloSize,
                }
            };
            jQ[jP].styleId = jQ[jP].styleId || o(jO)
        }
        jU.drawCustomLabelsOnCanvas(jQ, function(i) {
            var e = JSON.parse(JSON.stringify(jS.virtualTile));
            e.label.tileInfo = e.tileInfo;
            if (i) {
                e.label.textureHeights[0] = [i.height]
            }
            e.label.fixedLabel = jQ;
            jS.virtualTiles[jV] = e;
            var jX = new fu("oncustom_labels_ready");
            jX.virtualTile = e;
            jX.labelCanvas = i;
            jX.model = jV;
            jX.imgKey = bw.getGUID("custom_labels_");
            T.dispatchEvent(jX)
        })
    }
    ;
    iI.prototype.getIconVertexData = function(jX, jQ) {
        if (!jX || !jX.icon || !jX.iconSize || jX.iconSize.length < 2) {
            return null
        }
        var jR = 2;
        var jP = jX.iconSize[0] / jR * jQ;
        var jU = jX.iconSize[1] / jR * jQ;
        var jO = Math.round(-jP / 2);
        var jW = Math.round(-jU / 2);
        var T = jO + jP;
        var jV = jW;
        var i = T;
        var jT = jV + jU;
        var e = jO;
        var jS = jT;
        return {
            vertex: [jO, jW, T, jV, i, jT, jO, jW, i, jT, e, jS],
            texcoord: null,
            width: jP,
            height: jU,
            iconType: jX.icon
        }
    }
    ;
    bw.register(function(e) {
        e._customLabelMgr = new iI(e)
    });
    var fS = function(j7, j6) {
        var j5 = {
            "\x64\x78\x69\x64\x6d": "\x78\x78\x69",
            "\x68\x78\x61\x65\x65": "\x68\x6c\x63\x6d",
            "\x6d\x65\x68\x64\x61": "\x69\x6d\x61",
            "\x6d\x69\x65\x6c\x78": function(T, e) {
                return T + e
            },
            "\x6d\x68\x65\x68\x6d": "\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72",
            "\x68\x64\x65\x65\x6c": function(T, e) {
                return T(e)
            },
            "\x61\x61\x61\x69\x65": "\x31\x2e\x31\x2e\x32",
            "\x6d\x6c\x78\x68\x69": "\x43\x68\x61\x72",
            "\x65\x6c\x65\x61\x78": function(T, e, j8) {
                return T(e, j8)
            },
            "\x63\x6d\x6d\x69\x63": function(j8, T, e) {
                return j8(T, e)
            }
        };
        var j1 = j5["\x61\x61\x61\x69\x65"];
        function j0(ka, j9) {
            var j8 = j5["\x64\x78\x69\x64\x6d"];
            while (j8 !== j5["\x68\x78\x61\x65\x65"]) {
                switch (j8) {
                case "\x64\x63\x78":
                    return kb;
                case "\x6d\x69\x64":
                    for (var T = 0; T < e; T++) {
                        var kc = j9(ka[T]);
                        kb["\x70\x75\x73\x68"](kc)
                    }
                    j8 = "\x64\x63\x78";
                    break;
                case j5["\x6d\x65\x68\x64\x61"]:
                    var kb = [];
                    j8 = "\x6d\x69\x64";
                    break;
                case j5["\x64\x78\x69\x64\x6d"]:
                    var e = ka["\x6c\x65\x6e\x67\x74\x68"];
                    j8 = j5["\x6d\x65\x68\x64\x61"];
                    break
                }
            }
        }
        var j4, j3, j2, jZ, jY, jX = decodeURIComponent, jW = j5["\x6d\x6c\x78\x68\x69"], jV = "";
        var jU = [fS];
        j4 = "\x64\x65";
        j3 = "\x66\x72";
        j2 = "\x6f";
        jY = j5["\x6d\x69\x65\x6c\x78"](j3, j2) + "\x6d";
        jZ = "\x43\x6f" + j4;
        var jT = function(e) {
            return j5["\x6d\x69\x65\x6c\x78"](e, jV)[j5["\x6d\x68\x65\x68\x6d"]][jY + jW + jZ](e)
        };
        var jS = function(e) {
            return j0(e, function(T) {
                return jT(T)
            })
        };
        var jR = jS["\x63\x61\x6c\x6c"](jT, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
        var jQ = j5["\x65\x6c\x65\x61\x78"](j0, [28782, 27702, 26416, 25167, 24183], function(e) {
            return j5["\x68\x64\x65\x65\x6c"](jX, e)
        });
        var jP = jS["\x63\x61\x6c\x6c"](jQ, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
          , jO = {};
        jQ = jS(jQ);
        var i = new RegExp(jQ["\x6a\x6f\x69\x6e"]("\x7c"));
        for (var j4 = 0; j4 < jR["\x6c\x65\x6e\x67\x74\x68"]; j4++) {
            jO[jP[j4]] = jR[j4]
        }
        j6 = j5["\x63\x6d\x6d\x69\x63"](j0, j6["\x73\x70\x6c\x69\x74"](jV), function(e) {
            return jO[e] || e
        })["\x6a\x6f\x69\x6e"](jV);
        return j5["\x63\x6d\x6d\x69\x63"](j0, j6["\x73\x70\x6c\x69\x74"](i), function(e) {
            return j5["\x68\x64\x65\x65\x6c"](jX, e)
        })
    }(this, "\u5ef2\x6c\u735c\u545a\u545a\u706e\u58a0\u59c8\u58a0\u5ef2\u5ef2\u624f\x74\u545a\x72\u735c\x69\u72b8\u5ef2\x74\u545a\u6c36\x69\u59c8\u545a\x69\u56c4\u624f\u735c\u5ef2\u59c8\u706e\u58a0\x69\u56c4\x6c\u735c\u706e\u735c\u5ef2\u56c4\u706e\x68\u59c8\u5ef2\u735c\u5ef2\u6c36\x69\x73\x53\u545a\u72b8\u56c4\u7209\x53\u706e\u545a\u58a0\x6c\u5ef2\x6c\u6c36\u56c4\u545a\u56c4\x68\u545a\u624f\u5ef2\u735c\u5ef2\u6730\u545a\u545a\u545a\u5e77\u735c\u59c8\u58a0\u545a\u735c\u706e\x68\x6c\x68\x69\u545a\u624f\u735c\u5ef2\u735a\u6730\x68\x68\x6c\x68\x69\u6c36\u5ef2\u56c4\u59c8\u735c\x6c\u706e\x74\u545a\u58a0\x74\x53\x69\x7a\u545a\x52\u5ef2\x74\x69\u7313\u624f\u5ef2\u545a\u735c\u545a\u624f\u58a0\u56c4\u58a0\u6c36\u58a0\u5ef2\x68\u624f\u59c8\u56c4\x68\u5ef2\u5ef2\u6730\x68\x68\u5ef2\u706e\u545a\x6c\u58a0\x6c\u5ef2\u6730\x69\x6c\u5ef2\u59c8\x69\u706e\x69\u56c4\x5f\u624f\x74\x69\x6c\u545a\x54\x79\u735a\u545a\x4e\u5ef2\u735c\u545a\u624f\u56c4\u5ef2\u58a0\u545a\u545a\u706e\u56c4\u58a0\u5ef2\u545a\x68\u706e\x72\u7313\x77\u706e\x7a\u7313\u7313\u735c\u624f\x73\u735a\x6c\x69\u59c8\u545a\u6c36\x69\u59c8\x69\u5e77\u56c4\u59c8\u56c4\u6730\u5ef2\u545a\x68\u706e\u59c8\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5f\u5e77\u545a\x68\x6c\u706e\u59c8\u545a\x6c\u5e77\u5ef2\x69\x68\u5e77\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u5e77\u59c8\u56c4\x69\u6c36\u59c8\u58a0\u5ef2\u624f\u58a0\x68\u5ef2\u706e\u5ef2\x6c\u58a0\u6730\u735c\u58a0\x69\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u706e\u59c8\x68\u56c4\u624f\u59c8\x68\u59c8\x6c\u5e77\u56c4\u545a\u545a\u6730\u735c\u56c4\u5ef2\u6c36\u59c8\u5ef2\x6c\u624f\u56c4\u5ef2\u735c\u5e77\u545a\x69\u5ef2\u6c36\x69\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u624f\u645a\x75\x73\x74\u7313\u735c\u6730\u5ef2\x69\u545a\x68\x68\u6c36\x68\u545a\u5ef2\u58a0\u58a0\u624f\u5ef2\u59c8\u735c\x69\u58a0\u6730\u56c4\u545a\u58a0\u58a0\u58a0\u6730\u735c\u5ef2\u56c4\x69\u5ef2\u5e77\u5ef2\u5ef2\u735c\x68\u5ef2\u624f\u545a\u735c\x69\u5ef2\x6c\u5e77\u545a\u5ef2\u5ef2\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x79\u624f\u5ef2\u545a\u5ef2\u545a\x6c\u706e\u5ef2\x68\x68\u5ef2\x68\u6c36\u5ef2\u5ef2\x6c\x6c\u58a0\u6c36\u545a\u735c\u5ef2\u56c4\u545a\u624f\x5f\u56c4\x69\x73\u735a\x6c\u5ef2\x79\x4f\u735a\x74\x69\u7313\u72b8\x73\u624f\u735a\u7313\x69\u6730\x69\u59c8\u545a\x6c\u5ef2\u6c36\x69\u5ef2\u545a\x68\u545a\u6c36\u545a\x6c\u5ef2\x69\x68\u5e77\u545a\u58a0\u56c4\u5ef2\u545a\u6c36\x69\x69\u58a0\x6c\u56c4\u6c36\u59c8\u545a\u59c8\u545a\u545a\u6730\u59c8\u59c8\x6c\u706e\u59c8\u545a\u545a\u6730\u5ef2\u545a\u5ef2\u545a\u545a\u624f\u735a\u7313\x69\x54\u545a\u58a0\x74\u6c36\x6c\u58a0\u5ef2\u5e77\u5a32\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u5e77\u5ef2\x68\x6c\x68\u5ef2\u6c36\u545a\u735c\u545a\u6c36\u545a\x69\u59c8\u56c4\u735c\u5e77\x69\u59c8\u7313\u72b8\x49\u72b8\u5a32\u7313\u5e77\u735c\x68\x69\u6c36\u5ef2\u545a\x68\x69\u59c8\u6c36\x69\x69\x68\u6c36\u5ef2\u56c4\u56c4\x6c\x6c\u6730\u735a\u7313\x73\x74\x4d\u545a\x73\x73\u5ef2\u577a\u545a\u5e77\u58a0\u58a0\u735c\u545a\u5ef2\u6c36\u735c\u545a\u58a0\u624f\u58a0\x6c\u545a\u59c8\u56c4\u706e\u5ef2\u58a0\x68\u59c8\u735c\u6730\u545a\x6c\x68\u5ef2\u735c\u624f\u59c8\x75\x73\x74\u7313\u735c\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\u6730\u735c\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u6c36\u5ef2\u58a0\u5ef2\u624f\u59c8\x69\u59c8\u706e\x69\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6730\u577a\u545a\x74\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u706e\u5ef2\u59c8\u735c\u6730\u735c\u56c4\u58a0\u5ef2\u58a0\u706e\u5ef2\u545a\x68\u59c8\x69\u5e77\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u6c36\u545a\u56c4\x6c\x69\u545a\u6c36\u58a0\u545a\x68\x6c\u545a\u706e\u5ef2\u59c8\u545a\x68\u735c\u706e\u735c\u5ef2\u56c4\u5ef2\u545a\u6c36\u545a\u59c8\u5ef2\u624f\u577a\u545a\x74\x49\u56c4\x6c\u545a\x57\u7313\x72\x6b\u545a\x72\u706e\u735a\x72\u7313\x74\u7313\x74\x79\u735a\u545a\u624f\x69\x6c\u56c4\u5e77\u58a0\u5ef2\u545a\u735c\u706e\u59c8\x6c\u58a0\u6730\x6c\u59c8\x6c\u5e77\u5ef2\u5ef2\u59c8\u706e\u735c\x6c\u5ef2\u5ef2\u545a\u706e\u58a0\x69\u56c4\u58a0\u5ef2\u5e77\u545a\u5ef2\u5ef2\x69\u6c36\u59c8\u545a\u59c8\u5e77\x6c\u59c8\x68\u5ef2\u59c8\u5e77\x69\u72b8\x4d\u5ef2\u735a\x48\u7313\x73\x74\u624f\u56c4\u545a\u5ef2\u6c36\u545a\x6c\x68\u59c8\u735c\u5e77\u7313\u72b8\u545a\x72\x72\u7313\x72\u6c36\u5ef2\x69\u735c\u5ef2\u5ef2\u6730\u59c8\u58a0\u58a0\u706e\u58a0\u59c8\x68\u624f\u58a0\u5ef2\u5ef2\u545a\u6730\x68\u56c4\u545a\u706e\x69\u735c\u735a\u7313\x72\x74\x53\u59c8\x72\x69\u735a\x74\x73\x28\u5f5f\u66f0\u66f0\u6730\u5f5f\u66f0\u66f0\x29\u5f5f\u6b31\u63cb\u6c36\u5ef2\x69\u58a0\u6c36\u545a\x6c\u5ef2\u5e77\u545a\x69\u59c8\u6c36\x69\x69\u5ef2\u5e77\u735c\u735c\u545a\u59c8\u624f\x68\u545a\u545a\u545a\u735c\u706e\u545a\u56c4\u5ef2\u5ef2\u735c\u5e77\u5ef2\u56c4\u5ef2\u5ef2\u5ef2\u6c36\x55\x52\x4c\u5e77\x77\u545a\u5c2b\x6b\x69\x74\x55\x52\x4c\u6c36\x69\u58a0\x69\x68\x6c\u5e77\u56c4\u5ef2\u735c\u545a\u5ef2\u706e\u545a\u59c8\u5ef2\x68\u545a\u6730\u5ef2\u735a\u735a\x6c\x69\u59c8\u5ef2\x74\x69\u7313\u72b8\u5f5f\u66f0\u7209\x6a\u5ef2\x76\u5ef2\x73\u59c8\x72\x69\u735a\x74\u6c36\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u624f\x57\u545a\u5c2b\x4b\x69\x74\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u6730\x4d\u7313\x7a\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u706e\u5ef2\u735a\u735a\u545a\u72b8\u56c4\u706e\u56c4\u735c\x68\u5ef2\x6c\u6c36\u577a\u545a\x74\u63cb\x6c\u7313\u5c2b\u6c36\u545a\u545a\x6c\u545a\x69\u6c36\x69\x69\u59c8\u58a0\x68\u6730\u56c4\u545a\x69\u545a\u58a0\u624f\u5ef2\x69\u545a\u56c4\u59c8\u6730\u735c\x69\u5ef2\u5ef2\u735c\u6c36\x69\u72b8\x69\x74\u5e77\u59c8\u545a\x69\u6c36\u545a\u56c4\u58a0\u5e77\x6c\u735c\u56c4\u6730\u545a\x69\x69\u6c36\u545a\u5ef2\u58a0\u6730\u545a\u56c4\u59c8\u624f\u56c4\u58a0\x68\x6c\u6730\u545a\u735c\u59c8\u624f\u56c4\x68\u735c\u5ef2\u5e77\u735c\u545a\u5ef2\u5e77\u59c8\u545a\x68\u624f\u58a0\u735c\u735c\u6730\x6c\x68\u5ef2\u5e77\u5ef2\u545a\u735c\u6c36\x68\u735c\u5ef2\u6730\u5ef2\u56c4\u735c\u545a\u6730\u59c8\x68\u545a\u5e77\u5ef2\u56c4\u5ef2\u706e\u5ef2\u59c8\u56c4\u5e77\u5ef2\x68\u5ef2\u6c36\u735c\u5ef2\u735c\u6c36\u735c\u735c\u5ef2\u6c36\x69\u56c4\x68\u6c36\u56c4\u545a\x73\x74\x72\u7313\x79\u706e\x6c\u545a\x68\u56c4\u706e\u7313\u72b8\x73\x74\x79\x6c\u545a\x5f\x6c\u7313\u5ef2\u56c4\u545a\u56c4\u624f\u735c\u545a\u735c\u706e\u59c8\x69\u735c\u624f\u5ef2\x68\u735c\u5e77\u59c8\u59c8\u545a\u6730\x69\x6c\u545a\u6730\u5ef2\x72\x72\x50\u545a\u72b8\u56c4\x69\u72b8\u577a\u6b9b\u5ef2\x74\u5ef2\u6c36\u5ef2\u545a\u545a\u545a\u5ef2\u6c36\u58a0\u5ef2\u735c\u5ef2\u545a\u6730\u59c8\u5ef2\u72b8\x55\x73\u545a\x57\u545a\u5c2b\u6256\x73\x73\u545a\u735c\u5c2b\x6c\x79\u6c36\u545a\u735c\x68\x6c\u5ef2\u706e\u5ef2\u56c4\u56c4\x68\x6c\u706e\x69\x68\u56c4\u624f\u735c\x68\x6c\u545a\u545a\u6730\u5ef2\u5ef2\u545a\u735c\u56c4\u6c36\x6c\u735c\u735c\u624f\x6c\u58a0\u56c4\u6c36\u5ef2\x69\x6c\u5e77\u5ef2\u59c8\x69\x6c\u545a\u624f\u5ef2\u56c4\u56c4\u706e\u735c\u59c8\u545a\x68\u5ef2\u6730\u545a\u56c4\u5ef2\u5ef2\x6c\u706e\x68\x69\u58a0\u5e77\x6c\u58a0\u545a\u6730\u735c\x69\u59c8\u5ef2\u59c8\u624f\x68\x69\u5ef2\u735c\u735c\u6c36\x69\u59c8\u545a\u545a\u545a\u6730\u735a\x75\x73\x68\u6c36\u545a\u5ef2\u58a0\x6c\x6c\u624f\u7313\u72b8\u735c\u545a\x73\x73\u5ef2\u577a\u545a\u5e77\u5ef2\u56c4\u545a\u545a\u706e\u735c\x6c\x6c\x6c\u56c4\u6c36\u59c8\u5c2b\x6b\u706e\x68\u59c8\u545a\u5e77\u7313\u72b8\x72\u545a\u5a32\x72\u545a\x73\x68\u6730\u545a\u58a0\u5ef2\u56c4\x6c\u624f\x6c\u545a\u72b8\u577a\x74\x68\u6c36\x68\x69\u545a\u6c36\x68\u735c\x69\x68\x68\u6730\x6c\x6c\u545a\u545a\u545a\u706e\x5f\x69\x73\u63cb\x75\x73\x79\u624f\u5ef2\u5ef2\u56c4\u59c8\x68\u706e\x73\u7313\x75\x72\u59c8\u545a\u624f\u5ef2\x68\x68\u545a\u545a\u624f\u59c8\u5ef2\x6c\u5ef2\u545a\u6c36\u58a0\u5ef2\u58a0\u5e77\u56c4\u5ef2\x74\u5ef2\u706e\u5ef2\u59c8\u58a0\x68\u5ef2\u6c36\x68\u735c\u545a\u59c8\u545a\u6730\x73\x68\x69\u5a32\x74\u5e77\u56c4\u5ef2\x68\u706e\x5f\u59c8\u5c2b\x6b\u706e\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x4b\u545a\x79\u5e77\x75\x72\x6c\u5e77\x74\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u706e\x74\x69\x6c\u545a\x4b\u545a\x79\u6730\u545a\u58a0\x69\x69\u58a0\u624f\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u6730\u58a0\x69\u58a0\x68\u5ef2\u6730\u735c\u58a0\u59c8\u5ef2\u56c4\u6c36\u5a32\x69\x72\u545a\u5e77\x6c\x6c\u58a0\u624f\u735c\x69\u72b8\u624f\x6c\u7313\u5ef2\u56c4\x54\x69\x6c\u545a\u6b9b\u5ef2\x74\u5ef2\u6730\u58a0\x6c\u59c8\u6730\x69\u545a\u5ef2\u58a0\u545a\u6730\x68\u545a\u5ef2\u545a\u735c\u624f\x68\u58a0\u545a\u59c8\x6c\u706e\u7313\u72b8\x73\x74\x79\x6c\u545a\x7a\u7313\u7313\u735c\x75\u735a\u56c4\u5ef2\x74\u545a\u5e77\x68\u5ef2\u545a\x6c\u56c4\u624f\u5ef2\u5ef2\u58a0\u56c4\u56c4\u624f\u5ef2\x72\x72\x57\u7313\x72\x6b\u545a\x72\u624f\u58a0\x68\u735c\u6730\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\u5e77\u735c\u735c\u545a\u58a0\x68\u6730\u59c8\u7313\u72b8\u5a32\x69\u577a\u6c36\x73\x74\x79\x6c\u545a\u6c36\x73\x74\x72\x69\u72b8\u577a\u6c36\u545a\x68\u5ef2\u56c4\u5e77\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5a\u7313\u7313\u735c\u6730\u545a\u5ef2\u545a\u6c36\u56c4\u545a\u545a\x69\u545a\u6730\u63cb\x72\u7313\x77\x73\u545a\x72\u5e77\u735c\u545a\u58a0\u545a\u545a\u6c36\u545a\u5ef2\x69\u706e\u56c4\u56c4\x6c\u59c8\u59c8\u5e77\x69\u5ef2\u5ef2\u58a0\u545a\u6730\x72\u5ef2\x74\x69\u7313\u624f\u545a\u58a0\u545a\x68\x69\u624f\x68\u545a\u58a0\u56c4\x68\u6730\u56c4\x68\u58a0\u56c4\u59c8\u6c36\x77\u7313\x72\u56c4\x53\u735a\u5ef2\u59c8\u545a\x52\u5ef2\x74\x69\u7313\u5e77\x6c\x69\u5ef2\u6c36\u735c\u5ef2\u58a0\u624f\x68\u5ef2\x72\u56c4\x77\u5ef2\x72\u545a\u645a\u7313\u72b8\u59c8\x75\x72\x72\u545a\u72b8\u59c8\x79");
    (function(jO, T) {
        var i = function(e) {
            while (--e) {
                jO.push(jO.shift())
            }
        };
        i(++T)
    }(fS, 397));
    var fR = function(jO, T) {
        jO = jO - 0;
        var i = fS[jO];
        return i
    };
    function jo(jR) {
        var jQ = {
            "\x61\x69\x6d\x61\x61": function(jS, i) {
                return jS(i)
            },
            "\x6d\x6c\x61\x61\x65": "\x61\x6c\x6d",
            "\x78\x69\x64\x78\x61": function(jS, i) {
                return jS !== i
            },
            "\x65\x65\x6c\x61\x63": fR("0x0"),
            "\x6c\x63\x68\x61\x63": fR("0x1"),
            "\x64\x61\x61\x64\x64": fR("0x2"),
            "\x68\x61\x61\x6c\x61": fR("0x3"),
            "\x65\x6c\x68\x63\x6d": fR("0x4"),
            "\x65\x69\x6c\x61\x61": "\x63\x65\x63"
        };
        var jP = jQ[fR("0x5")];
        while (jQ[fR("0x6")](jP, fR("0x7"))) {
            switch (jP) {
            case fR("0x8"):
                return e;
            case jQ["\x65\x65\x6c\x61\x63"]:
                try {
                    var jO = fR("0x2");
                    while (jO !== jQ[fR("0x9")]) {
                        switch (jO) {
                        case jQ["\x64\x61\x61\x64\x64"]:
                            jO = aH[fR("0xa")] ? jQ["\x68\x61\x61\x6c\x61"] : fR("0x4");
                            break;
                        case fR("0x3"):
                            e = new Worker(jR);
                            jO = fR("0xb");
                            break;
                        case jQ[fR("0xc")]:
                            e = gh(jR);
                            jO = jQ[fR("0x9")];
                            break;
                        case fR("0xb"):
                            e[fR("0xd")] = function(i) {
                                i["\x70\x72\x65\x76\x65\x6e\x74\x44\x65\x66\x61\x75\x6c\x74"]();
                                e = jQ[fR("0xe")](gh, jR)
                            }
                            ;
                            jO = jQ[fR("0x9")];
                            break
                        }
                    }
                } catch (T) {
                    e = gh(jR)
                }
                jP = jQ["\x65\x69\x6c\x61\x61"];
                break;
            case jQ[fR("0x5")]:
                var e = null;
                jP = fR("0x0");
                break
            }
        }
    }
    function gh(jO) {
        var T = {
            "\x68\x65\x65\x65\x6d": fR("0xf"),
            "\x65\x64\x61\x61\x6d": fR("0x10"),
            "\x61\x64\x61\x61\x61": function(jX, jW) {
                return jX !== jW
            },
            "\x64\x65\x69\x65\x78": fR("0x11"),
            "\x69\x78\x69\x68\x6c": fR("0x12"),
            "\x64\x61\x6d\x65\x61": fR("0x13"),
            "\x65\x63\x61\x68\x65": fR("0x14"),
            "\x64\x6d\x68\x61\x6c": function(jX, jW) {
                return jX + jW
            },
            "\x65\x65\x6c\x65\x69": fR("0x15"),
            "\x69\x69\x63\x78\x68": fR("0x16"),
            "\x61\x69\x65\x64\x63": fR("0x17"),
            "\x6d\x69\x61\x61\x6d": fR("0x8"),
            "\x65\x64\x68\x61\x78": fR("0x18")
        };
        var jV = fR("0x8");
        while (jV !== fR("0x19")) {
            switch (jV) {
            case T[fR("0x1a")]:
                try {
                    var jU = T[fR("0x1b")];
                    while (T[fR("0x1c")](jU, T["\x64\x65\x69\x65\x78"])) {
                        switch (jU) {
                        case fR("0x15"):
                            var jT = window[fR("0x1d")] || window[fR("0x1e")];
                            jU = T[fR("0x1f")];
                            break;
                        case fR("0x17"):
                            try {
                                jQ = new Blob([T[fR("0x20")] + jO + T[fR("0x21")]],{
                                    type: fR("0x22")
                                })
                            } catch (jS) {
                                var jR = new (window[(fR("0x23"))] || window[(fR("0x24"))] || window[(fR("0x25"))])();
                                jR[fR("0x26")](T[fR("0x27")](T[fR("0x20")], jO) + T[fR("0x21")]);
                                jQ = jR[fR("0x28")]("\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x6a\x61\x76\x61\x73\x63\x72\x69\x70\x74")
                            }
                            jU = T[fR("0x29")];
                            break;
                        case T[fR("0x2a")]:
                            e = new Worker(jP);
                            jU = T[fR("0x2b")];
                            break;
                        case T[fR("0x1b")]:
                            var jQ;
                            jU = T[fR("0x2c")];
                            break;
                        case fR("0x12"):
                            var jP = jT["\x63\x72\x65\x61\x74\x65\x4f\x62\x6a\x65\x63\x74\x55\x52\x4c"](jQ);
                            jU = T[fR("0x2a")];
                            break
                        }
                    }
                } catch (i) {}
                jV = fR("0x18");
                break;
            case T[fR("0x2d")]:
                var e = null;
                jV = T[fR("0x1a")];
                break;
            case T["\x65\x64\x68\x61\x78"]:
                return e
            }
        }
    }
    function i9(e) {
        this[fR("0x2e")](e)
    }
    var gN = {
        "\x69\x6e\x69\x74": function(jO) {
            var T = {
                "\x65\x61\x6d\x69\x61": fR("0x2f"),
                "\x6d\x69\x65\x69\x65": fR("0x30"),
                "\x65\x6d\x68\x6c\x61": fR("0x31"),
                "\x6d\x65\x65\x78\x61": fR("0x32"),
                "\x61\x64\x64\x68\x6c": "\x77\x6f\x72\x6b\x65\x72\x6d\x67\x72",
                "\x6d\x68\x6c\x65\x65": "\x6d\x6c\x68",
                "\x61\x61\x65\x6d\x64": fR("0x33"),
                "\x6c\x61\x63\x61\x6c": fR("0x34"),
                "\x61\x63\x69\x6c\x65": function(jR, jQ) {
                    return jR !== jQ
                },
                "\x65\x63\x61\x65\x6c": fR("0x35"),
                "\x6d\x63\x65\x68\x61": "\x68\x69\x78",
                "\x65\x64\x61\x61\x6c": fR("0x36"),
                "\x6d\x69\x63\x61\x63": fR("0x37"),
                "\x68\x69\x61\x6d\x6d": function(jR, jQ) {
                    return jR(jQ)
                },
                "\x69\x63\x65\x65\x65": fR("0x38"),
                "\x65\x61\x78\x6c\x6c": fR("0x39"),
                "\x69\x65\x61\x78\x65": fR("0x3a"),
                "\x68\x61\x65\x6c\x64": fR("0x3b"),
                "\x61\x61\x78\x64\x64": "\x65\x68\x61\x64",
                "\x64\x65\x64\x68\x65": fR("0x3c"),
                "\x6d\x6d\x65\x78\x68": fR("0x3d"),
                "\x65\x65\x69\x78\x65": "\x78\x68\x6d",
                "\x68\x63\x61\x6d\x61": function(jR, jQ) {
                    return jR < jQ
                },
                "\x65\x78\x6c\x61\x6c": fR("0x3e"),
                "\x78\x78\x65\x68\x68": function(jQ, jR) {
                    return jQ !== jR
                },
                "\x61\x65\x65\x65\x61": fR("0x3f"),
                "\x78\x61\x6d\x61\x65": fR("0x40"),
                "\x68\x65\x61\x65\x6d": "\x6d\x61\x63",
                "\x68\x78\x65\x63\x6c": "\x61\x6d\x61",
                "\x64\x65\x65\x69\x65": function(jQ) {
                    return jQ()
                },
                "\x6d\x65\x78\x65\x65": fR("0x41"),
                "\x64\x64\x6c\x63\x63": "\x6c\x69\x61",
                "\x69\x61\x61\x78\x65": function(jR, jQ) {
                    return jR > jQ
                },
                "\x65\x78\x65\x68\x69": fR("0x42"),
                "\x68\x65\x78\x64\x68": fR("0x43"),
                "\x64\x68\x78\x64\x63": fR("0x44"),
                "\x78\x65\x61\x64\x69": function(jR, jQ) {
                    return jR - jQ
                },
                "\x61\x6c\x6d\x65\x65": fR("0x45"),
                "\x78\x63\x78\x61\x61": fR("0x46"),
                "\x69\x63\x65\x69\x64": fR("0x47"),
                "\x78\x69\x64\x6c\x6d": fR("0x48"),
                "\x6d\x63\x78\x65\x6d": fR("0x49"),
                "\x68\x6c\x68\x69\x65": function(jR, jQ) {
                    return jR === jQ
                },
                "\x78\x61\x65\x64\x64": fR("0x4a"),
                "\x68\x68\x6c\x68\x69": fR("0x4b"),
                "\x61\x64\x63\x6d\x6c": "\x65\x65\x65"
            };
            var e = fR("0x4c");
            while (T["\x78\x78\x65\x68\x68"](e, "\x6c\x65\x68\x64")) {
                switch (e) {
                case fR("0x4d"):
                    this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f\x5a\x6f\x6f\x6d"] = [];
                    e = fR("0x40");
                    break;
                case fR("0x38"):
                    this[fR("0x4e")] = [];
                    e = T[fR("0x4f")];
                    break;
                case T[fR("0x50")]:
                    ff[fR("0x51")](function(jX) {
                        var jW = {
                            "\x6d\x6c\x6c\x6c\x64": "\x64\x61\x68",
                            "\x65\x78\x61\x64\x6c": T["\x65\x61\x6d\x69\x61"],
                            "\x61\x6c\x78\x63\x61": function(j1, j0) {
                                return j1 > j0
                            },
                            "\x68\x6d\x69\x68\x68": T["\x6d\x69\x65\x69\x65"],
                            "\x6c\x6c\x65\x65\x65": T[fR("0x52")],
                            "\x61\x61\x64\x63\x68": T["\x6d\x65\x65\x78\x61"],
                            "\x61\x68\x68\x65\x65": T[fR("0x53")],
                            "\x63\x61\x6c\x61\x65": fR("0x54"),
                            "\x61\x63\x78\x68\x61": T[fR("0x55")],
                            "\x68\x6d\x65\x63\x65": T[fR("0x56")],
                            "\x65\x78\x69\x69\x78": fR("0x57"),
                            "\x78\x69\x78\x68\x61": T["\x6c\x61\x63\x61\x6c"],
                            "\x6d\x78\x63\x61\x64": fR("0x58")
                        };
                        var jS = fR("0x59");
                        while (T[fR("0x5a")](jS, T["\x65\x63\x61\x65\x6c"])) {
                            switch (jS) {
                            case fR("0x5b"):
                                jV = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_asm_wdaocw.js";
                                jS = T[fR("0x5c")];
                                break;
                            case fR("0x59"):
                                var jV;
                                jS = T[fR("0x5d")];
                                break;
                            case fR("0x5e"):
                                for (var jU = 0; jU < i; jU++) {
                                    var jT = fR("0x5f");
                                    while (T[fR("0x5a")](jT, T[fR("0x60")])) {
                                        switch (jT) {
                                        case fR("0x5f"):
                                            var jR = T[fR("0x61")](jo, jV);
                                            jT = fR("0x39");
                                            break;
                                        case T[fR("0x62")]:
                                            jP["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][fR("0x63")](jR);
                                            jT = fR("0x37");
                                            break;
                                        case T[fR("0x64")]:
                                            jR[fR("0x65")] = function jY(j4) {
                                                var j3 = "\x78\x61\x78";
                                                while (j3 !== fR("0x66")) {
                                                    switch (j3) {
                                                    case jW[fR("0x67")]:
                                                        var j2 = j0[fR("0x68")];
                                                        j3 = fR("0x69");
                                                        break;
                                                    case fR("0x30"):
                                                        var j1 = new fu(fR("0x6a"));
                                                        j3 = jW[fR("0x6b")];
                                                        break;
                                                    case fR("0x58"):
                                                        if (jW["\x61\x6c\x78\x63\x61"](jP[fR("0x4e")][fR("0x6c")], 0)) {
                                                            j3 = fR("0x6d");
                                                            break
                                                        }
                                                        j3 = jW[fR("0x6e")];
                                                        break;
                                                    case jW[fR("0x6f")]:
                                                        this[fR("0x70")] = ![];
                                                        j3 = jW[fR("0x71")];
                                                        break;
                                                    case jW[fR("0x6b")]:
                                                        j1[fR("0x72")] = jW[fR("0x73")];
                                                        j3 = jW[fR("0x74")];
                                                        break;
                                                    case fR("0x75"):
                                                        j3 = j4[fR("0x76")] ? jW[fR("0x77")] : jW[fR("0x78")];
                                                        break;
                                                    case fR("0x6d"):
                                                        var j0 = jP["\x61\x72\x72\x50\x65\x6e\x64\x69\x6e\x67\x44\x61\x74\x61"][fR("0x79")]();
                                                        j3 = fR("0x7a");
                                                        break;
                                                    case fR("0x33"):
                                                        this[fR("0x7b")] && this[fR("0x7b")](null, this[fR("0x7c")]);
                                                        j3 = "\x6c\x6d\x64";
                                                        break;
                                                    case fR("0x69"):
                                                        jP["\x6c\x6f\x61\x64\x54\x69\x6c\x65\x44\x61\x74\x61"](j0[fR("0x7d")], j0[fR("0x7e")], j0[fR("0x7f")], j2);
                                                        j3 = jW["\x68\x6d\x69\x68\x68"];
                                                        break;
                                                    case jW[fR("0x80")]:
                                                        this[fR("0x81")] = null;
                                                        j3 = jW[fR("0x82")];
                                                        break;
                                                    case jW[fR("0x82")]:
                                                        this["\x5f\x70\x61\x72\x73\x69\x6e\x67\x54\x69\x6c\x65\x4b\x65\x79"] = null;
                                                        j3 = jW[fR("0x83")];
                                                        break;
                                                    case fR("0x32"):
                                                        this[fR("0x7b")] = null;
                                                        j3 = jW[fR("0x80")];
                                                        break;
                                                    case "\x6d\x6c\x68":
                                                        this[fR("0x7b")] && this[fR("0x7b")](j4["\x64\x61\x74\x61"], this[fR("0x7c")]);
                                                        j3 = jW[fR("0x6f")];
                                                        break;
                                                    case "\x69\x68\x64":
                                                        jO[fR("0x84")](j1);
                                                        j3 = fR("0x66");
                                                        break
                                                    }
                                                }
                                            }
                                            ;
                                            jT = "\x6d\x65\x61";
                                            break
                                        }
                                    }
                                }
                                jS = "\x78\x6c\x63";
                                break;
                            case T[fR("0x5d")]:
                                jS = jX ? fR("0x85") : fR("0x5b");
                                break;
                            case fR("0x85"):
                                jV = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_wasm_wjzq4p.js";
                                jS = fR("0x5e");
                                break;
                            case fR("0x3a"):
                                for (var jZ = 0; jZ < Math[fR("0x86")](jP[fR("0x4e")][fR("0x6c")], i); jZ++) {
                                    var jQ = jP[fR("0x4e")][fR("0x79")]();
                                    jP[fR("0x87")](jQ[fR("0x7d")], jQ["\x74\x69\x6c\x65\x49\x6e\x66\x6f"], jQ[fR("0x7f")], jQ[fR("0x68")])
                                }
                                jS = T["\x65\x63\x61\x65\x6c"];
                                break;
                            case fR("0x88"):
                                if (jP[fR("0x4e")][fR("0x6c")] > 0) {
                                    jS = T[fR("0x89")];
                                    break
                                }
                                jS = T["\x65\x63\x61\x65\x6c"];
                                break
                            }
                        }
                    });
                    e = T[fR("0x8a")];
                    break;
                case T[fR("0x8b")]:
                    jO["\x6f\x6e"](fR("0x8c"), function() {
                        var jS = T[fR("0x8d")];
                        while (jS !== T[fR("0x8e")]) {
                            switch (jS) {
                            case T[fR("0x8d")]:
                                for (var jR = 0, jQ = jP["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][fR("0x6c")]; jR < jQ; jR++) {
                                    jP[fR("0x8f")][jR]["\x69\x73\x53\x65\x6e\x64\x46\x53"] = ![]
                                }
                                jS = T["\x64\x65\x64\x68\x65"];
                                break;
                            case fR("0x90"):
                                jP[fR("0x91")] = null;
                                jS = T[fR("0x92")];
                                break;
                            case fR("0x3c"):
                                if (typeof this[fR("0x93")][fR("0x94")] !== fR("0x95")) {
                                    jS = T["\x65\x65\x69\x78\x65"];
                                    break
                                }
                                jS = fR("0x96");
                                break;
                            case fR("0x3d"):
                                jP[fR("0x97")] = [];
                                jS = "\x65\x68\x61\x64";
                                break
                            }
                        }
                    });
                    e = "\x69\x64\x68";
                    break;
                case fR("0x98"):
                    if ((T[fR("0x99")](bS) || eJ[fR("0x9a")]["\x69\x65"]) && i > 2) {
                        e = T[fR("0x9b")];
                        break
                    }
                    e = fR("0x9c");
                    break;
                case T[fR("0x9d")]:
                    e = T[fR("0x9e")](this[fR("0x9f")], 1) ? T[fR("0xa0")] : T[fR("0xa1")];
                    break;
                case T[fR("0xa2")]:
                    this[fR("0xa3")] = this[fR("0x9f")];
                    e = fR("0xa4");
                    break;
                case T[fR("0x4f")]:
                    var i = Math[fR("0xa5")](T["\x78\x65\x61\x64\x69"](navigator[fR("0xa6")], 2), 0) || 4;
                    e = "\x65\x61\x65";
                    break;
                case "\x61\x63\x64":
                    i = 2;
                    e = fR("0x9c");
                    break;
                case T[fR("0xa7")]:
                    jO["\x6f\x6e"](T[fR("0xa8")], function() {
                        for (var jQ = 0; jQ < jP[fR("0x8f")][fR("0x6c")]; jQ++) {
                            if (jP[fR("0x8f")][jQ]) {
                                jP[fR("0x8f")][jQ][fR("0xa9")]()
                            }
                        }
                        jP[fR("0x8f")][fR("0x6c")] = 0
                    });
                    e = T[fR("0xaa")];
                    break;
                case fR("0xab"):
                    jO["\x6f\x6e"](T[fR("0xac")], function() {
                        var jS = fR("0xad");
                        while (T["\x61\x63\x69\x6c\x65"](jS, fR("0x3e"))) {
                            switch (jS) {
                            case fR("0xad"):
                                for (var jR = 0, jQ = jP[fR("0x8f")][fR("0x6c")]; T[fR("0xae")](jR, jQ); jR++) {
                                    jP[fR("0x8f")][jR][fR("0xaf")] = ![]
                                }
                                jS = "\x6d\x6c\x61";
                                break;
                            case "\x65\x64\x78":
                                jP[fR("0x97")] = [];
                                jS = T[fR("0xb0")];
                                break;
                            case T[fR("0xb1")]:
                                jP[fR("0x91")] = null;
                                jS = fR("0x30");
                                break;
                            case "\x6d\x6c\x61":
                                if (T[fR("0x5a")](typeof this[fR("0x93")][fR("0x94")], fR("0x95"))) {
                                    jS = fR("0x3c");
                                    break
                                }
                                jS = "\x61\x64\x6d\x65";
                                break
                            }
                        }
                    });
                    e = fR("0xb2");
                    break;
                case fR("0x4c"):
                    var jP = this;
                    e = fR("0xb3");
                    break;
                case T[fR("0xa1")]:
                    this["\x74\x65\x78\x74\x53\x69\x7a\x65\x52\x61\x74\x69\x6f"] = 1;
                    e = "\x6d\x65\x6d";
                    break;
                case T[fR("0xb4")]:
                    if (T[fR("0xb5")](typeof this[fR("0xb6")][fR("0x93")][fR("0x94")], fR("0x95"))) {
                        e = T["\x78\x61\x65\x64\x64"];
                        break
                    }
                    e = "\x61\x64\x61";
                    break;
                case T[fR("0xb7")]:
                    this[fR("0x9f")] = T[fR("0x99")](fX);
                    e = T[fR("0xa2")];
                    break;
                case T[fR("0xb8")]:
                    this["\x6d\x61\x70"] = jO;
                    e = fR("0x38");
                    break;
                case fR("0x9c"):
                    this[fR("0x8f")] = [];
                    e = fR("0x4b");
                    break;
                case fR("0x4a"):
                    this[fR("0x91")] = null;
                    e = fR("0x4d");
                    break;
                case fR("0x42"):
                    this[fR("0xb9")] = 2;
                    e = T[fR("0xb4")];
                    break
                }
            }
        },
        "\x67\x65\x74\x49\x64\x6c\x65\x57\x6f\x72\x6b\x65\x72": function() {
            var jP = {
                "\x63\x64\x68\x61\x61": fR("0xba"),
                "\x65\x6c\x78\x6c\x61": "\x68\x6d\x61",
                "\x69\x6c\x61\x63\x69": fR("0xbb")
            };
            for (var jO = 0, T = this["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"]["\x6c\x65\x6e\x67\x74\x68"]; jO < T; jO++) {
                var i = fR("0xbc");
                while (i !== jP[fR("0xbd")]) {
                    switch (i) {
                    case fR("0xbe"):
                        if (!e[fR("0x70")]) {
                            i = jP[fR("0xbf")];
                            break
                        }
                        i = jP[fR("0xbd")];
                        break;
                    case fR("0xbc"):
                        var e = this["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][jO];
                        i = fR("0xbe");
                        break;
                    case fR("0x3d"):
                        e["\x5f\x69\x73\x42\x75\x73\x79"] = !![];
                        i = "\x78\x64\x78";
                        break;
                    case jP[fR("0xc0")]:
                        return e
                    }
                }
            }
            return null
        },
        "\x72\x65\x6c\x65\x61\x73\x65\x50\x65\x6e\x64\x69\x6e\x67\x44\x61\x74\x61": function(i) {
            var e = {
                "\x69\x6c\x61\x64\x64": function(jU, jT) {
                    return jU >= jT
                },
                "\x64\x61\x78\x65\x65": function(jT, jU) {
                    return jT + jU
                },
                "\x64\x78\x61\x65\x68": fR("0xc1")
            };
            var jS = [];
            var jR = this[fR("0x4e")];
            for (var jQ = jR["\x6c\x65\x6e\x67\x74\x68"] - 1; e["\x69\x6c\x61\x64\x64"](jQ, 0); jQ--) {
                var jO = jR[jQ];
                var T = jO[fR("0x7e")];
                if (i[fR("0xc2")] !== T[fR("0xc2")]) {
                    continue
                }
                var jP = e[fR("0xc3")](e[fR("0xc4")] + T["\x63\x6f\x6c"] + "\x5f" + T[fR("0xc5")] + "\x5f", T[fR("0xc6")]);
                if (!i[jP]) {
                    jR[fR("0xc7")](jQ, 1);
                    jS[fR("0x63")](T)
                }
            }
            return jS
        },
        "\x6c\x6f\x61\x64\x54\x69\x6c\x65\x44\x61\x74\x61": function(jQ, jO, T, i) {
            var e = {
                "\x61\x69\x65\x68\x68": fR("0xc8"),
                "\x68\x65\x61\x78\x78": function(j0, jZ) {
                    return j0 !== jZ
                },
                "\x61\x63\x6d\x69\x78": fR("0xc9"),
                "\x68\x63\x69\x65\x64": fR("0xca"),
                "\x64\x65\x78\x78\x78": "\x65\x63\x61",
                "\x6d\x61\x64\x69\x61": fR("0x3d"),
                "\x61\x61\x6d\x68\x61": "\x63\x63\x69",
                "\x65\x6d\x69\x61\x6c": "\x61\x69\x6c",
                "\x61\x65\x61\x65\x6c": function(j0, jZ) {
                    return j0 + jZ
                },
                "\x65\x64\x6c\x69\x65": fR("0xcb"),
                "\x61\x68\x68\x61\x68": "\x69\x61\x61",
                "\x61\x61\x6c\x6c\x78": fR("0xcc"),
                "\x65\x6d\x61\x64\x65": fR("0xcd"),
                "\x69\x63\x65\x6c\x61": "\x6c\x78\x6d",
                "\x6d\x6c\x65\x6d\x65": fR("0xce"),
                "\x69\x61\x65\x68\x65": fR("0xcf"),
                "\x65\x6c\x61\x69\x68": fR("0xd0"),
                "\x65\x78\x64\x61\x65": "\x65\x6d\x65",
                "\x69\x69\x78\x6c\x64": fR("0xd1"),
                "\x63\x65\x63\x65\x65": fR("0xd2"),
                "\x6c\x61\x63\x63\x69": "\x61\x61\x68",
                "\x61\x65\x61\x65\x65": fR("0xd3"),
                "\x61\x68\x6c\x68\x61": function(j0, jZ) {
                    return j0 + jZ
                },
                "\x65\x69\x63\x64\x6d": fR("0xd4"),
                "\x61\x65\x68\x69\x63": fR("0xd5"),
                "\x61\x64\x64\x6c\x6c": fR("0xd6"),
                "\x78\x78\x6d\x65\x61": fR("0xd7"),
                "\x78\x6c\x65\x63\x64": function(j0, jZ) {
                    return j0 + jZ
                },
                "\x61\x78\x68\x63\x6d": "\x46\x65\x61\x74\x75\x72\x65\x53\x74\x79\x6c\x65",
                "\x65\x6c\x68\x61\x6d": fR("0xd8"),
                "\x63\x61\x69\x6d\x6d": fR("0xd9"),
                "\x6d\x64\x78\x61\x78": fR("0xda"),
                "\x61\x65\x68\x63\x69": "\x63\x65\x65",
                "\x64\x6c\x64\x63\x61": fR("0xdb"),
                "\x78\x65\x68\x6c\x65": fR("0xdc"),
                "\x61\x63\x65\x68\x6d": function(j0, jZ) {
                    return j0 + jZ
                },
                "\x61\x61\x65\x65\x64": fR("0xdd"),
                "\x6d\x61\x64\x61\x65": fR("0xde")
            };
            var jY = e[fR("0xdf")];
            while (e[fR("0xe0")](jY, "\x63\x68\x63\x6c")) {
                switch (jY) {
                case e[fR("0xe1")]:
                    if (jR) {
                        jY = e["\x68\x63\x69\x65\x64"];
                        break
                    }
                    jY = e[fR("0xe2")];
                    break;
                case e[fR("0xe2")]:
                    if (!jP[fR("0xaf")]) {
                        jY = e[fR("0xe3")];
                        break
                    }
                    jY = e[fR("0xe4")];
                    break;
                case fR("0xdc"):
                    jP[fR("0x81")] = jO;
                    jY = e[fR("0xe5")];
                    break;
                case fR("0xe6"):
                    this[fR("0x91")] = JSON[fR("0xe7")](bw[e[fR("0xe8")](e["\x65\x64\x6c\x69\x65"], jS)]);
                    jY = fR("0xce");
                    break;
                case e[fR("0xe9")]:
                    var jX = {
                        "\x75\x72\x6c": jQ,
                        "\x74\x69\x6c\x65\x49\x6e\x66\x6f": jO,
                        "\x74\x69\x6c\x65\x4b\x65\x79": T,
                        "\x63\x62\x6b": i
                    };
                    jY = e[fR("0xea")];
                    break;
                case e[fR("0xeb")]:
                    var jW = this[fR("0xb6")][fR("0xec")][fR("0xed")];
                    jY = e[fR("0xee")];
                    break;
                case e["\x6d\x6c\x65\x6d\x65"]:
                    if (this[e[fR("0xef")] + jS]) {
                        jY = e[fR("0xf0")];
                        break
                    }
                    jY = e[fR("0xf1")];
                    break;
                case e[fR("0xf2")]:
                    jP[fR("0xaf")] = !![];
                    jY = e[fR("0xe4")];
                    break;
                case e[fR("0xf3")]:
                    if (jR && this[fR("0x91")]) {
                        jY = e["\x6c\x61\x63\x63\x69"];
                        break
                    }
                    jY = fR("0xf4");
                    break;
                case fR("0xd6"):
                    if (!this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x49\x6e\x64\x6f\x6f\x72\x53\x74\x79\x6c\x65"]) {
                        jY = fR("0xf5");
                        break
                    }
                    jY = e[fR("0xf6")];
                    break;
                case e["\x69\x63\x65\x6c\x61"]:
                    var jV = jW ? this["\x6d\x61\x70"][fR("0xec")][fR("0xf7")] : ![];
                    jY = fR("0xf8");
                    break;
                case fR("0xd0"):
                    jU[fR("0xf9")] = this[e[fR("0xfa")](fR("0xcf"), jS)];
                    jY = fR("0xfb");
                    break;
                case fR("0xf8"):
                    jY = jP ? fR("0xdb") : e["\x61\x68\x68\x61\x68"];
                    break;
                case e[fR("0xfc")]:
                    var jU = {
                        "\x61\x63\x74\x69\x6f\x6e": fR("0x87"),
                        "\x75\x72\x6c": jQ,
                        "\x74\x69\x6c\x65\x49\x6e\x66\x6f": jO,
                        "\x74\x69\x6c\x65\x4b\x65\x79": T,
                        "\x69\x73\x54\x65\x78\x74": jV,
                        "\x69\x73\x50\x6f\x69": jW
                    };
                    jY = fR("0xd9");
                    break;
                case fR("0xf4"):
                    jU[fR("0xfd")] = {
                        "\x77\x6f\x72\x64\x53\x70\x61\x63\x65\x52\x61\x74\x69\x6f": this[fR("0xa3")],
                        "\x74\x65\x78\x74\x53\x69\x7a\x65\x52\x61\x74\x69\x6f": this[fR("0xb9")]
                    };
                    jY = fR("0xfe");
                    break;
                case fR("0xd8"):
                    if (!this[e[fR("0xff")] + jT]) {
                        jY = fR("0x100");
                        break
                    }
                    jY = e[fR("0x101")];
                    break;
                case e[fR("0xe4")]:
                    jP[fR("0x102")](jU);
                    jY = e[fR("0x103")];
                    break;
                case fR("0x104"):
                    this[e[fR("0x105")](fR("0xcf"), jS)] = JSON[fR("0xe7")](bw[e[fR("0x106")] + jS]);
                    jY = e[fR("0x107")];
                    break;
                case e["\x6c\x61\x63\x63\x69"]:
                    jU[fR("0x108")] = this[fR("0x91")];
                    jY = fR("0xf4");
                    break;
                case fR("0x59"):
                    jP[fR("0x7c")] = T;
                    jY = e[fR("0xfc")];
                    break;
                case "\x6d\x68\x69":
                    jU[fR("0x109")] = jS;
                    jY = fR("0xd1");
                    break;
                case fR("0x10a"):
                    var jT = jS;
                    jY = e[fR("0xe1")];
                    break;
                case fR("0x10b"):
                    jU[fR("0x10c")] = this[fR("0x10d")];
                    jY = e[fR("0xf3")];
                    break;
                case fR("0x3d"):
                    if (!this[e[fR("0xef")] + jS] && bw[e[fR("0x105")](e[fR("0x106")], jS)]) {
                        jY = fR("0x104");
                        break
                    }
                    jY = e[fR("0x107")];
                    break;
                case e["\x63\x61\x69\x6d\x6d"]:
                    var jS = this["\x6d\x61\x70"][fR("0x10e")]();
                    jY = fR("0x10f");
                    break;
                case e[fR("0x110")]:
                    if (!this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f"]) {
                        jY = fR("0xe6");
                        break
                    }
                    jY = fR("0xce");
                    break;
                case e[fR("0x111")]:
                    this[fR("0x10d")] = JSON["\x73\x74\x72\x69\x6e\x67\x69\x66\x79"](bw[fR("0x10c")]);
                    jY = "\x61\x6c\x78";
                    break;
                case fR("0x10f"):
                    var jR = !!(jS[fR("0x112")]("\x63\x75\x73\x74\x6f\x6d") === 0);
                    jY = fR("0x10a");
                    break;
                case e[fR("0xf6")]:
                    if (jR && bw[e[fR("0x105")](e[fR("0x113")], jS)]) {
                        jY = e[fR("0x110")];
                        break
                    }
                    jY = fR("0xce");
                    break;
                case e["\x64\x6c\x64\x63\x61"]:
                    jP[fR("0x7b")] = i;
                    jY = e[fR("0x114")];
                    break;
                case fR("0x100"):
                    this[e[fR("0x115")](fR("0xd5"), jT)] = JSON[fR("0xe7")](bw[e["\x61\x61\x65\x65\x64"] + jT]);
                    jY = e[fR("0x101")];
                    break;
                case fR("0xca"):
                    jT = e[fR("0x116")];
                    jY = fR("0x117");
                    break;
                case fR("0xfb"):
                    jU[fR("0xdd")] = this[e[fR("0x115")](e["\x61\x65\x68\x69\x63"], jT)];
                    jY = fR("0x10b");
                    break;
                case fR("0xcc"):
                    this[fR("0x4e")][fR("0x63")](jX);
                    jY = fR("0xd7");
                    break;
                case fR("0xc8"):
                    var jP = this[fR("0x118")]();
                    jY = fR("0xcd");
                    break
                }
            }
        }
    };
    eJ["\x65\x78\x74\x65\x6e\x64"](i9[fR("0x119")], gN);
    function iv(i) {
        this.tileLayers = [];
        this.map = i;
        var e = this.config = d6[this.map.mapType];
        this.errorUrl = e.errorUrl;
        this.tileSize = e.tileSize;
        this.baseUnits = e.baseUnits;
        this.baseZoomLevel = e.zoomLevelBase;
        this.tileURLs = e.tileUrls;
        this.tilesInfoCache = {};
        this.loadDelay = 10;
        this._labelTextCanvas = null
    }
    bw.register(function(i) {
        if (i._renderType !== "webgl") {
            return
        }
        var e = i.tileMgr = new iv(i);
        i.addEventListener("addtilelayer", function(jO) {
            e.addWebGLLayer(jO.target)
        });
        i.addEventListener("removetilelayer", function(jO) {
            e.removeWebGLLayer(jO.target)
        });
        i.on("update", function T(jP) {
            if (i.getFeatureStyleTags().length === 0 || !i.customLoaded) {
                return
            }
            var jO = false;
            if (jP.changedStatus && jP.changedStatus.onzoom_changed) {
                jO = true
            }
            e.loadLayersData({
                zoomChanged: jO
            })
        });
        i.on("style_changed", function() {
            e.loadLayersData()
        })
    });
    eJ.extend(iv.prototype, {
        addWebGLLayer: function(T) {
            this.tileLayers.push(T);
            T.initDrawData();
            if (this.tileLayers.length > 1) {
                for (var e = 1; e < this.tileLayers.length; e++) {
                    if (this.tileLayers[e].isFlat) {
                        this.map.setDisplayOptions({
                            isFlat: true
                        });
                        break
                    }
                }
            }
            if (this.map.getFeatureStyleTags().length > 0 && this.map.customLoaded) {
                this.loadLayersData()
            } else {
                var jO = this;
                this.map.loadMapStyleFiles(function() {
                    jO.loadLayersData()
                })
            }
        },
        removeWebGLLayer: function(jQ) {
            var jR = false;
            for (var jP = 0, jO = this.tileLayers.length; jP < jO; jP++) {
                if (jQ === this.tileLayers[jP]) {
                    jR = true;
                    this.tileLayers.splice(jP, 1);
                    break
                }
            }
            if (jR === false) {
                return
            }
            jQ.destroyDrawData();
            if (this.map.getFeatureStyleTags().length > 0) {
                this.loadLayersData()
            }
            if (this.tileLayers.length === 1) {
                this.map.setDisplayOptions({
                    isFlat: false
                })
            } else {
                var e = false;
                for (var jP = 1; jP < this.tileLayers.length; jP++) {
                    if (this.tileLayers[jP].isFlat) {
                        e = true;
                        break
                    }
                }
                this.map.setDisplayOptions({
                    isFlat: e
                })
            }
            var T = new fu("onrefresh");
            T.source = "removewebgllayer";
            this.map.fire(T)
        },
        getLabelTextCanvas: function() {
            if (!this._labelTextCanvas) {
                this._labelTextCanvas = new av(this.map)
            }
            return this._labelTextCanvas
        },
        loadLayersData: function(i) {
            if (this.map.suspendLoad) {
                return
            }
            var jO = this;
            i = i || {};
            var T = !!i.zoomChanged;
            var e = (T === true || this.map.getTilt() > 50);
            if (!e) {
                if (!this.syncLoadTimer) {
                    this.syncLoadTimer = setTimeout(function() {
                        jO._loadLayersFromCache(T);
                        jO.syncLoadTimer = null
                    }, 40)
                }
            } else {
                this._loadLayersFromCache(T)
            }
            if (!jO.map.viewAnimationTime) {
                this.timer && window.clearTimeout(this.timer)
            }
            this.timer = window.setTimeout(function() {
                if (jO.map.viewAnimationTime) {
                    if (new Date().getTime() - jO.map.viewAnimationTime < 1000) {
                        return
                    }
                    jO.map.viewAnimationTime = new Date().getTime()
                }
                var jQ = jO.tileLayers.length;
                jO.tilesInfoCache = {};
                for (var jS = 0; jS < jQ; jS++) {
                    var jU = jO.tileLayers[jS];
                    var jT = jU.tileType;
                    var jP = null;
                    var jR = jO._getTilesInfoKey(jT, jU);
                    if (jO.tilesInfoCache[jR]) {
                        jP = jO.tilesInfoCache[jR]
                    } else {
                        jP = jO.calcTilesInfo(jT, jU);
                        jO.tilesInfoCache[jR] = jP
                    }
                    jU.loadLayerData(jP, false, T)
                }
                jO.timer = null
            }, this.loadDelay);
            if ((bS() || eJ.Browser.ie) && T) {
                this.loadDelay = 200
            } else {
                this.loadDelay = 80
            }
        },
        _getTilesInfoKey: function(i, T) {
            var e = i.getName();
            e += ("_" + (T.transform ? T.transform.source : "default"));
            e += ("_" + T.spanLevel || 0);
            return e
        },
        _loadLayersFromCache: function(jQ) {
            this.map._featureMgr.clearData();
            this.map.tileLabels = [];
            var jT = this.tileLayers;
            jT.sort(function(jU, i) {
                return jU.zIndex - i.zIndex > 0
            });
            var T = jT.length;
            this.tilesInfoCache = {};
            for (var jP = 0; jP < T; jP++) {
                var jS = jT[jP];
                var jR = jS.tileType;
                var e = null;
                var jO = this._getTilesInfoKey(jR, jS);
                if (this.tilesInfoCache[jO]) {
                    e = this.tilesInfoCache[jO]
                } else {
                    e = this.calcTilesInfo(jR, jS);
                    this.tilesInfoCache[jO] = e
                }
                jS.loadLayerData(e, true, jQ)
            }
        },
        calcTilesInfo: function(j1, ks) {
            var ke = this.map;
            var kk = ke.getMapType();
            var kf = d6[kk];
            var j8 = ke.getZoom();
            var e = Math.floor(j8);
            var jR = j1.getDataZoom(j8);
            var kx = j1.getName();
            jR = b6(jR, kf.minDataZoom, kf.maxDataZoom);
            var kn = e;
            if (j1._name === "web" || j1._name === "xyz") {
                kn = jR
            } else {
                if (kn < 3) {
                    kn = 3
                }
            }
            var kc = j1.getTileSize(j8);
            var jQ = j1.getBaseTileSize(j8);
            var ka = ke.getBoundsIn();
            var j5 = j1.getMercatorSize(j8, jR);
            var j4;
            var kl;
            var kb;
            var kp;
            var kg = ke.getCenterIn();
            if (kk !== BMAP_SATELLITE_MAP) {
                kg = eM.calcLoopCenterPoint(kg)
            }
            if (kx === "xyz") {
                return this.calcXYZTilesInfo(kg, ka, jR, kx, ks, ke)
            }
            var j9 = Math.floor(kg.lng / j5);
            var jT = Math.floor(kg.lat / j5);
            var ki = 0;
            var jO = 0;
            if (kx !== "web") {
                ka = eM.calcLoopMapBounds(ka, ke.getCenter())
            }
            if (ka.ne.lng > eM._mc180X) {
                var jZ = eM.getSpaceDistanceInPixel(jR);
                ki = Math.ceil(jZ / jQ)
            }
            if (ka.sw.lng < eM._mcM180X) {
                var jZ = eM.getSpaceDistanceInPixel(jR);
                jO = Math.ceil(jZ / jQ)
            }
            if (ka.ne.lat > 19505879.362428114 || ka.sw.lat < -15949096.637571886) {
                ka.ne.lat = 19505879.362428114;
                ka.sw.lat = -15949096.637571886
            }
            var jV = [Math.floor(ka.sw.lng / j5) - jO, Math.floor(ka.sw.lat / j5)];
            var kv = [Math.floor(ka.ne.lng / j5) + ki, Math.floor(ka.ne.lat / j5)];
            j4 = jV[0];
            kl = kv[0] + 1;
            kb = jV[1];
            kp = kv[1] + 1;
            var j0 = [];
            for (var jX = j4; jX < kl; jX++) {
                if (eM.isTileBlank(jX, jR, jQ) === true) {
                    continue
                }
                for (var j2 = kb; j2 < kp; j2++) {
                    var kr = false;
                    var jW = 256;
                    if (kx === "web") {
                        var km = eM.calcLoopParam(jX, jR);
                        var ku = {
                            col: km.col,
                            row: j2,
                            baseTileSize: 256,
                            zoom: jR
                        };
                        var kd = iN.prototype.tileToBound(ku, ke.getCenter());
                        if (kd.LL.sw.lng * kd.LL.ne.lng < 0 && Math.floor(kd.LL.ne.lng) < 0) {
                            kr = true;
                            jW = eM.pixelWidth(kd.MC.sw.lng, ke.getZoom())
                        }
                    }
                    var jY = {
                        col: jX,
                        row: j2,
                        zoom: jR,
                        useZoom: kn,
                        tileTypeName: kx,
                        loopOffsetX: 0,
                        tileSize: kc,
                        baseTileSize: jQ,
                        mercatorSize: j5,
                        combine: kr,
                        dataIndex: jW
                    };
                    j0.push(jY);
                    var kj = "id_" + jX + "_" + j2 + "_" + jR;
                    j0[kj] = true
                }
            }
            if (kk !== BMAP_SATELLITE_MAP) {
                j0 = eM.calcLoopTiles(j0, jR, jQ, j5)
            }
            if (jR === 3) {
                for (var kt = 0, kq = j0.length; kt < kq; kt++) {
                    var jX = j0[kt].col;
                    var j2 = j0[kt].row;
                    var km = eM.calcLoopParam(jX, jR);
                    var jS = km.T;
                    var j6 = jX >= 0 ? jX - jS : jX + jS;
                    var j7 = "id_" + j6 + "_" + j2 + "_" + jR;
                    if (!j0[j7]) {
                        var jY = {
                            col: j6,
                            row: j2,
                            zoom: jR,
                            useZoom: kn,
                            loopOffsetX: 0,
                            tileSize: kc,
                            baseTileSize: jQ,
                            mercatorSize: j5,
                            combine: false
                        };
                        j0.push(jY);
                        j0[j7] = true
                    }
                }
            }
            if (this.map._tilt > 0) {
                for (var kt = 0; kt < j0.length; kt++) {
                    var jU = j0[kt];
                    var ko = jU.col;
                    var kw = jU.row;
                    var kh = [];
                    kh.minX = ko * j5;
                    kh.maxX = (ko + 1) * j5;
                    kh.minY = kw * j5;
                    kh.maxY = (kw + 1) * j5;
                    var jP = new cr(0,0);
                    jP.lng = (kh.minX + kh.maxX) / 2;
                    jP.lat = (kh.minY + kh.maxY) / 2;
                    var j3 = ke.pointToPixelIn(jP);
                    if (j3.x > 0 && j3.x < this.map.width && j3.y > 0 && j3.y < this.map.height) {
                        continue
                    }
                    if (kh.minX < kg.lng && kh.maxX > kg.lng && kh.minY < kg.lat && kh.maxY > kg.lat) {
                        continue
                    }
                    if (!this.ifTileInMapBounds(kh, ka, ko, kw)) {
                        j0.splice(kt, 1);
                        kt--
                    }
                }
            }
            j0.sort((function(i) {
                return function(T, ky) {
                    return ((0.4 * Math.abs(T.col - i[0]) + 0.6 * Math.abs(T.row - i[1])) - (0.4 * Math.abs(ky.col - i[0]) + 0.6 * Math.abs(ky.row - i[1])))
                }
            }
            )([j9, jT]));
            j0.zoom = jR;
            j0.tileTypeName = kx;
            return j0
        },
        calcXYZTilesInfo: function(jZ, jS, jY, j3, jR, j6) {
            var jU = j6.width;
            var j4 = j6.height;
            var jT = Math.floor(jY);
            var jV = null;
            if (jR.transform.target === "EPSG3857") {
                var jO = dq.transformBDmcPoint(jZ, jR.transform);
                var jP = dq.getRangeExtent(jO, jU, j4, jT, jR.transform);
                jV = [jP.minX, jP.minY, jP.maxX, jP.maxY]
            } else {
                if (jR.transform.source === "BD09MC") {
                    var jO = [jZ.lng, jZ.lat];
                    jV = [jS.sw.lng, jS.sw.lat, jS.ne.lng, jS.ne.lat]
                } else {
                    var jO = dq.transformBDmcPoint(jZ, jR.transform);
                    var jQ = dq.transformBDmcPoint(jS.ne, jR.transform);
                    var jX = dq.transformBDmcPoint(jS.sw, jR.transform);
                    jV = dq.getLoopBox(jO, [jX[0], jX[1], jQ[0], jQ[1]])
                }
            }
            if (!jO || !jV) {
                return []
            }
            jT = jT + jR.spanLevel;
            var T = dq.getTileRangeForExtentFactory(jV, jT, jR.transform);
            var e = [];
            var j7 = dq.getResolutionScale(jT, jR.transform);
            for (var j2 = T.minX; j2 <= T.maxX; j2++) {
                for (var j0 = T.minY; j0 <= T.maxY; j0++) {
                    var j1 = {
                        col: j2,
                        row: j0,
                        zoom: jT,
                        useZoom: jT,
                        tileTypeName: j3,
                        loopOffsetX: 0,
                        tileSize: 256 * j7,
                        transform: jR.transform,
                        combine: false,
                        dataIndex: 0
                    };
                    e.push(j1);
                    var jW = "id_" + j2 + "_" + j0 + "_" + jT;
                    e[jW] = true
                }
            }
            var j5 = dq.getTileCoordForCoordAndZ(jO, jT);
            e.sort((function(i) {
                return function(j8, j9) {
                    return ((0.4 * Math.abs(j8.col - i[0]) + 0.6 * Math.abs(j8.row - i[1])) - (0.4 * Math.abs(j9.col - i[0]) + 0.6 * Math.abs(j9.row - i[1])))
                }
            }
            )([j5[1], j5[2]]));
            e.zoom = jT;
            e.tileTypeName = j3;
            return e
        },
        getCurrentViewTilesInfo: function(T, jO) {
            var i = this._getTilesInfoKey(T, jO);
            var e = this.tilesInfoCache[i];
            if (!e) {
                return this.calcTilesInfo(T, jO)
            }
            return e
        },
        ifTileInMapBounds: function(e, jQ, T, jP) {
            var i = jQ.normalizedBottomLeft;
            var j1 = jQ.normalizedTopRight;
            var jT = jQ.normalizedTopLeft;
            var jR = jQ.normalizedBottomRight;
            var jO = false;
            var j0 = new cr(e.minX,e.minY);
            var jX = new cr(e.maxX,e.maxY);
            var jS = new cr(jX.lng,j0.lat);
            var jY = new cr(j0.lng,jX.lat);
            var jV = [jY, jX, jS, j0];
            for (var jZ = 0, jU = jV.length; jZ < jU; jZ++) {
                var jW = jZ + 1;
                if (jW === jU) {
                    jW = 0
                }
                var j2 = jZ;
                var j3 = iM(jV[jW], jV[j2], jT, i);
                if (j3) {
                    jO = true;
                    break
                }
                j3 = iM(jV[jW], jV[j2], jR, j1);
                if (j3) {
                    jO = true;
                    break
                }
                j3 = iM(jV[jW], jV[j2], j1, jT);
                if (j3) {
                    jO = true;
                    break
                }
                j3 = iM(jV[jW], jV[j2], i, jR);
                if (j3) {
                    jO = true;
                    break
                }
            }
            return jO
        },
        getTileLayer: function(jP) {
            for (var jO = 0, e = this.tileLayers.length; jO < e; jO++) {
                var T = this.tileLayers[jO];
                if (T.mapType === jP) {
                    return T
                }
            }
            return null
        },
        isExitTileLayer: function(jP) {
            for (var jO = 0, e = this.tileLayers.length; jO < e; jO++) {
                var T = this.tileLayers[jO];
                if (T === jP) {
                    return true
                }
            }
            return false
        },
        getZoomState: function(i) {
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState
        }
    });
    var hj = (function() {
        function jU(kl, kq, km, kn, ks) {
            km = km || 2;
            var ko = kq && kq.length;
            var kj = ko ? kq[0] * km : kl.length;
            var kp = j9(kl, 0, kj, km, true);
            var ki = ks || [];
            if (!kp) {
                return ki
            }
            var kh;
            var kg;
            var kf;
            var ke;
            var kt;
            var kr;
            var ku;
            kn = kn || 0;
            if (ko) {
                kp = j3(kl, kq, kp, km)
            }
            if (kl.length > 80 * km) {
                kh = kf = kl[0];
                kg = ke = kl[1];
                for (var kk = km; kk < kj; kk += km) {
                    kt = kl[kk];
                    kr = kl[kk + 1];
                    if (kt < kh) {
                        kh = kt
                    }
                    if (kr < kg) {
                        kg = kr
                    }
                    if (kt > kf) {
                        kf = kt
                    }
                    if (kr > ke) {
                        ke = kr
                    }
                }
                ku = Math.max(kf - kh, ke - kg)
            }
            T(kp, ki, km, kh, kg, ku, null, kn);
            return ki
        }
        function j9(ki, kk, ke, kj, kf) {
            var kg;
            var kh;
            if (kf === (kd(ki, kk, ke, kj) > 0)) {
                for (kg = kk; kg < ke; kg += kj) {
                    kh = jR(kg, ki[kg], ki[kg + 1], kh)
                }
            } else {
                for (kg = ke - kj; kg >= kk; kg -= kj) {
                    kh = jR(kg, ki[kg], ki[kg + 1], kh)
                }
            }
            if (kh && jX(kh, kh.next)) {
                j5(kh);
                kh = kh.next
            }
            return kh
        }
        function j1(kh, ke) {
            if (!kh) {
                return kh
            }
            if (!ke) {
                ke = kh
            }
            var kg = kh;
            var kf;
            do {
                kf = false;
                if (!kg.steiner && (jX(kg, kg.next) || j7(kg.prev, kg, kg.next) === 0)) {
                    j5(kg);
                    kg = ke = kg.prev;
                    if (kg === kg.next) {
                        return null
                    }
                    kf = true
                } else {
                    kg = kg.next
                }
            } while (kf || kg !== ke);
            return ke
        }
        function T(kf, kh, kk, ki, ke, ko, kn, kl) {
            if (!kf) {
                return
            }
            if (!kn && ko) {
                jW(kf, ki, ke, ko)
            }
            var km = kf;
            var kg;
            var kj;
            while (kf.prev !== kf.next) {
                kg = kf.prev;
                kj = kf.next;
                if (ko ? kc(kf, ki, ke, ko) : j4(kf)) {
                    kh.push(kg.i / kk + kl);
                    kh.push(kf.i / kk + kl);
                    kh.push(kj.i / kk + kl);
                    j5(kf);
                    kf = kj.next;
                    km = kj.next;
                    continue
                }
                kf = kj;
                if (kf === km) {
                    if (!kn) {
                        T(j1(kf), kh, kk, ki, ke, ko, 1, kl)
                    } else {
                        if (kn === 1) {
                            kf = j0(kf, kh, kk, kl);
                            T(kf, kh, kk, ki, ke, ko, 2, kl)
                        } else {
                            if (kn === 2) {
                                jZ(kf, kh, kk, ki, ke, ko, kl)
                            }
                        }
                    }
                    break
                }
            }
        }
        function j4(kg) {
            var kf = kg.prev;
            var ke = kg;
            var ki = kg.next;
            if (j7(kf, ke, ki) >= 0) {
                return false
            }
            var kh = kg.next.next;
            while (kh !== kg.prev) {
                if (jY(kf.x, kf.y, ke.x, ke.y, ki.x, ki.y, kh.x, kh.y) && j7(kh.prev, kh, kh.next) >= 0) {
                    return false
                }
                kh = kh.next
            }
            return true
        }
        function kc(kj, kk, ki, kq) {
            var kn = kj.prev;
            var km = kj;
            var kl = kj.next;
            if (j7(kn, km, kl) >= 0) {
                return false
            }
            var kr = kn.x < km.x ? (kn.x < kl.x ? kn.x : kl.x) : (km.x < kl.x ? km.x : kl.x);
            var ko = kn.y < km.y ? (kn.y < kl.y ? kn.y : kl.y) : (km.y < kl.y ? km.y : kl.y);
            var kh = kn.x > km.x ? (kn.x > kl.x ? kn.x : kl.x) : (km.x > kl.x ? km.x : kl.x);
            var kg = kn.y > km.y ? (kn.y > kl.y ? kn.y : kl.y) : (km.y > kl.y ? km.y : kl.y);
            var kf = e(kr, ko, kk, ki, kq);
            var kp = e(kh, kg, kk, ki, kq);
            var ke = kj.nextZ;
            while (ke && ke.z <= kp) {
                if (ke !== kj.prev && ke !== kj.next && jY(kn.x, kn.y, km.x, km.y, kl.x, kl.y, ke.x, ke.y) && j7(ke.prev, ke, ke.next) >= 0) {
                    return false
                }
                ke = ke.nextZ
            }
            ke = kj.prevZ;
            while (ke && ke.z >= kf) {
                if (ke !== kj.prev && ke !== kj.next && jY(kn.x, kn.y, km.x, km.y, kl.x, kl.y, ke.x, ke.y) && j7(ke.prev, ke, ke.next) >= 0) {
                    return false
                }
                ke = ke.prevZ
            }
            return true
        }
        function j0(kk, kg, kj, ki) {
            var kh = kk;
            do {
                var kf = kh.prev;
                var ke = kh.next.next;
                if (!jX(kf, ke) && i(kf, kh, kh.next, ke) && j8(kf, ke) && j8(ke, kf)) {
                    kg.push(kf.i / kj + ki);
                    kg.push(kh.i / kj + ki);
                    kg.push(ke.i / kj + ki);
                    j5(kh);
                    j5(kh.next);
                    kh = kk = ke
                }
                kh = kh.next
            } while (kh !== kk);
            return kh
        }
        function jZ(ke, kg, ki, kh, kf, kn, kj) {
            var km = ke;
            do {
                var kl = km.next.next;
                while (kl !== km.prev) {
                    if (km.i !== kl.i && j6(km, kl)) {
                        var kk = jV(km, kl);
                        km = j1(km, km.next);
                        kk = j1(kk, kk.next);
                        T(km, kg, ki, kh, kf, kn, null, kj);
                        T(kk, kg, ki, kh, kf, kn, null, kj);
                        return
                    }
                    kl = kl.next
                }
                km = km.next
            } while (km !== ke)
        }
        function j3(kg, kn, kj, ki) {
            var kk = [];
            var kh;
            var kl;
            var ke;
            var kf;
            var km;
            for (kh = 0,
            kl = kn.length; kh < kl; kh++) {
                ke = kn[kh] * ki;
                kf = kh < kl - 1 ? kn[kh + 1] * ki : kg.length;
                km = j9(kg, ke, kf, ki, false);
                if (km === km.next) {
                    km.steiner = true
                }
                kk.push(jS(km))
            }
            kk.sort(jT);
            for (kh = 0; kh < kk.length; kh++) {
                jQ(kk[kh], kj);
                kj = j1(kj, kj.next)
            }
            return kj
        }
        function jT(kf, ke) {
            return kf.x - ke.x
        }
        function jQ(kg, kf) {
            kf = ka(kg, kf);
            if (kf) {
                var ke = jV(kf, kg);
                j1(ke, ke.next)
            }
        }
        function ka(ke, ki) {
            var kf = ki;
            var kk = ke.x;
            var kj = ke.y;
            var kh = -Infinity;
            var kg;
            do {
                if (kj <= kf.y && kj >= kf.next.y) {
                    var kn = kf.x + (kj - kf.y) * (kf.next.x - kf.x) / (kf.next.y - kf.y);
                    if (kn <= kk && kn > kh) {
                        kh = kn;
                        if (kn === kk) {
                            if (kj === kf.y) {
                                return kf
                            }
                            if (kj === kf.next.y) {
                                return kf.next
                            }
                        }
                        kg = kf.x < kf.next.x ? kf : kf.next
                    }
                }
                kf = kf.next
            } while (kf !== ki);
            if (!kg) {
                return null
            }
            if (kk === kh) {
                return kg.prev
            }
            var km = kg;
            var kq = kg.x;
            var ko = kg.y;
            var kp = Infinity;
            var kl;
            kf = kg.next;
            while (kf !== km) {
                if (kk >= kf.x && kf.x >= kq && jY(kj < ko ? kk : kh, kj, kq, ko, kj < ko ? kh : kk, kj, kf.x, kf.y)) {
                    kl = Math.abs(kj - kf.y) / (kk - kf.x);
                    if ((kl < kp || (kl === kp && kf.x > kg.x)) && j8(kf, ke)) {
                        kg = kf;
                        kp = kl
                    }
                }
                kf = kf.next
            }
            return kg
        }
        function jW(ki, ke, kh, kf) {
            var kg = ki;
            do {
                if (kg.z === null) {
                    kg.z = e(kg.x, kg.y, ke, kh, kf)
                }
                kg.prevZ = kg.prev;
                kg.nextZ = kg.next;
                kg = kg.next
            } while (kg !== ki);
            kg.prevZ.nextZ = null;
            kg.prevZ = null;
            jP(kg)
        }
        function jP(kk) {
            var kh;
            var kg;
            var kf;
            var kj;
            var kl;
            var ke;
            var km;
            var ki;
            var kn = 1;
            do {
                kg = kk;
                kk = null;
                kl = null;
                ke = 0;
                while (kg) {
                    ke++;
                    kf = kg;
                    km = 0;
                    for (kh = 0; kh < kn; kh++) {
                        km++;
                        kf = kf.nextZ;
                        if (!kf) {
                            break
                        }
                    }
                    ki = kn;
                    while (km > 0 || (ki > 0 && kf)) {
                        if (km === 0) {
                            kj = kf;
                            kf = kf.nextZ;
                            ki--
                        } else {
                            if (ki === 0 || !kf) {
                                kj = kg;
                                kg = kg.nextZ;
                                km--
                            } else {
                                if (kg.z <= kf.z) {
                                    kj = kg;
                                    kg = kg.nextZ;
                                    km--
                                } else {
                                    kj = kf;
                                    kf = kf.nextZ;
                                    ki--
                                }
                            }
                        }
                        if (kl) {
                            kl.nextZ = kj
                        } else {
                            kk = kj
                        }
                        kj.prevZ = kl;
                        kl = kj
                    }
                    kg = kf
                }
                kl.nextZ = null;
                kn *= 2
            } while (ke > 1);
            return kk
        }
        function e(kf, ki, ke, kh, kg) {
            kf = 32767 * (kf - ke) / kg;
            ki = 32767 * (ki - kh) / kg;
            kf = (kf | (kf << 8)) & 16711935;
            kf = (kf | (kf << 4)) & 252645135;
            kf = (kf | (kf << 2)) & 858993459;
            kf = (kf | (kf << 1)) & 1431655765;
            ki = (ki | (ki << 8)) & 16711935;
            ki = (ki | (ki << 4)) & 252645135;
            ki = (ki | (ki << 2)) & 858993459;
            ki = (ki | (ki << 1)) & 1431655765;
            return kf | (ki << 1)
        }
        function jS(kg) {
            var kf = kg;
            var ke = kg;
            do {
                if (kf.x < ke.x) {
                    ke = kf
                }
                kf = kf.next
            } while (kf !== kg);
            return ke
        }
        function jY(ki, kh, kk, kj, ke, kl, kg, kf) {
            return (ke - kg) * (kh - kf) - (ki - kg) * (kl - kf) >= 0 && (ki - kg) * (kj - kf) - (kk - kg) * (kh - kf) >= 0 && (kk - kg) * (kl - kf) - (ke - kg) * (kj - kf) >= 0
        }
        function j6(kf, ke) {
            return kf.next.i !== ke.i && kf.prev.i !== ke.i && !j2(kf, ke) && j8(kf, ke) && j8(ke, kf) && jO(kf, ke)
        }
        function j7(kg, kf, ke) {
            return (kf.y - kg.y) * (ke.x - kf.x) - (kf.x - kg.x) * (ke.y - kf.y)
        }
        function jX(kf, ke) {
            return kf.x === ke.x && kf.y === ke.y
        }
        function i(kg, ke, kf, kh) {
            if ((jX(kg, ke) && jX(kf, kh)) || (jX(kg, kh) && jX(kf, ke))) {
                return true
            }
            return j7(kg, ke, kf) > 0 !== j7(kg, ke, kh) > 0 && j7(kf, kh, kg) > 0 !== j7(kf, kh, ke) > 0
        }
        function j2(kf, ke) {
            var kg = kf;
            do {
                if (kg.i !== kf.i && kg.next.i !== kf.i && kg.i !== ke.i && kg.next.i !== ke.i && i(kg, kg.next, kf, ke)) {
                    return true
                }
                kg = kg.next
            } while (kg !== kf);
            return false
        }
        function j8(kf, ke) {
            return j7(kf.prev, kf, kf.next) < 0 ? j7(kf, ke, kf.next) >= 0 && j7(kf, kf.prev, ke) >= 0 : j7(kf, ke, kf.prev) < 0 || j7(kf, kf.next, ke) < 0
        }
        function jO(kg, kf) {
            var kj = kg;
            var ke = false;
            var ki = (kg.x + kf.x) / 2;
            var kh = (kg.y + kf.y) / 2;
            do {
                if (((kj.y > kh) !== (kj.next.y > kh)) && (ki < (kj.next.x - kj.x) * (kh - kj.y) / (kj.next.y - kj.y) + kj.x)) {
                    ke = !ke
                }
                kj = kj.next
            } while (kj !== kg);
            return ke
        }
        function jV(kg, kf) {
            var ke = new kb(kg.i,kg.x,kg.y);
            var kh = new kb(kf.i,kf.x,kf.y);
            var kj = kg.next;
            var ki = kf.prev;
            kg.next = kf;
            kf.prev = kg;
            ke.next = kj;
            kj.prev = ke;
            kh.next = ke;
            ke.prev = kh;
            ki.next = kh;
            kh.prev = ki;
            return kh
        }
        function jR(kf, ke, ki, kg) {
            var kh = new kb(kf,ke,ki);
            if (!kg) {
                kh.prev = kh;
                kh.next = kh
            } else {
                kh.next = kg.next;
                kh.prev = kg;
                kg.next.prev = kh;
                kg.next = kh
            }
            return kh
        }
        function j5(ke) {
            ke.next.prev = ke.prev;
            ke.prev.next = ke.next;
            if (ke.prevZ) {
                ke.prevZ.nextZ = ke.nextZ
            }
            if (ke.nextZ) {
                ke.nextZ.prevZ = ke.prevZ
            }
        }
        function kb(kf, ke, kg) {
            this.i = kf;
            this.x = ke;
            this.y = kg;
            this.prev = null;
            this.next = null;
            this.z = null;
            this.prevZ = null;
            this.nextZ = null;
            this.steiner = false
        }
        jU.deviation = function(kj, ko, kl, kg) {
            var km = ko && ko.length;
            var ki = km ? ko[0] * kl : kj.length;
            var kf = Math.abs(kd(kj, 0, ki, kl));
            if (km) {
                for (var kk = 0, kn = ko.length; kk < kn; kk++) {
                    var ke = ko[kk] * kl;
                    var kh = kk < kn - 1 ? ko[kk + 1] * kl : kj.length;
                    kf -= Math.abs(kd(kj, ke, kh, kl))
                }
            }
            var ks = 0;
            for (kk = 0; kk < kg.length; kk += 3) {
                var kr = kg[kk] * kl;
                var kq = kg[kk + 1] * kl;
                var kp = kg[kk + 2] * kl;
                ks += Math.abs((kj[kr] - kj[kp]) * (kj[kq + 1] - kj[kr + 1]) - (kj[kr] - kj[kq]) * (kj[kp + 1] - kj[kr + 1]))
            }
            return kf === 0 && ks === 0 ? 0 : Math.abs((ks - kf) / kf)
        }
        ;
        function kd(ki, kk, ke, kj) {
            var kh = 0;
            for (var kg = kk, kf = ke - kj; kg < ke; kg += kj) {
                kh += (ki[kf] - ki[kg]) * (ki[kg + 1] + ki[kf + 1]);
                kf = kg
            }
            return kh
        }
        jU.flatten = function(ki) {
            var kj = ki[0][0].length;
            var ke = {
                vertices: [],
                holes: [],
                dimensions: kj
            };
            var kg = 0;
            for (var kh = 0; kh < ki.length; kh++) {
                for (var kf = 0; kf < ki[kh].length; kf++) {
                    for (var kk = 0; kk < kj; kk++) {
                        ke.vertices.push(ki[kh][kf][kk])
                    }
                }
                if (kh > 0) {
                    kg += ki[kh - 1].length;
                    ke.holes.push(kg)
                }
            }
            return ke
        }
        ;
        return jU
    }
    )();
    function cw(i, e) {
        this.id = fM();
        this.workerPool = i;
        this.actors = [];
        this.currentActorIndex = 0;
        this.ready = false;
        this.init(e)
    }
    cw.prototype.init = function(jQ) {
        const e = this.workerPool.acquire(this.id);
        for (var jO = 0; jO < e.length; jO++) {
            const jR = e[jO];
            const jP = new i4(jR,jQ,this.id);
            jP.name = "Worker " + jO;
            this.actors.push(jP)
        }
        var T = this;
        this.broadcast("hasReady", null, function() {
            T.ready = true
        })
    }
    ;
    cw.prototype.broadcast = function(i, T, e) {
        e = e || function() {}
        ;
        k(this.actors, function(jP, jO) {
            jP.send(i, T, jO)
        }, e)
    }
    ;
    cw.prototype.getActor = function() {
        const e = this.actors.filter(function(i) {
            return !i.busy
        })[0];
        if (e) {
            return e
        }
        this.currentActorIndex = (this.currentActorIndex + 1) % this.actors.length;
        return this.actors[this.currentActorIndex]
    }
    ;
    cw.prototype.stop = function() {
        for (var e = 0; e < this.actors.length; e++) {
            var T = this.actors[e];
            T.stop()
        }
    }
    ;
    cw.prototype.remove = function() {
        for (var e = 0; e < this.actors.length; e++) {
            var T = this.actors[e];
            T.remove()
        }
        this.actors.length = 0;
        this.workerPool.release(this.id)
    }
    ;
    function i4(T, i, e) {
        this.target = T;
        this.parent = i;
        this.mapId = e;
        this.busy = false;
        this.taskQueue = [];
        this.callbacks = {};
        this.init()
    }
    i4.prototype.init = function() {
        this.receive = this.receive.bind(this);
        this.target.addEventListener("message", this.receive, false)
    }
    ;
    i4.prototype.setBusy = function(e) {
        this.busy = e;
        if (!e && this.taskQueue.length) {
            var i = this.taskQueue.shift();
            this.send(i.action, i.data, i.callback, i.targetMapId, i.mustQueue, i.callbackMetadata)
        }
    }
    ;
    i4.prototype.receive = function(jO) {
        const jP = jO.data;
        const jS = jP.id;
        if (!jS) {
            return
        }
        if (jP.targetMapId && this.mapId !== jP.targetMapId) {
            return
        }
        if (jP.action === "<response>") {
            this.setBusy(false);
            const jR = this.callbacks[jS];
            delete this.callbacks[jS];
            if (jR) {
                if (jP.error) {
                    jR(hQ(jP.error))
                } else {
                    jR(null, hQ(jP.data))
                }
            }
        } else {
            var T = this;
            const i = [];
            const e = jP.hasCallback ? function(jT, jU) {
                T.target.postMessage({
                    id: jS,
                    action: "<response>",
                    sourceMapId: T.mapId,
                    error: jT ? i5(jT) : null,
                    data: i5(jU, i)
                }, i)
            }
            : function(jT) {}
            ;
            const jQ = hQ(jP.data);
            if (this.parent[jP.action]) {
                this.parent[jP.action](jP.sourceMapId, jQ, e)
            }
        }
    }
    ;
    i4.prototype.send = function(i, T, jR, jO, jP, jS) {
        if (i === "release") {
            this.releasePendingData(T, jR);
            return
        }
        if (this.busy) {
            this.taskQueue.push({
                action: i,
                data: T,
                callback: jR,
                targetMapId: jO,
                mustQueue: jP,
                callbackMetadata: jS
            });
            return
        }
        this.setBusy(true);
        var jQ = Math.round((Math.random() * 1000000000000000000)).toString(36).substring(0, 10);
        const e = this.mapId + "_" + i + "_" + jQ;
        if (jR) {
            jR.metadata = jS;
            this.callbacks[e] = jR
        }
        const jT = [];
        this.target.postMessage({
            id: e,
            action: i,
            hasCallback: !!jR,
            targetMapId: jO,
            mustQueue: jP,
            sourceMapId: this.mapId,
            data: i5(T, jT)
        }, jT);
        return {
            cancel: function() {
                if (jR) {
                    delete this.callbacks[e]
                }
                this.target.postMessage({
                    id: e,
                    action: "<cancel>",
                    targetMapId: jO,
                    sourceMapId: this.mapId
                })
            }
        }
    }
    ;
    i4.prototype.stop = function() {
        this.taskQueue.length = 0;
        this.busy = false;
        this.callbacks = {}
    }
    ;
    i4.prototype.remove = function() {
        this.taskQueue.length = 0;
        this.busy = false;
        this.target.removeEventListener("message", this.receive, false)
    }
    ;
    i4.prototype.releasePendingData = function(e, jR) {
        var T = [];
        var jP = this.taskQueue;
        for (var jO = jP.length - 1; jO >= 0; jO--) {
            var jQ = jP[jO]["data"];
            if (!jQ || !jQ.layerId) {
                break
            }
            if (jQ.layerId !== e.layerId) {
                continue
            }
            if (!e["id_" + jQ.x + "_" + jQ.y + "_" + jQ.z]) {
                jP.splice(jO, 1);
                T.push(jQ)
            }
        }
        jR(null, T)
    }
    ;
    var jE;
    function g2() {
        if (!jE) {
            jE = new g8()
        }
        return jE
    }
    function g8() {
        this.active = {}
    }
    g8.prototype.acquire = function(jP) {
        if (!this.workers) {
            this.workers = [];
            var jQ = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_mvt_vl5toe.js";
            while (this.workers.length < g8.workerCount) {
                try {
                    var jS = new Worker(jQ);
                    this.workers.push(jS)
                } catch (jR) {
                    var T = new Blob(['importScripts("' + jQ + '");'],{
                        type: "application/javascript"
                    });
                    var jO = window.URL || window.webkitURL;
                    var i = jO.createObjectURL(T);
                    this.workers.push(new Worker(i))
                }
            }
        }
        this.active[jP] = true;
        return this.workers.slice()
    }
    ;
    g8.prototype.release = function(T) {
        delete this.active[T];
        if (this.numActive() === 0) {
            for (var e = 0; e < this.workers.length; e++) {
                this.workers[e].terminate()
            }
            this.workers = null
        }
    }
    ;
    g8.prototype.numActive = function() {
        return Object.keys(this.active).length
    }
    ;
    g8.workerCount = 2;
    function g9(e) {
        this._map = e;
        this._spotsId = {};
        this._init()
    }
    g9.prototype._init = function() {
        var i = this._map;
        var e = this;
        i.addEventListener("onspotsdataready", function(jO) {
            var T = jO.spots;
            if (e._spotsId[jO.index]) {
                i.removeSpots(e._spotsId[jO.index])
            }
            e._spotsId[jO.index] = i.addSpots(T)
        });
        i.addEventListener("onspotsdataremove", function(T) {
            if (e._spotsId[T.index]) {
                i.removeSpots(e._spotsId[T.index])
            }
        })
    }
    ;
    bw.register(function(e) {
        if (!e.config.enableIconClick) {
            return
        }
        e._mapIcon = new g9(e)
    });
    function cY(e) {
        this._indoorData = {};
        this._map = e;
        this.currentUid = null;
        this.currentFloor = null;
        this._indoorControl = null;
        this.enterMethod = null;
        this.showMask = false;
        this._isMobile = bS();
        this._autoEnterZoom = 19;
        if (this._isMobile) {
            this._autoEnterZoom = 17
        }
        this._init(e);
        window._indoorMgr = this
    }
    cY.prototype._init = function(i) {
        var e = this;
        i.on("indoor_status_changed", function(jR) {
            var T = jR.uid;
            var jP = jR.floor;
            if (T === null) {
                T = e.currentUid;
                if (e._indoorData[T]) {
                    jP = e._indoorData[T].defaultFloor
                }
                if (e._indoorControl) {
                    e._indoorControl.hide()
                }
                e.currentUid = null;
                e.currentFloor = null;
                e.enterMethod = null
            } else {
                if (e._indoorData[T]) {
                    var jQ = e._indoorData[T];
                    jP = (typeof jP === "number") ? jP : jQ.defaultFloor;
                    if (!e._indoorControl) {
                        if (i.config.showControls && i._displayOptions.indoor) {
                            e._indoorControl = new at(i,jQ)
                        }
                    } else {
                        e._indoorControl.setInfo(jQ);
                        e._indoorControl.show()
                    }
                    e.currentUid = T;
                    e.currentFloor = jP
                }
            }
            if (!e._indoorData || !e._indoorData[T] || e._indoorData[T].currentFloor === jP) {
                this.fire(new fu("onrefresh"));
                return
            }
            var jO = new fu("onindoor_data_refresh");
            jO.uid = T;
            jO.floor = jP;
            jO.tileKey = e._indoorData[T].tileKey;
            e._indoorData[T].currentFloor = jP;
            e.currentFloor = jP;
            this.fire(jO)
        });
        i.on("spotclick", function(jO) {
            var T = null;
            if (jO.curAreaSpot && this.areaSpots[jO.curAreaSpot]) {
                T = this.areaSpots[jO.curAreaSpot].userData.uid
            }
            if (T === e.currentUid) {
                if (jO.curAreaSpot) {
                    e.enterMethod = "byClick"
                }
                return
            }
            if (T === null) {
                if (e.currentUid && e.enterMethod === "byClick") {
                    i.showIndoor(null);
                    e.enterMethod = null
                }
            } else {
                e.enterMethod = "byClick";
                if (e.currentUid) {
                    i.showIndoor(e.currentUid, e._indoorData[e.currentUid].defaultFloor)
                }
                i.showIndoor(T, e._indoorData[T].defaultFloor)
            }
        });
        i.on("moveend", function() {
            if (this.getZoom() >= e._autoEnterZoom) {
                e._checkIndoorByMove()
            }
        });
        i.on("zoomend", function() {
            if (this.getZoom() >= e._autoEnterZoom) {
                e._checkIndoorByMove()
            } else {
                if (e.enterMethod !== "byClick" && e.currentUid !== null) {
                    this.showIndoor(null)
                }
            }
        })
    }
    ;
    cY.prototype._checkIndoorByMove = function() {
        var T = this._map;
        var jU = T.getSize();
        var jZ = {
            x: jU.width / 2,
            y: jU.height / 2
        };
        var jY = Math.max(jU.width, jU.height);
        var j0 = [];
        for (var jV in this._indoorData) {
            var e = this._indoorData[jV].center;
            var jO = T.pointToPixelIn(new bw.Point(e[0],e[1]));
            var jR = cd(jZ, jO);
            j0.push({
                uid: jV,
                distance: jR
            })
        }
        if (j0.length === 0) {
            return
        }
        j0.sort(function(j1, i) {
            return j1.distance - i.distance
        });
        var jQ = j0[0];
        var jW = T.getCenterIn();
        var jP = false;
        for (var jT = 0; jT < this._indoorData[jQ.uid].contour.length; jT++) {
            if (bJ([jW.lng, jW.lat], this._indoorData[jQ.uid].contour[jT])) {
                jP = true;
                break
            }
        }
        if (jP === false && jQ.uid === "e96b44200baa3b4082288acc") {
            var jS = this._indoorData[jQ.uid].boundsMin;
            var jX = this._indoorData[jQ.uid].boundsMax;
            if (jW.lng > jS[0] && jW.lat > jS[1] && jW.lng < jX[0] && jW.lat < jX[1]) {
                jP = true
            }
        }
        if (jP) {
            if (this.enterMethod !== "byClick") {
                if (this.currentUid !== null && this.currentUid !== jQ.uid) {
                    this._map.showIndoor(this.currentUid, this._indoorData[this.currentUid].defaultFloor)
                }
                if (this.currentUid !== jQ.uid) {
                    this._map.showIndoor(jQ.uid, this._indoorData[jQ.uid].defaultFloor)
                }
                this.enterMethod = "byMove"
            }
        } else {
            if (this.enterMethod !== "byClick") {
                this._map.showIndoor(null)
            }
        }
    }
    ;
    cY.prototype.setData = function(jO) {
        if (jO === null) {
            return
        }
        for (var T in jO) {
            if (T === "tileInfo") {
                continue
            }
            var jP = jO[T].tileKey;
            if (this._indoorData[T]) {
                if (!this._indoorData[T][jP]) {
                    this._indoorData[T].tileKeys.push(jP);
                    this._indoorData[T][jP] = true
                }
            } else {
                this._indoorData[T] = jO[T];
                this._indoorData[T].tileKeys = [jO[T].tileKey];
                this._indoorData[T][jP] = true;
                for (var e = 0; e < this._indoorData[T].contour.length; e++) {
                    this._map.addAreaSpot(this._indoorData[T].contour[e], {
                        id: T + e,
                        userData: {
                            uid: T
                        }
                    })
                }
            }
        }
        if (this._map.getZoom() >= this._autoEnterZoom) {
            this._checkIndoorByMove()
        }
    }
    ;
    cY.prototype.removeData = function(T, jP) {
        if (!this._indoorData[T]) {
            return
        }
        var jO = this._indoorData[T];
        for (var e = 0; e < jO.tileKeys.length; e++) {
            if (jO.tileKeys[e] === jP) {
                jO.tileKeys.splice(e, 1);
                break
            }
        }
        delete jO[jP];
        if (jO.tileKeys.length === 0) {
            delete this._indoorData[T]
        }
    }
    ;
    cY.prototype.getIndoorData = function(e) {
        return this._indoorData[e] || null
    }
    ;
    cY.prototype.getData = function() {
        return this._indoorData
    }
    ;
    bw.register(function(e) {
        e._indoorMgr = new cY(e)
    });
    var aW = (function() {
        var jO = {};
        var jX = {};
        var jT = {};
        function jV(jZ) {
            if (Object.prototype.toString.call(jZ) === "[object Object]") {
                for (var jY in jZ) {
                    return false
                }
                return true
            } else {
                return false
            }
        }
        function jU(j5, j6, j9, j2, j8) {
            var jY = jY || null;
            j2 = j2 || jY;
            var j0;
            if (j2) {
                j0 = jW(j5, j6, j9, j2)
            } else {
                j0 = T(j5, j6, j9, j8)
            }
            var j4 = j0.drawId;
            var jZ = j0.style;
            var j7 = j0.styleUpdate;
            var ka = [];
            if (!j4) {
                return ka
            }
            for (var j1 = 0; j1 < j4.length; j1++) {
                var j3 = j7[j4[j1]] || jZ[j4[j1]];
                if (j3) {
                    switch (j6) {
                    case "polygon":
                        j3 = jP(j3, j5);
                        break;
                    case "line":
                        j3 = jS(j3, j5);
                        break;
                    case "pointText":
                        j3 = jQ(j3, j5);
                        break;
                    case "point":
                        j3 = e(j3, j5);
                        break;
                    case "polygon3d":
                        j3 = jR(j3, j5);
                        break
                    }
                    if (j3) {
                        j3.did = j4[j1];
                        ka[ka.length] = j3
                    }
                }
            }
            return ka
        }
        function jW(jZ, j1, j2, jY) {
            var j0 = jY[2];
            switch (j1) {
            case "point":
                j0 = j0[0];
                break;
            case "pointText":
                j0 = j0[1];
                break;
            case "line":
                j0 = j0[3];
                break;
            case "polygon":
                j0 = j0[4];
                break;
            case "polygon3d":
                j0 = j0[5];
                break
            }
            var j4 = j2 - 1;
            if (j1 === "line" && j2 === 12) {
                j4 = j2
            }
            var j5 = jY[1][j4][0];
            var j3 = j5[jZ];
            if (!j3 && j2 < 21) {
                if (j1 === "point" || j1 === "pointText") {
                    j5 = jY[1][j2][0];
                    j3 = j5[jZ]
                }
            }
            return {
                drawId: j3,
                style: j0,
                styleUpdate: []
            }
        }
        function T(j2, j3, j6, j5) {
            if (!j5) {
                return {
                    drawId: null,
                    style: [],
                    styleUpdate: []
                }
            }
            var j4;
            var j0 = j5.baseFs;
            if (jV(j5.zoomRegion)) {
                j4 = j5.StyleBody || []
            } else {
                j4 = j5.zoomStyleBody[j6] || []
            }
            var jZ = j0[2];
            switch (j3) {
            case "point":
                jZ = jZ[0];
                j4 = j4[0] || {};
                break;
            case "pointText":
                jZ = jZ[1];
                j4 = j4[1] || {};
                break;
            case "line":
                jZ = jZ[3];
                j4 = j4[3] || {};
                break;
            case "polygon":
                jZ = jZ[4];
                j4 = j4[4] || {};
                break;
            case "polygon3d":
                jZ = jZ[5];
                j4 = j4[5] || {};
                break
            }
            var jY = j0[1][j6 - 1][0];
            var j1 = jY[j2];
            if (!j1 && j6 < 21) {
                if (j3 === "point" || j3 === "pointText") {
                    jY = j0[1][j6][0];
                    j1 = jY[j2]
                }
            }
            return {
                drawId: j1,
                style: jZ,
                styleUpdate: j4
            }
        }
        function jQ(jZ, jY) {
            if (!jZ || jZ.length === 0) {
                return null
            }
            return {
                sid: jY,
                fontRgba: i(jZ[0]),
                haloRgba: i(jZ[1]),
                backRgba: i(jZ[2]),
                fontSize: jZ[3],
                haloSize: jZ[4],
                fontWeight: jZ[5],
                fontStyle: jZ[6],
                density: jZ[7]
            }
        }
        function e(jZ, jY) {
            return {
                sid: jY,
                rank: jZ[0],
                ucflag: jZ[1],
                icon: jZ[2],
                iconType: jZ[3],
                nineGG: jZ[4],
                density: jZ[5],
                zoom: jZ[6]
            }
        }
        function jS(jZ, jY) {
            return {
                sid: jY,
                borderRgba: i(jZ[0]),
                fillRgba: i(jZ[1]),
                borderWidth: jZ[2],
                fillWidth: jZ[3],
                borderCap: jZ[4],
                fillCap: jZ[5],
                haveBorderLine: jZ[6],
                haveBorderTexture: jZ[7],
                haveFillTexture: jZ[8],
                isUseBorderRgba: jZ[9],
                isUseFillRgba: jZ[10],
                borderTexture: jZ[11],
                fillTexture: jZ[12],
                borderTextureType: jZ[13],
                fillTextureType: jZ[14],
                isRealWidth: jZ[15],
                haveArrow: jZ[16],
                needRound: jZ[17],
                realBorderWidth: jZ[18]
            }
        }
        function jP(jZ, jY) {
            return {
                sid: jY,
                fillRgba: i(jZ[0]),
                borderRgba: i(jZ[1]),
                borderWidth: jZ[2],
                borderTexture: jZ[3],
                borderTextureType: jZ[4],
                waterStyle: jZ[5],
                haloStyle: jZ[6],
                textureStyle: jZ[7],
                thickRgba: i(jZ[8])
            }
        }
        function jR(jZ, jY) {
            return {
                sid: jY,
                filter: jZ[0],
                ratio: jZ[1],
                haveBorder: jZ[2],
                borderWidth: jZ[3],
                borderRgba: i(jZ[4]),
                fillTop: i(jZ[5]),
                fillSide: i(jZ[6]),
                polyTexture: jZ[7]
            }
        }
        function i(j3) {
            var j2 = j3;
            if (jT[j2]) {
                return jT[j2]
            }
            j3 = j3 >>> 0;
            var j1 = (j3) & 255;
            var j0 = (j3 >> 8) & 255;
            var jY = (j3 >> 16) & 255;
            var jZ = (j3 >> 24) & 255;
            jT[j2] = [j1, j0, jY, jZ];
            return jT[j2]
        }
        return {
            getStyleFromCache: function(j5, j0, j3, j4, jZ, j2, jY) {
                j5 = j5 || "default";
                var j1 = j5 + "-" + j0 + "-" + j3 + "-" + j4;
                if (j2) {
                    j1 += "-indoor"
                }
                if (jZ) {
                    if (!jX[j1]) {
                        jX[j1] = jU(j0, j3, j4, jZ)
                    }
                    return jX[j1]
                }
                if (!jO[j1]) {
                    jO[j1] = jU(j0, j3, j4, jZ, jY)
                }
                return jO[j1]
            }
        }
    }
    )();
    bw.register(function(i) {
        var e = new hP(i)
    });
    function hP(e) {
        e.container.appendChild(this.render());
        this.bind(e)
    }
    hP.prototype.render = function() {
        var i = document.createElement("div");
        i.className = "click-ripple-container";
        var e = document.createElement("div");
        e.className = "click-ripple";
        i.appendChild(e);
        this._div = i;
        this._ripple = e;
        return i
    }
    ;
    hP.prototype.bind = function(i) {
        var e = this;
        i.addEventListener("spotclick", function(T) {
            if (!T.spots || T.spots.length === 0) {
                return
            }
            e._div.style.left = T.pixel.x + "px";
            e._div.style.top = T.pixel.y + "px";
            eJ.ac(e._ripple, "ripple-playing")
        });
        eJ.on(e._ripple, "transitionend", function() {
            eJ.rc(e._ripple, "ripple-playing")
        })
    }
    ;
    function bR(e) {
        cZ.call(this);
        if (!e) {
            return
        }
        this._opts = {};
        this._map = e;
        this._maxLat = 84.6;
        this._minLat = -80.6;
        this._maxLatMC = iN.convertLL2MC(new cl(this._maxLat,0)).lat;
        this._minLatMC = iN.convertLL2MC(new cl(this._minLat,0)).lat
    }
    bR.inherits(cZ, "ToolbarItem");
    eJ.extend(bR.prototype, {
        open: function() {
            if (this._isOpen == true) {
                return true
            }
            if (this._map._toolInUse) {
                return false
            }
            this._map._toolInUse = true;
            this._isOpen = true;
            return true
        },
        close: function() {
            if (!this._isOpen) {
                return
            }
            this._map._toolInUse = false;
            this._isOpen = false
        },
        _checkStr: function(e) {
            if (!e) {
                return ""
            }
            return e.replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
    });
    function ca(T, i) {
        bR.call(this, T);
        i = i || {};
        this._opts = eJ.extend(eJ.extend(this._opts || {}, {
            autoClear: false,
            tips: "测距",
            followText: "单击确定起点，双击结束绘制",
            unit: "metric",
            showResult: true,
            lineColor: "blue",
            lineStroke: 2,
            opacity: 1,
            lineStyle: "solid",
            cursor: B.distCursor,
            styleCodes: {
                lnCode: 0,
                spCode: 0,
                slCode: 0,
                tlCode: 0
            },
            enableMassClear: true
        }), i);
        if (this._opts.showResult === false) {
            if (typeof i.tips === "undefined") {
                this._opts.tips = "绘制折线"
            }
            if (!i.cursor) {
                this._opts.cursor = "crosshair"
            }
        }
        if (this._opts.lineStroke <= 0) {
            this._opts.lineStroke = 2
        }
        if (this._opts.opacity > 1) {
            this._opts.opacity = 1
        } else {
            if (this._opts.opacity < 0) {
                this._opts.opacity = 0
            }
        }
        if (this._opts.lineStyle !== "solid" && this._opts.lineStyle !== "dashed") {
            this._opts.lineStyle = "solid"
        }
        this._checked = false;
        this._drawing = null;
        this.followTitle = null;
        this._totalDis = {};
        this._points = [];
        this._paths = [];
        this._dots = [];
        this._segDistance = [];
        this._overlays = [];
        this._units = {
            metric: {
                name: "metric",
                conv: 1,
                incon: 1000,
                u1: "米",
                u2: "公里"
            },
            us: {
                name: "us",
                conv: 3.2808,
                incon: 5279.856,
                u1: "英尺",
                u2: "英里"
            }
        };
        if (!this._units[this._opts.unit]) {
            this._opts.unit = "metric"
        }
        this._dLineColor = "#ff6319";
        this._dLineStroke = 3;
        this._dOpacity = 0.8;
        this._dLineStyle = "solid";
        this._dCursor = B.distCursor;
        if (this._opts.showResult) {
            this._opts.followText = "单击确定起点"
        }
        this._followTextM = "单击确定地点，双击结束";
        this._sectionMarkerTip = "单击可删除此点，拖拽可调整位置";
        this._movingTimerId = null;
        if (this._opts.showResult) {
            this.text = "测距"
        } else {
            this.text = "绘线"
        }
        this._isOpen = false;
        var e = this;
        gK.load("tools", function() {
            e._draw()
        })
    }
    ca.inherits(bR, "PolylineTItem");
    eJ.extend(ca.prototype, {
        setLineColor: function(e) {
            this._opts.lineColor = e
        },
        setLineStroke: function(e) {
            if (Math.round(e) > 0) {
                this._opts.lineStroke = Math.round(e)
            }
        },
        setOpacity: function(e) {
            if (e >= 0 && e <= 1) {
                this._opts.opacity = e
            }
        },
        setLineStyle: function(e) {
            if (e === "solid" || e === "dashed") {
                this._opts.lineStyle = e
            }
        },
        clear: function() {
            for (var T = 0, e = this._overlays.length; T < e; T++) {
                if (this._overlays[T]) {
                    this._map.removeOverlay(this._overlays[T])
                }
            }
            this._overlays.length = 0;
            for (var T = 0, e = this._dots.length; T < e; T++) {
                if (this._dots[T] && this._dots[T].parentNode) {
                    this._dots[T].parentNode.removeChild(this._dots[T])
                }
            }
            this._dots.length = 0
        },
        setCursor: function(e) {
            if (this._opts.showResult === true) {
                return
            }
            this._opts.cursor = e
        },
        getCursor: function() {
            if (this._opts.showResult === true) {
                return this._dCursor
            }
            var e = this._opts.cursor.match(/^url\((.+)\)(,.*)?/);
            if (e !== null) {
                return e[1]
            } else {
                return this._opts.cursor
            }
        },
        showResult: function(e) {
            this._opts.showResult = !!e
        }
    });
    function bB() {
        var jP = 3;
        var jW = 256;
        var jO = Math.pow(2, 18 - jP) * jW;
        var jX = 2;
        var jV = (jX + 1) * jO;
        var T = iN.convertLL2MC(new cr(180,0));
        var jT = T.lng;
        var jR = jV - jT;
        var jU = -3;
        var e = jU * jO;
        var jQ = iN.convertLL2MC(new cr(-180,0));
        var jS = jQ.lng;
        var i = jS - e;
        this._validPixels = jT / Math.pow(2, 18 - jP);
        this._mc180X = jT;
        this._mcM180X = jS;
        this._loopOffset = jR + i;
        this._mcTSpan = jT - jS;
        this._spaceDistance = jR;
        this._mSpaceDistance = i
    }
    bB.prototype = {
        calcLoopParam: function(jO, i, jV) {
            jV = jV || 256;
            var jS = 0;
            var jP = 3;
            var jR = 6;
            var jQ = jR * Math.pow(2, (i - jP)) * 256 / jV;
            var jU = jQ / 2 - 1;
            var jT = -jQ / 2;
            while (jO > jU) {
                jO -= jQ;
                jS -= this._loopOffset
            }
            while (jO < jT) {
                jO += jQ;
                jS += this._loopOffset
            }
            var e = jS;
            jS = Math.round(jS / Math.pow(2, 18 - i));
            return {
                offsetX: jS,
                geoOffsetX: e,
                col: jO,
                T: jQ,
                maxCol: jU,
                minCol: jT
            }
        },
        calcLoopCenterPoint: function(i) {
            var e = i.lng;
            while (e > this._mc180X) {
                e -= this._mcTSpan
            }
            while (e < this._mcM180X) {
                e += this._mcTSpan
            }
            i.lng = e;
            return i
        },
        calcLoopMapBounds: function(T, jO) {
            var i = jO || T.getCenter();
            var e = T.sw.lng;
            var jP = T.ne.lng;
            while (i.lng > this._mc180X) {
                i.lng -= this._mcTSpan;
                e -= this._mcTSpan;
                jP -= this._mcTSpan
            }
            while (i.lng < this._mcM180X) {
                i.lng += this._mcTSpan;
                e += this._mcTSpan;
                jP += this._mcTSpan
            }
            T.sw.lng = e;
            T.ne.lng = jP;
            if (T.pointBottomLeft) {
                T.pointBottomLeft = this.calcLoopCenterPoint(T.pointBottomLeft);
                T.pointTopLeft = this.calcLoopCenterPoint(T.pointTopLeft);
                T.pointTopRight = this.calcLoopCenterPoint(T.pointTopRight);
                T.pointBottomRight = this.calcLoopCenterPoint(T.pointBottomRight)
            }
            return T
        },
        calcLoopTiles: function(jW, e, j0, jT) {
            j0 = j0 || 256;
            var jP = jT || Math.pow(2, 18 - e) * j0;
            var jV = Math.floor(this._mc180X / jP);
            var jR = Math.floor(this._mcM180X / jP);
            var jX = Math.floor(this._loopOffset / jP);
            var jY = [];
            for (var jS = 0; jS < jW.length; jS++) {
                var jZ = jW[jS];
                var jO = jZ[0];
                var j1 = jZ[1];
                if (jO >= jV) {
                    var jU = jO + jX;
                    if (this.isTileBlank(jU, e, j0) === true) {
                        continue
                    }
                    var T = "id_" + jU + "_" + j1 + "_" + e;
                    if (!jW[T]) {
                        jW[T] = true;
                        jY.push([jU, j1, e, 0])
                    }
                } else {
                    if (jO <= jR) {
                        var jU = jO - jX;
                        if (this.isTileBlank(jU, e, j0) === true) {
                            continue
                        }
                        var T = "id_" + jU + "_" + j1 + "_" + e;
                        if (!jW[T]) {
                            jW[T] = true;
                            jY.push([jU, j1, e, 0])
                        }
                    }
                }
            }
            for (var jS = 0, jQ = jY.length; jS < jQ; jS++) {
                jW.push(jY[jS])
            }
            for (var jS = jW.length - 1; jS >= 0; jS--) {
                var jO = jW[jS][0];
                if (this.isTileBlank(jO, e, j0)) {
                    jW.splice(jS, 1)
                }
            }
            return jW
        },
        isTileBlank: function(T, jP, e) {
            var jQ = Math.pow(2, jP - 3);
            var i = Math.round(this._validPixels * jQ);
            var jO = 6 * jQ * 256 / e;
            while (T > jO / 2 - 1) {
                T -= jO
            }
            while (T < -(jO / 2)) {
                T += jO
            }
            if (T > 0 && T * e > i) {
                return true
            }
            if (T < 0 && Math.abs((T + 1) * e) > i) {
                return true
            }
            return false
        },
        isAddWidth: function(e, i) {
            return e < this._mcM180X || i > this._mc180X
        },
        pixelWidth: function(e, i) {
            if (e < 0) {
                e = -e
            }
            return Math.abs(e - this._mc180X) / (Math.pow(2, 18 - i))
        },
        getSpaceDistanceInPixel: function(i) {
            var e = Math.round((this._spaceDistance + this._mSpaceDistance) / Math.pow(2, 18 - i));
            return e
        }
    };
    var eM = new bB();
    function eb() {
        this._id = undefined;
        this._type = undefined;
        this.grid = undefined;
        this.layerName = undefined;
        this.geojson = undefined;
        this._geometry = null;
        this._properties = {};
        this._box = null;
        this._state = {};
        this._style = null;
        this._visible = true;
        this.renderData = {};
        return this
    }
    eb.prototype.serialize = function() {
        return {
            id: this.getId(),
            type: this.getType(),
            grid: this.grid,
            layerName: this.layerName,
            geojson: this.geojson,
            renderData: this.renderData,
            geometry: this.getGeometry(),
            box: this.getBox(),
            properties: this.getProperties(),
            state: this.getState(),
            visible: this._visible
        }
    }
    ;
    eb.prototype.deserialize = function(e) {
        this.setId(e.id);
        this.setType(e.type);
        this.grid = e.grid;
        this.layerName = e.layerName;
        this.geojson = e.geojson;
        this.setProperties(e.properties);
        this.setState(e.state);
        this._visible = e.visible || true;
        this.renderData = e.renderData;
        this.setGeometry(e.geometry);
        this.setBox(e.box);
        return this
    }
    ;
    eb.prototype.getType = function() {
        return this._type
    }
    ;
    eb.prototype.getGeometry = function() {
        return this._geometry
    }
    ;
    eb.prototype.getId = function() {
        return this._id
    }
    ;
    eb.prototype.getProperties = function() {
        return this._properties
    }
    ;
    eb.prototype.getBox = function() {
        return this._box
    }
    ;
    eb.prototype.getState = function() {
        if (Object.keys(this._state).length > 0) {
            return this._state
        } else {
            return null
        }
    }
    ;
    eb.prototype.getStyle = function() {
        return this._style
    }
    ;
    eb.prototype.getStyleFunction = function() {
        return this._styleFunction
    }
    ;
    eb.prototype.setType = function(e) {
        return this._type = e
    }
    ;
    eb.prototype.setGeometry = function(e) {
        this._geometry = e
    }
    ;
    eb.prototype.setStyle = function(e) {
        if (!e || Object.keys(e).length === 0) {
            return
        }
        for (var i in e) {
            this.set(i, e[i], this._style)
        }
    }
    ;
    eb.prototype.setState = function(e) {
        for (var i in e) {
            this.set(i, e[i], this._state)
        }
    }
    ;
    eb.prototype.setId = function(e) {
        this._id = e
    }
    ;
    eb.prototype.setProperties = function(e) {
        for (var i in e) {
            this.set(i, e[i], this._properties)
        }
    }
    ;
    eb.prototype.setBox = function(e) {
        return this._box = e
    }
    ;
    eb.prototype.isPointInBox = function(e) {
        return this._pointInBox(e, this._box)
    }
    ;
    eb.prototype.getPointGeoJSON = function(jO) {
        var jX = this.renderData;
        if (jX) {
            var jR = jX.active;
            if (!jX[jR] || !jX[jR]["poi"]) {
                return null
            }
            var jW = [];
            var jT = jX[jR]["poi"];
            for (var jU = 0; jU < jT.length; jU++) {
                if (jT[jU].bds && jT[jU].bds.length === 4) {
                    var jP = jO.pointToPixelIn(jT[jU].pt);
                    var jS = jP.x - jT[jU].bds[0];
                    var jQ = jP.y - jT[jU].bds[1];
                    var T = jP.x - jT[jU].bds[2];
                    var e = jP.y - jT[jU].bds[3];
                    jW.push([[jS, jQ], [T, jQ], [T, e], [jS, e], [jS, jQ]])
                }
            }
            if (jW.length === 0) {
                return null
            } else {
                var jV = "Polygon";
                if (jW.length > 0) {
                    jV = "MultiPolygon"
                }
                return {
                    type: "Feature",
                    properties: {},
                    geometry: {
                        type: jV,
                        coordinates: [jW]
                    }
                }
            }
        }
    }
    ;
    eb.prototype._pointInBox = function(e, i) {
        if (i[0] > e[0] || i[1] > e[1] || i[2] < e[0] || i[3] < e[1]) {
            return false
        } else {
            return true
        }
    }
    ;
    eb.prototype._pixelPnpoint = function(jP, jT, e) {
        var jU = false;
        if (jT) {
            var jO = jT.active;
            if (!jT[jO] || !jT[jO]["poi"]) {
                return jU
            }
            var jQ = jT[jO]["poi"];
            for (var jR = 0; jR < jQ.length; jR++) {
                if (jQ[jR].bds && jQ[jR].bds.length === 4) {
                    var T = e.pointToPixelIn(jQ[jR].pt);
                    if ((jP.x - T.x < jQ[jR].bds[2] && jP.x - T.x > jQ[jR].bds[0]) && (T.y - jP.y < jQ[jR].bds[3] && T.y - jP.y > jQ[jR].bds[1])) {
                        if (e.getTilt() > 55) {
                            var jS = e.pointToOverlayPixelIn(jQ[jR].pt);
                            if (jS.outOfFrustum) {
                                continue
                            }
                        }
                        jU = true;
                        break
                    }
                }
            }
        }
        return jU
    }
    ;
    eb.prototype._pixelPnpoly = function(jP, jR) {
        var e = jR.length;
        var T = 0;
        var jQ = false;
        for (var jO = 0; jO < e; jO++) {
            T = (jO === e - 1) ? 0 : T + 1;
            if ((jR[jO].lat !== jR[T].lat) && (((jP.lat >= jR[jO].lat) && (jP.lat < jR[T].lat)) || ((jP.lat >= jR[T].lat) && (jP.lat < jR[jO].lat))) && (jP.lng < (jR[T].lng - jR[jO].lng) * (jP.lat - jR[jO].lat) / (jR[T].lat - jR[jO].lat) + jR[jO].lng)) {
                jQ = !jQ
            }
        }
        return jQ
    }
    ;
    eb.prototype._getProximity = function(jY, jU) {
        var T, jO, jX, jS, jR, jW, jV;
        var j1 = jU.length;
        if (j1 > 1) {
            for (var jZ = 1; jZ < j1; jZ++) {
                var jT = jU[jZ - 1];
                var j5 = jU[jZ];
                if (!jT || !j5) {
                    continue
                }
                if (jT.lng != j5.lng) {
                    var j4 = (j5.lat - jT.lat) / (j5.lng - jT.lng);
                    var j2 = j5.lat - j4 * j5.lng;
                    jV = Math.abs(j4 * jY.lng + j2 - jY.lat) / Math.sqrt(j4 * j4 + 1)
                } else {
                    jV = Math.abs(jY.lng - j5.lng)
                }
                var j0 = Math.pow(j5.lat - jT.lat, 2) + Math.pow(j5.lng - jT.lng, 2);
                var jP = Math.pow(j5.lat - jY.lat, 2) + Math.pow(j5.lng - jY.lng, 2);
                var j3 = Math.pow(jT.lat - jY.lat, 2) + Math.pow(jT.lng - jY.lng, 2);
                var jQ = Math.pow(jV, 2);
                var e = jP - jQ + j3 - jQ;
                if (e > j0) {
                    jV = Math.sqrt(Math.min(jP, j3))
                }
                if ((T == null) || (T > jV)) {
                    jO = Math.sqrt(j3 - jQ) / Math.sqrt(j0);
                    jX = Math.sqrt(jP - jQ) / Math.sqrt(j0);
                    T = jV;
                    jW = jZ
                }
                T = Math.min(T, jV)
            }
        }
        return {
            dist: T
        }
    }
    ;
    eb.prototype.isPointInGeometry = function(T, jT) {
        var e = false;
        switch (this._type) {
        case fz.POINT:
            e = this._pixelPnpoint(T, this.renderData, jT);
            break;
        case fz.LINE_STRING:
            var jP = this._getProximity({
                lng: T[0],
                lat: T[1]
            }, this._geometry);
            var jS = this.renderData[this.renderData.active];
            if (!jS || !jS.line || !jS.line[0] || !jS.line[0].width) {
                var jR = 2
            } else {
                var jR = this.renderData[this.renderData.active]["line"][0].width;
                if (this.grid === dU.GridModel.GOOGLEWEB) {
                    jR = Math.max(jR / 2 * dq.gridScaleFromBDMCTo3857, 2)
                } else {
                    jR = Math.max(jR / 2, 2)
                }
            }
            if (jP.dist < jR) {
                e = true
            }
            break;
        case fz.POLYGON:
            e = this._pixelPnpoly({
                lng: T[0],
                lat: T[1]
            }, this._geometry);
            break;
        case fz.MULTI_POLYGON:
            for (var jQ = 0; jQ < this._geometry.length; jQ++) {
                if (this._geometry[jQ][0]instanceof cr) {
                    e = this._pixelPnpoly({
                        lng: T[0],
                        lat: T[1]
                    }, this._geometry[jQ])
                } else {
                    e = this._pixelPnpoly({
                        lng: T[0],
                        lat: T[1]
                    }, this._geometry[jQ][0]);
                    if (e) {
                        for (var jO = 1; jO < this._geometry[jQ].length; jO++) {
                            e = this._pixelPnpoly({
                                lng: T[0],
                                lat: T[1]
                            }, this._geometry[jQ][jO]);
                            if (e) {
                                e = false;
                                break
                            }
                        }
                    }
                }
                if (e) {
                    break
                }
            }
            break;
        case fz.MULTI_LINE_STRING:
            var jS = this.renderData[this.renderData.active];
            if (!jS || !jS.line || !jS.line[0] || !jS.line[0].width) {
                var jR = 6
            } else {
                var jR = this.renderData[this.renderData.active]["line"][0].width;
                jR = Math.max(jR / 2 * dq.gridScaleFromBDMCTo3857, 6)
            }
            for (var jQ = 0; jQ < this._geometry.length; jQ++) {
                if (this._geometry[jQ][0]instanceof cr) {
                    var jP = this._getProximity({
                        lng: T[0],
                        lat: T[1]
                    }, this._geometry[jQ]);
                    if (jP.dist < jR) {
                        e = true;
                        break
                    }
                }
            }
            break;
        case fz.MULTI_POINT:
            e = this._pixelPnpoint(T, this.renderData, jT);
            break;
        default:
            throw new Error("geojson类型错误: " + this._type)
        }
        return e
    }
    ;
    eb.prototype.set = function(i, T, jO) {
        var e = jO || (jO = {});
        e[i] = T
    }
    ;
    var gg = (function() {
        function jV(j1) {
            var j0 = j1 ? j1 : {};
            if (j0.reference) {
                this.reference = j0.reference
            } else {
                this.reference = null
            }
            return this
        }
        jV.prototype.readFeatureFromObject = function(j1, j4) {
            var j0 = null;
            if (j1.type === "Feature") {
                j0 = j1
            } else {
                j0 = {
                    type: "Feature",
                    geometry: j1,
                    properties: null,
                }
            }
            j4 = j4 || {};
            j4.reference = (j4.reference === undefined ? this.reference : j4.reference);
            if (j4.isPoints) {
                j4.onlyGeometry = true
            }
            var j5 = T(j0.geometry, j4, j0.properties);
            var j3 = e(jQ(j0), j4);
            if (!j5) {
                return null
            }
            if (j4 && j4.onlyGeometry && !j4.isPoints) {
                return {
                    geometry: j5,
                    type: j0.geometry["type"],
                    bBox: j3
                }
            }
            if (j5 instanceof Array && !(j5[0]instanceof cr)) {
                for (var j2 = 0; j2 < j5.length; j2++) {
                    if (j4.isPoints) {
                        j5[j2] = {
                            points: j5[j2],
                            properties: j0.properties
                        }
                    } else {
                        j5[j2]["properties"] = j0.properties
                    }
                }
            } else {
                if (j4.isPoints) {
                    j5 = {
                        points: j5,
                        properties: j0.properties
                    }
                } else {
                    j5.properties = j0.properties
                }
            }
            return j5
        }
        ;
        jV.prototype.readFeaturesFromObject = function(j2, ka, j0) {
            var j7 = j2;
            var j1 = null;
            if (j7.type === "FeatureCollection") {
                var j4 = j2;
                j1 = [];
                var j6 = j4.features;
                for (var j5 = 0, j8 = j6.length; j5 < j8; ++j5) {
                    var j9 = this.readFeatureFromObject(j6[j5], ka);
                    if (j9 instanceof Array) {
                        for (var j3 = 0; j3 < j9.length; j3++) {
                            j0 && j0(j9[j3]);
                            j1.push(j9[j3])
                        }
                    } else {
                        j0 && j0(j9);
                        j1.push(j9)
                    }
                }
            } else {
                var j9 = this.readFeatureFromObject(j2, ka);
                if (j9 instanceof Array) {
                    j1 = [];
                    for (var j5 = 0; j5 < j9.length; j5++) {
                        j0 && j0(j9[j5]);
                        j1.push(j9[j5])
                    }
                } else {
                    j0 && j0(j9);
                    j1 = [j9]
                }
            }
            return j1
        }
        ;
        function T(j0, j2, j1) {
            if (!j0) {
                return null
            }
            var j3;
            switch (j0.type) {
            case fz.POINT:
                j3 = jS(j0, j2, j1);
                break;
            case fz.LINE_STRING:
                j3 = jO(j0, j2, j1);
                break;
            case fz.POLYGON:
                j3 = jT(j0, j2, j1);
                break;
            case fz.MULTI_POINT:
                j3 = jU(j0, j2, j1);
                break;
            case fz.MULTI_LINE_STRING:
                j3 = jX(j0, j2, j1);
                break;
            case fz.MULTI_POLYGON:
                j3 = jY(j0, j2, j1);
                break;
            default:
                throw new Error("geojson类型错误: " + j0.type)
            }
            return j3
        }
        function jS(j1, j4, j2) {
            var j5 = j1.coordinates;
            if (j4.reference && j4.reference !== "BD09LL") {
                j5 = gcoord.transform(j5, j4.reference || "WGS84", gcoord.BD09LL)
            }
            if (j4 && j4.onlyGeometry) {
                return new cr(j5[0],j5[1])
            }
            var j3 = j4;
            if (j4.markerStyle) {
                j3 = j4.markerStyle;
                if (j4.markerStyle instanceof Function) {
                    j3 = j4.markerStyle(j2) || {}
                }
            }
            var j0 = new s(new cr(j5[0],j5[1]),j3);
            return j0
        }
        function jZ(j4, j1) {
            var j3 = [];
            for (var j0 = 0; j0 < j4.length; j0++) {
                var j2 = j4[j0];
                if (j1.reference && j1.reference !== "BD09LL") {
                    j2 = gcoord.transform(j2, j1.reference || "WGS84", gcoord.BD09LL)
                }
                j3.push(new cr(j2[0],j2[1]))
            }
            return j3
        }
        function jO(j1, j4, j2) {
            var j5 = j1.coordinates;
            if (j4 && j4.onlyGeometry) {
                return jZ(j5, j4)
            }
            var j3 = j4;
            if (j4.polylineStyle) {
                j3 = j4.polylineStyle;
                if (j4.polylineStyle instanceof Function) {
                    j3 = j4.polylineStyle(j2) || {}
                }
            }
            var j0 = new bk(jZ(j5, j4),j3);
            return j0
        }
        function jT(j0, j4, j2) {
            var j5 = j0.coordinates;
            if (j4 && j4.onlyGeometry) {
                return jZ(j5[0], j4)
            }
            var j3 = j4;
            if (j4.polygonStyle) {
                j3 = j4.polygonStyle;
                if (j4.polygonStyle instanceof Function) {
                    j3 = j4.polygonStyle(j2) || {}
                }
            }
            var j1 = new ik(jZ(j5[0], j4),j3);
            return j1
        }
        function jU(j2, j8, j5) {
            var j6 = j2.coordinates;
            var j0 = [];
            for (var j4 = 0; j4 < j6.length; j4++) {
                var j7 = j6[j4];
                if (j8.reference && j8.reference !== "BD09LL") {
                    j7 = gcoord.transform(j7, j8.reference || "WGS84", gcoord.BD09LL)
                }
                if (j8 && j8.onlyGeometry) {
                    j0.push(new cr(j7[0],j7[1]))
                } else {
                    var j1 = j8;
                    if (j8.markerStyle) {
                        j1 = j8.markerStyle;
                        if (j8.markerStyle instanceof Function) {
                            j1 = j8.markerStyle(j5) || {}
                        }
                    }
                    var j3 = new s(new cr(j7[0],j7[1]),j1);
                    j0.push(j3)
                }
            }
            return j0
        }
        function jX(j1, j5, j3) {
            var j7 = j1.coordinates;
            var j6 = [];
            for (var j2 = 0; j2 < j7.length; j2++) {
                if (j5 && j5.onlyGeometry) {
                    j6.push(jZ(j7[j2], j5))
                } else {
                    var j4 = j5;
                    if (j5.polylineStyle) {
                        j4 = j5.polylineStyle;
                        if (j5.polylineStyle instanceof Function) {
                            j4 = j5.polylineStyle(j3) || {}
                        }
                    }
                    var j0 = new bk(jZ(j7[j2], j5),j4);
                    j6.push(j0)
                }
            }
            return j6
        }
        function jY(j3, ka, j7) {
            var j9 = j3.coordinates;
            var j0 = [];
            for (var j6 = 0; j6 < j9.length; j6++) {
                var kb = [];
                for (var j4 = 0, j2 = j9[j6]; j4 < j2.length; j4++) {
                    var j5 = jZ(j2[j4], ka);
                    if (ka && ka.onlyGeometry) {
                        if (j2.length === 1) {
                            j0.push(j5)
                        } else {
                            kb.push(j5)
                        }
                    } else {
                        if (j2.length === 1) {
                            var j1 = ka;
                            if (ka.polygonStyle) {
                                j1 = ka.polygonStyle;
                                if (ka.polygonStyle instanceof Function) {
                                    j1 = ka.polygonStyle(j7) || {}
                                }
                            }
                            var j8 = new ik(j5,j1);
                            j0.push(j8)
                        } else {
                            kb.push(j5)
                        }
                    }
                }
                if (j2.length !== 1) {
                    if (ka && ka.onlyGeometry) {
                        j0.push(kb)
                    } else {
                        var j1 = ka;
                        if (ka.polygonStyle) {
                            j1 = ka.polygonStyle;
                            if (ka.polygonStyle instanceof Function) {
                                j1 = ka.polygonStyle(j7) || {}
                            }
                        }
                        var j8 = new ik(kb,j1);
                        j0.push(j8)
                    }
                }
            }
            return j0
        }
        function jP(j0) {}
        function e(j4, j1) {
            var j3 = [];
            for (var j0 = 0; j0 < j4.length; j0 += 2) {
                var j2 = [j4[j0], j4[j0 + 1]];
                if (j1.reference && j1.reference !== "BD09LL") {
                    j2 = gcoord.transform(j2, j1.reference || "WGS84", gcoord.BD09LL)
                }
                j3.push(j2[0]);
                j3.push(j2[1])
            }
            return j3
        }
        function jQ(j0) {
            var j1 = [Infinity, Infinity, -Infinity, -Infinity];
            jR(j0, function(j2) {
                if (j1[0] > j2[0]) {
                    j1[0] = j2[0]
                }
                if (j1[1] > j2[1]) {
                    j1[1] = j2[1]
                }
                if (j1[2] < j2[0]) {
                    j1[2] = j2[0]
                }
                if (j1[3] < j2[1]) {
                    j1[3] = j2[1]
                }
            });
            return j1
        }
        function jR(j9, ke) {
            var j5, j2, j1, j8, j0, kb, kd, kc, j4, j7, j3 = j9.type === "FeatureCollection", j6 = j9.type === "Feature", ka = j3 ? j9.features.length : 1;
            for (j5 = 0; j5 < ka; j5++) {
                j4 = (j3 ? j9.features[j5]["geometry"] : (j6 ? j9.geometry : j9));
                j7 = j4.type === "GeometryCollection";
                kd = j7 ? j4.geometries.length : 1;
                for (j8 = 0; j8 < kd; j8++) {
                    kb = j7 ? j4.geometries[j8] : j4;
                    kc = kb.coordinates;
                    if (kb.type === "Point") {
                        ke(kc)
                    } else {
                        if (kb.type === "LineString" || kb.type === "MultiPoint") {
                            for (j2 = 0; j2 < kc.length; j2++) {
                                ke(kc[j2])
                            }
                        } else {
                            if (kb.type === "Polygon" || kb.type === "MultiLineString") {
                                for (j2 = 0; j2 < kc.length; j2++) {
                                    for (j1 = 0; j1 < kc[j2].length; j1++) {
                                        ke(kc[j2][j1])
                                    }
                                }
                            } else {
                                if (kb.type === "MultiPolygon") {
                                    for (j2 = 0; j2 < kc.length; j2++) {
                                        for (j1 = 0; j1 < kc[j2].length; j1++) {
                                            for (j0 = 0; j0 < kc[j2][j1].length; j0++) {
                                                ke(kc[j2][j1][j0])
                                            }
                                        }
                                    }
                                } else {
                                    throw new Error("类型错误")
                                }
                            }
                        }
                    }
                }
            }
        }
        function i(j9, ke) {
            var j5, j2, j1, j8, j0, kb, kd, kc, j4, j7, j3 = j9.type === "FeatureCollection", j6 = j9.type === "Feature", ka = j3 ? j9.features.length : 1;
            for (j5 = 0; j5 < ka; j5++) {
                j4 = (j3 ? j9.features[j5]["geometry"] : (j6 ? j9.geometry : j9));
                j7 = j4.type === "GeometryCollection";
                kd = j7 ? j4.geometries.length : 1;
                for (j8 = 0; j8 < kd; j8++) {
                    kb = j7 ? j4.geometries[j8] : j4;
                    kc = kb.coordinates;
                    if (kb.type === "Point") {
                        kc = ke(kc)
                    } else {
                        if (kb.type === "LineString" || kb.type === "MultiPoint") {
                            for (j2 = 0; j2 < kc.length; j2++) {
                                kc[j2] = ke(kc[j2])
                            }
                        } else {
                            if (kb.type === "Polygon" || kb.type === "MultiLineString") {
                                for (j2 = 0; j2 < kc.length; j2++) {
                                    for (j1 = 0; j1 < kc[j2].length; j1++) {
                                        kc[j2][j1] = ke(kc[j2][j1])
                                    }
                                }
                            } else {
                                if (kb.type === "MultiPolygon") {
                                    for (j2 = 0; j2 < kc.length; j2++) {
                                        for (j1 = 0; j1 < kc[j2].length; j1++) {
                                            for (j0 = 0; j0 < kc[j2][j1].length; j0++) {
                                                kc[j2][j1][j0] = ke(kc[j2][j1][j0])
                                            }
                                        }
                                    }
                                } else {
                                    throw new Error("类型错误")
                                }
                            }
                        }
                    }
                }
            }
        }
        function jW(j1) {
            var j0 = j1.type === "FeatureCollection";
            var j2 = j1.type === "Feature";
            var j3 = (j0 ? j1.features[0]["geometry"] : (j2 ? j1.geometry : j1));
            if (j3.type) {
                return j3.type
            } else {
                throw new Error("类型错误")
            }
        }
        jV.bbox = jQ;
        jV.coordEachReplace = i;
        jV.getType = jW;
        return jV
    }
    )();
    const cR = {
        point: {
            symbolPath: {
                format: "string",
                defaultValue: ""
            },
            symbolFillColor: {
                format: "string",
                defaultValue: "#000"
            },
            symbolFillOpacity: {
                format: "number",
                defaultValue: 1
            },
            symbolScale: {
                format: "number",
                defaultValue: 1
            },
            symbolRotation: {
                format: "number",
                defaultValue: 0
            },
            symbolStrokeColor: {
                format: "string",
                defaultValue: "#000"
            },
            symbolStrokeOpacity: {
                format: "number",
                defaultValue: 0
            },
            symbolStrokeWeight: {
                format: "number",
                defaultValue: 0
            },
            icon: {
                format: "string",
                defaultValue: ""
            },
            iconSize: {
                format: "array",
                defaultValue: [32, 32]
            },
            uid: {
                format: "string",
                defaultValue: "custom-vector-0"
            },
            name: {
                format: "string",
                defaultValue: ""
            },
            fontSize: {
                format: "number",
                defaultValue: 22
            },
            color: {
                format: "string",
                defaultValue: "#0d20c9"
            },
            haloSize: {
                format: "number",
                defaultValue: 2
            },
            strokeColor: {
                format: "string",
                defaultValue: "#fff"
            },
            textOnIcon: {
                format: "string",
                defaultValue: false
            },
            textOnIconSize: {
                format: "array",
                defaultValue: [32, 32]
            },
            textOnIconUrl: {
                format: "string",
                defaultValue: ""
            },
            textMargin: {
                format: "number",
                defaultValue: 0
            },
            direction: {
                format: "number",
                defaultValue: 0
            },
            rank: {
                format: "number",
                defaultValue: 50000
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        },
        polyline: {
            strokeLineJoin: {
                format: "string",
                defaultValue: "miter"
            },
            strokeLineCap: {
                format: "string",
                defaultValue: "round"
            },
            strokeColor: {
                format: "string",
                defaultValue: "#142655"
            },
            strokeWeight: {
                format: "number",
                defaultValue: 2
            },
            strokeOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeStyle: {
                format: "string",
                defaultValue: "solid"
            },
            dashArray: {
                format: "object",
                defaultValue: [8, 4]
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        },
        polygon: {
            fillColor: {
                format: "string",
                defaultValue: "#142655"
            },
            fillOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeWeight: {
                format: "number",
                defaultValue: 0
            },
            strokeLineJoin: {
                format: "string",
                defaultValue: "bevel"
            },
            strokeLineCap: {
                format: "string",
                defaultValue: "round"
            },
            strokeColor: {
                format: "string",
                defaultValue: "#dec41b"
            },
            strokeOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeStyle: {
                format: "string",
                defaultValue: "solid"
            },
            dashArray: {
                format: "object",
                defaultValue: [8, 4]
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        }
    };
    const cm = (function(i) {
        var e = {};
        for (var jO in i) {
            e[jO] = {};
            for (var T in i[jO]) {
                e[jO][T] = i[jO][T].defaultValue
            }
        }
        return e
    }
    )(cR);
    const fz = {
        POINT: "Point",
        LINE_STRING: "LineString",
        POLYGON: "Polygon",
        MULTI_POINT: "MultiPoint",
        MULTI_LINE_STRING: "MultiLineString",
        MULTI_POLYGON: "MultiPolygon",
        CIRCLE: "Circle",
    };
    function fr(e) {
        return e && typeof ArrayBuffer !== "undefined" && (e instanceof ArrayBuffer || (e.constructor && e.constructor.name === "ArrayBuffer"))
    }
    function f2(e) {
        if (self) {
            if (self.ImageBitmap && e instanceof self.ImageBitmap) {
                return true
            }
        } else {
            if (window && window.ImageBitmap) {
                if (e instanceof window.ImageBitmap) {
                    return true
                }
            }
        }
        return false
    }
    const iH = {};
    function aF(i, jO, T) {
        var e = T || {};
        Object.defineProperty(i, "_classRegistryKey", {
            value: jO,
            writeable: false
        });
        iH[jO] = {
            _class: i,
            escape: e.escape || []
        }
    }
    aF(Object, "Object");
    aF(cr, "Point");
    function i5(jT, jR) {
        if (jT === null || jT === undefined || typeof jT === "boolean" || typeof jT === "number" || typeof jT === "string" || jT instanceof Boolean || jT instanceof Number || jT instanceof String || jT instanceof Date || jT instanceof RegExp) {
            return jT
        }
        if (fr(jT)) {
            if (jR) {
                jR.push(jT)
            }
            return jT
        }
        if (f2(jT)) {
            if (jR) {
                var jW = jR.filter(function(i) {
                    if (i === jT) {
                        return true
                    } else {
                        return false
                    }
                });
                !jW && jR.push(jT)
            }
            return jT
        }
        if (ArrayBuffer.isView(jT)) {
            const jS = jT;
            if (jR) {
                jR.push(jS.buffer)
            }
            return jS
        }
        if (jT instanceof ImageData) {
            if (jR) {
                var jW = jR.filter(function(i) {
                    if (i === jT.data.buffer) {
                        return true
                    } else {
                        return false
                    }
                });
                !jW && jR.push(jT.data.buffer)
            }
            return jT
        }
        if (Array.isArray(jT)) {
            const T = [];
            for (var jO = 0; jO < jT.length; jO++) {
                var jX = jT[jO];
                T.push(i5(jX, jR))
            }
            return T
        }
        if (typeof jT === "object") {
            const jP = jT.constructor;
            const e = jP._classRegistryKey;
            if (!e) {
                throw new Error("不能被序列化")
            }
            const jQ = jP.serialize ? jP.serialize(jT, jR) : {};
            if (!jP.serialize) {
                for (var jV in jT) {
                    if (!jT.hasOwnProperty(jV)) {
                        continue
                    }
                    if (iH[e]["escape"].indexOf(jV) >= 0) {
                        continue
                    }
                    const jU = jT[jV];
                    jQ[jV] = i5(jU, jR)
                }
                if (jT instanceof Error) {
                    jQ.message = jT.message
                }
            }
            if (e !== "Object") {
                jQ["_$name"] = e
            }
            return jQ
        } else {
            if (jT instanceof Function) {
                return null
            }
        }
        throw new Error("不能被序列化")
    }
    function hQ(jQ) {
        if (jQ === null || jQ === undefined || typeof jQ === "boolean" || typeof jQ === "number" || typeof jQ === "string" || jQ instanceof Boolean || jQ instanceof Number || jQ instanceof String || jQ instanceof Date || jQ instanceof RegExp || fr(jQ) || f2(jQ) || ArrayBuffer.isView(jQ) || jQ instanceof ImageData) {
            return jQ
        }
        if (Array.isArray(jQ)) {
            var e = jQ["_$name"];
            if (e) {
                var jO = iH[e]["_class"];
                if (!jO) {
                    throw new Error("不能被反序列化")
                }
                if (jO.deserialize) {
                    return jO.deserialize(jQ)
                }
            }
            const jP = [];
            for (var T = 0; T < jQ.length; T++) {
                var jT = jQ[T];
                jP.push(hQ(jT))
            }
            return jP
        }
        if (typeof jQ === "object") {
            var e = jQ["_$name"] || "Object";
            var jO = iH[e]["_class"];
            if (!jO) {
                throw new Error("不能被反序列化")
            }
            if (jO.deserialize) {
                return jO.deserialize(jQ)
            }
            const jV = Object.create(jO.prototype);
            const jU = Object.keys(jQ);
            for (var T = 0; T < jU.length; T++) {
                const jS = jU[T];
                if (jS === "_$name") {
                    continue
                }
                const jR = jQ[jS];
                jV[jS] = hQ(jR)
            }
            return jV
        }
        throw new Error("不能被反序列化")
    }
    function k(jS, jQ, jR) {
        if (!jS.length) {
            return jR(null, [])
        }
        var jP = jS.length;
        const jO = new Array(jS.length);
        var e = null;
        for (var T = 0; T < jS.length; T++) {
            jQ(jS[T], function(jT, i) {
                if (jT) {
                    e = jT
                }
                jO[T] = i;
                if (--jP === 0) {
                    jR(e, jO)
                }
            }, T)
        }
    }
    function fQ(jT, jQ, jS) {
        if (!jT.length) {
            return jS(null, [])
        }
        var jP = jT.length;
        const jO = new Array(jT.length);
        var e = null;
        var T = 0;
        function jR() {
            jQ(jT[T], function(jU, i) {
                if (jU) {
                    e = jU
                }
                jO[T] = i;
                if (--jP === 0) {
                    jS(e, jO)
                } else {
                    T++;
                    jR()
                }
            }, T)
        }
        jR()
    }
    var jh = (function() {
        var i = true;
        var jP = 256;
        var e = true;
        var jR = jr("ditu", "normalTraffic");
        var jO = jR.udt;
        var jS = "//its.map.baidu.com/traffic/";
        var jQ = [[2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 4, 2, 0, [], 0, 0], [2, "79,210,125,1", 5, 2, 0, [], 0, 0], [2, "79,210,125,1", 6, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 4, 2, 0, [], 0, 0], [2, "255,208,69,1", 5, 2, 0, [], 0, 0], [2, "255,208,69,1", 6, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 4, 2, 0, [], 0, 0], [2, "232,14,14,1", 5, 2, 0, [], 0, 0], [2, "232,14,14,1", 6, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 4, 2, 0, [], 0, 0], [2, "181,0,0,1", 5, 2, 0, [], 0, 0], [2, "181,0,0,1", 6, 2, 0, [], 0, 0], [2, "255,255,255,1", 4, 0, 0, [], 0, 0], [2, "255,255,255,1", 5.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 7, 0, 0, [], 0, 0], [2, "255,255,255,1", 8.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 10, 0, 0, [], 0, 0]];
        var T = new hc({
            transparentPng: true,
            dataType: 2,
            cacheSize: 256,
            clipTile: true,
            isFlat: true
        });
        T.zIndex = 2;
        T.getTilesUrl = function(jV, jW) {
            if (!jV || jW < 7) {
                return null
            }
            var jU = jV.x;
            var jX = jV.y;
            var jT = jS + "TrafficTileService?level=" + jW + "&x=" + jU + "&y=" + jX + "&time=" + (+new Date());
            if (this.map.getRenderType() === "webgl") {
                jT = jS + "?qt=vtraffic&z=" + jW + "&x=" + jU + "&y=" + jX + "&udt=" + jO
            }
            return jT
        }
        ;
        T.setColors = function(jT) {
            for (var jW = 0; jW < jQ.length; jW++) {
                var jV = Math.floor(jW / 5);
                var jU = jT[jV];
                if (jU) {
                    if (Object.prototype.toString.call(jU) === "[object String]") {
                        jU = hi.parseCSSColor(jU)
                    }
                    jQ[jW][1] = [jU[0], jU[1], jU[2], jU[3] / 255].join(",")
                }
            }
        }
        ;
        T.setEdge = function(jT) {
            e = !!jT
        }
        ;
        T.processData = function(jW) {
            var j0 = jW.content;
            var jY = 10;
            if (typeof jW.precision === "number") {
                jY = jW.precision * 10
            }
            var j7 = {
                road: [[], []]
            };
            if (!j0) {
                return j7
            }
            var j5 = j0.tf;
            if (!j5) {
                return j7
            }
            for (var jX = 0; jX < j5.length; jX++) {
                var j6 = j5[jX][1];
                var j4 = [];
                var j2 = 0;
                var j1 = 0;
                var j3 = jQ[j5[jX][3]];
                for (var jV = 0, jT = j6.length; jV < jT / 2; jV++) {
                    j2 += j6[jV * 2] / jY;
                    j1 += j6[jV * 2 + 1] / jY;
                    j4.push(j2, 256 - j1)
                }
                var jU = j3[1].split(",");
                jU[3] = jU[3] * 255;
                var jZ = j3[2] / 2;
                if (e) {
                    j7.road[0].push([j4, 1, 2, [255, 255, 255, 255], jZ + 2])
                }
                j7.road[1].push([j4, 1, 2, jU, jZ])
            }
            return j7
        }
        ;
        return T
    }
    )();
    function iU() {}
    iU.prototype = jh;
    function dM(e) {
        en.call(this);
        e = e || {};
        this._opts = {};
        this._opts.districts = e.name || "";
        this._opts.kind = e.kind || 0;
        this._config = {};
        this._config.strokeColor = e.strokeColor || "#00f";
        this._config.strokeOpacity = typeof e.strokeOpacity === "number" ? e.strokeOpacity : 1;
        b6(this._config.strokeOpacity, 0, 1);
        this._config.fillColor = e.fillColor || "#ff0";
        this._config.fillOpacity = typeof e.fillOpacity === "number" ? e.fillOpacity : 0.6;
        b6(this._config.fillOpacity, 0, 1);
        this._config.strokeWeight = e.strokeWeight || 1;
        this._config.viewport = e.viewport || false;
        this.disOverlays = [];
        this.eventAndCallback = {};
        var i = this;
        gK.load("layer", function() {
            i._asyncSearch()
        })
    }
    dM.inherits(cZ, "DistrictLayer");
    eJ.extend(dM.prototype, {
        initialize: function(e) {
            this._map = e;
            this.addDistrict()
        },
        removeDistrict: function(i, e) {
            this._map = i;
            this.deleteDistrict(e)
        },
        toString: function() {
            return "DistrictLayer"
        }
    });
    function aM(e, i) {
        i = i || {};
        this.layerName = e || "unknown";
        this.reference = i.reference;
        this.level = i.level || -99;
        this.visible = (i.visible === undefined ? true : !!i.visible);
        this.minZoom = i.minZoom || 3;
        this.maxZoom = i.maxZoom || 21;
        this.markerStyle = i.markerStyle || {};
        this.polylineStyle = i.polylineStyle || {};
        this.polygonStyle = i.polygonStyle || {};
        this.overlayData = [];
        this._onMap = false;
        this.clickDistrict = 5;
        this.setData(i.dataSource)
    }
    aM.inherits(eJ.BaseClass, "GeoJSONLayer");
    aM.prototype.init = function(jR) {
        if (this.map) {
            return
        }
        this.map = jR;
        var jP = this;
        this._onZoomEvent = function() {
            if (jP.map.getZoom() >= jP.minZoom && jP.map.getZoom() <= jP.maxZoom) {
                if (!jP._onMap) {
                    jP.addDataToMap();
                    jP._onMap = true
                }
            } else {
                if (jP._onMap) {
                    jP.removeDataFromMap();
                    jP._onMap = false
                }
            }
        }
        ;
        this.map.on("zoomend", this._onZoomEvent);
        var jP = this;
        var e = false;
        var jO = {
            x: 0,
            y: 0
        };
        this._layerMouseEvent = function(jU) {
            if (!jP.map || !jP._listeners || !jP.visible || !jP._onMap) {
                return
            }
            if (!jP._listeners.onmousemove || Object.keys(jP._listeners.onmousemove).length === 0) {
                return
            }
            var jT = jP.pickOverlays(jU);
            var i;
            if (jT && jT.length > 0) {
                i = new fu("onmousemove");
                i.features = jT;
                jP.map.platform.style.cursor = jP.map.config.overlayMoveCursor;
                e = true
            } else {
                if (!e || !jP._listeners.onmouseout || Object.keys(jP._listeners.onmouseout).length === 0) {
                    return
                }
                jP.map.platform.style.cursor = jP.map.config.defaultCursor;
                i = new fu("onmouseout");
                i.features = null;
                e = false
            }
            if (i) {
                i.point = jU.point;
                i.pixel = jU.pixel;
                i.latLng = jU.latlng;
                jP.dispatchEvent(i)
            }
        }
        ;
        this._layerClickEvent = function(jV) {
            if (!jP.map || !jP._listeners || !jP.visible) {
                return
            }
            if ((!jP._listeners.onclick && !jP._listeners.dblclick) || (Object.keys(jP._listeners.onclick).length === 0 && Object.keys(jP._listeners.dblclick).length === 0)) {
                return
            }
            var jT = {
                x: jV.clientX,
                y: jV.clientY
            };
            if (Math.abs(jT.x - jO.x) > jP.clickDistrict || Math.abs(jT.y - jO.y) > jP.clickDistrict) {
                return
            }
            var jU = jP.pickOverlays(jV);
            var i = new fu(jV.type);
            i.point = jV.point;
            i.pixel = jV.pixel;
            i.latLng = jV.latlng;
            i.features = jU;
            jP.dispatchEvent(i)
        }
        ;
        this._layerMouseDownEvent = function(i) {
            jO = {
                x: i.clientX,
                y: i.clientY
            }
        }
        ;
        jR.addEventListener("onmousemove", this._layerMouseEvent);
        jR.addEventListener("onmouseout", this._layerMouseEvent);
        jR.addEventListener("onmousedown", this._layerMouseDownEvent);
        var jQ = ["onclick"];
        for (var T = 0; T < jQ.length; T++) {
            var jS = jQ[T];
            jR.addEventListener(jS, this._layerClickEvent)
        }
        this._onZoomEvent()
    }
    ;
    aM.prototype.remove = function() {
        if (this.map) {
            this.removeDataFromMap();
            this.map.removeEventListener("onmousemove", this._layerMouseEvent);
            this.map.removeEventListener("onmouseout", this._layerMouseEvent);
            this.map.removeEventListener("onclick", this._layerClickEvent);
            this.map.removeEventListener("onmousedown", this._layerMouseDownEvent);
            this.map.removeEventListener("onzoomend", this._onZoomEvent)
        }
        this.map = null
    }
    ;
    aM.prototype.destroy = function() {
        if (this.map) {
            this.clearData();
            this.map.removeEventListener("onmousemove", this._layerMouseEvent);
            this.map.removeEventListener("onmouseout", this._layerMouseEvent);
            this.map.removeEventListener("onclick", this._layerClickEvent);
            this.map.removeEventListener("onmousedown", this._layerMouseDownEvent);
            this.map.removeEventListener("onzoomend", this._onZoomEvent)
        }
        this.map = null
    }
    ;
    aM.prototype.setData = function(e) {
        if (!this.gParse) {
            this.gParse = new gg({
                reference: this.reference
            })
        }
        if (!e) {
            return
        }
        if (this.dataSource && this.overlayData.length > 0) {
            this.clearData()
        }
        this.dataSource = e;
        this.overlayData = this.gParse.readFeaturesFromObject(e, {
            markerStyle: this.markerStyle,
            polylineStyle: this.polylineStyle,
            polygonStyle: this.polygonStyle
        }, this._register.bind(this))
    }
    ;
    aM.prototype._register = function(e) {
        e.layerName = this.layerName;
        e.setZIndex(this.level)
    }
    ;
    aM.prototype.resetStyle = function() {
        for (var e = 0; e < this.overlayData.length; e++) {
            if (this.overlayData[e]instanceof s) {
                var i = this.markerStyle;
                if (this.markerStyle instanceof Function) {
                    i = this.markerStyle(this.overlayData[e].properties) || {}
                }
            }
            if (this.overlayData[e]instanceof bk) {
                var i = this.polylineStyle;
                if (this.polylineStyle instanceof Function) {
                    i = this.polylineStyle(this.overlayData[e].properties) || {}
                }
            }
            if (this.overlayData[e]instanceof ik) {
                var i = this.polygonStyle;
                if (this.polygonStyle instanceof Function) {
                    i = this.polygonStyle(this.overlayData[e].properties) || {}
                }
            }
            if (i) {
                this.overlayData[e].setOptions(i)
            }
        }
    }
    ;
    aM.prototype.getData = function() {
        return this.overlayData
    }
    ;
    aM.prototype.addOverlay = function(e) {
        var jR = e;
        if (!(e instanceof Array)) {
            jR = [e]
        }
        for (var jO = 0; jO < jR.length; jO++) {
            var T = jR[jO];
            if (T.__proto__ instanceof aQ) {
                this._register(T);
                this.overlayData.push(T);
                this.map.addOverlay(T)
            } else {
                var jQ = this.gParse.readFeaturesFromObject(T, {
                    markerStyle: this.markerStyle,
                    polylineStyle: this.polylineStyle,
                    polygonStyle: this.polygonStyle
                }, this._register.bind(this));
                for (var jP = 0; jP < jQ.length; jP++) {
                    this.overlayData.push(jQ[jP]);
                    this.map.addOverlay(jQ[jP])
                }
            }
        }
    }
    ;
    aM.prototype.removeOverlay = function(jO) {
        var jP = jO;
        if (!(jO instanceof Array)) {
            jP = [jO]
        }
        for (var T = 0; T < jP.length; T++) {
            var i = jP[T];
            var e = this.findItemIndex(i);
            if (e >= 0) {
                this.overlayData.splice(e, 1);
                this.map.removeOverlay(i)
            }
        }
    }
    ;
    aM.prototype.findItemIndex = function(T) {
        var i = -1;
        for (var e = 0; e < this.overlayData.length; e++) {
            if (this.overlayData[e].hashCode === T.hashCode) {
                i = e;
                break
            }
        }
        return i
    }
    ;
    aM.prototype.addDataToMap = function() {
        if (this.visible && this.map && this.map.getZoom() >= this.minZoom && this.map.getZoom() <= this.maxZoom) {
            for (var e = 0; e < this.overlayData.length; e++) {
                this.map.addOverlay(this.overlayData[e])
            }
        }
    }
    ;
    aM.prototype.removeDataFromMap = function() {
        if (this.map && this.overlayData.length > 0) {
            for (var e = 0; e < this.overlayData.length; e++) {
                this.map.removeOverlay(this.overlayData[e])
            }
        }
    }
    ;
    aM.prototype.clearData = function() {
        this.dataSource = null;
        if (this.map && this.overlayData.length > 0) {
            this.removeDataFromMap()
        }
        this.overlayData = []
    }
    ;
    aM.prototype.pickOverlays = function(jS) {
        var jR = [];
        if (!this.visible || !this._onMap) {
            return null
        }
        for (var jP = 0; jP < this.overlayData.length; jP++) {
            var jQ = this.overlayData[jP];
            var jO;
            if (!jQ && !jQ.isVisible()) {
                continue
            }
            if (jQ.toString() === "Marker") {
                jO = jQ._getInPnBox(jS.pixel);
                if (jO) {
                    jR.push(jQ)
                }
                continue
            }
            if (jQ.toString() !== "Polyline") {
                jO = jQ._getInPnpoly(jS.point)
            } else {
                jO = jQ._getProximity(jS.point)
            }
            var T = jO.dist;
            if (T >= 0 && T < jQ._config.mouseOverTolerance) {
                jR.push(jQ)
            }
        }
        return jR.length > 0 ? jR : null
    }
    ;
    aM.prototype.setLevel = function(e) {
        if (e > -999 && e < 9999) {
            this.level = e;
            for (var T = 0; T < this.overlayData.length; T++) {
                this.overlayData[T].setZIndex(this.level)
            }
            if (this.map) {
                this.map.fire(new BMapGL.Event("onupdate","line"))
            }
        }
    }
    ;
    aM.prototype.setClickDistrict = function(e) {
        this.clickDistrict = e || 5
    }
    ;
    aM.prototype.getLevel = function() {
        return this.level
    }
    ;
    aM.prototype.setVisible = function(i) {
        var e = !!i;
        if (this.visible !== e) {
            this.visible = e;
            if (e) {
                this.addDataToMap()
            } else {
                this.removeDataFromMap()
            }
        }
    }
    ;
    aM.prototype.getVisible = function() {
        return this.visible
    }
    ;
    aM.prototype.toString = function() {
        return "GeoJSONLayer"
    }
    ;
    function jB(i) {
        var i = i || {};
        var jQ = i.transform || {
            source: "EPSG3857",
            target: "BD09MC"
        };
        if (!jQ.source) {
            jQ.target = "EPSG3857"
        }
        if (!jQ.target) {
            jQ.target = "BD09MC"
        }
        const jO = i.tileUrlTemplate || "";
        const jU = i.xTemplate || function(j1, j3, j2) {
            return j1
        }
        ;
        const jY = i.yTemplate || (i.tms ? function(j1, j3, j2) {
            return Math.pow(2, j2) - j3 - 1
        }
        : function(j1, j3, j2) {
            return j3
        }
        );
        const jS = i.zTemplate || function(j1, j3, j2) {
            return j2
        }
        ;
        const jX = i.bTemplate || function(j1, j4, j3) {
            const j2 = dq.getTileRangeExtent([j3, j1, j4]);
            return j2.minX + "," + j2.minY + "," + j2.maxX + "," + j2.maxY
        }
        ;
        const jP = i.wTemplate || function(j1, j3, j2) {
            return 512
        }
        ;
        const jT = i.hTemplate || function(j1, j3, j2) {
            return 512
        }
        ;
        var jZ = i.extent || [];
        const jR = i.extentCRSIsWGS84 || false;
        var T = i.minZoom || 0;
        var jV = i.maxZoom || 23;
        var jW = i.spanLevel || 0;
        var j0 = new hc({
            transform: jQ,
            png8: i.png8 || false,
            transparentPng: true,
            dataType: i.dataType || 1,
            spanLevel: jW,
            tileTypeName: "xyz",
            cacheSize: 256,
            customLayer: true,
            clipTile: false,
            boundary: i.boundary || false,
            useThumbData: i.useThumbData || false
        });
        (jZ.length === 4) && jR && (jZ = dq.fromEPSG4326(jZ));
        j0.getTilesUrl = function(j2, j8, j6) {
            if (!j2 || j8 < 0 || j8 < (T + jW) || j8 > (jV + jW)) {
                j0.tileCache.clear();
                return null
            }
            if (jQ.source !== "BD09MC") {
                j2.x = dq.getTilesLoop(j8, j2.x)
            }
            if (jZ.length === 4) {
                var j7 = dq.getTileRangeExtent([j8, j2.x, j2.y]);
                var j5 = e([j7.minX, j7.minY, j7.maxX, j7.maxY]);
                if (!j5) {
                    return null
                }
            }
            var j3 = "";
            if (jO) {
                j3 = jO;
                var j4 = /[^\{}]*\{(.*)\}[^\}]*/;
                j3.match(j4);
                var j1 = [];
                if (RegExp.$1) {
                    j1 = RegExp.$1.split(",")
                }
                j3 = j3.replace(/\{(.*)\}/, j1[(j2.x + j2.y) % j1.length]);
                j3 = j3.replace(/\[x\]/gi, jU(j2.x, j2.y, j8));
                j3 = j3.replace(/\[y\]/gi, jY(j2.x, j2.y, j8));
                j3 = j3.replace(/\[z\]/gi, jS(j2.x, j2.y, j8));
                j3 = j3.replace(/\[b\]/gi, jX(j2.x, j2.y, j8));
                j3 = j3.replace(/\[w\]/gi, jP(j2.x, j2.y, j8));
                j3 = j3.replace(/\[h\]/gi, jT(j2.x, j2.y, j8))
            } else {
                return null
            }
            return j3
        }
        ;
        function e(j1) {
            if (jZ && jZ instanceof Array && jZ.length === 4) {
                if ((jZ[0] <= j1[2] && jZ[1] <= j1[3]) && (jZ[2] >= j1[0] && jZ[3] >= j1[1])) {
                    return true
                } else {
                    return false
                }
            }
            return true
        }
        return j0
    }
    function dh(i) {
        this.src = cV();
        this.tileMaskUvCache = new ay(64,{
            clearCallback: function(jQ) {}
        });
        var jP = 6;
        if (i.pixelMap) {
            this.opacity = typeof i.pixelMap.opacity === "number" ? i.pixelMap.opacity : 1;
            b6(this.opacity, 0, 1);
            if (this.opacity < 1) {
                i.useThumbData = false
            }
            var jO = i.pixelMap || {};
            this.colors = jO.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
            this.positions = jO.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
            this.domain = jO.domain || [0, 255];
            this.clamp = jO.clamp || this.domain;
            this.noData = (jO.noData !== undefined) ? jO.noData : -99999;
            this.fomularC = jO.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
            this.fomularJS = jO.fomularJS || function(jQ) {
                return jQ.r
            }
            ;
            this.maskPng = jO.maskPng || null;
            if (this.maskPng) {
                this.loadMaskPng(this.maskPng)
            }
            this.maskData = jO.maskData || -1;
            this.maskCoord = jO.maskCoord || null;
            this.fHashcode = o({
                str: this.fomularC
            });
            var e = this.canPixelMap();
            if (e) {
                this.isPixelMap = true;
                this.setPixelMap()
            }
            jP = i.pixelMap.cacheSize || jP
        }
        var T = new jB(i);
        T.ontology = this;
        this.layer = T;
        this.cacheSize = jP;
        this.tileCache = new ay(this.cacheSize,{
            clearCallback: function(jQ) {}
        });
        this.tileImageDataCache = new ay(this.cacheSize,{
            clearCallback: function(jQ) {}
        })
    }
    dh.inherits(eJ.BaseClass, "PixelLayer");
    eJ.extend(dh.prototype, {
        canPixelMap: function() {
            if (this.colors && this.positions) {
                return true
            }
            return false
        },
        setPixelMap: function() {
            if (!this.isPixelMap || !this.canPixelMap()) {
                return
            }
            var i = this.colors;
            var e = this.positions;
            this.pHashcode = o({
                colors: i,
                positions: e
            });
            this.pixelColorMap = hi.generateColorRamp(i, e)
        },
        setDomain: function(e) {
            if (e instanceof Array && e.length === 2) {
                this.domain = e;
                this.doOnceDraw()
            }
        },
        setClamp: function(e) {
            if (e instanceof Array && e.length === 2) {
                this.clamp = e;
                this.doOnceDraw()
            }
        },
        setNoData: function(e) {
            this.noData = e;
            this.doOnceDraw()
        },
        setPositions: function(e) {
            this.positions = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setColors: function(e) {
            this.colors = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setFomular: function(e, i) {
            if (e && i) {
                this.fomularJS = e;
                this.fomularC = i;
                this.fHashcode = o({
                    str: this.fomularC
                });
                this.doOnceDraw()
            }
        },
        setOpacity: function(e) {
            this.opacity = e;
            this.doOnceDraw()
        },
        setIsPixelMap: function(e) {
            this.isPixelMap = e;
            this.doOnceDraw()
        },
        setMaskPng: function(e) {
            this.maskPng = e;
            this.loadMaskPng(this.maskPng);
            this.doOnceDraw()
        },
        setMaskData: function(e) {
            this.maskData = e;
            this.doOnceDraw()
        },
        setMaskCoord: function(e) {
            this.maskCoord = e || null;
            this.calMaskBox();
            this.doOnceDraw()
        },
        setZIndex: function(e) {
            if (this.layer && parseInt(e) > 0) {
                this.layer.setZIndex(e)
            }
        },
        getZIndex: function() {
            if (this.layer) {
                return this.layer.zIndex
            }
        },
        setUpLevel: function() {
            if (this.layer) {
                var e = this.layer._getAdjoinZIndex("up");
                if (this.layer.zIndex !== e) {
                    this.layer.setZIndex(e)
                }
            }
        },
        setDownLevel: function() {
            if (this.layer) {
                var e = this.layer._getAdjoinZIndex("down");
                if (this.layer.zIndex !== e) {
                    this.layer.setZIndex(e)
                }
            }
        },
        setZIndexTop: function() {
            if (this.layer) {
                this.layer.setZIndexTop()
            }
        },
        doOnceDraw: function() {
            if (this.layer.map) {
                var e = new fu("onupdate");
                this.layer.map.dispatchEvent(e)
            }
        },
        _getInLayer: function(jW) {
            if (!this.map) {
                return null
            }
            var jV = Math.floor(this.map.getZoom());
            var jO = dq.transformBDmcPoint(jW, this.layer.transform);
            var jS = dq.getTileCoordForXYAndZ_(jO[0], jO[1], jV, false);
            var T = jS.join("-");
            var e = this.tileCache.getData(T);
            if (e) {
                return e
            }
            var jP = this.layer.zIndex;
            var jR = this.map._featureMgr.result.bkData;
            var jT = jR[jP][2];
            var jX = null;
            for (var jQ = 0; jQ < jT.length; jQ++) {
                var jS = jT[jQ];
                var jU = jS.tileInfo.zoom + "-" + jS.tileInfo.col + "-" + jS.tileInfo.row;
                if (T === jU) {
                    jX = jS;
                    break
                }
            }
            this.tileCache.setData(T, jX);
            return jX
        },
        _initEvent: function(jP) {
            this.map = jP;
            var T = this;
            this._layerMouseEvent = function(jT) {
                if (!T.map) {
                    return
                }
                var jR;
                var i = jT.point;
                var jS = T._getInLayer(i);
                if (jS) {
                    T.prox = jS;
                    jR = new fu("onmousemove");
                    T.map.platform.style.cursor = T.map.config.overlayMoveCursor
                } else {
                    T.map.platform.style.cursor = T.map.config.defaultCursor;
                    T.prox = null
                }
                if (jR) {
                    jR.point = jT.point;
                    jR.pixel = jT.pixel;
                    jR.latLng = jT.latlng;
                    T.dispatchEvent(jR)
                }
            }
            ;
            this._layerClickEvent = function(jT) {
                if (!T.map) {
                    return
                }
                var jR;
                var i = jT.point;
                var jS = T.getImagePixel(i);
                if (jS) {
                    jR = new fu(jT.type);
                    jR.point = i;
                    jR.pixel = jT.pixel;
                    jR.latLng = jT.latlng;
                    jR.color = jS;
                    jR.value = T.getValue(jR.color);
                    T.dispatchEvent(jR)
                }
            }
            ;
            jP.addEventListener("onmousemove", this._layerMouseEvent);
            var jO = ["onclick", "dblclick"];
            for (var e = 0; e < jO.length; e++) {
                var jQ = jO[e];
                jP.addEventListener(jQ, this._layerClickEvent)
            }
            jP.addEventListener("removetilelayer", function(i) {
                if (i.target && i.target.ontology) {
                    if (i.target.ontology.src === T.src) {
                        T.prox = null;
                        T.tileCache.clear();
                        T.tileImageDataCache.clear();
                        T.tileMaskUvCache.clear();
                        jP.removeEventListener("onmousemove", T._layerMouseEvent);
                        jP.removeEventListener("onclick", T._layerClickEvent);
                        jP.removeEventListener("ondblclick", T._layerClickEvent)
                    }
                }
            })
        },
        getImagePixel: function(jT) {
            if (!this.map) {
                return null
            }
            var jO = dq.transformBDmcPoint(jT, this.layer.transform);
            var jS = this._getInLayer(jT);
            if (!jS) {
                return null
            }
            if (!this.getImageMaskPixel(jO)) {
                return null
            }
            var jQ = [jS.tileInfo.zoom, jS.tileInfo.col, jS.tileInfo.row];
            var jR = dq.getTileRangeExtent(jQ);
            var e = this.getImageObject(jS.textureSource, jQ.join("-"));
            var T = Math.floor((jO[0] - jR.minX) / (jR.maxX - jR.minX) * e.width);
            var i = Math.floor((-jO[1] + jR.maxY) / (jR.maxY - jR.minY) * e.height);
            var jP = Math.floor((i * e.width + T) * 4);
            return [e.data.data[jP], e.data.data[jP + 1], e.data.data[jP + 2], e.data.data[jP + 3], ]
        },
        getImageObject: function(jP, jO) {
            var jQ = this.tileImageDataCache.getData(jO);
            if (jQ) {
                return jQ
            }
            var i = document.createElement("canvas");
            i.width = jP.width;
            i.height = jP.height;
            var T = i.getContext("2d");
            T.drawImage(jP, 0, 0, jP.width, jP.height);
            var e = {
                width: jP.width,
                height: jP.height,
                data: T.getImageData(0, 0, jP.width, jP.height)
            };
            this.tileImageDataCache.setData(jO, e);
            T = null;
            i = null;
            return e
        },
        getValue: function(i) {
            if (this.isPixelMap && i && this.fomularJS) {
                if (!(i instanceof Array)) {
                    i = this.getImagePixel(i.point)
                }
                var e = this.fomularJS({
                    r: i[0],
                    g: i[1],
                    b: i[2],
                    a: i[3]
                });
                if (e >= this.clamp[0] && e <= this.clamp[1]) {
                    return e
                }
            }
            return null
        },
        setMaskImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageMaskObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            i = null;
            e = null
        },
        getImageMaskPixel: function(e) {
            if (!this.imageMaskObject || !this.maskBox) {
                return true
            }
            var jO = [e];
            var jT = this.maskBox || [];
            var jQ = jT[1][0] - jT[0][0];
            var jP = jT[1][1] - jT[0][1];
            var T = Math.floor((jO[0][0] - jT[0][0]) / jQ * this.imageMaskObject.width);
            var i = Math.floor((-jO[0][1] + jT[1][1]) / jP * this.imageMaskObject.height);
            var jS = Math.floor((i * this.imageMaskObject.width + T) * 4);
            if (T > this.imageMaskObject.width || T < 0) {
                return null
            }
            if (i > this.imageMaskObject.height || i < 0) {
                return null
            }
            var jR = this.imageMaskObject.data.data;
            if (jS + 3 > jR.length) {
                return false
            }
            if (jR[jS + 3] > 0) {
                if (this.maskData > -1 && this.maskData !== jR[jS]) {
                    return false
                }
                return true
            }
            return false
        },
        calMaskBox: function() {
            var T = this.maskCoord || [];
            if (this.hasMaskPng && T && T.length === 2) {
                var e = [];
                for (var jO = 0; jO < T.length; jO++) {
                    e[jO] = dq.transformBDmcPoint(iN.convertLL2MC(T[jO]), this.layer.transform)
                }
                this.maskBox = e;
                this.tileMaskUvCache.clear()
            } else {
                this.maskBox = null
            }
        },
        buildFillMaskVertex: function(jU, jS, jR) {
            var jT = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
            if (!this.maskBox) {
                return jT
            }
            var jW = [jU, jS, jR].join("-");
            var e = this.tileMaskUvCache.getData(jW);
            if (e) {
                return e
            }
            if (this.hasMaskPng) {
                var jZ = this.maskBox || [];
                var jQ = [jR, jU, jS];
                var jV = dq.getTileRangeExtent(jQ);
                var jP = jZ[1][0] - jZ[0][0];
                var T = jZ[1][1] - jZ[0][1];
                var jY = (jV.minX - jZ[0][0]) / jP;
                var jX = (jV.minY - jZ[0][1]) / T;
                var jO = (jV.maxX - jZ[0][0]) / jP;
                var i = (jV.maxY - jZ[0][1]) / T;
                jT = [jY, jX, jO, jX, jO, i, jY, jX, jO, i, jY, i]
            }
            this.tileMaskUvCache.setData(jW, jT);
            return jT
        },
        loadMaskPng: function(T) {
            var e = this;
            function i(jP, jO) {
                if (jO) {
                    e.hasMaskPng = true;
                    e.setMaskImageObject(jP);
                    e.calMaskBox();
                    e.doOnceDraw()
                } else {
                    e.hasMaskPng = false
                }
                e.maskTextureSource = jO ? jP : null
            }
            this.imageLoad(T, i)
        },
        imageLoad: function(i, jP) {
            if (!i) {
                jP && jP(null, false)
            }
            var e = new Image();
            e.crossOrigin = "anonymous";
            e.onload = function jO() {
                jP && jP(this, true)
            }
            ;
            e.onerror = function T() {
                jP && jP(null, false)
            }
            ;
            e.src = i
        },
        toString: function() {
            return "PixelLayer"
        }
    });
    function iO(i, e) {
        this.id = i;
        this.layerName = e;
        this.properties = null
    }
    function dU(e) {
        this._opt = e || {};
        this._layerId = cV();
        this._opt.defaultOrder = (this._opt.defaultOrder === undefined) ? true : this._opt.defaultOrder;
        this.minZoom = this._opt.minZoom || 3;
        this.maxZoom = this._opt.maxZoom || 23;
        this.useThumb = (this._opt.useThumb === undefined) ? true : this._opt.useThumb;
        this.gridModel = this._opt.gridModel || dU.GridModel.BAIDUWEB;
        this.noCollision = (this._opt.noCollision === undefined) ? true : this._opt.noCollision;
        if (this.gridModel === dU.GridModel.BAIDUWEB) {
            this._opt.reference = "BD09MC"
        } else {
            if (!this._opt.transform) {
                this._opt.transform = {
                    source: "BD09MC",
                    target: "BD09MC"
                };
                this._opt.reference = "BD09MC"
            } else {
                this._opt.reference = this._opt.transform.source || "GCJ02";
                if (this._opt.reference === "EPSG3857") {
                    this._opt.reference = "WGS84"
                }
            }
        }
        this.loadModule = false;
        if (this._opt.useWorker === undefined) {
            this._opt.useWorker = true
        }
        this.upStyle = this._opt.useWorker ? false : "useMain";
        this._stateCube = {};
        var i = this;
        gK.load("mvtParse", function() {
            i._async()
        }, true);
        i.init(e)
    }
    dU.GridModel = {
        BAIDUWEB: 0,
        GOOGLEWEB: 1
    };
    dU.LayerTypes = {
        POINT: "point",
        LINE: "line",
        FILL: "fill"
    };
    dU.inherits(eJ.BaseClass, "MVTLayer");
    eJ.extend(dU.prototype, {
        _async: function() {
            this.loadModule = true;
            this.mvt = new dU.MVTParse(this._opt);
            this.resolveStyle(this._opt);
            if (this.upStyle) {
                this.doOnceDraw()
            }
        },
        init: function(i) {
            i.dataType = 2;
            i.cacheSize = 256;
            if (i.spanLevel === undefined || typeof i.spanLevel !== "number") {
                i.spanLevel = 0
            }
            if (this.gridModel === dU.GridModel.BAIDUWEB) {
                var e = this.createTileLayer(i);
                i.spanLevel = 0;
                this.spanLevel = 0
            } else {
                if (this.gridModel === dU.GridModel.GOOGLEWEB) {
                    var e = new jB(i);
                    this.spanLevel = i.spanLevel
                }
            }
            var T = {
                type: "vector",
                layerId: this._layerId,
                g: this.gridModel,
                mc: this._opt.reference === "BD09MC" ? true : false,
            };
            this.layerOption = Object.assign(T, this._opt);
            if (i.index && i.index > 0) {
                e.zIndex = i.index
            }
            e.loadTileData = this._loadTile.bind(this);
            e.ontology = this;
            this.layer = e
        },
        createTileLayer: function(i) {
            const jO = i.tileUrlTemplate || "";
            const jT = i.xTemplate || function(j0, j2, j1) {
                return j0
            }
            ;
            const jX = i.yTemplate || function(j0, j2, j1) {
                return j2
            }
            ;
            const jR = i.zTemplate || function(j0, j2, j1) {
                return j1
            }
            ;
            const jW = i.bTemplate || function(j0, j3, j2) {
                const j1 = iN.tileToBoundRange({
                    col: j0,
                    row: j3,
                    zoom: j2,
                    baseTileSize: 256
                });
                return j1.MC.sw.lng + "," + j1.MC.sw.lat + "," + j1.MC.ne.lng + "," + j1.MC.ne.lat
            }
            ;
            var jY = i.extent || [];
            const jS = i.extentCRSIsWGS84 || false;
            var T = i.minZoom || 0;
            var jU = i.maxZoom || 23;
            var jV = i.spanLevel || 0;
            var jZ = new hc({
                transparentPng: true,
                dataType: 2,
                spanLevel: jV,
                tileTypeName: "web",
                cacheSize: 256,
                customLayer: true,
                clipTile: false,
                boundary: false,
                useThumbData: i.useThumbData || false
            });
            if (jY.length === 4) {
                if (jS) {
                    jY = dq.fromEPSG4326(jY)
                }
                var jP = dq.transformPointArr([jY[0], jY[1]], "EPSG3857", "BD09MC");
                var jQ = dq.transformPointArr([jY[2], jY[3]], "EPSG3857", "BD09MC");
                jY = [jP[0], jP[1], jQ[0], jQ[1]]
            }
            jZ.getTilesUrl = function(j1, j7, j6) {
                if (!j1 || j7 < 0 || j7 < (T + jV) || j7 > (jU + jV)) {
                    jZ.tileCache.clear();
                    return null
                }
                if (jY.length === 4) {
                    const j4 = iN.tileToBoundRange({
                        col: x,
                        row: y,
                        zoom: z,
                        baseTileSize: 256
                    });
                    var j5 = e([j4.MC.getMin().lng, j4.MC.getMin().lat, j4.MC.getMax().lng, j4.MC.getMax().lat]);
                    if (!j5) {
                        return null
                    }
                }
                var j2 = "";
                if (jO) {
                    j2 = jO;
                    var j3 = /[^\{}]*\{(.*)\}[^\}]*/;
                    j2.match(j3);
                    var j0 = [];
                    if (RegExp.$1) {
                        j0 = RegExp.$1.split(",")
                    }
                    j2 = j2.replace(/\{(.*)\}/, j0[(j1.x + j1.y) % j0.length]);
                    j2 = j2.replace(/\[x\]/gi, jT(j1.x, j1.y, j7));
                    j2 = j2.replace(/\[y\]/gi, jX(j1.x, j1.y, j7));
                    j2 = j2.replace(/\[z\]/gi, jR(j1.x, j1.y, j7));
                    j2 = j2.replace(/\[b\]/gi, jW(j1.x, j1.y, j7))
                } else {
                    return null
                }
                return j2
            }
            ;
            function e(j0) {
                if (jY && jY instanceof Array && jY.length === 4) {
                    if ((jY[0] <= j0[2] && jY[1] <= j0[3]) && (jY[2] >= j0[0] && jY[3] >= j0[1])) {
                        return true
                    } else {
                        return false
                    }
                }
                return true
            }
            return jZ
        },
        compileExpress: function(i, e) {
            var i = dU.ExpressParse.normalizePropertyExpression(i, e);
            return i
        },
        resolveStyle: function(jQ) {
            var jO = jQ || {};
            if (jO.style) {
                var jP = {};
                if (!jO.layers || jO.layers.length === 0) {
                    var jS = dU.LayerTypes.POINT;
                    var i = dU.LayerTypes.LINE;
                    var jR = dU.LayerTypes.FILL;
                    if (jO.style[jS]) {
                        jO.style[jS].type = "point"
                    }
                    if (jO.style[i]) {
                        jO.style[i].type = "polyline"
                    }
                    if (jO.style[jR].type) {
                        jO.style[jR].type = "polygon"
                    }
                }
                for (var T in jO.style) {
                    if (jO.style.hasOwnProperty(T)) {
                        var e = jO.style[T];
                        this._styleFormat(e.type, e.painter, T, jP)
                    }
                }
                this.styleExpress = jP
            }
        },
        _styleFormat: function(jP, e, i, jO) {
            var jR = {};
            var jS = cR[jP];
            if (!jS) {
                return
            }
            for (var T in e) {
                if (e.hasOwnProperty(T)) {
                    var jQ = this.compileExpress(e[T], jS[T]);
                    jR[T] = jQ
                }
            }
            jO[i] = {
                type: jP,
                painter: jR
            }
        },
        evaluateContext: function(e, T, jO) {
            var i = e + "_" + T.getId();
            var jP = this._stateCube[i];
            if (jP) {
                T.setState(jP)
            } else {
                T._state = {}
            }
            return {
                properties: function() {
                    return T && T.getProperties()
                },
                featureState: jO === true ? {} : (T && T.getState())
            }
        },
        evaluates: function(i, jO, jP) {
            if (!this.styleExpress || !this.styleExpress.hasOwnProperty(i)) {
                return null
            }
            var jR = this.styleExpress[i].painter;
            var e = {};
            for (var T in jR) {
                if (jR.hasOwnProperty(T)) {
                    var jQ = jR[T].evaluate(this.evaluateContext(i, jO, jP));
                    e[T] = jQ
                }
            }
            return e
        },
        _updateState: function(T, jO, e) {
            if (T instanceof iO && T.layerName && T.id) {
                var i = T.layerName + "_" + T.id;
                if (e) {
                    this._set(jO, this._stateCube, i)
                } else {
                    this._stateCube[i] = jO
                }
                this._stateCube[i].rank = (this._stateCube[i].rank || 0) + 1
            } else {
                if (typeof T === "string") {
                    if (e) {
                        this._set(jO, this._stateCube, T)
                    } else {
                        this._stateCube[T] = jO
                    }
                    this._stateCube[T].rank = (this._stateCube[T].rank || 0) + 1
                }
            }
        },
        updateState: function(jP, jQ, e) {
            var T = JSON.stringify(this._stateCube);
            if (!(jQ && typeof jQ === "object" && Object.keys(jQ).length > 0)) {
                return
            }
            if (!e) {
                this._stateCube = {}
            }
            if (jP instanceof Array) {
                for (var jO = 0; jO < jP.length; jO++) {
                    this._updateState(jP[jO], jQ, e)
                }
            } else {
                this._updateState(jP, jQ, e)
            }
            var jR = JSON.stringify(this._stateCube);
            if (T !== jR) {
                this.doOnceDraw()
            }
        },
        replaceAllState: function(e) {
            var i = JSON.stringify(this._stateCube);
            this._stateCube = e;
            var T = JSON.stringify(this._stateCube);
            if (i !== T) {
                this.doOnceDraw()
            }
        },
        getAllState: function() {
            return this._stateCube
        },
        getStateByLayerName: function() {},
        removeState: function(jO) {
            var e = JSON.stringify(this._stateCube);
            if (jO instanceof Array) {
                for (var T = 0; T < jO.length; T++) {
                    if (jO[T]instanceof iO && jO[T].layerName) {
                        delete this._stateCube[jO[T].layerName + "_" + jO[T].id]
                    } else {
                        if (typeof jO[T] === "string") {
                            delete this._stateCube[jO[T]]
                        }
                    }
                }
            } else {
                if (jO instanceof iO && jO.layerName) {
                    delete this._stateCube[jO.layerName + "_" + jO.id]
                } else {
                    if (typeof jO === "string") {
                        delete this._stateCube[jO]
                    }
                }
            }
            var jP = JSON.stringify(this._stateCube);
            if (e !== jP) {
                this.doOnceDraw()
            }
        },
        clearState: function() {
            var e = JSON.stringify(this._stateCube);
            if (e !== "{}") {
                this._stateCube = {};
                this.doOnceDraw()
            }
        },
        _set: function(i, jP, T) {
            var jO = jP[T] || (jP[T] = {});
            for (var e in i) {
                jO[e] = i[e]
            }
        },
        doOnceDraw: function() {
            if (this.map) {
                var e = new fu("onupdate");
                this.map.dispatchEvent(e)
            }
        },
        _releaseOutViewTileData: function(e) {
            if (!this.map || !this.map.dispatcher) {
                return
            }
            var i = this;
            e.layerId = this._layerId;
            this.map.dispatcher.broadcast("release", e, function(jQ, T) {
                for (var jP = 0; jP < T.length; jP++) {
                    for (var jO = 0; jO < T[jP].length; jO++) {
                        i.layer.tileCache.removeData(T[jP][jO].tileKey)
                    }
                }
            })
        },
        _loadTile: function(jQ, T) {
            this.curViewTilesInfo = jQ;
            if (!this.loadModule || !this.upStyle) {
                return
            }
            var j1 = this.layer.map;
            this._releaseOutViewTileData(jQ);
            var jR = j1.getZoom();
            if (jR < this.minZoom || jR > this.maxZoom) {
                j1._featureMgr.clearData(this.layer.drawIndex);
                j1._featureMgr.clearLabelOverlayData(this.layer.drawIndex);
                j1._featureMgr.clearLabelData(this.layer.drawIndex);
                return
            }
            var jS = this.layer.getZoomState();
            if (T) {
                this.thumbCache = {};
                var jZ = -1;
                this.layer.tileLabels = [];
                var jV = j1._customLabelMgr.virtualTiles["mvt_" + this.layer.drawIndex];
                if (jV && jV.label) {
                    this.layer.tileLabels.push(jV.label)
                }
                for (var jX = 0, jW = jQ.length; jX < jW; jX++) {
                    var jY = jQ[jX];
                    var jO = this.layer.getTileKey(jY);
                    var j0 = this.layer.tileCache.getData(jO);
                    jZ = jY.zoom;
                    if (this.useThumb) {
                        this._setThumbData(j0, jY, jS)
                    } else {
                        if (j0 && j0.status === "ready") {
                            j1._featureMgr.setData(j0, this.layer.drawIndex, 2);
                            this._loadCacheLabel(jY, j0)
                        }
                    }
                }
                this.layer.tileLabels.labelZoom = jZ;
                this.layer.updateLabels(jS);
                if (!this.noCollision) {
                    var jP = Math.floor(jR);
                    var jU = jR - jP;
                    var jT = Math.floor(this.layer.LAST_CALC_ZOOM);
                    var e = this.layer.LAST_CALC_ZOOM - jT;
                    var j3 = false;
                    if (this.layer.hasZoomChange) {
                        if (Math.abs(jR - this.layer.LAST_CALC_ZOOM) >= 0.5) {
                            j3 = true
                        } else {
                            if (jU < 0.5 && e >= 0.5) {
                                j3 = true
                            } else {
                                if (jU >= 0.5 && e < 0.5) {
                                    j3 = true
                                }
                            }
                        }
                        if (j3) {
                            this.layer.cacheDataCollideLabels(0)
                        }
                        this.layer.LAST_CALC_ZOOM = jR
                    } else {
                        if (this.layer.tileLabels.length > 0) {
                            this.layer.cacheDataCollideLabels(eJ.Browser.ie ? 50 : 30)
                        }
                    }
                } else {
                    this.layer.cacheDataCollideLabels(0)
                }
                return
            }
            for (var jX = 0, jW = jQ.length; jX < jW; jX++) {
                var jY = jQ[jX];
                var jO = this.layer.getTileKey(jY);
                var j0 = this.layer.tileCache.getData(jO);
                if (!j0) {
                    j0 = {
                        status: "init",
                        retry: 0
                    }
                }
                if (j0.status !== "ignore" && j0.status !== "ready" && j0.status !== "loading") {
                    j0.status = "loading";
                    this.layer.tileCache.setData(jO, j0);
                    if (this.upStyle === "useMain") {
                        var j2 = this;
                        this._loadTileData(jY, function(j4, j5, i) {
                            j2._tileDataCbk(j4, j5, i)
                        })
                    } else {
                        if (this.upStyle) {
                            this._loadTileDataByWorker(jY)
                        }
                    }
                }
            }
        },
        _loadCacheLabel: function(T, i) {
            var jP = i.tileData.hasChangeLabel();
            if (jP) {
                i.label.status = "init"
            }
            if (i.label.status === "ready") {
                i.label.tileInfo = i.tileInfo;
                this.layer.tileLabels.push(i.label);
                if (i.label.textureSources && i.label.textureSources[T.zoom] && this.map._webglMapScene) {
                    var jO = this.map._webglMapScene._painter;
                    var e = i.label.imgKey;
                    if (!jO._labelTextureAtlasOffset[e]) {
                        jO._addToAsyncJob(i.label.textureSources[T.zoom])
                    }
                }
            } else {
                if (i.label.status !== "processing") {
                    this._processLabelData(i)
                }
            }
        },
        getLayerVisible: function(i) {
            var T = this._opt.style;
            if (!T || !T[i]) {
                return true
            } else {
                if (T[i].visible === false) {
                    return false
                } else {
                    var jP = this._opt.style[i].minZoom || 3;
                    var e = this._opt.style[i].maxZoom || 23;
                    var jO = this.map.getZoom();
                    if (jO < jP || jO > e) {
                        return false
                    }
                    return true
                }
            }
        },
        _setThumbData: function(i, e, T) {
            if (T === 1) {
                this._dataFitGrid(i, e, 3)
            } else {
                if (T === -1) {
                    if (i && i.status === "ready") {
                        this.map._featureMgr.setData(i, this.layer.drawIndex, 2);
                        this._loadCacheLabel(e, i)
                    } else {
                        this._findChildZoomTile(e, 3)
                    }
                }
            }
        },
        _findParent: function(jO, jR) {
            var T = this.minZoom;
            var e = jO.col;
            var jU = jO.row;
            var jT = jO.zoom;
            for (var jS = 1; jS <= jR; jS++) {
                var jP = this._getParentTiles(e, jU, jT, T);
                if (jP === null) {
                    continue
                }
                jP.tileSize = jO.tileSize;
                jP.tileTypeName = jO.tileTypeName;
                jP.transform = jO.transform;
                var jV = this.layer.getTileKey(jP);
                var jQ = this.layer.tileCache.getData(jV);
                if (jQ && jQ.status === "ready") {
                    jQ.key = jV;
                    return jQ
                }
                e = jP.col;
                jU = jP.row;
                jT = jP.zoom
            }
            return false
        },
        _findChild: function(i, jR) {
            var jT = this.maxZoom;
            var e = i.col;
            var jU = i.row;
            var jS = i.zoom;
            var jP = this._getChildTiles(e, jU, jS, jT, jR);
            if (!jP) {
                return false
            }
            for (var jO = 0; jO < jP.length; jO++) {
                var T = this.layer.getTileKey(jP[jO]);
                var jQ = this.layer.tileCache.getData(T);
                if (this.curViewTilesInfo["id_" + jP[jO].col + "_" + jP[jO].row + "_" + jP[jO].zoom] && (!jQ || jQ.status !== "ready")) {
                    return false
                }
            }
            return true
        },
        _dataFitGrid: function(T, i, jO) {
            var e = this._findParent(i, jO);
            if (e) {
                if (this.thumbCache[e.key]) {
                    this.map._featureMgr.setData(T, this.layer.drawIndex, 2);
                    this._loadCacheLabel(i, T)
                } else {
                    if (this.thumbCache[e.key] === undefined) {
                        if (this._findChild(e.tileInfo, i.zoom - e.tileInfo.zoom)) {
                            this.thumbCache[e.key] = true;
                            this.map._featureMgr.setData(T, this.layer.drawIndex, 2);
                            this._loadCacheLabel(i, T)
                        } else {
                            this.thumbCache[e.key] = false;
                            this.layer.map._featureMgr.setData(e, this.layer.drawIndex, 0);
                            this._loadCacheLabel(e.tileInfo, e)
                        }
                    }
                }
            } else {
                if (T && T.status === "ready") {
                    this.map._featureMgr.setData(T, this.layer.drawIndex, 2);
                    this._loadCacheLabel(i, T)
                }
            }
        },
        _findChildZoomTile: function(T, jS) {
            var jV = this.maxZoom;
            var e = T.col;
            var jW = T.row;
            var jU = T.zoom;
            for (var jT = 1; jT <= jS; jT++) {
                var jX = false;
                var jQ = this._getChildTiles(e, jW, jU, jV, jT);
                if (!jQ) {
                    continue
                }
                for (var jP = 0; jP < jQ.length; jP++) {
                    var jO = this.layer.getTileKey(jQ[jP]);
                    var jR = this.layer.tileCache.getData(jO);
                    if (jR && jR.status === "ready") {
                        this.layer.map._featureMgr.setData(jR, this.layer.drawIndex, 1);
                        this._loadCacheLabel(jQ[jP], jR);
                        jX = true
                    }
                }
                if (jX) {
                    break
                }
            }
        },
        _getParentTiles: function(e, T, i, jO) {
            if (i - 1 < jO) {
                return null
            }
            return {
                col: Math.floor(e / 2),
                row: Math.floor(T / 2),
                zoom: i - 1,
                useZoom: i - 1,
                loopOffsetX: 0
            }
        },
        _getChildTiles: function(jO, jX, jW, jV, jR) {
            var jY = [];
            if (jW + jR > jV) {
                return null
            }
            var jU = Math.pow(2, jR);
            var e = jO * jU;
            var jT = jX * jU;
            var jS = jW + jR;
            var jY = [];
            for (var jP = 0; jP < jU; jP++) {
                var jQ = e + jP;
                for (var T = 0; T < jU; T++) {
                    var i = jT + T;
                    jY.push({
                        col: jQ,
                        row: i,
                        zoom: jS,
                        useZoom: jS,
                        loopOffsetX: 0
                    })
                }
            }
            return jY
        },
        _loadTileDataByWorker: function(i) {
            if (!this.map || !this.map.dispatcher) {
                return
            }
            var jQ = this.map.dispatcher.getActor();
            if (!jQ) {
                return
            }
            var T = i.col;
            var jU = i.row;
            var jT = i.zoom;
            var e = this.layer.getTilesUrl(new e4(T,jU), jT, i);
            if (!e) {
                return
            }
            var jP = this.layer.getTileKey(i);
            var jR = "id_" + T + "_" + jU + "_" + jT;
            var jO = {
                type: "vector",
                layerId: this._layerId,
                x: T,
                y: jU,
                z: jT,
                tileKey: jP,
                tileUrl: e,
                spanLevel: this._opt.spanLevel,
                header: this._opt.header || null,
                encrypt: this._opt.encrypt || false
            };
            var jS = this;
            jQ.send("loadTile", jO, function(jX, jW) {
                var jV = jS.layer.tileCache.getData(jP);
                if (!jV) {
                    return
                }
                if (jX || !jW) {
                    jV.status = "ignore"
                } else {
                    var jY = new dU.TileFamilyParse(jS.layerOption,jO).deserialize(jW, jS);
                    jV.tileInfo = i;
                    jV.tileData = jY;
                    jS._processLabelData(jV);
                    jS.layer.callbackDataQueue.push([jP, jV, jR]);
                    if (jS.processDataTimer) {
                        return
                    }
                    jS.processDataTimer = setTimeout(function() {
                        while (jS.layer.callbackDataQueue.length > 0) {
                            var j0 = jS.layer.callbackDataQueue.shift();
                            jS._setTileData(j0[0], j0[1], j0[2])
                        }
                        var jZ = new fu("onupdate");
                        jS.map.dispatchEvent(jZ);
                        jS.processDataTimer = null
                    }, 200)
                }
            })
        },
        _loadTileData: function(i, e) {
            var jO = i.col;
            var jS = i.row;
            var jP = i.zoom;
            var T = this.layer.getTilesUrl(new e4(jO,jS), jP, i);
            if (!T) {
                return
            }
            var jR = this.layer.getTileKey(i);
            var jQ = new XMLHttpRequest();
            jQ.open("GET", T, true);
            jQ.responseType = "arraybuffer";
            jQ.timeout = 3000;
            jQ.ontimeout = function() {
                e && e(null, jR, i)
            }
            ;
            jQ.onreadystatechange = function(jT) {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        e && e(jQ.response, jR, i);
                        return
                    }
                    if (this.status >= 400 || this.status === 0) {
                        e && e(null, jR, i)
                    } else {
                        e && e(null, jR, i)
                    }
                }
            }
            ;
            jQ.send()
        },
        _tileDataCbk: function(jP, jR, i) {
            var e = this.layer.tileCache.getData(jR);
            if (!e) {
                return
            }
            var jQ = this.layer.map;
            var T = this;
            if (!jP || typeof jP === "string") {
                e.status = "init";
                e.reloadTimer = setTimeout(function() {
                    if (e.retry < 3) {
                        e.retry++;
                        e.status = "loading";
                        T._loadTileData(i, function(jT, jU, jS) {
                            T._tileDataCbk(jT, jU, jS)
                        })
                    } else {
                        e.status = "ignore"
                    }
                }, 3000);
                return
            }
            if (e.reloadTimer) {
                clearTimeout(e.reloadTimer);
                e.reloadTimer = null
            }
            var jO = (function(jS) {
                return function() {
                    var jT = i.col;
                    var jW = i.row;
                    var jU = i.zoom;
                    var jV = "id_" + jT + "_" + jW + "_" + jU;
                    e.tileInfo = i;
                    e.tileData = T.mvt.readFeatures(jS, T, jQ, {
                        x: jT,
                        y: jW,
                        z: jU,
                        g: T.gridModel,
                        mc: T._opt.transform && T._opt.transform.source === "BD09MC" ? true : false
                    });
                    T._processLabelData(e);
                    T.layer.callbackDataQueue.push([jR, e, jV]);
                    if (T.processDataTimer) {
                        return
                    }
                    T.processDataTimer = setTimeout(function() {
                        while (T.layer.callbackDataQueue.length > 0) {
                            var jX = T.layer.callbackDataQueue.shift();
                            T._setTileData(jX[0], jX[1], jX[2])
                        }
                        T.doOnceDraw();
                        T.processDataTimer = null
                    }, 200)
                }
            }
            )(jP);
            jQ.jobScheduler.addJob(jO)
        },
        _setTileData: function(T, e, i) {
            e.status = "ready";
            this.layer.tileCache.setData(T, e);
            if (this.layer.curViewTilesInfo[i]) {
                e.dataType = hp
            }
        },
        _processLabelData: function(T) {
            if (!T.tileData) {
                return
            }
            T.label = T.tileData.getTileLabels();
            if (!T.label) {
                return
            }
            if (T.label.status === "processing") {
                return
            }
            var i = T.tileInfo;
            var e = this._getTileTexImgKey(i);
            T.label.imgKey = e;
            T.label.status = "processing";
            var jO = this;
            jO.layer.updateAllIconsTextureCoords(T);
            this.layer.labelProcessor.loadIconImages(T, function(jQ) {
                jO.layer.updateAllIconsTextureCoords(jQ)
            }, true);
            var jP = this.layer.map.tileMgr.getLabelTextCanvas();
            jP.drawCustomLabelsOnCanvas(T.label.fixedLabel, function(jQ) {
                if (jQ) {
                    if (!T.label.textureHeights) {
                        T.label.textureHeights = []
                    }
                    T.label.textureHeights[i.useZoom] = jQ.height
                }
                jO.layer._doWorkAfterLabelImageLoad(T, jQ, null, e)
            })
        },
        _getTileTexImgKey: function(i) {
            var e = "mvt_" + this.layer.drawIndex + "_" + i.col + "_" + i.row + "_" + i.zoom + "_";
            e = bw.getGUID(e);
            return e
        },
        _updateBRushCube: function(jR) {
            var jT = jR.tileData;
            for (var T in jT) {
                if (jT.hasOwnProperty(T)) {
                    var e = jT[T];
                    for (var jP = 0; jP < e.length; jP++) {
                        var jO = e[jP];
                        var jQ = jO.getBox();
                        var jS = {
                            minX: jQ[0],
                            minY: jQ[1],
                            maxX: jQ[2],
                            maxY: jQ[3],
                            lN: T,
                            f: jO
                        }
                    }
                }
            }
        },
        intersectFeatures: function(e) {
            var jQ = this._geojsonToSouceXY(e);
            var T = this._bboxTile(jQ);
            T = this._intersectTile(jQ, T);
            if (!T) {
                return null
            }
            var jS = this.layer.map._featureMgr.result.bkData[this.layer.drawIndex][2];
            var jO = [];
            var jX = null;
            for (var jT = 0; jT < jS.length; jT++) {
                var jP = jS[jT].tileInfo;
                var jY = jP.zoom + "_" + jP.col + "_" + jP.row;
                if (T[jY]) {
                    if (!jS[jT].tileData || !jS[jT].tileData.layers) {
                        continue
                    }
                    var jR = jS[jT].tileData.layers;
                    var jW = null;
                    for (var jV in jR) {
                        var jU = jR[jV];
                        if (T[jY][4]) {
                            this._featuresInter(jV, jU.features, jO)
                        } else {
                            if (jU.layerType === "Point" || jU.layerType === "MultiPoint") {
                                if (!jX) {
                                    jX = this._geojsonToScreenXY(e)
                                }
                                this._pointFeaturesInter(jV, jU.features, jO, jX)
                            } else {
                                if (!jW) {
                                    jW = this._geojsonToTileXY(jQ, T[jY])
                                }
                                if (!jW) {
                                    continue
                                }
                                this._noPointFeaturesInter(jV, jU.features, jO, jW)
                            }
                        }
                    }
                }
            }
            return jO.length === 0 ? null : jO
        },
        _featuresInter: function(T, jO, jP) {
            for (var i in jO) {
                if (!jO[i]._visible) {
                    continue
                }
                if (jP[T + "_" + jO[i].getId()]) {
                    continue
                }
                jO[i].layerName = T;
                var e = new iO(jO[i].getId(),T);
                e.properties = jO[i].getProperties();
                jP.push(e);
                jP[T + "_" + jO[i].getId()] = true
            }
        },
        _pointFeaturesInter: function(jP, jQ, jR, jO) {
            for (var T in jQ) {
                if (!jQ[T]._visible) {
                    continue
                }
                if (jR[jP + "_" + jQ[T].getId()]) {
                    continue
                }
                var jS = jQ[T].getPointGeoJSON(this.layer.map);
                if (!jS) {
                    continue
                }
                var i = dU.booleanDisjoint(jS, jO);
                if (!i) {
                    jQ[T].layerName = jP;
                    var e = new iO(jQ[T].getId(),jP);
                    e.properties = jQ[T].getProperties();
                    jR.push(e);
                    jR[jP + "_" + jQ[T].getId()] = true
                }
            }
        },
        _noPointFeaturesInter: function(jP, jQ, jR, jO) {
            for (var T in jQ) {
                if (!jQ[T]._visible) {
                    continue
                }
                if (jR[jP + "_" + jQ[T].getId()]) {
                    continue
                }
                var i = dU.booleanDisjoint(jQ[T].geojson, jO);
                if (!i) {
                    jQ[T].layerName = jP;
                    var e = new iO(jQ[T].getId(),jP);
                    e.properties = jQ[T].getProperties();
                    jR.push(e);
                    jR[jP + "_" + jQ[T].getId()] = true
                }
            }
        },
        pickFeatures: function(j1, jP) {
            if (this.running) {
                return
            }
            var T = Math.floor(this.map.getZoom() + this.spanLevel);
            if (this.gridModel === dU.GridModel.BAIDUWEB) {
                var jZ = Math.pow(2, 18 - T);
                var jQ = Math.floor(j1.lng / jZ / 256);
                var jT = Math.floor(j1.lat / jZ / 256);
                var jO = j1.lng / jZ - jQ * 256;
                var jU = j1.lat / jZ - jT * 256;
                var jS = [jO, jU];
                var j7 = [T, jQ, jT]
            } else {
                var j5 = dq.transformBDmcPoint(j1, this.layer.transform);
                var j0 = dq.getPointPixelCoor(j1, T, this.layer.transform);
                var j7 = dq.getTileCoordForCoordAndZ(j5, T);
                var jS = dq.getRelativePixelCoor(j7, j0)
            }
            var j8 = this.layer.map._featureMgr.result.bkData[this.layer.drawIndex][2];
            var jY = j7.join("_");
            var jV = [];
            for (var j3 = 0; j3 < j8.length; j3++) {
                var j4 = j8[j3].tileInfo;
                var j9 = j4.zoom + "_" + j4.col + "_" + j4.row;
                if (jY === j9) {
                    this.running = true;
                    if (!j8[j3].tileData || !j8[j3].tileData.layers) {
                        continue
                    }
                    var jW = j8[j3].tileData.layers;
                    for (var j6 in jW) {
                        var jR = jW[j6].features;
                        for (var j2 in jR) {
                            if (!jR[j2]._visible) {
                                continue
                            }
                            if (jV[j6 + "_" + jR[j2].getId()]) {
                                continue
                            }
                            if (jR[j2].getType() === fz.POINT || jR[j2].getType() === fz.MULTI_POINT) {
                                var e = jR[j2].isPointInGeometry(jP, this.layer.map)
                            } else {
                                var e = jR[j2].isPointInBox(jS);
                                if (e) {
                                    e = jR[j2].isPointInGeometry(jS)
                                }
                            }
                            if (e) {
                                jR[j2].layerName = j6;
                                var jX = new iO(jR[j2].getId(),j6);
                                jX.properties = jR[j2].getProperties();
                                jV.push(jX);
                                jV[j6 + "_" + jR[j2].getId()] = true
                            }
                        }
                    }
                    break
                }
            }
            this.running = false;
            return jV
        },
        _geojsonToScreenXY: function(T) {
            var i = JSON.parse(JSON.stringify(T));
            var e = this;
            gg.coordEachReplace(i, function(jQ) {
                var jO = iN.convertLL2MC(new cr(jQ[0],jQ[1]));
                var jP = e.map.pointToPixelIn(jO);
                return [jP.x, jP.y]
            });
            return i
        },
        _geojsonToTileXY: function(T, jP) {
            if (jP.length < 4) {
                return null
            }
            var i = JSON.parse(JSON.stringify(T));
            var jO = Math.floor(this.map.getZoom() + this.spanLevel);
            if (this.gridModel === dU.GridModel.BAIDUWEB) {
                var e = Math.pow(2, (18 - jO))
            } else {
                var e = dq.resolutions[jO]
            }
            gg.coordEachReplace(i, function(jQ) {
                return [(jQ[0] - jP[2]) / e, (jQ[1] - jP[3]) / e]
            });
            return i
        },
        _geojsonToSouceXY: function(T) {
            var i = JSON.parse(JSON.stringify(T));
            var e = this;
            gg.coordEachReplace(i, function(jQ) {
                var jO = iN.convertLL2MC(new cr(jQ[0],jQ[1]));
                var jP = [jO.lng, jO.lat];
                if (e.gridModel !== dU.GridModel.BAIDUWEB) {
                    jP = dq.transformBDmcPoint(jO, e.layer.transform)
                }
                return jP
            });
            return i
        },
        _bboxTile: function(T) {
            var jR = gg.bbox(T);
            var jW = Math.floor(this.map.getZoom() + this.spanLevel);
            if (this.gridModel === dU.GridModel.BAIDUWEB) {
                var jU = new cr(jR[0],jR[1]);
                var jX = new cr(jR[2],jR[3]);
                var jS = Math.pow(2, 18 - jW);
                var jY = Math.floor(jU.lng / jS / 256);
                var jQ = Math.floor(jU.lat / jS / 256);
                var jP = Math.floor(jX.lng / jS / 256);
                var i = Math.floor(jX.lat / jS / 256);
                return [jW, jY, jQ, jP, i]
            } else {
                var e = [jR[0], jR[3]];
                var jT = [jR[2], jR[1]];
                var jV = dq.getTileCoordForCoordAndZ(e, jW);
                var jO = dq.getTileCoordForCoordAndZ(jT, jW);
                return [jV[0], jV[1], jV[2], jO[1], jO[2]]
            }
        },
        _intersectTile: function(e, jR) {
            var jY = {};
            if (jR.length < 5) {
                return null
            }
            var jU = gg.getType(e);
            var jZ = false;
            if (e.type === "Feature" && jU === "Polygon") {
                jZ = true
            }
            for (var jP = jR[1]; jP <= jR[3]; jP++) {
                for (var jO = jR[2]; jO <= jR[4]; jO++) {
                    if (this.gridModel === dU.GridModel.BAIDUWEB) {
                        var jT = iN.tileToBoundRange({
                            col: jP,
                            row: jO,
                            zoom: jR[0],
                            baseTileSize: 256
                        });
                        var jQ = [jT.MC.sw.lng, jT.MC.sw.lat, jT.MC.ne.lng, jT.MC.ne.lat]
                    } else {
                        var jT = dq.getTileRangeExtent([jR[0], jP, jO]);
                        var jQ = [jT.minX, jT.minY, jT.maxX, jT.maxY]
                    }
                    var jS = {
                        type: "Feature"
                    };
                    jS.bbox = jQ;
                    jS.geometry = {
                        type: "Polygon",
                        coordinates: [[[jQ[0], jQ[1]], [jQ[2], jQ[1]], [jQ[2], jQ[3]], [jQ[0], jQ[3]], [jQ[0], jQ[1]], ]]
                    };
                    var T = dU.booleanDisjoint(jS, e);
                    if (!T) {
                        var jX = jR[0] + "_" + jP + "_" + jO;
                        var jW = [jP, jO, jQ[0], jQ[1], false];
                        if (jZ) {
                            var jV = dU.booleanContains(e, jS);
                            if (jV) {
                                jW[4] = true
                            }
                        }
                        jY[jX] = jW
                    }
                }
            }
            return Object.keys(jY).length === 0 ? null : jY
        },
        _initEvent: function(jR) {
            this.map = jR;
            if (!this.map.dispatcher) {
                this.map.dispatcher = new cw(g2(),dU)
            }
            var jP = this;
            this.map.dispatcher.broadcast("setLayerStyle", jP.layerOption, function(jT, i) {
                jP.upStyle = true;
                if (jP.loadModule) {
                    jP.doOnceDraw()
                }
            });
            var jO = this;
            var e = false;
            this._layerMouseEvent = function(jV) {
                if (!jO.map || !jO._listeners) {
                    return
                }
                if (!jO._listeners.onmousemove || Object.keys(jO._listeners.onmousemove).length === 0) {
                    return
                }
                var jT;
                var i = jV.point;
                var jU = jO.pickFeatures(i, jV.pixel);
                if (jU && jU.length > 0) {
                    jT = new fu("onmousemove");
                    jT.value = jU;
                    jO.map.platform.style.cursor = jO.map.config.overlayMoveCursor;
                    e = true
                } else {
                    jO.map.platform.style.cursor = jO.map.config.defaultCursor;
                    if (!e || !jO._listeners.onmouseout || Object.keys(jO._listeners.onmouseout).length === 0) {
                        return
                    }
                    jT = new fu("onmouseout");
                    e = false
                }
                if (jT) {
                    jT.point = jV.point;
                    jT.pixel = jV.pixel;
                    jT.latLng = jV.latlng;
                    jO.dispatchEvent(jT)
                }
            }
            ;
            this._layerClickEvent = function(jV) {
                if (!jO.map || !jO._listeners) {
                    return
                }
                if ((!jO._listeners.onclick && !jO._listeners.dblclick) || (Object.keys(jO._listeners.onclick).length === 0 && Object.keys(jO._listeners.dblclick).length === 0)) {
                    return
                }
                var jT;
                var i = jV.point;
                var jU = jO.pickFeatures(i, jV.pixel);
                jT = new fu(jV.type);
                jT.point = i;
                jT.pixel = jV.pixel;
                jT.latLng = jV.latlng;
                jT.value = jU;
                jO.dispatchEvent(jT)
            }
            ;
            jR.addEventListener("onmousemove", this._layerMouseEvent);
            var jQ = ["onclick", "dblclick"];
            for (var T = 0; T < jQ.length; T++) {
                var jS = jQ[T];
                jR.addEventListener(jS, this._layerClickEvent)
            }
            jR.addEventListener("removetilelayer", function(i) {
                if (i.target && i.target.ontology) {
                    if (i.target.ontology === jO) {
                        jO.layer.tileCache.clear();
                        jO.stateCube = {};
                        jR.removeEventListener("onmousemove", jO._layerMouseEvent);
                        jR.removeEventListener("onclick", jO._layerClickEvent);
                        jR.removeEventListener("ondblclick", jO._layerClickEvent);
                        if (jR.dispatcher) {
                            jR.dispatcher.broadcast("removeLayer", jO.layerOption, function(jV, jT) {
                                var jX = jR.tileMgr.tileLayers;
                                var jU = false;
                                for (var jW = 0; jW < jX.length; jW++) {
                                    if (jX[jW].ontology instanceof dU) {
                                        jU = true;
                                        break
                                    }
                                }
                                if (!jU && jR.dispatcher) {
                                    jR.dispatcher.remove();
                                    jR.dispatcher = null
                                }
                            })
                        }
                    }
                }
            });
            this.addEventListener("onmousemove", function() {})
        },
        setStyle: function(e) {
            this._opt.style = e;
            if (!this.map || !this.loadModule) {
                return
            }
            this.resolveStyle(this._opt);
            var i = this;
            if (this.upStyle === true) {
                this.map.dispatcher.stop();
                this.map.dispatcher.broadcast("stop", null, function(jO, T) {
                    i.layerOption = Object.assign(i.layerOption, i._opt);
                    i.map.dispatcher.broadcast("setLayerStyle", i.layerOption, function(jQ, jP) {
                        i.layer.tileCache.clear();
                        i.doOnceDraw()
                    })
                })
            } else {
                i.layer.tileCache.clear();
                i.doOnceDraw()
            }
        },
        setZIndex: function(e) {
            if (this.layer && parseInt(e) > 0) {
                this.layer.setZIndex(e)
            }
        },
        getZIndex: function() {
            if (this.layer) {
                return this.layer.zIndex
            }
        },
        setZIndexTop: function() {
            if (this.layer) {
                this.layer.setZIndexTop()
            }
        },
        setUpLevel: function() {
            if (this.layer) {
                var e = this.layer._getAdjoinZIndex("up");
                if (this.layer.zIndex !== e) {
                    this.layer.setZIndex(e)
                }
            }
        },
        setDownLevel: function() {
            if (this.layer) {
                var e = this.layer._getAdjoinZIndex("down");
                if (this.layer.zIndex !== e) {
                    this.layer.setZIndex(e)
                }
            }
        },
        toString: function() {
            return "MVTLayer"
        }
    });
    dU._generateTexture = function(jR, jQ, T) {
        var jP = document.createElement("canvas");
        var e;
        var jO;
        if (jQ.strokeStyle === "dashed") {
            e = 16;
            jO = e * 8
        } else {
            if (jQ.strokeStyle === "dotted") {
                e = 32;
                jO = e * 2
            }
        }
        jP.width = e;
        jP.height = jO;
        var i = jP.getContext("2d");
        i.fillStyle = jQ.strokeColor;
        i.globalAlpha = jQ.strokeOpacity;
        var jS = jQ.strokeWeight * 2;
        if (jQ.strokeStyle === "dashed") {
            jS = dU._drawDashArrayTexture(i, e, jO, jQ)
        } else {
            if (jQ.strokeStyle === "dotted") {
                jS = dU._drawDottedTexture(i, e, jO, jQ.strokeWeight)
            }
        }
        if (window.createImageBitmap) {
            createImageBitmap(jP, {
                imageOrientation: "flipY"
            }).then(function(jT) {
                T(null, {
                    totalDashLen: jS,
                    texture: jT,
                    textureSize: [e, jO]
                })
            })
        } else {
            T(null, {
                totalDashLen: jS,
                texture: jP.toDataURL(),
                textureSize: [e, jO]
            })
        }
    }
    ;
    dU._drawDashArrayTexture = function(jU, jO, jQ, T) {
        var jS = T.dashArray;
        if (!jS) {
            jU.fillRect(0, 0, jO, jQ / 2);
            return T.strokeWeight * 4
        } else {
            var jT = 0;
            if (jS.length % 2 !== 0) {
                jS = jS.concat(jS)
            }
            for (var jP = 0; jP < jS.length; jP++) {
                jT += jS[jP]
            }
            var e = 0;
            for (var jP = 0; jP < jS.length; jP++) {
                var jR = jS[jP] / jT * jQ;
                if (jP % 2 === 0) {
                    jU.fillRect(0, e, jO, jR)
                }
                e += jR
            }
            return jT
        }
    }
    ;
    dU._drawDottedTexture = function(i, e, T, jO) {
        i.beginPath();
        i.arc(e / 2, e / 2, e / 2, 0, 2 * Math.PI);
        i.fill();
        i.closePath();
        return jO * 2
    }
    ;
    var U = function(e) {
        var e = e || {};
        this.inputCRS = e.inputCRS || "EPSG3857";
        this.outCRS = e.outCRS || "EPSG3857";
        this.minZoom = e.minZoom || 3;
        this.maxZoom = e.maxZoom || 19;
        this.retry = e.retry || false;
        this.retryTime = e.retryTime || 600;
        this.useThumbData = e.useThumbData || true;
        this.lastZoom = 3;
        this.cacheSize = e.cacheSize || 128;
        this.tileType = hG.getInstance("web");
        this._mapCenter = {};
        this._featureMgr = [[], [], []];
        this._gridRefs = {
            row: {},
            col: {}
        };
        this.tileCache = new ay(this.cacheSize,{
            clearCallback: function(i) {}
        })
    };
    U.inherits(cZ, "BaiduLayer");
    eJ.extend(U.prototype, {
        fetch: function(i, jO, jP) {
            var jO = Math.ceil(jO) || 3;
            var i = i || [];
            if (i.length !== 4 || jO > 19) {
                jP(null);
                return
            }
            var e = this.getZoomState(jO);
            var T = this.calCoord(i, jO, e);
            this.curViewTilesInfo = this.calTilesOrders(T.sw, T.ne, jO);
            this.clearData();
            this.clearRefs();
            this.loadLayerData(this.curViewTilesInfo, e, true, jP)
        },
        calCoord: function(T, jO, i) {
            if (T.length !== 4) {
                return
            }
            var e = gcoord.transform([T[0], T[1]], gcoord[this.inputCRS], gcoord.BD09MC);
            var jP = gcoord.transform([T[2], T[3]], gcoord[this.inputCRS], gcoord.BD09MC);
            if (jP[1] > 19505879.362428114 || e[1] < -15949096.637571886) {
                jP[1] = 19505879.362428114;
                e[1] = -15949096.637571886
            }
            this._mapCenter[jO] = new cr((e[0] + jP[0]) / 2,(e[1] + jP[1]) / 2);
            return {
                sw: e,
                ne: jP
            }
        },
        calTilesOrders: function(jT, jZ, jV) {
            var jW = this.tileType.getMercatorSize(jV, jV);
            var jR = [Math.floor(jT[0] / jW), Math.floor(jT[1] / jW)];
            var i = [Math.floor(jZ[0] / jW), Math.floor(jZ[1] / jW)];
            var jS = jR[0] - 1;
            var jQ = i[0] + 2;
            var jP = jR[1] - 1;
            var jY = i[1] + 2;
            var jU = [];
            for (var jO = jS; jO < jQ; jO++) {
                for (var jX = jP; jX < jY; jX++) {
                    var T = {
                        col: jO,
                        row: jX,
                        zoom: jV,
                        useZoom: jV,
                        tileTypeName: "web",
                        loopOffsetX: 0,
                        tileSize: 256,
                        baseTileSize: 256,
                        mercatorSize: jW,
                        combine: false,
                        dataIndex: 256
                    };
                    jU.push(T);
                    var e = "id_" + jO + "_" + jX + "_" + jV;
                    jU[e] = true
                }
            }
            jU.sort((function(j0) {
                return function(j1, j2) {
                    return ((0.4 * Math.abs(j1.col - j0[0]) + 0.6 * Math.abs(j1.row - j0[1])) - (0.4 * Math.abs(j2.col - j0[0]) + 0.6 * Math.abs(j2.row - j0[1])))
                }
            }
            )([(jS + jQ) / 2, (jP + jY) / 2]));
            jU.zoom = jV;
            jU.tileTypeName = "web";
            return jU
        },
        getZoomState: function(i) {
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState || 0
        },
        loadLayerData: function(jV, jO, jP, jU) {
            this.thumbCache = {};
            if (jP) {
                for (var jS = 0, jQ = jV.length; jS < jQ; jS++) {
                    var T = jV[jS];
                    var jR = this.getTileKey(T);
                    var e = this.tileCache.getData(jR);
                    if (e && e.status === "ready") {
                        e.key = jR;
                        this.setData(e, 2)
                    } else {
                        if (this.useThumbData) {
                            jO === 1 && this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jO)
                        }
                    }
                }
                this.calOutData(jU)
            }
            for (var jS = 0, jQ = jV.length; jS < jQ; jS++) {
                var T = jV[jS];
                var jR = this.getTileKey(T);
                var e = this.tileCache.getData(jR);
                if (!e) {
                    this.tileCache.setData(jR, {});
                    var jT = this;
                    this.loadRasterTileData(T, function(i, jW) {
                        jT.rasterTileDataCbk(i, jW, jU)
                    })
                }
            }
        },
        loadRasterTileData: function(i, e) {
            var T = new Image();
            var jP = i.col;
            var jS = i.row;
            var jQ = i.zoom;
            var jO = this.getTilesUrl(new e4(jP,jS), jQ);
            if (!jO) {
                return
            }
            var jR = this.getTileKey(i);
            T = this.loadTileImage(jO, i, jR, e);
            T.tileInfo = i
        },
        loadTileImage: function(jS, e, T, jQ) {
            var jO = new Image();
            jO.crossOrigin = "anonymous";
            var jR = this;
            var jP;
            function jT() {
                if (jR.retry) {
                    jP && clearInterval(jP);
                    jP = null
                }
            }
            if (this.retry) {
                var i = 1;
                jP = setInterval(function() {
                    if (i > 3) {
                        jT();
                        return
                    }
                    var jU = jR.getTilesUrl(new e4(e.col,e.row), e.zoom, i);
                    jO.src = jU;
                    i++
                }, this.retryTime)
            }
            jO.onload = function() {
                jT();
                jQ && jQ(this, T)
            }
            ;
            jO.onerror = function() {
                jT();
                jQ && jQ(null, T)
            }
            ;
            jO.src = jS;
            return jO
        },
        rasterTileDataCbk: function(jP, jO, jS) {
            if (!jP || typeof jP === "string") {
                this.tileCache.removeData(jO);
                return
            }
            var i = jP.tileInfo;
            var T = i.col;
            var jU = i.row;
            var jT = i.zoom;
            var e = this.tileCache.getData(jO);
            if (!e) {
                return
            }
            e.textureSource = jP;
            e.dataType = gp;
            e.tileInfo = i;
            e.status = "ready";
            this.tileCache.setData(jO, e);
            var jQ = "id_" + T + "_" + jU + "_" + jT;
            var jR = false;
            if (this.curViewTilesInfo[jQ]) {
                e.png8 = this.png8 || false;
                e.key = jO;
                this.setData(e, 2);
                jR = true
            }
            if (jR) {
                this.calOutData(jS, e)
            }
        },
        getTilesUrl: function(jP, jW, i) {
            var jR = i || 0;
            var T = jP.x;
            var jX = jP.y;
            var jT = jr("ditu", "normal");
            var jS = jT.udt;
            var jV = d6.B_NORMAL_MAP.tileUrls;
            var jQ = Math.abs(T + jX + jR) % jV.length;
            var jU = jV[jQ];
            if (T < 0) {
                T = "M" + (-T)
            }
            if (jX < 0) {
                jX = "M" + (-jX)
            }
            var jO = "x=" + T + "&y=" + jX + "&z=" + Math.floor(jW);
            jO += "&styles=pl&scaler=2&udt=" + jS + "&from=jsapi3_0";
            var e = jU + "?qt=vtile&" + jO;
            return e
        },
        calOutData: function(jU, T) {
            if (!T) {
                for (var jR = 0; jR < this._featureMgr.length; jR++) {
                    var e = this._featureMgr[jR];
                    for (var jP = 0; jP < e.length; jP++) {
                        var jO = e[jP].tileInfo;
                        if (jR === 2) {
                            var jS = e[jP].extent;
                            if (jS) {
                                this.addRefs(jS, jO.col, jO.row)
                            } else {
                                var jT = this.calBoxCoord(jO);
                                if (!jT) {
                                    continue
                                }
                                e[jP].extent = this.findRefs(jT, jO.col, jO.row)
                            }
                        }
                    }
                }
                jU({
                    size: this.curViewTilesInfo.length,
                    zoom: this.lastZoom,
                    data: this._featureMgr
                })
            } else {
                var jQ = this.calBoxCoord(T.tileInfo);
                if (!jQ) {
                    return
                }
                T.extent = this.findRefs(jQ, T.tileInfo.col, T.tileInfo.row);
                jU({
                    zoom: this.lastZoom,
                    size: this.curViewTilesInfo.length,
                    data: [[], [], [T]]
                })
            }
        },
        calOutData_back: function(jW, jO) {
            if (!jO) {
                var jQ;
                var jX;
                var jU;
                for (var jS = 0; jS < this._featureMgr.length; jS++) {
                    var T = this._featureMgr[jS];
                    for (var jR = 0; jR < T.length; jR++) {
                        var jP = T[jR].tileInfo;
                        if (jS === 2) {
                            if (jR === 0) {
                                var jT = this.calBoxCoord(jP);
                                T[0].extent = jT;
                                jQ = T[0];
                                jX = jT[2] - jT[0];
                                jU = jT[3] - jT[1]
                            } else {
                                if (jQ && jX && jU) {
                                    var e = (jP.row - jQ.tileInfo.row) * jU;
                                    var jV = (jP.col - jQ.tileInfo.col) * jX;
                                    var jT = jQ.extent;
                                    T[jR].extent = [jT[0] + jV, jT[1] + e, jT[2] + jV, jT[3] + e]
                                }
                            }
                        } else {
                            var jT = this.calBoxCoord(jP);
                            T[jR].extent = jT
                        }
                    }
                }
                jW({
                    size: this.curViewTilesInfo.length,
                    zoom: this.lastZoom,
                    data: this._featureMgr
                })
            } else {
                if (this._featureMgr[2].length === 1) {
                    var jT = this.calBoxCoord(jO.tileInfo);
                    jO.extent = jT;
                    this.featureCell = jO;
                    this.cellW = jT[2] - jT[0];
                    this.cellH = jT[3] - jT[1]
                } else {
                    var e = (jO.tileInfo.row - this.featureCell.tileInfo.row) * this.cellH;
                    var jV = (jO.tileInfo.col - this.featureCell.tileInfo.col) * this.cellW;
                    var jT = this.featureCell.extent;
                    jO.extent = [jT[0] + jV, jT[1] + e, jT[2] + jV, jT[3] + e]
                }
                jW({
                    zoom: this.lastZoom,
                    size: this.curViewTilesInfo.length,
                    data: [[], [], [jO]]
                })
            }
        },
        calBoxCoord: function(e) {
            var i = iN.prototype.tileToBound(e, this._mapCenter[e.zoom]).LL;
            var T = gcoord.transform([i.sw.lng, i.sw.lat], gcoord.BD09LL, gcoord[this.outCRS]);
            var jO = gcoord.transform([i.ne.lng, i.ne.lat], gcoord.BD09LL, gcoord[this.outCRS]);
            return [T[0], T[1], jO[0], jO[1]]
        },
        clearData: function() {
            this._featureMgr = [[], [], []]
        },
        addRefs: function(i, e, T) {
            this._gridRefs.row[T] = i[1];
            this._gridRefs.row[T + 1] = i[3];
            this._gridRefs.col[e] = i[0];
            this._gridRefs.col[e + 1] = i[2]
        },
        findRefs: function(i, e, jO) {
            var T = [];
            this._gridRefs.row[jO] && (T[1] = this._gridRefs.row[jO]);
            this._gridRefs.row[jO + 1] && (T[3] = this._gridRefs.row[jO + 1]);
            this._gridRefs.col[e] && (T[0] = this._gridRefs.col[e]);
            this._gridRefs.col[e + 1] && (T[2] = this._gridRefs.col[e + 1]);
            !this._gridRefs.row[jO] && (this._gridRefs.row[jO] = i[1]) && (T[1] = i[1]);
            !this._gridRefs.row[jO + 1] && (this._gridRefs.row[jO + 1] = i[3]) && (T[3] = i[3]);
            !this._gridRefs.col[e] && (this._gridRefs.col[e] = i[0]) && (T[0] = i[0]);
            !this._gridRefs.col[e + 1] && (this._gridRefs.col[e + 1] = i[2]) && (T[2] = i[2]);
            return T
        },
        clearRefs: function() {
            this._gridRefs = {
                row: {},
                col: {}
            }
        },
        destroy: function() {
            this.tileCache.clear();
            this.clearData();
            this.clearRefs();
            this._mapCenter = {}
        },
        setData: function(jP, T) {
            var e = this._featureMgr[T];
            for (var jO = 0; jO < e.length; jO++) {
                if (e[jO].key && e[jO].key === jP.key) {
                    e[jO] = jP;
                    return
                }
            }
            e.push(jP)
        },
        getTileKey: function(e, jO) {
            jO = jO || {};
            var i = typeof jO.useZoom === "number" ? jO.useZoom : e.useZoom;
            var T = "default";
            return "web_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        setThumbData: function(i, jP, jO, e, T) {
            if (T === 1) {
                if (this._findParentZoomTile(i, jP, jO, e, 8) === false) {
                    this._findChildZoomTile(i, jP, jO, e, 3)
                }
            } else {
                if (T === -1) {
                    if (this._findChildZoomTile(i, jP, jO, e, 3) === false) {
                        this._findParentZoomTile(i, jP, jO, e, 8)
                    }
                }
            }
            this.sortThumbData()
        },
        _findParentZoomTile: function(jR, j0, jZ, jP, jU) {
            var jQ = "web";
            var T = 3;
            var e = jR;
            var jX = j0;
            var jV = jZ;
            var jW = jP;
            for (var jT = 1; jT <= jU; jT++) {
                var jO = this.tileType.getParentTile(e, jX, jV, jW, T);
                if (jO === null) {
                    continue
                }
                var jY = this.getTileKey(jO);
                var jS = this.tileCache.getData(jY);
                if (jS && jS.status === "ready") {
                    if (this.thumbCache[jY]) {
                        continue
                    }
                    jS.key = jY;
                    this.setData(jS, 0);
                    this.thumbCache[jY] = true;
                    return true
                }
                e = jO.col;
                jX = jO.row;
                jV = jO.zoom;
                jW = jO.useZoom
            }
            return false
        },
        _findChildZoomTile: function(jS, jU, e, jP, j3) {
            var j1 = "web";
            var jX = 21;
            var jR = jS;
            var jT = jU;
            var jV = e;
            var jO = jP;
            var jQ = true;
            for (var j0 = 1; j0 <= j3; j0++) {
                var jY = false;
                var T = this.tileType.getChildTiles(jR, jT, jV, jO, jX, j0);
                if (!T) {
                    continue
                }
                for (var jZ = 0; jZ < T.length; jZ++) {
                    var jW = this.getTileKey(T[jZ]);
                    var j2 = this.tileCache.getData(jW);
                    if (j2 && j2.status === "ready") {
                        if (!this.thumbCache[jW]) {
                            j2.key = jW;
                            this.setData(j2, 1);
                            this.thumbCache[jW] = true
                        }
                        jY = true
                    } else {
                        jQ = false
                    }
                }
                if (jY) {
                    break
                }
            }
            return jQ
        },
        sortThumbData: function() {
            var e = this._featureMgr;
            if (!e) {
                return
            }
            if (e[0] && e[0].length > 0) {
                e[0].sort(function(T, i) {
                    return T.tileInfo.useZoom - i.tileInfo.useZoom
                })
            }
        }
    });
    bw.register(function(i) {
        if (i.config && i.config.isOverviewMap) {
            return
        }
        if (i.isLoaded()) {
            J(i)
        } else {
            i.addEventListener("load", function() {
                J(this)
            })
        }
        i.cityName = "中国";
        i.cCode = "1";
        var e = {};
        e.enableRequest = true;
        e.request = function() {
            if (e.enableRequest) {
                e.enableRequest = false;
                setTimeout(function() {
                    e._request()
                }, 500)
            }
        }
        ;
        e._request = function() {
            var jO = i.getBoundsIn();
            var jQ = i.getZoom();
            var T = jO.getSouthWest();
            var jP = jO.getNorthEast();
            jx.request(function(jU) {
                if (jU.current_city["code"] >= 9000 && jU.current_city["code"] <= 9378) {
                    jU.current_city["name"] = "台湾省"
                }
                if (jU.current_city["code"] >= 20000 && jU.current_city["code"] <= 20499) {
                    jU.current_city["name"] = "新加坡"
                }
                if (jU.current_city["code"] >= 20500 && jU.current_city["code"] <= 25999) {
                    jU.current_city["name"] = "泰国"
                }
                if (jU.current_city["code"] >= 26000 && jU.current_city["code"] <= 29999) {
                    jU.current_city["name"] = "日本"
                }
                if (jU.current_city["code"] >= 30000 && jU.current_city["code"] <= 30999) {
                    jU.current_city["name"] = "韩国"
                }
                if (jU.current_city["code"] >= 31000 && jU.current_city["code"] <= 37000) {
                    jU.current_city["name"] = "亚太"
                }
                if (jU.current_city["code"] >= 46609 && jU.current_city["code"] <= 52505) {
                    jU.current_city["name"] = "欧洲"
                }
                if (jU.current_city["code"] >= 39509 && jU.current_city["code"] <= 53500) {
                    jU.current_city["name"] = "南美洲"
                }
                if (jU.current_city["code"] >= 54000 && jU.current_city["code"] <= 70000) {
                    jU.current_city["name"] = "北美洲"
                }
                if (jU.current_city["code"] === 54003 && jU.current_city["code"] >= 60731 && jU.current_city["code"] <= 61123) {
                    jU.current_city["name"] = "美国"
                }
                if (jU.current_city["code"] === 54015 || jU.current_city["code"] >= 57970 && jU.current_city["code"] <= 60223) {
                    jU.current_city["name"] = "加拿大"
                }
                if (jU.current_city["code"] === 54025 || jU.current_city["code"] >= 54338 && jU.current_city["code"] <= 57374) {
                    jU.current_city["name"] = "墨西哥"
                }
                e.enableRequest = true;
                if (jU && jU.current_city) {
                    var jT = jU.current_city["name"];
                    var jS = jU.current_city["code"];
                    if (jS !== i.cCode) {
                        var jR = new fu("oncitychange");
                        jR.name = jT;
                        jR.code = jS;
                        i.dispatchEvent(jR)
                    }
                    i.cityName = jT;
                    i.cCode = jS;
                    if (!bS()) {
                        cT(i)
                    }
                }
            }, {
                qt: "cen",
                b: T.lng + "," + T.lat + ";" + jP.lng + "," + jP.lat,
                l: jQ
            }, "", "", true)
        }
        ;
        i.addEventListener("load", function(T) {
            e.request()
        });
        i.addEventListener("moveend", function(T) {
            e.request()
        });
        i.addEventListener("zoomend", function(T) {
            e.request()
        });
        e.request()
    });
    function J(i) {
        if (i.temp.copyadded) {
            return
        }
        i.temp.copyadded = true;
        if (!i.cpyCtrl) {
            var jO = new iE(2,2);
            i.config.cpyCtrlOffset = jO;
            if (bS()) {
                jO.width = 72;
                jO.height = 0
            }
            var T = new fP({
                offset: jO,
                printable: true
            });
            i.cpyCtrl = T
        }
        if (!bS()) {
            cT(i);
            i.addEventListener("maptypechange", function() {
                cT(i)
            })
        }
        i.addControl(T);
        var e = new bz();
        e._opts = {
            printable: true
        };
        i.logoCtrl = e;
        i.addControl(e);
        i.addEventListener("resize", function() {
            if (this.getSize().width >= 300 && i.getSize().height >= 100) {
                e.show();
                T.setOffset(i.config.cpyCtrlOffset)
            } else {
                e.hide();
                T.setOffset(new iE(4,2))
            }
        });
        if (i.getSize().width >= 300 && i.getSize().height >= 100) {
            e.show()
        } else {
            e.hide();
            T.setOffset(new iE(4,2))
        }
        i.addEventListener("oncopyrightoffsetchange", function(jP) {
            i.logoCtrl.setOffset(jP.target.logo);
            i.cpyCtrl.setOffset(jP.target.cpy)
        });
        i.dispatchEvent(new fu("oncopyrightaddend"))
    }
    function cT(j3) {
        if (!j3.cpyCtrl) {
            var kb = new iE(2,2);
            if (bS()) {
                kb.width = 72;
                kb.height = 0
            }
            var j6 = new fP({
                offset: kb,
                printable: true
            });
            j3.cpyCtrl = j6
        }
        var kk = j3.cityName || "中国";
        var j4 = j3.getMapType();
        var j5 = ["常州市", "南昌市", "乌鲁木齐市", "无锡市", "福州市", "泉州市", "珠海市", "贵阳市"];
        var jX = ["北京市", "上海市", "广州市", "深圳市", "宁波市", "石家庄市", "沈阳市", "长春市", "青岛市", "温州市", "台州市", "金华市", "佛山市", "中山市", "昆明市", "南宁市", "苏州市", "西安市", "济南市", "郑州市", "合肥市", "呼和浩特市", "杭州市", "成都市", "武汉市", "长沙市", "天津市", "南京市", "重庆市", "大连市", "东莞市", "厦门市"];
        var jZ = ["香港特别行政区"];
        var jT = ["台湾省"];
        var kc = ["日本"];
        var ki = ["韩国"];
        var j7 = ["泰国"];
        var ka = ["亚太"];
        var jU = ["新加坡"];
        var kj = ["欧洲"];
        var jO = ["南美洲"];
        var kf = ["北美洲"];
        var T = ["美国"];
        var j9 = ["墨西哥"];
        var jR = ["加拿大"];
        for (var kg in j5) {
            if (j5[kg] === kk) {
                var j0 = true;
                break
            }
        }
        for (var kg in jX) {
            if (jX[kg] === kk) {
                var jP = true;
                break
            }
        }
        for (var kg in jZ) {
            if (jZ[kg] === kk) {
                var km = true;
                break
            }
        }
        if (jT[0] === kk) {
            var ke = true
        }
        if (jU[0] === kk) {
            var i = true
        }
        if (kc[0] === kk) {
            var jW = true
        }
        if (ki[0] === kk) {
            var j2 = true
        }
        if (j7[0] === kk) {
            var j1 = true
        }
        if (ka[0] === kk) {
            var jS = true
        }
        if (kj[0] === kk) {
            var jY = true
        }
        if (jO[0] === kk) {
            var jV = true
        }
        if (kf[0] === kk) {
            var e = true
        }
        if (T[0] === kk) {
            var kh = true
        }
        if (jR[0] === kk) {
            var kd = true
        }
        if (j9[0] === kk) {
            var jQ = true
        }
        var kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "];
        var j8 = "rgba(255, 255, 255, 0.701961)";
        if (j3.getZoom() <= 9) {
            kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
        } else {
            if (ke) {
                kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
            } else {
                if (jW || j2) {
                    kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                } else {
                    if (i || j1) {
                        kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                    } else {
                        if (jS) {
                            kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                        } else {
                            if (jY) {
                                kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                            } else {
                                if (jV) {
                                    kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                                } else {
                                    if (e) {
                                        kl = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (j3.getZoom() <= 9) {
            kl.push("百度智图");
            kl.push(' &amp; <a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
            kl.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
            if (j4 === BMAP_SATELLITE_MAP || j4 === BMAP_HYBRID_MAP) {
                kl.push(' &amp; <a target="_blank" href="http://www.eso.org/public/">ESO</a>');
                j8 = "rgba(0,0,0,.7)"
            }
        } else {
            if (jW || j2) {
                kl.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>')
            } else {
                if (i || j1) {
                    kl.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>')
                } else {
                    if (jS) {
                        kl.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                        kl.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                    } else {
                        if (jY) {
                            kl.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                            kl.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                        } else {
                            if (jV) {
                                kl.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                                kl.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                            } else {
                                if (kh || jQ || kd) {
                                    kl.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                                    kl.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                                } else {
                                    if (e) {
                                        kl.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                                        kl.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                                    } else {
                                        kl.push("百度智图");
                                        if (j0) {
                                            kl.push(' &amp; <a target="_blank" href="http://www.palmcity.cn/palmcity/">PalmCity</a>')
                                        }
                                        if (km) {
                                            kl.push(' &amp; <a target="_blank" href="http://www.mapking.com/HongKong/eng/home/MapKing_Webmap.html">MapKing</a>')
                                        }
                                        if (ke) {
                                            kl.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                                            kl.push(' &amp; <a target="_blank" href="http://www.localking.com.tw/about/localking.aspx">樂客LocalKing</a>')
                                        }
                                        if (j4 === BMAP_SATELLITE_MAP || j4 === BMAP_HYBRID_MAP) {
                                            j8 = "rgba(0,0,0,.7)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        kl.unshift('<span style="background: ' + j8 + ';padding: 0px 1px;line-height: 16px;display: inline;height: 16px;">');
        kl.push("</span>");
        kl = kl.join("");
        j3.cpyCtrl.addCopyright({
            id: 1,
            content: kl
        })
    }
    window.BMAP_STATUS_SUCCESS = 0;
    window.BMAP_STATUS_CITY_LIST = 1;
    window.BMAP_STATUS_UNKNOWN_LOCATION = 2;
    window.BMAP_STATUS_UNKNOWN_ROUTE = 3;
    window.BMAP_STATUS_INVALID_KEY = 4;
    window.BMAP_STATUS_INVALID_REQUEST = 5;
    window.BMAP_STATUS_PERMISSION_DENIED = 6;
    window.BMAP_STATUS_SERVICE_UNAVAILABLE = 7;
    window.BMAP_STATUS_TIMEOUT = 8;
    window.BMAP_ROUTE_TYPE_WALKING = 2;
    window.BMAP_ROUTE_TYPE_DRIVING = 3;
    window.BMAP_ROUTE_TYPE_RIDING = 6;
    window.BMAP_ROUTE_STATUS_NORMAL = 0;
    window.BMAP_ROUTE_STATUS_EMPTY = 1;
    window.BMAP_ROUTE_STATUS_ADDRESS = 2;
    var c5 = "cur";
    var Y = "cen";
    var I = "s";
    var dm = "con";
    var de = "bd";
    var cJ = "nb";
    var gH = "bt";
    var aN = "nav";
    var hO = "walk";
    var fB = "gc";
    var dJ = "rgc";
    var K = "dec";
    var h4 = "iploc";
    var gs = "bse";
    var fY = "nse";
    var c2 = "bl";
    var ea = "bsl";
    var fy = "bda";
    var d7 = "sa";
    var a6 = "nba";
    var hV = "drag";
    var iF = "ext";
    var ji = "exts";
    var jl = "hip";
    var hg = "ride";
    var jv = "drct";
    var fa = 2;
    var bd = 4;
    var fI = 7;
    var hW = 11;
    var b3 = 12;
    var eE = 14;
    var cG = 15;
    var dX = 18;
    var az = 20;
    var a5 = 21;
    var H = 19;
    var a = 23;
    var ig = 26;
    var aB = 28;
    var fZ = 31;
    var eQ = 35;
    var h5 = 44;
    var bb = 45;
    var aw = 46;
    var jg = 47;
    var f4 = -1;
    var a8 = 0;
    var bv = 1;
    var iK = 2;
    var dB = 3;
    window.BMAP_POI_TYPE_NORMAL = 0;
    var cv = 1;
    var hY = 2;
    BMapGL.I = eJ.I;
    var bF = {};
    bF.removeHtml = function(e) {
        e = e.replace(/<\/?[^>]*>/g, "");
        e = e.replace(/[ | ]* /g, " ");
        return e
    }
    ;
    bF.parseGeoExtReg1 = function(e) {
        return e.replace(/([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*),([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*)(,)/g, "$1,$2;")
    }
    ;
    bF.parseGeoExtReg2 = function(i, e) {
        var T = new RegExp("(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);)(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);){" + e + "}","ig");
        return i.replace(T, "$1")
    }
    ;
    var dt = 0;
    var c4 = 1;
    var S = 2;
    bF.unique = function(T) {
        var jQ = false;
        var jP = [];
        var jR = {};
        for (var jO = 0, e = T.length; jO < e; jO++) {
            if (!jR[T[jO]]) {
                jR[T[jO]] = true;
                jP.push(T[jO])
            }
        }
        return jP
    }
    ;
    bF.getBestLevel = function(T, i) {
        if (i) {
            var e = Math.min(i.width / 1100, i.height / 660);
            T = Math.round(T + (Math.log(e) / Math.log(2)))
        }
        if (T < 1) {
            T = 1
        }
        if (T > 21) {
            T = 21
        }
        return T
    }
    ;
    bF.parseGeo = function(jR, jU) {
        if (typeof jR != "string" || !jR) {
            return
        }
        var jW = jR.split("|");
        var e;
        var jP;
        var T;
        if (jW.length == 1) {
            e = bX(jR)
        } else {
            e = bX(jW[2]);
            jP = bX(jW[0]);
            T = bX(jW[1]);
            if (!jU) {
                return e
            }
        }
        var jS = {
            type: e.geoType
        };
        if (jU) {
            switch (jS.type) {
            case S:
                var jT = new cr(e.geo[0][0],e.geo[0][1]);
                var jV = iN.convertMC2LL(jT);
                jS.point = jV;
                jS.points = [jV];
                break;
            case c4:
                jS.points = [];
                var jX = e.geo[0];
                for (var jQ = 0, jO = jX.length - 1; jQ < jO; jQ += 2) {
                    var jY = new cr(jX[jQ],jX[jQ + 1]);
                    jY = iN.convertMC2LL(jY);
                    jS.points.push(jY)
                }
                jP = new cr(jP.geo[0][0],jP.geo[0][1]);
                T = new cr(T.geo[0][0],T.geo[0][1]);
                jP = iN.convertMC2LL(jP);
                T = iN.convertMC2LL(T);
                jS.bounds = new hF(jP,T);
                break;
            default:
                break
            }
        }
        return jS
    }
    ;
    bF.parseGeoExt = function(j7, jY) {
        if (!jY) {
            jY = 0
        } else {
            if (jY < 0.25) {
                jY = 0
            } else {
                if (jY > 0.25 && jY < 1) {
                    jY = 1
                } else {
                    if (jY > 32) {
                        jY = 32
                    }
                }
            }
        }
        var jT = j7.split("|");
        if (jT.length == 1) {
            var jO = bX(jT[0]);
            return {
                type: jO.type,
                bound: "",
                points: jO.geo.join(",")
            }
        } else {
            if (jT.length > 1) {
                var jZ = j7.split(";.=");
                var jV = [];
                var jP = [];
                var j0 = 0;
                var j4 = jZ.length;
                for (var j1 = 0; j1 < j4; j1++) {
                    var j6 = jZ[j1];
                    if (j4 > 1) {
                        if (j1 == 0) {
                            j6 = j6 + ";"
                        }
                        if (j1 > 0 && j1 < j4 - 1) {
                            j6 = ".=" + j6 + ";"
                        }
                        if (j1 == j4 - 1) {
                            j6 = ".=" + j6
                        }
                    }
                    var jQ = j6.split("|");
                    var j3 = bX(jQ[0]);
                    var j2 = bX(jQ[1]);
                    jV.push(j3.geo.join(","));
                    jV.push(j2.geo.join(","));
                    var jO = bX(jQ[2]);
                    j0 = jO.type;
                    var j5 = jO.geo.join(",");
                    j5 = bF.parseGeoExtReg1(j5);
                    if (jY > 0) {
                        j5 = bF.parseGeoExtReg2(j5, jY)
                    }
                    jP.push(j5)
                }
                if (j4 <= 1) {
                    jP = jP.join(";")
                }
                if (j4 == 2) {
                    var T = jP[0] + ";" + jP[1];
                    var jR = T.split(";");
                    var e = [];
                    for (var j1 = 0; j1 < jR.length; j1++) {
                        var jU = jR[j1].split(",")[0];
                        var jS = jR[j1].split(",")[1];
                        var jW = new cr(jU,jS);
                        var jX = iN.convertMC2LL(jW);
                        e.push(jX)
                    }
                    jP = e
                }
                return {
                    type: j0,
                    bound: jV.join(";"),
                    points: jP
                }
            }
        }
    }
    ;
    bF.getPoiPoint = function(e) {
        var T = [];
        var i = null;
        if (e.toString() == "Point") {
            i = e
        } else {
            if (typeof e == "string") {
                T = eJ.trim(e).split(",");
                if (T.length < 2) {
                    return
                }
                T[0] = parseFloat(eJ.trim(T[0]));
                T[1] = parseFloat(eJ.trim(T[1]))
            } else {
                T = e.slice(0);
                if (T.length < 2) {
                    return
                }
            }
            i = new BMap.Point(T[0],T[1])
        }
        return i
    }
    ;
    bF.parseGeoStr = function(T) {
        var i = T.split(",");
        var e = new cr(i[0],i[1]);
        return iN.convertMC2LL(e)
    }
    ;
    bF.level = {
        country: 4,
        province: 11,
        city: 12,
        area: 13
    };
    var gT = ["=", ".", "-", "*"];
    var c0 = 1 << 23;
    function bX(jU) {
        var jT = hB(jU.charAt(0));
        var T = jU.substr(1);
        var jW = 0;
        var e = T.length;
        var jX = [];
        var jR = [];
        var jS = [];
        while (jW < e) {
            if (T.charAt(jW) == gT[0]) {
                if ((e - jW) < 13) {
                    return 0
                }
                jS = dW(T.substr(jW, 13), jX);
                if (jS < 0) {
                    return 0
                }
                jW += 13
            } else {
                if (T.charAt(jW) == ";") {
                    jR.push(jX.slice(0));
                    jX.length = 0;
                    ++jW
                } else {
                    if ((e - jW) < 8) {
                        return 0
                    }
                    jS = b9(T.substr(jW, 8), jX);
                    if (jS < 0) {
                        return 0
                    }
                    jW += 8
                }
            }
        }
        for (var jQ = 0, jO = jR.length; jQ < jO; jQ++) {
            for (var jP = 0, jV = jR[jQ].length; jP < jV; jP++) {
                jR[jQ][jP] /= 100
            }
        }
        return {
            geoType: jT,
            geo: jR
        }
    }
    function hB(i) {
        var e = -1;
        if (i == gT[1]) {
            e = S
        } else {
            if (i == gT[2]) {
                e = c4
            } else {
                if (i == gT[3]) {
                    e = dt
                }
            }
        }
        return e
    }
    function dW(jP, T) {
        var e = 0;
        var jR = 0;
        var jQ = 0;
        for (var jO = 0; jO < 6; jO++) {
            jQ = dl(jP.substr(1 + jO, 1));
            if (jQ < 0) {
                return -1 - jO
            }
            e += jQ << (6 * jO);
            jQ = dl(jP.substr(7 + jO, 1));
            if (jQ < 0) {
                return -7 - jO
            }
            jR += jQ << (6 * jO)
        }
        T.push(e);
        T.push(jR);
        return 0
    }
    function b9(jQ, jO) {
        var T = jO.length;
        if (T < 2) {
            return -1
        }
        var e = 0;
        var jS = 0;
        var jR = 0;
        for (var jP = 0; jP < 4; jP++) {
            jR = dl(jQ.substr(jP, 1));
            if (jR < 0) {
                return -1 - jP
            }
            e += jR << (6 * jP);
            jR = dl(jQ.substr(4 + jP, 1));
            if (jR < 0) {
                return -5 - jP
            }
            jS += jR << (6 * jP)
        }
        if (e > c0) {
            e = c0 - e
        }
        if (jS > c0) {
            jS = c0 - jS
        }
        jO.push(jO[T - 2] + e);
        jO.push(jO[T - 1] + jS);
        return 0
    }
    function dl(i) {
        var e = i.charCodeAt(0);
        if (i >= "A" && i <= "Z") {
            return e - "A".charCodeAt(0)
        } else {
            if (i >= "a" && i <= "z") {
                return (26 + e - "a".charCodeAt(0))
            } else {
                if (i >= "0" && i <= "9") {
                    return (52 + e - "0".charCodeAt(0))
                } else {
                    if (i == "+") {
                        return 62
                    } else {
                        if (i == "/") {
                            return 63
                        }
                    }
                }
            }
        }
        return -1
    }
    bF.pathToPoints = function(jQ) {
        var jO = [];
        if (typeof jQ !== "string") {
            return jO
        } else {
            var jP = jQ.split(";");
            for (var T = 0; T < jP.length; T++) {
                var e = jP[T].split(",");
                jO.push(new cr(e[0],e[1]))
            }
        }
        return jO
    }
    ;
    window.BMAP_POI_TYPE_NORMAL = 0;
    window.BMAP_POI_TYPE_BUSSTOP = 1;
    window.BMAP_POI_TYPE_BUSLINE = 2;
    window.BMAP_POI_TYPE_SUBSTOP = 3;
    window.BMAP_POI_TYPE_SUBLINE = 4;
    var Q = 0;
    var hl = 1;
    var fp = {};
    window.APIPack = fp;
    function aG(i, e) {
        cZ.call(this);
        this._loc = {};
        this.setLocation(i);
        e = e || {};
        e.renderOptions = e.renderOptions || {};
        this._opts = {
            renderOptions: {
                panel: e.renderOptions.panel || null,
                map: e.renderOptions.map || null,
                autoViewport: e.renderOptions.autoViewport || true,
                selectFirstResult: e.renderOptions.selectFirstResult,
                highlightMode: e.renderOptions.highlightMode,
                enableDragging: e.renderOptions.enableDragging || false
            },
            onSearchComplete: e.onSearchComplete || function() {}
            ,
            onMarkersSet: e.onMarkersSet || function() {}
            ,
            onInfoHtmlSet: e.onInfoHtmlSet || function() {}
            ,
            onResultsHtmlSet: e.onResultsHtmlSet || function() {}
            ,
            onGetBusListComplete: e.onGetBusListComplete || function() {}
            ,
            onGetBusLineComplete: e.onGetBusLineComplete || function() {}
            ,
            onBusListHtmlSet: e.onBusListHtmlSet || function() {}
            ,
            onBusLineHtmlSet: e.onBusLineHtmlSet || function() {}
            ,
            onPolylinesSet: e.onPolylinesSet || function() {}
            ,
            reqFrom: e.reqFrom || ""
        };
        if (typeof e != "undefined" && typeof e.renderOptions != "undefined" && typeof e.renderOptions["autoViewport"] != "undefined") {
            this._opts.renderOptions.autoViewport = e.renderOptions["autoViewport"]
        } else {
            this._opts.renderOptions.autoViewport = true
        }
        this._opts.renderOptions.panel = eJ.G(this._opts.renderOptions.panel)
    }
    aG.inherits(cZ, "BaseSearch");
    eJ.extend(aG.prototype, {
        getResults: function() {
            if (!this._isMultiKey) {
                return this._results
            } else {
                return this._arrResults
            }
        },
        enableAutoViewport: function() {
            this._opts.renderOptions.autoViewport = true
        },
        disableAutoViewport: function() {
            this._opts.renderOptions.autoViewport = false
        },
        setLocation: function(e) {
            if (!e) {
                return
            }
            this._loc.src = e
        },
        setSearchCompleteCallback: function(e) {
            this._opts.onSearchComplete = e || function() {}
        },
        setMarkersSetCallback: function(e) {
            this._opts.onMarkersSet = e || function() {}
        },
        setPolylinesSetCallback: function(e) {
            this._opts.onPolylinesSet = e || function() {}
        },
        setInfoHtmlSetCallback: function(e) {
            this._opts.onInfoHtmlSet = e || function() {}
        },
        setResultsHtmlSetCallback: function(e) {
            this._opts.onResultsHtmlSet = e || function() {}
        },
        getStatus: function() {
            return this._status
        }
    });
    var cu = function(T, i) {
        aG.call(this, T, i);
        i = i || {};
        i.renderOptions = i.renderOptions || {};
        this.setPageCapacity(i.pageCapacity);
        if (typeof i.renderOptions["selectFirstResult"] != "undefined" && !i.renderOptions["selectFirstResult"]) {
            this.disableFirstResultSelection()
        } else {
            this.enableFirstResultSelection()
        }
        this._overlays = [];
        this._arrPois = [];
        this._curIndex = -1;
        this._queryList = [];
        var e = this;
        gK.load("localSearch", function() {
            e._check()
        }, true)
    };
    cu.inherits(aG, "LocalSearch");
    cu.DEFAULT_PAGE_CAPACITY = 10;
    cu.MIN_PAGE_CAPACITY = 1;
    cu.MAX_PAGE_CAPACITY = 100;
    cu.DEFAULT_RADIUS = 2000;
    cu.MAX_RADIUS = 100000;
    eJ.extend(cu.prototype, {
        search: function(e, i) {
            this._queryList.push({
                method: "search",
                arguments: [e, i]
            })
        },
        searchInBounds: function(e, T, i) {
            this._queryList.push({
                method: "searchInBounds",
                arguments: [e, T, i]
            })
        },
        searchNearby: function(T, i, e, jO) {
            this._queryList.push({
                method: "searchNearby",
                arguments: [T, i, e, jO]
            })
        },
        clearResults: function() {
            delete this._json;
            delete this._status;
            delete this._results;
            delete this._ud;
            this._curIndex = -1;
            this._setStatus();
            if (this._opts.renderOptions.panel) {
                this._opts.renderOptions.panel.innerHTML = ""
            }
        },
        gotoPage: function() {},
        enableFirstResultSelection: function() {
            this._opts.renderOptions.selectFirstResult = true
        },
        disableFirstResultSelection: function() {
            this._opts.renderOptions.selectFirstResult = false
        },
        setPageCapacity: function(e) {
            if (typeof e == "number" && !isNaN(e)) {
                this._opts.pageCapacity = e < 1 ? cu.DEFAULT_PAGE_CAPACITY : (e > cu.MAX_PAGE_CAPACITY ? cu.DEFAULT_PAGE_CAPACITY : e)
            } else {
                this._opts.pageCapacity = cu.DEFAULT_PAGE_CAPACITY
            }
        },
        getPageCapacity: function() {
            return this._opts.pageCapacity
        },
        toString: function() {
            return "LocalSearch"
        }
    });
    function be(i) {
        this._opts = {};
        eJ.extend(this._opts, i);
        this._queryList = [];
        var e = this;
        gK.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    be.inherits(cZ, "Geocoder");
    eJ.extend(be.prototype, {
        getPoint: function(e, T, i) {
            this._queryList.push({
                method: "getPoint",
                arguments: [e, T, i]
            })
        },
        getLocation: function(e, T, i) {
            this._queryList.push({
                method: "getLocation",
                arguments: [e, T, i]
            })
        },
        toString: function() {
            return "Geocoder"
        }
    });
    function cO(e) {
        e = e || {};
        this.config = {
            timeout: e.timeout || 1000 * 10,
            maximumAge: e.maximumAge || 0,
            enableHighAccuracy: e.enableHighAccuracy === undefined ? true : e.enableHighAccuracy,
            SDKLocation: e.SDKLocation || false
        };
        this._pendingCalls = [];
        var i = this;
        gK.load("otherSearch", function() {
            var T = i._pendingCalls.length;
            for (var jO = 0; jO < T; jO++) {
                var jP = i._pendingCalls[jO];
                i[jP.method].apply(i, jP.arguments)
            }
        })
    }
    eJ.extend(cO.prototype, {
        getCurrentPosition: function(e, i) {
            this._pendingCalls.push({
                method: "getCurrentPosition",
                arguments: arguments
            })
        },
        getStatus: function() {
            return BMAP_STATUS_UNKNOWN_LOCATION
        },
        enableSDKLocation: function() {
            if (bS()) {
                this.config.SDKLocation = true
            }
        },
        disableSDKLocation: function() {
            this.config.SDKLocation = false
        }
    });
    function e6() {
        this._queryList = [];
        var e = this;
        gK.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    e6.inherits(cZ, "Boundary");
    eJ.extend(e6.prototype, {
        get: function(i, e) {
            this._queryList.push({
                method: "get",
                arguments: [i, e]
            })
        },
        toString: function() {
            return "Boundary"
        },
        parsebdStr: function(i, e) {}
    });
    function eZ(i) {
        i = i || {};
        i.renderOptions = i.renderOptions || {};
        this._opts = {
            renderOptions: {
                map: i.renderOptions.map || null
            }
        };
        this._queryList = [];
        var e = this;
        gK.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    eZ.inherits(cZ, "LocalCity");
    eJ.extend(eZ.prototype, {
        get: function(e) {
            this._queryList.push({
                method: "get",
                arguments: [e]
            })
        },
        toString: function() {
            return "LocalCity"
        }
    });
    function gW(e, T) {
        cZ.call(this);
        this.markersList = [];
        this.destList = [];
        this.pointsList = [];
        this._opts = T;
        this.json = e;
        this.map = this._opts.renderOptions.map || null;
        this.sType = this._opts.sType;
        this.infoWindow = null;
        this.curPointIndex = 0;
        this.startName = "";
        this.endIndex = 1;
        this.endName = "";
        this.resCity = [0, 0, 0, 0, 0, 0, 0];
        this.locPois = [];
        this.curPageIndex = [1, 1, 1, 1, 1, 1, 1];
        this.totalPage = [1, 1, 1, 1, 1, 1, 1];
        this.resCount = [0, 0, 0, 0, 0, 0, 0];
        this.resType = [0, 0, 0, 0, 0, 0, 0];
        this.qInfo = [{
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }];
        this.curSelectedIndex = -1;
        this.tpList = [];
        this.tpListInMap = [];
        var i = this;
        gK.load("route", function() {})
    }
    gW.inherits(cZ, "RouteAddr");
    function ek(T, i) {
        aG.call(this, T, i);
        this.QUERY_TYPE_BUSLIST = c2;
        this.RETURN_TYPE_BUSLIST = cG;
        this.QUERY_TYPE_BUSLINE = ea;
        this.RETURN_TYPE_BUSLINE = dX;
        this._queryList = [];
        var e = this;
        gK.load("buslineSearch", function() {
            e._asyncSearch()
        })
    }
    var fn = B.staticHost + "/wolfman/static/common/images/";
    ek._iconOpen = B.apiIMG + "/iw_plus.gif";
    ek._iconClose = B.apiIMG + "/iw_minus.gif";
    ek._stopUrl = fn + "new/bus-stop-1x_ddd4723.png";
    ek.inherits(aG, "BusLineSearch");
    eJ.extend(ek.prototype, {
        getBusList: function(e) {
            this._queryList.push({
                method: "getBusList",
                arguments: [e]
            })
        },
        getBusLine: function(e) {
            this._queryList.push({
                method: "getBusLine",
                arguments: [e]
            })
        },
        setGetBusListCompleteCallback: function(e) {
            this._opts.onGetBusListComplete = e || function() {}
        },
        setGetBusLineCompleteCallback: function(e) {
            this._opts.onGetBusLineComplete = e || function() {}
        },
        setBusListHtmlSetCallback: function(e) {
            this._opts.onBusListHtmlSet = e || function() {}
        },
        setBusLineHtmlSetCallback: function(e) {
            this._opts.onBusLineHtmlSet = e || function() {}
        },
        setPolylinesSetCallback: function(e) {
            this._opts.onPolylinesSet = e || function() {}
        }
    });
    function iG(i) {
        aG.call(this, i);
        i = i || {};
        this._options = {
            input: i.input || null,
            baseDom: i.baseDom || null,
            types: i.types || [],
            onSearchComplete: i.onSearchComplete || function() {}
        };
        this._loc.src = i.location || "全国";
        this._word = "";
        this._show = false;
        this._suggestion = null;
        this._inputValue = "";
        this._initialize();
        var e = this;
        gK.load("autocomplete", function() {
            e._asyncSearch()
        }, true)
    }
    iG.inherits(aG, "Autocomplete");
    eJ.extend(iG.prototype, {
        _initialize: function() {},
        show: function() {
            this._show = true
        },
        hide: function() {
            this._show = false
        },
        setTypes: function(e) {
            this._options.types = e
        },
        setLocation: function(e) {
            this._loc.src = e
        },
        search: function(e) {
            this._word = e
        },
        setInputValue: function(e) {
            this._inputValue = e
        },
        setSearchCompleteCallback: function(e) {
            this._options.onSearchComplete = e
        }
    });
    var jn = function(i, e) {
        aG.call(this, i, e)
    };
    eJ.inherit(jn, aG, "BaseRoute");
    eJ.extend(jn.prototype, {
        clearResults: function() {}
    });
    window.BMAP_TRANSIT_POLICY_RECOMMEND = 0;
    window.BMAP_TRANSIT_POLICY_LEAST_TIME = 4;
    window.BMAP_TRANSIT_POLICY_LEAST_TRANSFER = 1;
    window.BMAP_TRANSIT_POLICY_LEAST_WALKING = 2;
    window.BMAP_TRANSIT_POLICY_AVOID_SUBWAYS = 3;
    window.BMAP_TRANSIT_POLICY_FIRST_SUBWAYS = 5;
    window.BMAP_LINE_TYPE_BUS = 0;
    window.BMAP_LINE_TYPE_SUBWAY = 1;
    window.BMAP_LINE_TYPE_FERRY = 2;
    window.BMAP_LINE_TYPE_TRAIN = 3;
    window.BMAP_LINE_TYPE_AIRPLANE = 4;
    window.BMAP_LINE_TYPE_COACH = 5;
    var hZ = 3;
    var dV = 4;
    var af = 1;
    var hX = 2;
    var aU = 5;
    var cI = 6;
    window.BMAP_TRANSIT_TYPE_IN_CITY = 0;
    window.BMAP_TRANSIT_TYPE_CROSS_CITY = 1;
    window.BMAP_TRANSIT_PLAN_TYPE_ROUTE = 0;
    window.BMAP_TRANSIT_PLAN_TYPE_LINE = 1;
    window.BMAP_TRANSIT_TYPE_POLICY_TRAIN = 0;
    window.BMAP_TRANSIT_TYPE_POLICY_AIRPLANE = 1;
    window.BMAP_TRANSIT_TYPE_POLICY_COACH = 2;
    window.BMAP_INTERCITY_POLICY_LEAST_TIME = 0;
    window.BMAP_INTERCITY_POLICY_EARLY_START = 1;
    window.BMAP_INTERCITY_POLICY_CHEAP_PRICE = 2;
    function ey(T, i) {
        jn.call(this, T, i);
        i = i || {};
        this.setPolicy(i.policy);
        this.setIntercityPolicy(i.intercityPolicy);
        this.setTransitTypePolicy(i.transitTypePolicy);
        this.setPageCapacity(i.pageCapacity);
        this.QUERY_TYPE = gH;
        this.RETURN_TYPE = eE;
        this.ROUTE_TYPE = hl;
        this._overlays = [];
        this._curIndex = -1;
        this._opts._enableTraffic = i.enableTraffic || false;
        this._queryList = [];
        var e = this;
        gK.load("route", function() {
            e._asyncSearch()
        }, true)
    }
    ey.MAX_PAGE_CAPACITY = 100;
    ey.LINE_TYPE_MAPPING = [0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1];
    ey.LINE_TYPE_MAPPING_CROSS_CITY = [0, 3, 4, 0, 0, 0, 5];
    eJ.inherit(ey, jn, "TransitRoute");
    eJ.extend(ey.prototype, {
        setPolicy: function(e) {
            if (e >= BMAP_TRANSIT_POLICY_RECOMMEND && e <= BMAP_TRANSIT_POLICY_FIRST_SUBWAYS) {
                this._opts.policy = e
            } else {
                this._opts.policy = BMAP_TRANSIT_POLICY_RECOMMEND
            }
        },
        setIntercityPolicy: function(e) {
            if (e >= BMAP_INTERCITY_POLICY_LEAST_TIME && e <= BMAP_INTERCITY_POLICY_CHEAP_PRICE) {
                this._opts.intercityPolicy = e
            } else {
                this._opts.intercityPolicy = BMAP_INTERCITY_POLICY_LEAST_TIME
            }
        },
        setTransitTypePolicy: function(e) {
            if (e >= BMAP_TRANSIT_TYPE_POLICY_TRAIN && e <= BMAP_TRANSIT_TYPE_POLICY_COACH) {
                this._opts.transitTypePolicy = e
            } else {
                this._opts.transitTypePolicy = BMAP_TRANSIT_TYPE_POLICY_TRAIN
            }
        },
        _internalSearch: function(i, e) {
            this._queryList.push({
                method: "_internalSearch",
                arguments: [i, e]
            })
        },
        search: function(i, e) {
            this._queryList.push({
                method: "search",
                arguments: [i, e]
            })
        },
        setPageCapacity: function(e) {
            if (typeof e === "string") {
                e = parseInt(e, 10);
                if (isNaN(e)) {
                    this._opts.pageCapacity = ey.MAX_PAGE_CAPACITY;
                    return
                }
            }
            if (typeof e !== "number") {
                this._opts.pageCapacity = ey.MAX_PAGE_CAPACITY;
                return
            }
            if (e >= 1 && e <= ey.MAX_PAGE_CAPACITY) {
                this._opts.pageCapacity = Math.round(e)
            } else {
                this._opts.pageCapacity = ey.MAX_PAGE_CAPACITY
            }
        },
        toString: function() {
            return "TransitRoute"
        },
        _shortTitle: function(e) {
            return e.replace(/\(.*\)/, "")
        }
    });
    window.BMAP_HIGHLIGHT_STEP = 1;
    window.BMAP_HIGHLIGHT_ROUTE = 2;
    var cy = function(e, jO) {
        jn.call(this, e, jO);
        this._overlays = [];
        this._curIndex = -1;
        this._queryList = [];
        var T = this;
        var i = this._opts.renderOptions;
        if (i.highlightMode !== BMAP_HIGHLIGHT_STEP && i.highlightMode !== BMAP_HIGHLIGHT_ROUTE) {
            i.highlightMode = BMAP_HIGHLIGHT_STEP
        }
        this._enableDragging = this._opts.renderOptions.enableDragging ? true : false;
        gK.load("route", function() {
            T._asyncSearch()
        }, true);
        if (this.init_d) {
            this.init_d()
        }
    };
    cy.ROAD_TYPE = ["", "环岛", "无属性道路", "主路", "高速连接路", "交叉点内路段", "连接道路", "停车场内部道路", "服务区内部道路", "桥", "步行街", "辅路", "匝道", "全封闭道路", "未定义交通区域", "POI连接路", "隧道", "步行道", "公交专用道", "提前右转道"];
    eJ.inherit(cy, jn, "DWRoute");
    eJ.extend(cy.prototype, {
        search: function(T, e, i) {
            this._queryList.push({
                method: "search",
                arguments: [T, e, i]
            })
        }
    });
    window.BMAP_DRIVING_POLICY_DEFAULT = 0;
    window.BMAP_DRIVING_POLICY_AVOID_HIGHWAYS = 3;
    window.BMAP_DRIVING_POLICY_FIRST_HIGHWAYS = 4;
    window.BMAP_DRIVING_POLICY_AVOID_CONGESTION = 5;
    window.BMAP_TRAFFICE_STATUS_NONE = 0;
    window.BMAP_TRAFFICE_STATUS_NORMAL = 1;
    window.BMAP_TRAFFICE_STATUS_SLOW = 2;
    window.BMAP_TRAFFICE_STATUS_JAM = 3;
    function ck(e, i) {
        cy.call(this, e, i);
        i = i || {};
        this._opts._enableTraffic = i.enableTraffic || false;
        this.setPolicy(i.policy);
        this.QUERY_TYPE = aN;
        this.RETURN_TYPE = az;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_DRIVING
    }
    eJ.inherit(ck, cy, "DrivingRoute");
    ck.prototype.setPolicy = function(e) {
        if (e >= BMAP_DRIVING_POLICY_DEFAULT && e <= BMAP_DRIVING_POLICY_AVOID_CONGESTION) {
            this._opts.policy = e
        } else {
            this._opts.policy = BMAP_DRIVING_POLICY_DEFAULT
        }
    }
    ;
    function fb(e, i) {
        cy.call(this, e, i);
        this.QUERY_TYPE = hO;
        this.RETURN_TYPE = fZ;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_WALKING;
        this._enableDragging = false
    }
    eJ.inherit(fb, cy, "WalkingRoute");
    function cW(e, i) {
        cy.call(this, e, i);
        this.QUERY_TYPE = hg;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_RIDING;
        this._enableDragging = false
    }
    eJ.inherit(cW, cy, "RidingRoute");
    window.BMAP_MODE_DRIVING = "driving";
    window.BMAP_MODE_TRANSIT = "transit";
    window.BMAP_MODE_WALKING = "walking";
    window.BMAP_MODE_NAVIGATION = "navigation";
    var a0 = {
        web: "//api.map.baidu.com/direction?",
        android: "bdapp://map/direction?",
        ios: "baidumap://map/direction?"
    };
    function il(e) {
        this.opts = e || {}
    }
    eJ.extend(il.prototype, {
        routeCall: function(jO, e, T) {
            var i = this;
            gK.load("route", function() {
                i._asyncSearch(jO, e, T)
            })
        }
    });
    function dT() {
        return Pano.getStreetViewCoverageLayer(bw)
    }
    function eA() {
        Pano.PanoramaService.call(this)
    }
    eJ.inherit(eA, Pano.PanoramaService, "PanoramaService");
    eJ.extend(eA.prototype, {
        getPanoramaById: function(T, i) {
            var e = this;
            this.getPanoById(T, function(jO) {
                i && i(e._makeData(jO))
            })
        },
        getPanoramaByLocation: function(e, T) {
            e = iN.convertLL2MC(e);
            var i = this;
            this.getPanoByLocation(e, 50, function(jO) {
                T && T(i._makeData(jO))
            })
        },
        _makeData: function(T) {
            if (!T) {
                return null
            }
            var i = {};
            var e = T.content[0];
            i.description = e.Rname || e.Info || "";
            i.id = e.ID;
            i.pointX = e.X / 100;
            i.pointY = e.Y / 100;
            i.position = iN.convertMC2LL(new cr(i.pointX,i.pointY));
            return i
        }
    });
    function e1() {
        if (window.PANORAMA_URL) {
            return Pano.getPanoControl(bw, {
                imgPath: B.imgPath,
                tileBaseUrl: B.panoTilePath,
            })
        }
        return Pano.getPanoControl(bw)
    }
    function O(T, e) {
        if (!e) {
            return
        }
        this.content = T;
        if (e.position && !Array.isArray(e.position)) {
            e.position = iN.convertLL2MC(e.position);
            this.position = e.position;
            this.hideDistance = !!e.hideDistance
        } else {
            this.hideDistance = true
        }
        var i = this._createDom();
        Pano.PanoOverlay.call(this, e.position, {
            dom: i,
            altitude: e.altitude,
        })
    }
    eJ.inherit(O, Pano.PanoOverlay, "PanoramaLabel");
    eJ.extend(O.prototype, {
        init: function(e) {
            var i = this;
            this._pano = e;
            this.updatedDistance();
            Pano.PanoOverlay.prototype.init.call(this, e);
            this._pano.on("dataload", function(T) {
                i.updatedDistance()
            })
        },
        _createDom: function() {
            var jO = this.content;
            var jR = document.createElement("div");
            var i = jR.style;
            i.position = "absolute";
            i.backgroundColor = "rgba(29, 29, 29, 0.8)";
            i.padding = "7px 0";
            i.height = "19px";
            i.font = "16px arial";
            i.color = "white";
            i.whiteSpace = "nowrap";
            i.borderRadius = "4px";
            var e = document.createElement("div");
            e.style["float"] = "left";
            e.style["lineHeight"] = "19px";
            jR.appendChild(e);
            var T = document.createElement("span");
            T.style.margin = "0 14px";
            T.innerText = jO;
            e.appendChild(T);
            if (!this.hideDistance) {
                var jQ = document.createElement("span");
                jQ.style.color = "color:rgba(255,255,255,0.3)";
                jQ.innerText = "|";
                e.appendChild(jQ);
                var jP = document.createElement("span");
                jP.style.margin = "0 8px";
                jP.style.color = "#60c7fa";
                jP.style.fontSize = "12px";
                jP.innerText = "0米";
                e.appendChild(jP);
                this._distanceDom = jP
            }
            this._dom = jR;
            this._titleDom = T;
            return jR
        },
        updatedDistance: function() {
            if (this.hideDistance) {
                return
            }
            var T = 0;
            if (this._pano) {
                var i = this._pano.position;
                var e = this.position;
                if (i && !i.equals(e)) {
                    T = iN.getDistanceByMC(i, e)
                }
            }
            if (T > 100) {
                T = T / 1000;
                T = T < 100 ? T.toFixed(2) : T.toFixed(0);
                T += "公里"
            } else {
                T = T < 100 ? T.toFixed(2) : T.toFixed(0);
                T += "米"
            }
            this._distanceDom.innerText = T
        },
    });
    function d(i) {
        if (typeof i === "string" && /^(?!#)(\w)*/.test(i)) {
            i = "#" + i
        }
        var jO = {};
        if (window.PANORAMA_URL) {
            jO.imgPath = B.imgPath;
            jO.tileBaseUrls = [B.panoTilePath]
        }
        var e = Pano.init(i, jO);
        var T = e.setPosition;
        e.setPosition = function(jQ) {
            var jR = iN.convertLL2MC(jQ);
            T.call(e, jR)
        }
        ;
        var jP = e.addEventListener;
        e.addEventListener = function(jQ, jR) {
            if (jQ === "position_changed") {
                jP.call(e, jQ, function(jS) {
                    var jT = iN.convertMC2LL(jS);
                    jR(jT)
                })
            } else {
                jP.call(e, jQ, jR)
            }
        }
        ;
        return e
    }
    bw.Map = hr;
    bw.MapType = d6;
    bw.Point = cr;
    bw.Pixel = e4;
    bw.Size = iE;
    bw.Bounds = hF;
    bw.PrivateRegionDataModel = cE;
    bw.TileLayer = hc;
    bw.Copyright = m;
    bw.Projection = bw.Project = iN;
    bw.XYZProjection = bw.XYZProject = dq;
    bw.Convertor = fD;
    bw.RenderTypeUtils = cX;
    bw.Overlay = aQ;
    bw.Label = hy;
    bw.Marker = s;
    bw.Symbol = e2;
    bw.SVGSymbol = dz;
    bw.Icon = i6;
    bw.Symbol = e2;
    bw.SVGSymbol = dz;
    bw.Polyline = bk;
    bw.BezierCurve = cA;
    bw.PolylineMultipart = d8;
    bw.Polygon = ik;
    bw.MapMask = jA;
    bw.Prism = bq;
    bw.Marker3D = dY;
    bw.GroundOverlay = fJ;
    bw.InfoWindow = dP;
    bw.SimpleInfoWindow = hI;
    bw.Circle = aT;
    bw.Control = gr;
    bw.NavigationControl = jk;
    bw.NavigationControl3D = eL;
    bw.CopyrightControl = fP;
    bw.ScaleControl = jN;
    bw.CityListControl = br;
    bw.MapTypeControl = v;
    bw.ZoomControl = iQ;
    bw.LocationControl = f8;
    bw.LogoControl = bz;
    bw.DistanceTool = ca;
    bw.ContextMenu = g3;
    bw.MenuItem = hD;
    bw.OperationMask = ai;
    bw.Animation = fk;
    bw.ViewAnimation = q;
    bw.Transitions = gk;
    bw.Event = fu;
    bw.trafficLayer = jh;
    bw.TrafficLayer = iU;
    bw.GeoJSONLayer = aM;
    bw.XYZLayer = jB;
    bw.PixelLayer = dh;
    bw.GeoJSONParse = gg;
    bw.Entity = iO;
    bw.MVTLayer = dU;
    bw.BaiduLayer = U;
    bw.Geolocation = cO;
    bw.Geocoder = be;
    bw.Boundary = e6;
    bw.DistrictLayer = dM;
    bw.LocalCity = eZ;
    bw.LocalSearch = cu;
    bw.Autocomplete = iG;
    bw.BusLineSearch = ek;
    bw.WalkingRoute = fb;
    bw.RidingRoute = cW;
    bw.DrivingRoute = ck;
    bw.TransitRoute = ey;
    bw.RouteSearch = il;
    bw.PanoramaCoverageLayer = dT;
    bw.PanoramaControl = e1;
    bw.PanoramaService = eA;
    bw.PanoramaLabel = O;
    bw.Panorama = d;
    function gU(e, i) {
        for (var T in i) {
            e[T] = i[T]
        }
    }
    bw.fetchDebug && bw.fetchDebug.init();
    bw.verify();
    bw.apiLoad();
    bw.frequency();
    bw.getSeckeyCid();
    window._layer = 1;
    eJ.extend(dM.prototype, {
        _asyncSearch: function() {
            for (var T = 0, e = this._queryList.length; T < e; T++) {
                var jO = this._queryList[T];
                this[jO.method].apply(this, jO.arguments)
            }
            delete this._queryList
        },
        addDistrict: function() {
            if (this._opts.districts) {
                var e = this._opts.districts;
                if (typeof e === "string") {
                    this.getDistrictData(e)
                } else {
                    if (Object.prototype.toString.call(e) === "[object Array]") {
                        var i = this.parseArrayParams(e);
                        this.getDistrictData(i)
                    }
                }
            }
        },
        parseArrayParams: function(e) {
            var jP = "";
            for (var jO = 0; jO < e.length; jO++) {
                if (e[jO]instanceof Array) {
                    jP += "(";
                    for (var T = 0; T < e.length; T++) {
                        jP += e[T]
                    }
                    jP += ")"
                } else {
                    jP += "(" + e[jO] + ")"
                }
            }
            return jP
        },
        getDistrictData: function(e) {
            var i = this;
            jx.request(function(jO) {
                var T = i._parseGeoData(jO);
                i._drawToMap(i, T)
            }, {
                qt: ji,
                adnames: e,
                level: i._opts.kind
            })
        },
        _drawToMap: function(jX, jT) {
            var jW = jT.boundaries.length;
            if (jW === 0) {
                alert("未能获取当前输入行政区域");
                return
            }
            var jY = this._config.fillColor;
            var jQ = this._config.fillOpacity;
            var T = this._config.strokeColor;
            var e = this._config.strokeOpacity;
            var jU = this._config.strokeWeight;
            if (typeof jY === "string") {
                var jO = jY;
                var jZ = [];
                for (var jS = 0; jS < jW; jS++) {
                    var jV = new BMapGL.Polygon(jT.boundaries[jS],{
                        strokeWeight: jU,
                        strokeColor: T,
                        strokeOpacity: e,
                        fillColor: jO,
                        fillOpacity: jQ
                    });
                    jV.style = {
                        strokeWeight: jU,
                        strokecolor: T,
                        strokeOpacity: e,
                        fillColor: jO,
                        fillOpacity: jQ
                    };
                    this.disOverlays.push(jV);
                    this.addEventListenerIn();
                    jX._map.addOverlay(jV);
                    jZ = jZ.concat(jV.getPath())
                }
                if (this._config.viewport) {
                    jX._map.setViewport(jZ)
                }
            } else {
                if (Object.prototype.toString.call(jY) === "[object Array]") {
                    var jZ = [];
                    var jR = jY.length;
                    if (jR < jW) {
                        for (var jS = 0, jP = 0; jS < jW - jR; jS++) {
                            if (jP < jR - 1) {
                                jY.push(jY[jP++])
                            } else {
                                jY.push(jY[0])
                            }
                        }
                    }
                    for (var jS = 0; jS < jW; jS++) {
                        var jO = jY[jS];
                        var jV = new BMapGL.Polygon(jT.boundaries[jS],{
                            strokeWeight: jU,
                            strokeColor: T,
                            strokeOpacity: e,
                            fillColor: jO,
                            fillOpacity: jQ
                        });
                        jV.style = {
                            strokeWeight: jU,
                            strokecolor: T,
                            strokeOpacity: e,
                            fillColor: jO,
                            fillOpacity: jQ
                        };
                        this.disOverlays.push(jV);
                        this.addEventListenerIn();
                        jX._map.addOverlay(jV);
                        jZ = jZ.concat(jV.getPath())
                    }
                    if (this._config.viewport) {
                        jX._map.setViewport(jZ)
                    }
                }
            }
        },
        _parseGeoData: function(jX) {
            var j0 = {};
            j0.boundaries = [];
            if (jX && jX.content && jX.content["geo"]) {
                for (var j5 = 0; j5 < jX.content["geo"].length; j5++) {
                    var jO = bF.parseGeo(jX.content["geo"][j5], false);
                    if (jO.geo && jO.geo.length && jO.geo.length > 0) {
                        var j3 = jO.geo.length;
                        for (i1 = 0; i1 < j3; i1++) {
                            var T = jO.geo[i1];
                            if (T && T.length && T.length > 0) {
                                var jV = T.length - 1;
                                var j2 = [];
                                var jU = false;
                                var j1 = 0;
                                var jZ = 0;
                                for (var j4 = 0; j4 < jV; j4 += 2) {
                                    var jS = T[j4];
                                    var jQ = T[j4 + 1];
                                    var jY = new cr(jS,jQ);
                                    jY = iN.convertMC2LL(jY);
                                    if (j4 < jV - 3) {
                                        var i = T[j4 + 2];
                                        var e = T[j4 + 3];
                                        var jW = new cr(i,e);
                                        jW = iN.convertMC2LL(jW)
                                    }
                                    j2.push(jY.lng + ", " + jY.lat)
                                }
                                if (jU === true) {
                                    if (j1 > jZ) {
                                        var j6 = j1;
                                        j1 = jZ;
                                        jZ = j6
                                    }
                                    var jT = j2;
                                    var jR = j2.splice(j1 + 1);
                                    var jP = jR.splice(jZ - j1);
                                    jT = jT.concat(jP);
                                    j0.boundaries.push(jT.join(";"));
                                    j0.boundaries.push(jR.join(";"));
                                    jU = false;
                                    continue
                                }
                                if (j2.length !== 0) {
                                    j0.boundaries.push(j2.join(";"))
                                }
                            }
                        }
                    }
                }
            }
            return j0
        },
        deleteDistrict: function(jO) {
            var T = jO.disOverlays;
            for (var e = 0; e < T.length; e++) {
                this._map.removeOverlay(T[e])
            }
        },
        addEventListener: function(e, i) {
            this.eventAndCallback[e] = i
        },
        addEventListenerIn: function() {
            var jO = this;
            var jQ = Object.keys(jO.eventAndCallback);
            if (jQ.length > 0) {
                for (var T = 0; T < jQ.length; T++) {
                    var jP = jO.eventAndCallback[jQ[T]];
                    for (var e = 0; e < jO.disOverlays.length; e++) {
                        jO.disOverlays[e].addEventListener(jQ[T], jP)
                    }
                }
            }
        },
        searchBoundary: function(i, jP) {
            i = i || {};
            var e = i.name || "";
            var T = i.kind || 0;
            var jO = this;
            jx.request(function(jR) {
                var jQ = jO._parseGeoData(jR);
                jP && jP(jQ)
            }, {
                qt: ji,
                adnames: e,
                level: T
            })
        }
    });
    window._layer = 2;
}
)(BMapGL, "BMapGL");
